<HTML
><HEAD
>
<TITLE>Recipe 9.12. Program: lst (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:39:23Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch09_01.htm"
TITLE="9. Directories"><LINK
REL="prev"
HREF="ch09_12.htm"
TITLE="9.11. Program: symirror"><LINK
REL="next"
HREF="ch10_01.htm"
TITLE="10. Subroutines"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_12.htm"
TITLE="9.11. Program: symirror"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.11. Program: symirror"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch09_01.htm"
TITLE="9. Directories"
>Chapter 9<BR>Directories</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch10_01.htm"
TITLE="10. Subroutines"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10. Subroutines"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch09-chap09_program_1"
>9.12. Program: lst</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch09-idx-1000004453-0"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004453-1"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004453-2"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004453-3"
></A
>Have you ever wondered what the newest or biggest files within a directory are? The standard <EM
CLASS="emphasis"
>ls</EM
> program has options for listing out directories sorted in time order (the <B
CLASS="emphasis.bold"
>-t</B
> flag) and for recursing into subdirectories (the <B
CLASS="emphasis.bold"
>-R</B
> flag). However, it pauses at each directory to display the sorted contents of just that directory. It doesn't descend through all the subdirectories first and then sort everything it finds.</P
><P
CLASS="para"
>The following <EM
CLASS="emphasis"
>lst</EM
> program does that. Here's an example using its <B
CLASS="emphasis.bold"
>-l</B
> flag to get a long listing:</P
><PRE
CLASS="programlisting"
>% lst -l /etc
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>12695 0600      1     root    wheel      512 Fri May 29 10:42:41 1998 </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    /etc/ssh_random_seed</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>12640 0644      1     root    wheel    10104 Mon May 25  7:39:19 1998 </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    /etc/ld.so.cache</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>12626 0664      1     root    wheel    12288 Sun May 24 19:23:08 1998 </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    /etc/psdevtab</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>12304 0644      1     root     root      237 Sun May 24 13:59:33 1998 </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    /etc/exports</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>12309 0644      1     root     root     3386 Sun May 24 13:24:33 1998 </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    /etc/inetd.conf</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>12399 0644      1     root     root    30205 Sun May 24 10:08:37 1998 </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    /etc/sendmail.cf</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>18774 0644      1     gnat  perldoc     2199 Sun May 24  9:35:57 1998 </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    /etc/X11/XMetroconfig</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>12636 0644      1     root    wheel      290 Sun May 24  9:05:40 1998 </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    /etc/mtab</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>12627 0640      1     root     root        0 Sun May 24  8:24:31 1998 </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    /etc/wtmplock</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>12310 0644      1     root  tchrist       65 Sun May 24  8:23:04 1998 </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    /etc/issue</I
></CODE
></B
></CODE
>
....</PRE
><P
CLASS="para"
><EM
CLASS="emphasis"
>/etc/X11/XMetroconfig</EM
> showed up in the middle of the listing for <EM
CLASS="emphasis"
>/etc</EM
> because it wasn't just for <EM
CLASS="emphasis"
>/etc</EM
>, but for everything within that directory, recursively.</P
><P
CLASS="para"
>Other supported options include sorting on read time instead of write time using <B
CLASS="emphasis.bold"
>-u</B
> and sorting on size rather than time with <B
CLASS="emphasis.bold"
>-s</B
>. The <B
CLASS="emphasis.bold"
>-i</B
> flag takes the list of filenames from standard input instead of recursing with <CODE
CLASS="literal"
>find</CODE
>. That way, if you already had a list of filenames, you could feed them to <EM
CLASS="emphasis"
>lst</EM
> for sorting.</P
><P
CLASS="para"
>The program is shown in <A
CLASS="xref"
HREF="ch09_13.htm"
TITLE="lst"
>Example 9.7</A
>.</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch09-16966"
>Example 9.7: lst</A
></H4
><PRE
CLASS="programlisting"
>#!/usr/bin/perl
# lst - list sorted directory contents (depth first)

use Getopt::Std;
use File::Find;
use File::stat;
use User::pwent;
use User::grent;

getopts('lusrcmi')    or die &lt;&lt;DEATH;
Usage: $0 [-mucsril] [dirs ...]
 or    $0 -i [-mucsrl] &lt; filelist

Input format:
    -i  read pathnames from stdin
Output format:
    -l  long listing
Sort on:
    -m  use mtime (modify time) [DEFAULT]
    -u  use atime (access time)
    -c  use ctime (inode change time)
    -s  use size for sorting
Ordering:
    -r  reverse sort
NB: You may only use select one sorting option at a time.
DEATH
    
unless ($opt_i || @ARGV) { @ARGV = ('.') }

if ($opt_c + $opt_u + $opt_s + $opt_m &gt; 1) {
    die &quot;can only sort on one time or size&quot;;
}

$IDX = 'mtime';
$IDX = 'atime' if $opt_u;
$IDX = 'ctime' if $opt_c;
$IDX = 'size'  if $opt_s;

$TIME_IDX = $opt_s ? 'mtime' : $IDX;

*name = *File::Find::name;  # forcibly import that variable

# the $opt_i flag tricks wanted into taking
# its filenames from ARGV instead of being
# called from find.

if ($opt_i) {
     *name = *_;  # $name now alias for $_
     while (&lt;&gt;) { chomp; &amp;wanted; }   # ok, not stdin really
}  else {
    find(\&amp;wanted, @ARGV);
}

# sort the files by their cached times, youngest first
@skeys = sort { $time{$b} &lt;=&gt; $time{$a} } keys %time;

# but flip the order if -r was supplied on command line
@skeys = reverse @skeys if $opt_r;

for (@skeys) {
    unless ($opt_l) {  # emulate ls -l, except for permissions
        print &quot;$_\n&quot;;
        next;
    }
    $now = localtime $stat{$_}-&gt;$TIME_IDX();
    printf &quot;%6d %04o %6d %8s %8s %8d %s %s\n&quot;,
        $stat{$_}-&gt;ino(),
        $stat{$_}-&gt;mode() &amp; 07777,
        $stat{$_}-&gt;nlink(),
        user($stat{$_}-&gt;uid()),
        group($stat{$_}-&gt;gid()),
        $stat{$_}-&gt;size(),
        $now, $_;
}

# get stat info on the file, saving the desired
# sort criterion (mtime, atime, ctime, or size)
# in the %time hash indexed by filename.
# if they want a long list, we have to save the
# entire stat object in %stat.  yes, this is a
# hash of objects
sub wanted {
    my $sb = stat($_);  # XXX: should be stat or lstat?
    return unless $sb;
    $time{$name} = $sb-&gt;$IDX();  # indirect method call
    $stat{$name} = $sb if $opt_l;
}

# cache user number to name conversions
sub user {
    my $uid = shift;
    $user{$uid} = getpwuid($uid)-&gt;name || &quot;#$uid&quot;
        unless defined $user{$uid};
    return $user{$uid};
}

# cache group number to name conversions
sub group {
    my $gid = shift;
    $group{$gid} = getgrgid($gid)-&gt;name || &quot;#$gid&quot;
        unless defined $group{$gid};
    return $group{$gid};<A
CLASS="indexterm"
NAME="ch09-idx-1000004455-0"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004455-1"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004455-2"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004455-3"
></A
>
}<A
CLASS="indexterm"
NAME="ch09-idx-1000004337-0"
></A
></PRE
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_12.htm"
TITLE="9.11. Program: symirror"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.11. Program: symirror"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch10_01.htm"
TITLE="10. Subroutines"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10. Subroutines"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>9.11. Program: symirror</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>10. Subroutines</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
