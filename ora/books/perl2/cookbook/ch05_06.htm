<HTML
><HEAD
>
<TITLE>Recipe 5.5. Printing a Hash (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:32:36Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch05_01.htm"
TITLE="5. Hashes"><LINK
REL="prev"
HREF="ch05_05.htm"
TITLE="5.4. Traversing a Hash"><LINK
REL="next"
HREF="ch05_07.htm"
TITLE="5.6. Retrieving from a Hash in Insertion Order"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_05.htm"
TITLE="5.4. Traversing a Hash"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.4. Traversing a Hash"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch05_01.htm"
TITLE="5. Hashes"
>Chapter 5<BR>Hashes</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_07.htm"
TITLE="5.6. Retrieving from a Hash in Insertion Order"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.6. Retrieving from a Hash in Insertion Order"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch05-chap05_printing_0"
>5.5. Printing a Hash</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-528"
>Problem <A
CLASS="indexterm"
NAME="ch05-idx-1000006456-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006456-1"
></A
></A
></H3
><P
CLASS="para"
>You want to print a hash, but neither <CODE
CLASS="literal"
>print</CODE
> <CODE
CLASS="literal"
>&quot;%hash&quot;</CODE
> nor <CODE
CLASS="literal"
>print</CODE
> <CODE
CLASS="literal"
>%hash</CODE
> works.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-534"
>Solution</A
></H3
><P
CLASS="para"
>One of several approaches is to iterate over every key-value pair in the hash using <A
CLASS="xref"
HREF="ch05_05.htm"
TITLE="Traversing a Hash"
>Recipe 5.4</A
>, and print them:</P
><PRE
CLASS="programlisting"
>while ( ($k,$v) = each %hash ) {
    print &quot;$k =&gt; $v\n&quot;;
}</PRE
><P
CLASS="para"
>Or use <CODE
CLASS="literal"
>map</CODE
> to generate a list of strings:</P
><PRE
CLASS="programlisting"
>print map { &quot;$_ =&gt; $hash{$_}\n&quot; } keys %hash;</PRE
><P
CLASS="para"
>Or use the interpolation trick from <A
CLASS="xref"
HREF="ch01_11.htm"
TITLE="Interpolating Functions and Expressions Within Strings"
>Recipe 1.10</A
> to interpolate the hash as a list:</P
><PRE
CLASS="programlisting"
>print &quot;@{[ %hash ]}\n&quot;;</PRE
><P
CLASS="para"
>Or use a temporary array variable to hold the hash, and print that:</P
><PRE
CLASS="programlisting"
>{
    my @temp = %hash;
    print &quot;@temp&quot;;
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-564"
>Discussion</A
></H3
><P
CLASS="para"
>The methods differ in the degree that their output is customizable in order and formatting and in their efficiency.</P
><P
CLASS="para"
>The first method, iterating over the hash, is very flexible and space-efficient. You can format the output as you like it, and it only requires two scalar variables: the current key and value. You can print the hash in key order (at the cost of building a list of sorted keys) if you use a <CODE
CLASS="literal"
>foreach</CODE
> loop.</P
><PRE
CLASS="programlisting"
>foreach $k (sort keys %hash) {
    print &quot;$k =&gt; $hash{$k}\n&quot;;
}</PRE
><P
CLASS="para"
>The <CODE
CLASS="literal"
>map</CODE
> function is just as flexible. You can still process the list in any order by sorting the keys. You can customize the output to your heart's content. But it builds up a list of strings like <CODE
CLASS="literal"
>&quot;KEY</CODE
> <CODE
CLASS="literal"
>=&gt;VALUE\n&quot;</CODE
> to pass to <CODE
CLASS="literal"
>print</CODE
>.</P
><P
CLASS="para"
>The last two methods are interpolation tricks. By treating the hash as an list, you can't predict or control the output order of the key-value pairs. Furthermore, the output will consist of a list of keys and values, each separated by whatever <CODE
CLASS="literal"
>$&quot;</CODE
> happens to hold. You can't put newlines between pairs or <CODE
CLASS="literal"
>&quot;=&gt;&quot;</CODE
> within them, as we could with the other methods.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-582"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>$&quot;</CODE
> variable in <EM
CLASS="emphasis"
>perlvar  </EM
>(1) and in the <A
CLASS="olink"
HREF="../prog/ch02_09.htm"
>"Global Special Variables"</A
> section of <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; the <CODE
CLASS="literal"
>foreach</CODE
>, <CODE
CLASS="literal"
>map</CODE
>, <CODE
CLASS="literal"
>keys</CODE
>, <CODE
CLASS="literal"
>sort</CODE
>, and <CODE
CLASS="literal"
>each</CODE
> functions in <I
CLASS="filename"
>perlfunc </I
>(1) and <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; we give a technique for interpolating into strings in <A
CLASS="xref"
HREF="ch01_11.htm"
TITLE="Interpolating Functions and Expressions Within Strings"
>Recipe 1.10</A
>; we discuss the techniques for hash traversal in <A
CLASS="xref"
HREF="ch05_05.htm"
TITLE="Traversing a Hash"
>Recipe 5.4</A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006458-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006458-1"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_05.htm"
TITLE="5.4. Traversing a Hash"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.4. Traversing a Hash"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_07.htm"
TITLE="5.6. Retrieving from a Hash in Insertion Order"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.6. Retrieving from a Hash in Insertion Order"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>5.4. Traversing a Hash</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>5.6. Retrieving from a Hash in Insertion Order</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
