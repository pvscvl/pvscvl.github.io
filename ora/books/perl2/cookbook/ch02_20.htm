<HTML
><HEAD
>
<TITLE>Recipe 2.19. Program: Calculating Prime Factors (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:30:26Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch02_01.htm"
TITLE="2. Numbers"><LINK
REL="prev"
HREF="ch02_19.htm"
TITLE="2.18. Printing Correct Plurals"><LINK
REL="next"
HREF="ch03_01.htm"
TITLE="3. Dates and Times"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_19.htm"
TITLE="2.18. Printing Correct Plurals"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.18. Printing Correct Plurals"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch02_01.htm"
TITLE="2. Numbers"
>Chapter 2<BR>Numbers</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch03_01.htm"
TITLE="3. Dates and Times"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3. Dates and Times"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch02-chap02_program_0"
>2.19. Program: Calculating Prime Factors</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch02-idx-1000008162-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008162-1"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008162-2"
></A
>The following program takes one or more integer arguments and determines the prime factors. It uses Perl's native numeric representation unless those numbers use floating-point representation and thus lose accuracy. Otherwise (or if the program's <B
CLASS="emphasis.bold"
>-b</B
> switch is used), it uses the standard Math::BigInt library, thus allowing for huge numbers. However, it only loads this library if necessary. That's why we use <CODE
CLASS="literal"
>require</CODE
> and <CODE
CLASS="literal"
>import</CODE
> instead of <CODE
CLASS="literal"
>use</CODE
>, which would unconditionally load the library at compile time instead of conditionally at run time.</P
><P
CLASS="para"
>This is not an efficient way to crack the huge integers used for cryptographic purposes.</P
><P
CLASS="para"
>Call the program with a list of numbers, and it will show you the prime factors of those numbers:</P
><PRE
CLASS="programlisting"
>% bigfact 8 9 96 2178
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>8          2**3</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>9          3**2</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>96         2**5 3</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>2178       2 3**2 11**2</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>You can give it very large numbers:</P
><PRE
CLASS="programlisting"
>% bigfact 239322000000000000000000
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>+239322000000000000000000 2**19 3 5**18 +39887 </I
></CODE
></B
></CODE
>

% bigfact 25000000000000000000000000
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>+25000000000000000000000000 2**24 5**26</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>The program is shown in <A
CLASS="xref"
HREF="ch02_20.htm"
TITLE="bigfact"
>Example 2.1</A
>.</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch02-24723"
>Example 2.1: bigfact</A
></H4
><PRE
CLASS="programlisting"
>#!/usr/bin/perl
# <A
CLASS="indexterm"
NAME="ch02-idx-1000008363-0"
></A
>bigfact - calculate prime factors
use strict;
use integer;

use vars qw{ $opt_b $opt_d };
use Getopt::Std;

@ARGV &amp;&amp; getopts('bd')        or die &quot;usage: $0 [-b] number ...&quot;;

load_biglib() if $opt_b;

ARG: foreach my $orig ( @ARGV ) {
    my ($n, %factors, $factor);
    $n = $opt_b ? Math::BigInt-&gt;new($orig) : $orig;
    if ($n + 0 ne $n) { # don't use -w for this
        printf STDERR &quot;bigfact: %s would become %s\n&quot;, $n, $n+0 if $opt_d;
        load_biglib();
        $n = Math::BigInt-&gt;new($orig);
    }
    printf &quot;%-10s &quot;, $n;

    # Here $sqi will be the square of $i. We will take advantage
    # of the fact that ($i + 1) ** 2 == $i ** 2 + 2 * $i + 1.
    for (my ($i, $sqi) = (2, 4); $sqi &lt;= $n; $sqi += 2 * $i ++ + 1) {
        while ($n % $i == 0) {
            $n /= $i;
            print STDERR &quot;&lt;$i&gt;&quot; if $opt_d;
            $factors {$i} ++;
        }
    }

    if ($n != 1 &amp;&amp; $n != $orig) { $factors{$n}++ }
    if (! %factors) {
        print &quot;PRIME\n&quot;;
        next ARG;
    }
    for $factor ( sort { $a &lt;=&gt; $b } keys %factors ) {
        print &quot;$factor&quot;;
        if ($factors{$factor} &gt; 1) {
            print &quot;**$factors{$factor}&quot;;
        }
        print &quot; &quot;;
    }
    print &quot;\n&quot;;
}

# this simulates a use, but at run time
sub load_biglib {
    require Math::BigInt;
    Math::BigInt-&gt;import();          #immaterial?
}<A
CLASS="indexterm"
NAME="ch02-idx-1000008164-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008164-1"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008164-2"
></A
></PRE
></DIV
><PRE
CLASS="programlisting"
><A
CLASS="indexterm"
NAME="ch02-idx-1000007973-0"
></A
></PRE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_19.htm"
TITLE="2.18. Printing Correct Plurals"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.18. Printing Correct Plurals"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch03_01.htm"
TITLE="3. Dates and Times"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3. Dates and Times"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>2.18. Printing Correct Plurals</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3. Dates and Times</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
