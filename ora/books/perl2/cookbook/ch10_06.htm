<HTML
><HEAD
>
<TITLE>Recipe 10.5. Passing Arrays and Hashes by Reference (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:39:38Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch10_01.htm"
TITLE="10. Subroutines"><LINK
REL="prev"
HREF="ch10_05.htm"
TITLE="10.4. Determining Current Function Name"><LINK
REL="next"
HREF="ch10_07.htm"
TITLE="10.6. Detecting Return Context"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_05.htm"
TITLE="10.4. Determining Current Function Name"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.4. Determining Current Function Name"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch10_01.htm"
TITLE="10. Subroutines"
>Chapter 10<BR>Subroutines</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_07.htm"
TITLE="10.6. Detecting Return Context"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.6. Detecting Return Context"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch10-33402"
>10.5. Passing Arrays and Hashes by Reference</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-428"
>Problem<A
CLASS="indexterm"
NAME="ch10-idx-1000004676-0"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004676-1"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004676-2"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004676-3"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004676-4"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004676-5"
></A
></A
></H3
><P
CLASS="para"
>You want to pass a function more than one array or hash and have each remain distinct. For example, you want to put the "Find elements in one array but not in another" algorithm from <A
CLASS="xref"
HREF="ch04_08.htm"
TITLE="Finding Elements in One Array but Not Another"
>Recipe 4.7</A
> in a subroutine. This subroutine must then be called with two arrays that remain distinct.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-434"
>Solution</A
></H3
><P
CLASS="para"
>Pass arrays and hashes by reference, using the backslash operator:</P
><PRE
CLASS="programlisting"
>array_diff( \@array1, \@array2 );</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-442"
>Discussion</A
></H3
><P
CLASS="para"
>See <A
CLASS="xref"
HREF="ch11_01.htm"
TITLE="References and Records"
>Chapter 11, <CITE
CLASS="chapter"
>References and Records</CITE
></A
>, for more about manipulation of references. Here's a subroutine that takes array references and a subroutine call that generates them:</P
><PRE
CLASS="programlisting"
>@a = (1, 2);
@b = (5, 8);
@c = add_vecpair( \@a, \@b );
print &quot;@c\n&quot;;
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>6 10</I
></CODE
></B
></CODE
> 

sub add_vecpair {       # assumes both vectors the same length
    my ($x, $y) = @_;   # copy in the array references
    my @result;

    for (my $i=0; $i &lt; @$x; $i++) {
      $result[$i] = $x-&gt;[$i] + $y-&gt;[$i];
    }

    return @result;
}</PRE
><P
CLASS="para"
>A potential difficulty with this function is that it doesn't check to make sure it got exactly two arguments that were both array references. You could check explicitly this way:</P
><PRE
CLASS="programlisting"
>unless (@_ == 2 &amp;&amp; ref($x) eq 'ARRAY' &amp;&amp; ref($y) eq 'ARRAY') {
    die &quot;usage: add_vecpair ARRAYREF1 ARRAYREF2&quot;;
}</PRE
><P
CLASS="para"
>If all you plan to do is <CODE
CLASS="literal"
>die</CODE
> on error (see <A
CLASS="xref"
HREF="ch10_13.htm"
TITLE="Handling Exceptions"
>Recipe 10.12</A
>), you can usually omit this check, since dereferencing the wrong kind of reference triggers an exception anyway.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-484"
>See Also</A
></H3
><P
CLASS="para"
>The section on <A
CLASS="olink"
HREF="../prog/ch02_07.htm"
>"Passing References"</A
> in <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> and on "Pass by Reference" in <I
CLASS="filename"
>perlsub </I
>(1); the section on <A
CLASS="olink"
HREF="../prog/ch02_07.htm"
>"Prototypes"</A
> in <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> or in <I
CLASS="filename"
>perlsub </I
>(1); <A
CLASS="xref"
HREF="ch10_12.htm"
TITLE="Prototyping Functions"
>Recipe 10.11</A
>; <A
CLASS="xref"
HREF="ch11_01.htm"
TITLE="References and Records"
>Chapter 11</A
>; <A
CLASS="olink"
HREF="../prog/ch04_01.htm"
>Chapter 4</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_05.htm"
TITLE="10.4. Determining Current Function Name"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.4. Determining Current Function Name"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_07.htm"
TITLE="10.6. Detecting Return Context"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.6. Detecting Return Context"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>10.4. Determining Current Function Name</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>10.6. Detecting Return Context</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
