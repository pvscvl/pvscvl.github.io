<HTML
><HEAD
>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:42:41Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="index.htm"
TITLE="Perl Cookbook"><LINK
REL="prev"
HREF="ch13_16.htm"
TITLE="13.15. Creating Magic Variables with tie"><LINK
REL="next"
HREF="ch14_02.htm"
TITLE="14.1. Making and Using a DBM File"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_16.htm"
TITLE="13.15. Creating Magic Variables with tie"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 13.15. Creating Magic Variables with tie"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
>Chapter 14</FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_02.htm"
TITLE="14.1. Making and Using a DBM File"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 14.1. Making and Using a DBM File"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="chapter"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="ch14-20843"
>14. Database Access</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="sect1"
HREF="#ch14-10943"
TITLE="14.0. Introduction"
>Introduction</A
><BR><A
CLASS="sect1"
HREF="ch14_02.htm"
TITLE="14.1. Making and Using a DBM File"
>Making and Using a DBM File</A
><BR><A
CLASS="sect1"
HREF="ch14_03.htm"
TITLE="14.2. Emptying a DBM File"
>Emptying a DBM File</A
><BR><A
CLASS="sect1"
HREF="ch14_04.htm"
TITLE="14.3. Converting Between DBM Files"
>Converting Between DBM Files</A
><BR><A
CLASS="sect1"
HREF="ch14_05.htm"
TITLE="14.4. Merging DBM Files"
>Merging DBM Files</A
><BR><A
CLASS="sect1"
HREF="ch14_06.htm"
TITLE="14.5. Locking DBM Files"
>Locking DBM Files</A
><BR><A
CLASS="sect1"
HREF="ch14_07.htm"
TITLE="14.6. Sorting Large DBM Files"
>Sorting Large DBM Files</A
><BR><A
CLASS="sect1"
HREF="ch14_08.htm"
TITLE="14.7. Treating a Text File as a Database Array"
>Treating a Text File as a Database Array</A
><BR><A
CLASS="sect1"
HREF="ch14_09.htm"
TITLE="14.8. Storing Complex Data in a DBM File"
>Storing Complex Data in a DBM File</A
><BR><A
CLASS="sect1"
HREF="ch14_10.htm"
TITLE="14.9. Persistent Data"
>Persistent Data</A
><BR><A
CLASS="sect1"
HREF="ch14_11.htm"
TITLE="14.10. Executing an SQL Command Using DBI and DBD"
>Executing an SQL Command Using DBI and DBD</A
><BR><A
CLASS="sect1"
HREF="ch14_12.htm"
TITLE="14.11. Program: ggh&nbsp- Grep Netscape Global History"
>Program: ggh&nbsp;- Grep Netscape Global History</A
></P
><P
></P
></DIV
><DIV
CLASS="epigraph"
ALIGN="right"
><P
CLASS="para"
ALIGN="right"
><I
>I only ask for information.</I
></P
><P
CLASS="attribution"
ALIGN="right"
>-&nbsp;Charles Dickens <CITE
CLASS="citetitle"
>David Copperfield</CITE
></P
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch14-10943"
>14.0. Introduction</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch14-idx-1000004908-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000004908-1"
></A
>Everywhere you find data, you find databases. At the simplest level, every file can be considered a database. At the most complex level, expensive and complex relational database systems handle thousands of transactions per second. In between are countless improvised schemes for fast access to loosely structured data. Perl can work with all of them.</P
><P
CLASS="para"
>Early in the history of computers, people noticed that flat file databases don't scale to large data sets. Flat files were tamed using fixed-length records or auxiliary indices, but updating became expensive, and previously simple applications bogged down with I/O overhead.</P
><P
CLASS="para"
>After some head-scratching, clever programmers devised a better solution. As hashes in memory provide more flexible access to data than do arrays, hashes on disk offer more convenient kinds of access than array-like text files. These benefits in access time cost you space, but disk space is cheap these days (or so the reasoning goes).</P
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="ch14-idx-1000004910-0"
></A
>DBM library gives Perl programmers a simple, easy-to-use database. You use the same standard operations on hashes bound to DBM files as you do on hashes in memory. In fact, that's how you use DBM databases from Perl. You call <CODE
CLASS="literal"
>dbmopen</CODE
> with the name of a hash and the filename holding the database. Then whenever you access the hash, Perl consults or changes the DBM database on disk.</P
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch14_02.htm"
TITLE="Making and Using a DBM File"
>Recipe 14.1</A
> shows how to create a DBM database and gives tips on using it efficiently. Although you can do with DBM files the same things you do with regular hashes, their disk-based nature leads to performance concerns that don't exist with in-memory hashes. Recipes <A
CLASS="xref"
HREF="ch14_03.htm"
TITLE="Emptying a DBM File"
>Recipe 14.2</A
> and <A
CLASS="xref"
HREF="ch14_05.htm"
TITLE="Merging DBM Files"
>Recipe 14.4</A
> explain these concerns and show how to work around them. DBM files also make possible operations that aren't available using regular hashes. Recipes <A
CLASS="xref"
HREF="ch14_07.htm"
TITLE="Sorting Large DBM Files"
>Recipe 14.6</A
> and <A
CLASS="xref"
HREF="ch14_08.htm"
TITLE="Treating a Text File as a Database Array"
>Recipe 14.7</A
> explain two of these things.</P
><P
CLASS="para"
>Various DBM implementations offer varying features. The old <CODE
CLASS="literal"
>dbmopen</CODE
><A
CLASS="indexterm"
NAME="ch14-idx-1000004911-0"
></A
> function only lets you use the DBM library Perl was built with. If you wanted to use <CODE
CLASS="literal"
>dbmopen</CODE
> to access from one type of database and write to another, you were out of luck. Version 5 of Perl remedied this by letting you <CODE
CLASS="literal"
>tie</CODE
> a hash to an arbitrary object class, as detailed in <A
CLASS="xref"
HREF="ch13_01.htm"
TITLE="Classes, Objects, and Ties"
>Chapter 13, <CITE
CLASS="chapter"
>Classes, Objects, and Ties</CITE
></A
>.</P
><P
CLASS="para"
>The table below shows several possible DBM libraries you can choose from:</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Feature</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>NDBM</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>SDBM</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>GDBM</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>DB</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Linkage comes with Perl</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Source bundled with Perl</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Source redistributable</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>gpl[<A
CLASS="footnote"
HREF="#ch14-pgfId-1000004358"
>1</A
>]</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>FTPable</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Easy to build</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>N/A</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>ok[<A
CLASS="footnote"
HREF="#ch14-pgfId-1000004363"
>2</A
>]</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Often comes with Unix</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes[<A
CLASS="footnote"
HREF="#ch14-pgfId-1000004367"
>3</A
>]</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no[<A
CLASS="footnote"
HREF="#ch14-pgfId-1000004372"
>4</A
>]</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no[<A
CLASS="footnote"
HREF="#ch14-pgfId-1000004372"
>4</A
>]</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Builds ok on Unix</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>N/A</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes[<A
CLASS="footnote"
HREF="#ch14-pgfId-1000004415"
>5</A
>]</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Builds ok on Windows</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>N/A</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes[<A
CLASS="footnote"
HREF="#ch14-pgfId-1000004419"
>6</A
>]</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Code size</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>[<A
CLASS="footnote"
HREF="#ch14-pgfId-1000004432"
>7</A
>]</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>small</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>big</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>big[<A
CLASS="footnote"
HREF="#ch14-pgfId-1000004443"
>8</A
>]</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Disk usage</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>[<A
CLASS="footnote"
HREF="#ch14-pgfId-1000004432"
>7</A
>]</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>small</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>big</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>ok</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Speed</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>[<A
CLASS="footnote"
HREF="#ch14-pgfId-1000004432"
>7</A
>]</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>slow</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>ok</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>fast</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Block size limits</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>4k</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>1k[<A
CLASS="footnote"
HREF="#ch14-pgfId-1000004447"
>9</A
>]</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>none</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>none</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Byte-order independent</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>User-defined sort order</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Partial key lookups</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>yes<A
CLASS="indexterm"
NAME="ch14-idx-1000004913-0"
></A
></P
></TD
></TR
></TBODY
></TABLE
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch14-pgfId-1000004358"
>[1]</A
> Using GPLed code in your program places restrictions upon you. See <A
CLASS="systemitem.url"
HREF="../../../../../../../www.gnu.org/"
>www.gnu.org</A
> for more details.</P
></DIV
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch14-pgfId-1000004363"
>[2]</A
> See the DB_File library method. Requires symbolic links.</P
></DIV
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch14-pgfId-1000004367"
>[3]</A
> On mixed-universe machines, this may be in the BSD compatibility library, which is often shunned.</P
></DIV
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch14-pgfId-1000004372"
>[4]</A
> Except for free Unix ports like Linux, FreeBSD, OpenBSD, and NetBSD.</P
></DIV
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch14-pgfId-1000004415"
>[5]</A
> Providing you have an ANSI C compiler.</P
></DIV
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch14-pgfId-1000004419"
>[6]</A
> Prior to unification in 5.005, several divergent versions of Perl on Windows systems were widely available, including the standard port built from the normal Perl distribution and several proprietary ports. Like most CPAN modules, DB builds only on the standard port.</P
></DIV
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch14-pgfId-1000004432"
>[7]</A
> Depends on how much your vendor has tweaked it.</P
></DIV
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch14-pgfId-1000004443"
>[8]</A
> Can be reduced if you compile for one access method.</P
></DIV
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch14-pgfId-1000004447"
>[9]</A
> By default, but can be redefined (at the expense of compatibility with older files).</P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch14-idx-1000004912-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000004912-1"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000004912-2"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000004912-3"
></A
>NDBM comes with most BSD-derived machines. GDBM is a GNU DBM implementation. <A
CLASS="indexterm"
NAME="ch14-idx-1000004914-0"
></A
>SDBM is part of the X11 distribution and also the standard Perl source distribution. DB refers to the <A
CLASS="indexterm"
NAME="ch14-idx-1000004915-0"
></A
>Berkeley DB library. While the others are essentially reimplementations of the original DB library, the Berkeley DB code gives you three different types of database on disk and attempts to solve many of the disk, speed, and size limitations that hinder the other implementations.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch14-idx-1000004916-0"
></A
>Code size refers to the size of the compiled libraries. <A
CLASS="indexterm"
NAME="ch14-idx-1000004917-0"
></A
>Disk usage refers to the size of the database files it creates. Block size limits refer to the database's maximum key or value size. Byte-order independence refers to whether the database system relies on hardware byte order or whether it instead creates portable files. A user-defined sort order lets you tell the library what order to return lists of keys in. Partial key lookups let you make approximate searches on the database.</P
><P
CLASS="para"
>Most Perl programmers prefer the Berkeley DB implementations. Many systems already have this library installed, and Perl can use it. For others, you are advised to fetch and install it from CPAN. It will make your life much easier.</P
><P
CLASS="para"
>DBM files provide key/value pairs. In relational database terms, you get a database with one table that has only two columns. <A
CLASS="xref"
HREF="ch14_09.htm"
TITLE="Storing Complex Data in a DBM File"
>Recipe 14.8</A
> shows you how to use the <A
CLASS="indexterm"
NAME="ch14-idx-1000004918-0"
></A
>MLDBM module from CPAN to store arbitrarily complex data structures in a DBM file.</P
><P
CLASS="para"
>As good as MLDBM is, it doesn't get around the limitation that you only retrieve rows based on one single column, the hash key. If you need complex queries, the difficulties can be overwhelming. In these cases, consider a separate database management system (DBMS). The DBI project provides modules to work with Oracle, Sybase, mSQL, MySQL, Ingres, and others.</P
><P
CLASS="para"
>See <A
CLASS="systemitem.url"
HREF="../../../../../../../www.hermetica.com/technologia/perl/DBI/index.html"
>http://www.hermetica.com/technologia/perl/DBI/index.html</A
> and <A
CLASS="systemitem.url"
HREF="../../../../../../../www.perl.com/CPAN/modules/by-category/07_Database_Interfaces/"
>http://www.perl.com/CPAN/modules/by-category/07_Database_Interfaces/</A
>, which currently contains:</P
><PRE
CLASS="programlisting"
><CODE
CLASS="literal"
>AsciiDB   DBI Db     MLDBM    OLE    Pg        Sybase</CODE
>
<CODE
CLASS="literal"
>CDB_File  DBZ_ File  Fame     Msql   ObjStore  Postgres  XBase</CODE
>
<CODE
CLASS="literal"
>DBD       DB_File    Ingperl  MySQL  Oraperl   Sprite</CODE
></PRE
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_16.htm"
TITLE="13.15. Creating Magic Variables with tie"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 13.15. Creating Magic Variables with tie"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_02.htm"
TITLE="14.1. Making and Using a DBM File"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 14.1. Making and Using a DBM File"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>13.15. Creating Magic Variables with tie</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>14.1. Making and Using a DBM File</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
