<HTML
><HEAD
>
<TITLE>Recipe 2.18. Printing Correct Plurals (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:30:25Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch02_01.htm"
TITLE="2. Numbers"><LINK
REL="prev"
HREF="ch02_18.htm"
TITLE="2.17. Putting Commas in Numbers"><LINK
REL="next"
HREF="ch02_20.htm"
TITLE="2.19. Program: Calculating Prime Factors"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_18.htm"
TITLE="2.17. Putting Commas in Numbers"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.17. Putting Commas in Numbers"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch02_01.htm"
TITLE="2. Numbers"
>Chapter 2<BR>Numbers</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_20.htm"
TITLE="2.19. Program: Calculating Prime Factors"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.19. Program: Calculating Prime Factors"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch02-chap02_printing_0"
>2.18. Printing Correct Plurals</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-1349"
>Problem <A
CLASS="indexterm"
NAME="ch02-idx-1000008154-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008154-1"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008154-2"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008154-3"
></A
></A
></H3
><P
CLASS="para"
>You're printing something like &quot;<CODE
CLASS="literal"
>It</CODE
> <CODE
CLASS="literal"
>took</CODE
> <CODE
CLASS="literal"
>$time</CODE
> <CODE
CLASS="literal"
>hours</CODE
>&quot;, but &quot;<CODE
CLASS="literal"
>It</CODE
> <CODE
CLASS="literal"
>took</CODE
> <CODE
CLASS="literal"
>1</CODE
> <CODE
CLASS="literal"
>hours</CODE
>&quot; is ungrammatical. You would like to get it right.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-1355"
>Solution</A
></H3
><P
CLASS="para"
>Use <CODE
CLASS="literal"
>printf</CODE
> and a ternary conditional (<CODE
CLASS="literal"
>X</CODE
> <CODE
CLASS="literal"
>?</CODE
> <CODE
CLASS="literal"
>Y</CODE
> <CODE
CLASS="literal"
>:</CODE
> <CODE
CLASS="literal"
>Z</CODE
>) to alter the noun or verb:</P
><PRE
CLASS="programlisting"
>printf &quot;It took %d hour%s\n&quot;, $time, $time == 1 ? &quot;&quot; : &quot;s&quot;;

printf &quot;%d hour%s %s enough.\n&quot;, $time, 
        $time == 1 ? &quot;&quot;   : &quot;s&quot;,
        $time == 1 ? &quot;is&quot; : &quot;are&quot;;</PRE
><P
CLASS="para"
>Or, use the <A
CLASS="indexterm"
NAME="ch02-idx-1000008155-0"
></A
>Lingua::EN::Inflect module from CPAN as described in the Discussion.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-1373"
>Discussion</A
></H3
><P
CLASS="para"
>The only reason inane messages like &quot;<CODE
CLASS="literal"
>1</CODE
> <CODE
CLASS="literal"
>file(s)</CODE
> <CODE
CLASS="literal"
>updated</CODE
>&quot; appear is because their authors are too lazy to bother checking whether the count is 1 or not.</P
><P
CLASS="para"
>If your noun changes by more than an <CODE
CLASS="literal"
>&quot;-s&quot;</CODE
>, you'll need to change the <CODE
CLASS="literal"
>printf</CODE
> accordingly:</P
><PRE
CLASS="programlisting"
>printf &quot;It took %d centur%s&quot;, $time, $time == 1 ? &quot;y&quot; : &quot;ies&quot;;</PRE
><P
CLASS="para"
>This is good for simple cases, but you'll get tired of writing it. This leads you to write funny functions like this:</P
><PRE
CLASS="programlisting"
>sub noun_plural {
    local $_ = shift;
    # order really matters here!
    s/ss$/sses/                             ||
    s/([psc]h)$/${1}es/                     ||
    s/z$/zes/                               ||
    s/ff$/ffs/                              ||
    s/f$/ves/                               ||
    s/ey$/eys/                              ||
    s/y$/ies/                               ||
    s/ix$/ices/                             ||
    s/([sx])$/$1es/                         ||
    s/$/s/                                  ||
                die &quot;can't get here&quot;;
    return $_;
}
*verb_singular = \&amp;noun_plural;   # make function alias</PRE
><P
CLASS="para"
>As you find more exceptions, your function will become increasingly convoluted. When you need to handle such morphological changes, turn to the flexible solution provided by the Lingua::EN::Inflect module from CPAN.</P
><PRE
CLASS="programlisting"
>use Lingua::EN::Inflect qw(PL classical);
classical(1);               # why isn't this the default?
while (&lt;DATA&gt;) {            # each line in the data
    for (split) {           # each word on the line
        print &quot;One $_, two &quot;, PL($_), &quot;.\n&quot;;
    }
} 
# plus one more
$_ = 'secretary general';
print &quot;One $_, two &quot;, PL($_), &quot;.\n&quot;;

__END__
fish fly ox 
species genus phylum 
cherub radius jockey 
index matrix mythos
phenomenon formula </PRE
><P
CLASS="para"
>That produces the following:</P
><PRE
CLASS="programlisting"
><CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One fish, two fish.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One fly, two flies.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One ox, two oxen.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One species, two species.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One genus, two genera.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One phylum, two phyla.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One cherub, two cherubim.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One radius, two radii.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One jockey, two jockeys.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One index, two indices.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One matrix, two matrices.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One mythos, two mythoi.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One phenomenon, two phenomena.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One formula, two formulae.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>One secretary general, two secretaries general.</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>This is one of the many things the module can do. It also handles inflections or conjugations for other parts of speech, provides number-insensitive comparison functions, figures out whether to use <I
CLASS="firstterm"
>a</I
> or <I
CLASS="firstterm"
>an</I
>, and plenty more.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-1489"
>See Also</A
></H3
><P
CLASS="para"
>The ternary ("hook-colon") operator discussed in <EM
CLASS="emphasis"
>perlop </EM
>(1) and in the <A
CLASS="olink"
HREF="../prog/ch02_05.htm"
>"Conditional Operator"</A
> section of <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; the documentation with the CPAN module Lingua::EN::Inflect<A
CLASS="indexterm"
NAME="ch02-idx-1000008156-0"
></A
> <A
CLASS="indexterm"
NAME="ch02-idx-1000008158-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008158-1"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008158-2"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008158-3"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_18.htm"
TITLE="2.17. Putting Commas in Numbers"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.17. Putting Commas in Numbers"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_20.htm"
TITLE="2.19. Program: Calculating Prime Factors"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.19. Program: Calculating Prime Factors"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>2.17. Putting Commas in Numbers</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>2.19. Program: Calculating Prime Factors</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
