<HTML
><HEAD
>
<TITLE>Recipe 5.6. Retrieving from a Hash in Insertion Order (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:32:37Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch05_01.htm"
TITLE="5. Hashes"><LINK
REL="prev"
HREF="ch05_06.htm"
TITLE="5.5. Printing a Hash"><LINK
REL="next"
HREF="ch05_08.htm"
TITLE="5.7. Hashes with Multiple Values Per Key"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_06.htm"
TITLE="5.5. Printing a Hash"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.5. Printing a Hash"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch05_01.htm"
TITLE="5. Hashes"
>Chapter 5<BR>Hashes</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_08.htm"
TITLE="5.7. Hashes with Multiple Values Per Key"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.7. Hashes with Multiple Values Per Key"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch05-11275"
>5.6. Retrieving from a Hash in Insertion Order</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-592"
>Problem</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch05-idx-1000006466-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006466-1"
></A
>The <CODE
CLASS="literal"
>keys</CODE
> and <CODE
CLASS="literal"
>each</CODE
> functions give you the hash elements in a strange order, and you want them in the order in which you inserted them.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-598"
>Solution</A
></H3
><P
CLASS="para"
>Use the <A
CLASS="indexterm"
NAME="ch05-idx-1000006467-0"
></A
>Tie::IxHash module.</P
><PRE
CLASS="programlisting"
>use Tie::IxHash;
tie %HASH, &quot;Tie::IxHash&quot;;
# manipulate %HASH
@keys = keys %HASH;         # @keys is in insertion order</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-612"
>Discussion</A
></H3
><P
CLASS="para"
>Tie::IxHash makes <CODE
CLASS="literal"
>keys</CODE
>, <CODE
CLASS="literal"
>each</CODE
>, and <CODE
CLASS="literal"
>values</CODE
> return the hash elements in the order they were added. This often removes the need to preprocess the hash keys with a complex <CODE
CLASS="literal"
>sort</CODE
> comparison or maintain a distinct array containing the keys in the order they were inserted into the hash.</P
><P
CLASS="para"
>Tie::IxHash also provides an object-oriented interface to <CODE
CLASS="literal"
>splice</CODE
>, <CODE
CLASS="literal"
>push</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000006469-0"
></A
> , <CODE
CLASS="literal"
>pop</CODE
>, <CODE
CLASS="literal"
>shift</CODE
>, <CODE
CLASS="literal"
>unshift</CODE
>, <CODE
CLASS="literal"
>keys</CODE
>, <CODE
CLASS="literal"
>values</CODE
>, and <CODE
CLASS="literal"
>delete</CODE
>, among others. <A
CLASS="indexterm"
NAME="ch05-idx-1000006468-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006468-1"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006468-2"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006468-3"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006468-4"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006468-5"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006468-6"
></A
></P
><P
CLASS="para"
>Here's an example, showing both <CODE
CLASS="literal"
>keys</CODE
> and <CODE
CLASS="literal"
>each</CODE
>:</P
><PRE
CLASS="programlisting"
># initialize
use Tie::IxHash;

tie %food_color, &quot;Tie::IxHash&quot;;
$food_color{Banana} = &quot;Yellow&quot;;
$food_color{Apple}  = &quot;Green&quot;;
$food_color{Lemon}  = &quot;Yellow&quot;;

print &quot;In insertion order, the foods are:\n&quot;;
foreach $food (keys %food_color) {
    print &quot;  $food\n&quot;;
}

print &quot;Still in insertion order, the foods' colors are:\n&quot;;
while (( $food, $color ) = each %food_color ) {
    print &quot;$food is colored $color.\n&quot;;
}

<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>In insertion order, the foods are:</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>  Banana</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>  Apple</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>  Lemon</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Still in insertion order, the foods' colors are:</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Banana is colored Yellow.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Apple is colored Green.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Lemon is colored Yellow.</I
></CODE
></B
></CODE
></PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-674"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for the CPAN module Tie::IxHash; <A
CLASS="xref"
HREF="ch13_16.htm"
TITLE="Creating Magic Variables with tie"
>Recipe 13.15</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_06.htm"
TITLE="5.5. Printing a Hash"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.5. Printing a Hash"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_08.htm"
TITLE="5.7. Hashes with Multiple Values Per Key"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.7. Hashes with Multiple Values Per Key"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>5.5. Printing a Hash</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>5.7. Hashes with Multiple Values Per Key</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
