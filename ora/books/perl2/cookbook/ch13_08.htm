<HTML
><HEAD
>
<TITLE>Recipe 13.7. Calling Methods Indirectly (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:42:23Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch13_01.htm"
TITLE="13. Classes, Objects, and Ties"><LINK
REL="prev"
HREF="ch13_07.htm"
TITLE="13.6. Cloning Objects"><LINK
REL="next"
HREF="ch13_09.htm"
TITLE="13.8. Determining Subclass Membership"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_07.htm"
TITLE="13.6. Cloning Objects"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 13.6. Cloning Objects"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch13_01.htm"
TITLE="13. Classes, Objects, and Ties"
>Chapter 13<BR>Classes, Objects, and Ties</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_09.htm"
TITLE="13.8. Determining Subclass Membership"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13.8. Determining Subclass Membership"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch13-15749"
>13.7. Calling Methods Indirectly</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-pgfId-1009"
>Problem<A
CLASS="indexterm"
NAME="ch13-idx-1000004543-0"
></A
></A
></H3
><P
CLASS="para"
>You want to call a method by a name that isn't known until run time.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-pgfId-1015"
>Solution</A
></H3
><P
CLASS="para"
>Store the method name as a string in a scalar variable and use it where you would use the real method name to the right of the arrow operator:</P
><PRE
CLASS="programlisting"
>$methname = &quot;flicker&quot;;
$obj-&gt;$methname(10);         # calls $ob-&gt;flicker(10);

# call three methods on the object, by name
foreach $m ( qw(start run stop) ) {
    $obj-&gt;<CODE
CLASS="literal"
>$m();</CODE
>
} </PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-pgfId-1035"
>Discussion</A
></H3
><P
CLASS="para"
>Sometimes you need to call a method whose name you've stored somewhere. You can't take the address of a method, but you can store its name. If you have a scalar variable <CODE
CLASS="literal"
>$meth</CODE
> containing the method name, call the method on an object <CODE
CLASS="literal"
>$crystal</CODE
> with <CODE
CLASS="literal"
>$crystal-&gt;$meth()</CODE
>.</P
><PRE
CLASS="programlisting"
>@methods = qw(name rank serno);
%his_info = map { $_ =&gt; $ob-&gt;$_() } @methods;

# same as this:

%his_info = (
    'name'  =&gt; $ob-&gt;<CODE
CLASS="literal"
>name()</CODE
>,
    'rank'  =&gt; $ob-&gt;<CODE
CLASS="literal"
>rank()</CODE
>,
    'serno' =&gt; $ob-&gt;<CODE
CLASS="literal"
>serno()</CODE
>,
);</PRE
><P
CLASS="para"
>If you're desperate to devise a way to get a method's address, you should try to rethink your algorithm. For example, instead of incorrectly taking <CODE
CLASS="literal"
>\$ob-&gt;method()</CODE
>, which simply applies the backslash to that method's return value or values, do this:</P
><PRE
CLASS="programlisting"
>my $fnref = sub { $ob-&gt;method(@_) };</PRE
><P
CLASS="para"
>Now when it's time to call that indirectly, you would use:</P
><PRE
CLASS="programlisting"
>$fnref-&gt;(10, &quot;fred&quot;);</PRE
><P
CLASS="para"
>and have it correctly really call:</P
><PRE
CLASS="programlisting"
>$obj-&gt;method(10, &quot;fred&quot;);</PRE
><P
CLASS="para"
>This works even if <CODE
CLASS="literal"
>$ob</CODE
> has gone out of scope. This solution is much cleaner.</P
><P
CLASS="para"
>The code reference returned by the UNIVERSAL <CODE
CLASS="literal"
>can()</CODE
><A
CLASS="indexterm"
NAME="ch13-idx-1000004550-0"
></A
> method should probably not be used as an indirect method call. That's because you have no reason to believe that this will be a valid method when applied to an object of an arbitrary class.</P
><P
CLASS="para"
>For example, this is highly dubious code:</P
><PRE
CLASS="programlisting"
>$obj-&gt;can('method_name')-&gt;($obj_target, @arguments)
   if $obj_target-&gt;isa( ref $obj );</PRE
><P
CLASS="para"
>The problem is that the code ref returned by <CODE
CLASS="literal"
>can</CODE
> might not be a valid method to be called on <CODE
CLASS="literal"
>$obj2</CODE
>. It's probably safest to only test the <CODE
CLASS="literal"
>can()</CODE
> method in a boolean expression.<A
CLASS="indexterm"
NAME="ch13-idx-1000004545-0"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-pgfId-1000004355"
>See Also</A
></H3
><P
CLASS="para"
><I
CLASS="filename"
>perlobj </I
>(1); <A
CLASS="xref"
HREF="ch11_09.htm"
TITLE="Creating References to Methods"
>Recipe 11.8</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_07.htm"
TITLE="13.6. Cloning Objects"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 13.6. Cloning Objects"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_09.htm"
TITLE="13.8. Determining Subclass Membership"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13.8. Determining Subclass Membership"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>13.6. Cloning Objects</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>13.8. Determining Subclass Membership</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
