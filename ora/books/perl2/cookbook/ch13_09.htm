<HTML
><HEAD
>
<TITLE>Recipe 13.8. Determining Subclass Membership (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:42:24Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch13_01.htm"
TITLE="13. Classes, Objects, and Ties"><LINK
REL="prev"
HREF="ch13_08.htm"
TITLE="13.7. Calling Methods Indirectly"><LINK
REL="next"
HREF="ch13_10.htm"
TITLE="13.9. Writing an Inheritable Class"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_08.htm"
TITLE="13.7. Calling Methods Indirectly"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 13.7. Calling Methods Indirectly"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch13_01.htm"
TITLE="13. Classes, Objects, and Ties"
>Chapter 13<BR>Classes, Objects, and Ties</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_10.htm"
TITLE="13.9. Writing an Inheritable Class"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13.9. Writing an Inheritable Class"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch13-chap13_determining_0"
>13.8. Determining Subclass Membership</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-pgfId-1091"
>Problem<A
CLASS="indexterm"
NAME="ch13-idx-1000004549-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-1000004549-1"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-1000004549-2"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-1000004549-3"
></A
></A
></H3
><P
CLASS="para"
>You want to know whether an object is an instance of a particular class or that class's subclasses. Perhaps you want to decide whether a particular method can be called on an arbitrary object.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-pgfId-1097"
>Solution</A
></H3
><P
CLASS="para"
>Use methods from the special UNIVERSAL class:</P
><PRE
CLASS="programlisting"
>$obj-&gt;isa(&quot;HTTP::Message&quot;);                  # as object method
HTTP::Response-&gt;isa(&quot;HTTP::Message&quot;);       # as class method

if ($obj-&gt;can(&quot;method_name&quot;)) { .... }       # check method validity</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-pgfId-1111"
>Discussion</A
></H3
><P
CLASS="para"
>Wouldn't it be convenient if all objects were rooted at some ultimate base class? That way you could give every object common methods without having to add to each <CODE
CLASS="literal"
>@ISA</CODE
>. Well, you can. You don't see it, but Perl pretends there's an extra element at the end of <CODE
CLASS="literal"
>@ISA </CODE
> &nbsp;-   the package named UNIVERSAL.</P
><P
CLASS="para"
>In version 5.003, no methods were predefined in UNIVERSAL, but you could put whatever you felt like into it. However, as of version 5.004, UNIVERSAL has a few methods in it already. These are built right into your Perl binary, so they don't take extra time to load. Predefined methods include <CODE
CLASS="literal"
>isa</CODE
><A
CLASS="indexterm"
NAME="ch13-idx-1000004893-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-1000004893-1"
></A
>, <CODE
CLASS="literal"
>can</CODE
>, and <CODE
CLASS="literal"
>VERSION</CODE
>. The <CODE
CLASS="literal"
>isa</CODE
> method tells you whether an object or class "is" another one, without having to traverse the hierarchy yourself:</P
><PRE
CLASS="programlisting"
>$has_io = $fd-&gt;isa(&quot;IO::Handle&quot;);
$itza_handle = IO::Socket-&gt;isa(&quot;IO::Handle&quot;);</PRE
><P
CLASS="para"
>Arguably, it's usually best to try the method call. Explicit type checks like this are sometimes frowned upon as being too constraining.</P
><P
CLASS="para"
>The <CODE
CLASS="literal"
>can</CODE
> method, called on behalf of that object or class, reports back whether its string argument is a callable method name in that class. In fact, it gives you back a function reference to that method:</P
><PRE
CLASS="programlisting"
>$his_print_method = $obj-&gt;can('as_string');</PRE
><P
CLASS="para"
>Finally, the <CODE
CLASS="literal"
>VERSION</CODE
> method checks whether the class (or the object's class) has a package global called <CODE
CLASS="literal"
>$VERSION</CODE
> that's high enough, as in:</P
><PRE
CLASS="programlisting"
>Some_Module-&gt;VERSION(3.0);
$his_vers = $obj-&gt;<CODE
CLASS="literal"
>VERSION()</CODE
>;</PRE
><P
CLASS="para"
>However, we don't usually call <CODE
CLASS="literal"
>VERSION</CODE
> ourselves. Remember, in Perl an all-uppercase function name means that the function will be automatically called by Perl in some way. In this case, it happens when you say:</P
><PRE
CLASS="programlisting"
>use Some_Module 3.0;</PRE
><P
CLASS="para"
>If you wanted to add version checking to your Person class explained above, add this to Person.pm:</P
><PRE
CLASS="programlisting"
>use vars qw($VERSION);
$VERSION = '1.01';<CODE
CLASS="literal"
></CODE
><A
CLASS="indexterm"
NAME="ch13-idx-1000004558-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-1000004558-1"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-1000004558-2"
></A
></PRE
><P
CLASS="para"
>Then, in the user code say <CODE
CLASS="literal"
>use</CODE
> <CODE
CLASS="literal"
>Person</CODE
> <CODE
CLASS="literal"
>1.01;</CODE
> to make sure that you have at least that version number or higher available. This is not the same as loading in that exact version number; it just has to be at least that high. Lamentably, no support currently exists for concurrent installation of multiple versions of a module.<A
CLASS="indexterm"
NAME="ch13-idx-1000004552-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-1000004552-1"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-1000004552-2"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-1000004552-3"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-pgfId-1147"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for the standard UNIVERSAL module; the <CODE
CLASS="literal"
>use</CODE
> keyword in <I
CLASS="filename"
>perlfunc </I
>(1) and in <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_08.htm"
TITLE="13.7. Calling Methods Indirectly"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 13.7. Calling Methods Indirectly"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_10.htm"
TITLE="13.9. Writing an Inheritable Class"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13.9. Writing an Inheritable Class"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>13.7. Calling Methods Indirectly</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>13.9. Writing an Inheritable Class</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
