<html>
<head>
<title>The Fifteen-Minute SQL Tutorial  (Perl for System Administration)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David N. Blank-Edelman">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1565926099L" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The Fifteen-Minute SQL Tutorial">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home">
<map name="banner-map"><AREA SHAPE="RECT" COORDS="0,0,466,71" HREF="index.htm" ALT="Perl for System Administration"><AREA SHAPE="RECT" COORDS="467,0,514,18" HREF="jobjects/fsearch.htm" ALT="Search this book">
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="appc_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm">Perl for System Administration</a></td><td align="right" valign="top" width="172"><a href="appd_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->

<h1 class="chapter">Appendix D.  The Fifteen-Minute SQL Tutorial</h1>
<div class="htmltoc">
<h4 class="tochead">Contents:</h4>
<p>
<a href="appd_01.htm">Creating /Deleting Databases and Tables</a>
<br>
<a href="appd_02.htm">Inserting Data into a Table</a>
<br>
<a href="appd_03.htm">Querying Information</a>
<br>
<a href="appd_04.htm">Changing Table Information</a>
<br>
<a href="appd_05.htm">Relating Tables to Each Other</a>
<br>
<a href="appd_06.htm">SQL Stragglers</a>
<br>
</p>
</div>









<p>Relational databases can be an excellent tool for system
administration. A relational database is accessed and administered
using Structured Query Language (SQL) statements. As a result, it is
a good idea for system administrators to learn at least the basics of
SQL. The goal of this appendix is not to make you a full-time
database programmer or even a real database administrator; that takes
years of work and considerable expertise. However, we can look at
enough SQL so you can begin to fake it. You may not be able to speak
the language, but you'll at least get the gist if someone
speaks it at you, and you'll know enough to go deeper into the
subject if you need to. In <a href="ch07_01.htm">Chapter 7, "SQL Database Administration"</a>, we'll
use these basic building blocks extensively when we integrate SQL and
Perl.</p>




<p>
<a name="INDEX-1120"></a>SQL is
a command language for performing operations on databases and their
component parts. Tables are the component parts you'll deal
with most often. Their column and row structure makes them look a
great deal like spreadsheets, but the resemblance is only
surface-level. Table elements are not used to represent relationships
to other elements--that is, table elements don't hold
formulas, they just hold data. Most SQL statements are devoted to
working with the data in these rows and columns, allowing the user to
add, delete, select, sort, and relate it between tables.</p>




<p>Let's go over some of the operators offered by SQL. If you want
to experiment with the operators we'll be discussing,
you'll need access to an SQL database. You may already have
access to a server purchased from Oracle, Sybase, Informix, IBM,
Microsoft, etc. If not, an excellent open source database called
MySQL can be downloaded from <a href="../../../../../../../www.mysql.org/">http://www.mysql.org</a>.
<a name="INDEX-1121"></a><a name="INDEX-1122"></a>
</p>




<p>For this appendix, we'll be using mostly generic SQL, though
each database server has its own SQL quirks. SQL statements
particular to a specific database implementation will be noted.</p>




<p>The SQL code that follows will be shown using the capitalization
standard found in most SQL books. This standard capitalizes all
reserved words in a statement.</p>




<p>Most of the example SQL code in this appendix will use a table that
mirrors the flat-file machine database we saw in <a href="ch05_01.htm">Chapter 5, "TCP/IP Name Services"</a>. As a quick refresher, <a href="appd_01.htm">Table D-1</a> shows how that data looks in table form.</p>




<a name="appd-16907"></a>
<h4 class="objtitle">Table D-1. Our Machine Database</h4>
<table border="1">










<tr>
<th>
<p>name</p>
</th>
<th>
<p>ipaddr</p>
</th>
<th>
<p>aliases</p>
</th>
<th>
<p>owner</p>
</th>
<th>
<p>dept</p>
</th>
<th>
<p>bldg</p>
</th>
<th>
<p>room</p>
</th>
<th>
<p>manuf</p>
</th>
<th>
<p>model</p>
</th>
</tr>








<tr>
<td>
<p>shimmer</p>
</td>
<td>
<p>192.168.1.11</p>
</td>
<td>
<p>shim shimmy shimmydoodles</p>
</td>
<td>
<p>David Davis</p>
</td>
<td>
<p>software</p>
</td>
<td>
<p>main</p>
</td>
<td>
<p>309</p>
</td>
<td>
<p>Sun</p>
</td>
<td>
<p>Ultra60</p>
</td>
</tr>



<tr>
<td>
<p>bendir</p>
</td>
<td>
<p>192.168.1.3</p>
</td>
<td>
<p>ben bendoodles</p>
</td>
<td>
<p>Cindy Coltrane</p>
</td>
<td>
<p>IT</p>
</td>
<td>
<p>west</p>
</td>
<td>
<p>143</p>
</td>
<td>
<p>Apple</p>
</td>
<td>
<p>7500/100</p>
</td>
</tr>



<tr>
<td>
<p>sander</p>
</td>
<td>
<p>192.168.1.55</p>
</td>
<td>
<p>sandy micky mickydoo</p>
</td>
<td>
<p>Alex Rollins</p>
</td>
<td>
<p>IT</p>
</td>
<td>
<p>main</p>
</td>
<td>
<p>1101</p>
</td>
<td>
<p>Intergraph</p>
</td>
<td>
<p>TD-325</p>
</td>
</tr>



<tr>
<td>
<p>sulawesi</p>
</td>
<td>
<p>192.168.1.12</p>
</td>
<td>
<p>sula sulee</p>
</td>
<td>
<p>Ellen Monk</p>
</td>
<td>
<p>design</p>
</td>
<td>
<p>main</p>
</td>
<td>
<p>1116</p>
</td>
<td>
<p>Apple</p>
</td>
<td>
<p>G3</p>
</td>
</tr>




</table>




























<h2 class="sect1">D.1. Creating /Deleting Databases and Tables</h2>




<p>
<a name="INDEX-1123"></a><a name="INDEX-1124"></a><a name="INDEX-1125"></a>In
the beginning, the server will be empty and void of objects useful to
us. Let's create our database:</p>




<blockquote>
<pre class="programlisting">CREATE DATABASE sysadm ON userdev=10 LOG ON userlog=5
GO</pre>
</blockquote>




<p>This SQL statement creates a 10MB database on the device
<tt class="literal">userdev</tt> with a 5MB log file on the
<tt class="literal">userlog</tt> device. This statement is Sybase/Microsoft
SQL Server-specific, since database creation (when performed at all)
takes place in different ways on different servers.</p>




<p>
<a name="INDEX-1126"></a>The
<tt class="literal">GO</tt> command is used with interactive database
clients to indicate that the preceding SQL statement should be
executed. It is not an SQL statement itself. In the following
examples, we'll assume that GO will be typed after each
individual SQL statement if you are using one of these clients.
We'll also be using the SQL commenting convention of
"--" for comments in the SQL code.</p>




<p>To remove this database, we can use the <tt class="literal">DROP</tt>
command:</p>




<blockquote>
<pre class="programlisting">DROP DATABASE sysadm</pre>
</blockquote>




<p>Now let's actually create an empty table to hold the
information shown in <a href="appd_01.htm">Table D-1</a>.</p>




<blockquote>
<pre class="programlisting">USE sysadm
-- Last reminder: need to type GO here (if you are using an interactive
-- client) before entering next statement
CREATE TABLE hosts (
  name      character(30)     NOT NULL,
  ipaddr    character(15)     NOT NULL,
  aliases   character(50)     NULL,
  owner     character(40)     NULL,
  dept      character(15)     NULL,
  bldg      character(10)     NULL,
  room      character(4)      NULL,
  manuf     character(10)     NULL,
  model     character(10)     NULL
)</pre>
</blockquote>




<p>First we indicate which database (<em class="filename">sysadm</em>) we
wish to use. The <tt class="literal">USE</tt> statement only takes effect
if it is run separately before any other commands are executed, hence
it gets its own <tt class="literal">GO</tt>
statement.<a name="INDEX-1127"></a>
</p>




<p>Then we create a table by specifying the name, datatype/length, and
the <tt class="literal">NULL</tt>/<tt class="literal">NOT</tt><tt class="literal">NULL</tt> settings for each column. Let's talk a
little bit about datatypes.</p>




<p>It is possible to hold several different types of data in a database
table, including numbers, dates, text, and even images and other
binary data. Table columns are created to hold a certain kind of
data. Our needs are modest, so this table is composed of a set of
columns that hold simple strings of <tt class="literal">character</tt>s.
SQL also allows you to create user-defined aliases for datatypes like
<tt class="literal">ip_address</tt> or <tt class="literal">employee_id</tt>.
User-defined datatypes are used in table creation to keep table
structures readable and data formats consistent between columns
across multiple tables.</p>




<p>The last set of parameters of our previous command declares a column
to be mandatory or optional. If this parameter is set to <tt class="literal">NOT
NULL</tt>, a row cannot be added to the table if it lacks data
in this column. In our example, we need a machine name and IP address
for a machine record to be useful to us, so we declare those fields
<tt class="literal">NOT NULL</tt>. All the rest are optional (though highly
desirable). There are other constraints besides
<tt class="literal">NULL</tt>/<tt class="literal">NOT NULL</tt> that can be
applied to a column for data consistency. For instance, one could
ensure that two machines are not named the same thing by changing:</p>




<blockquote>
<pre class="programlisting">name      character(30)     NOT NULL,</pre>
</blockquote>




<p>to:</p>




<blockquote>
<pre class="programlisting">name      character(30)     NOT NULL CONSTRAINT unique_name UNIQUE,</pre>
</blockquote>




<p>We use <tt class="literal">unique_name</tt> as the name of this particular
constraint. Naming your constraints make the error messages generated
by constraint violations more useful. See your server documentation
for other constraints that can be applied to a table.</p>




<p>Deleting entire tables from a database is considerably simpler than
creating them:</p>




<blockquote>
<pre class="programlisting">USE sysadm
DROP TABLE hosts<a name="INDEX-1128"></a>
<a name="INDEX-1129"></a>
<a name="INDEX-1130"></a>
</pre>
</blockquote>





























































































































































<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="appc_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="appd_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">C.4. Leftovers</td><td align="center" valign="top" width="171"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">D.2. Inserting Data into a Table</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="index.htm">
</map>

<!-- END OF BODY -->

</body>
</html>
