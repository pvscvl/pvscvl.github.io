<html>
<head>
<title>SQL Database Administration  (Perl for System Administration)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David N. Blank-Edelman">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1565926099L" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="SQL Database Administration">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home">
<map name="banner-map"><AREA SHAPE="RECT" COORDS="0,0,466,71" HREF="index.htm" ALT="Perl for System Administration"><AREA SHAPE="RECT" COORDS="467,0,514,18" HREF="jobjects/fsearch.htm" ALT="Search this book">
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch06_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm">Perl for System Administration</a></td><td align="right" valign="top" width="172"><a href="ch07_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->

<h1 class="chapter">Chapter 7.  SQL Database Administration</h1>
<div class="htmltoc">
<h4 class="tochead">Contents:</h4>
<p>
<a href="ch07_01.htm">Interacting with an SQL Server from Perl</a>
<br>
<a href="ch07_02.htm">Using the DBI Framework</a>
<br>
<a href="ch07_03.htm">Using the ODBC Framework</a>
<br>
<a href="ch07_04.htm">Server Documentation</a>
<br>
<a href="ch07_05.htm">Database Logins</a>
<br>
<a href="ch07_06.htm">Monitoring Server Health</a>
<br>
<a href="ch07_07.htm">Module Information for This Chapter</a>
<br>
<a href="ch07_08.htm">References for More Information</a>
<br>
</p>
</div>










<p>
<a name="INDEX-670"></a>What's a chapter on database
administration doing in a system administration book? There are three
strong reasons for people with interests in Perl and system
administration to become database-savvy:</p>





<ol>
<li>
<p>A not-so-subtle thread running through several chapters of this book
is the increasing importance of databases to modern-day system
administration. We've used (albeit simple) databases to keep
track of user and machine information; that's just the tip of
the iceberg. Mailing lists, password files, and even the Windows
NT/2000 registry are all examples of databases you probably see every
day. All large-scale system administration packages (e.g., offerings
from CA, Tivoli, HP, and Microsoft) are dependent on database
backends. If you are planning to do any serious system
administration, you are bound to bump into a database
eventually.</p>
</li>

<li>
<p>Database administration is a play-within-a-play for system
administrators. Database Administrators (DBAs) have to contend with,
among other things:<a name="INDEX-671"></a>
</p>





<blockquote class="simplelist">

<p>Logins/users</p>

</blockquote>





<blockquote class="simplelist">

<p>Log files</p>

</blockquote>





<blockquote class="simplelist">

<p>Storage management (disk space, etc.)</p>

</blockquote>





<blockquote class="simplelist">

<p>Process management</p>

</blockquote>





<blockquote class="simplelist">

<p>Connectivity issues</p>

</blockquote>





<blockquote class="simplelist">

<p>Backup</p>

</blockquote>





<blockquote class="simplelist">

<p>Security</p>

</blockquote>





<p>Sound familiar? We can and should learn from both knowledge domains.</p>
</li>


<li>
<p>Perl is a glue language, arguably one of the best. Much work has gone
into Perl/database integration, thanks mostly to the tremendous
energy surrounding Web development. We can put this effort to work
for us. Though Perl can integrate with several different database
formats like Unix DBM, Berkeley DB, etc., we're going to pay
attention in this chapter to the Perl's interface with
large-scale database products. Other formats are addressed elsewhere
in this book.</p>
</li>
</ol>


<p>
<a name="INDEX-672"></a><a name="INDEX-673"></a>In order to be a
database-literate system administrator, you have to speak a little
Structured Query Language (SQL), the <em class="emphasis">lingua franca
</em>of most commercial and several noncommercial databases.
Writing scripts in Perl for database administration requires some SQL
knowledge because these scripts will contain simple embedded SQL
statements. See <a href="appd_01.htm">Appendix D, "The Fifteen-Minute SQL Tutorial"</a>, for enough SQL to get
you started. The examples in this chapter use the same databases in
previous chapters to keep us from straying from the system
administration realm.</p>




































<h2 class="sect1">7.1. Interacting with an SQL Server from Perl</h2>





<p>
<a name="INDEX-674"></a><a name="INDEX-675"></a><a name="INDEX-676"></a><a name="INDEX-677"></a><a name="INDEX-678"></a><a name="INDEX-679"></a><a name="INDEX-680"></a>There are two
standard frameworks for communication with an SQL server: DBI
(DataBase Interface) and ODBC (Open DataBase Connectivity). Once upon
a time, DBI was the Unix standard and ODBC the Win32 standard, but
this distinction has started to blur now that ODBC has become
available in the Unix world and DBI has been ported to Win32. Further
blurring the lines is the <tt class="literal">DBD::ODBC</tt> package, a DBD
module that speaks ODBC from within the DBI framework.<a href="#FOOTNOTE-1">[1]</a><a name="INDEX-681"></a><a name="INDEX-682"></a>
</p>
<blockquote class="footnote">




<a name="FOOTNOTE-1"></a>
<p>[1]In addition to the standards we are going to discuss, there are
some excellent server and OS-specific Perl mechanisms.
<em class="emphasis">Sybperl</em> by Michael Peppler for Perl-Sybase
communication is one example. Many of these nonstandard mechanisms
are also available as DBI-ified modules. For instance, most
<em class="emphasis">Sybperl</em> functionality is now available in
<tt class="literal">DBD::Sybase</tt>. On Win32 platforms the ActiveX Data
Objects (ADO) framework mentioned in the previous chapter is starting
to see wider use.</p>




</blockquote>





<p>DBI and ODBC are very similar in intent and execution, so we'll
show you how to use both simultaneously. Both DBI and ODBC can be
thought of as "middleware." They form a layer of
abstraction that allows the programmer to write code using generic
DBI/ODBC calls, without having to know the specific API of any
particular database. It is then up to the DBI/ODBC software to hand
these calls off to a database-specific layer. The DBI module calls a
DBD driver for this; the ODBC Manager calls the data source-specific
ODBC driver. This database-specific driver takes care of the
nitty-gritty details necessary for communicating with the server in
question. <a href="ch07_01.htm">Figure 7-1</a> shows the DBI and ODBC
architectures. In both cases, there is a (at least) three-tiered
model:</p>





<a name="ch07-44533"></a>
<div class="figure">
<img alt="figure" src="figs/psa_0701.gif"></div>
<h4 class="objtitle">Figure 7.1. DBI and ODBC architectures</h4>

<ol>
<li>
<p>An underlying database (Oracle, MySQL, Sybase, Microsoft SQL Server,
etc.).</p>
</li>
<li>
<p>A database-specific layer that makes the actual server-specific
requests to the server on behalf of the programmer. Programmers
don't directly communicate with this layer; they use the third
tier. In DBI, a specific DBD module handles this layer. When talking
with an Oracle database, the <tt class="literal">DBD::Oracle</tt> module
would be invoked. DBD modules are usually linked during the building
process to a server-specific client library provided by the server
vendor. With ODBC, a data-source-specific ODBC driver provided by the
vendor handles this layer.<a name="INDEX-683"></a>
</p>
</li>
<li>
<p>A database-independent Application Programming Interface (API) layer.
Soon, we'll be writing Perl scripts that will communicate with
this layer. In DBI, this is known as the DBI layer (i.e., we'll
be making DBI calls). In ODBC, one typically communicates with the
ODBC Driver Manager via ODBC API calls.<a name="INDEX-684"></a>
</p>
</li>
</ol>
<p>The beauty of this system is that code written for DBI or ODBC is
extremely portable between different servers from different vendors.
The API calls made are the same, independent of the underlying
database. That's the idea at least, and it holds true for most
database programming. Unfortunately, the sort of code we're
most likely to write (i.e., database administration) is bound to be
server-specific, since virtually no two servers are administered in
even a remotely similar fashion.<a href="#FOOTNOTE-2">[2]</a> Experienced system
administrators love portable solutions, but they don't expect
them.</p>
<blockquote class="footnote">




<a name="FOOTNOTE-2"></a>
<p>[2]MS-SQL was initially
derived from Sybase source code, so it's one of the rare
counter-examples.</p>




</blockquote>





<p>That somber thought aside, let's look at how to use DBI and
ODBC. Both technologies follow the same basic steps, so you may
notice a little redundancy in the explanations, or at least in the
headings.</p>





<p>The next sections assume you've installed a database server and
the necessary Perl modules. For some of our DBI example code,
we're going to use the MySQL server; for ODBC, we'll use
Microsoft's SQL Server.<a name="INDEX-685"></a><a name="INDEX-686"></a><a name="INDEX-687"></a>
</p>





<a name="ch07-_Hlt472703053"></a>
<div class="sidebar">
<h4 class="objtitle">Bridging the Unix-NT/2000 Database Divide</h4>





<p>
<a name="INDEX-688"></a><a name="INDEX-689"></a>A common question asked
by multiplatform system administrators is "How can I talk to my
Microsoft SQL Server from my Unix machine?" If an
environment's central administration or monitoring system is
Unix-based, then a new MS-SQL server installation presents a
challenge. I know of three ways to deal with this situation. Choices
2 and 3 below are not SQL-server-specific, so even if you are not
using Microsoft SQL Server in your environment, you may find these
techniques will come in handy some day.</p>





<ol>
<li>
<p>Build and use <tt class="literal">DBD::Sybase</tt>.
<tt class="literal">DBD::Sybase</tt> will require some underlying database
communication libraries. There are two sets of libraries available
that will fit the bill. The first one,
<a name="INDEX-690"></a><a name="INDEX-691"></a><a name="INDEX-692"></a>Sybase OpenClient libraries, may
be available for your platform (e.g., they ship for free with some
Linux distributions as part of the Sybase Adaptive Server
Enterprise). If your MS-SQL server is Version 6.5 or lower,
<tt class="literal">DBD::Sybase</tt> built with these libraries will work.
If it is 7.0 or higher, you may need to get a compatibility patch
from Microsoft. For information on this patch, see <a href="../../../../../../../support.microsoft.com/support/kb/articles/q239/8/83.asp">http://support.microsoft.com/support/kb/articles/q239/8/83.asp</a>
(KB article Q239883). Your second option is to
<a name="INDEX-693"></a>install
the FreeTDS libraries found at <a href="../../../../../../../www.freetds.org/">http://www.freetds.org</a>. See the instructions
on this site for building the correct protocol version for the server
you will be using.</p>
</li>
<li>
<p>Use <tt class="literal">DBD::Proxy</tt>. There is a DBD module that ships
with DBI called <tt class="literal">DBD::Proxy</tt>. It allows you to run a
small network server on your MS-SQL server machine to transparently
proxy requests from your Unix clients to the server.</p>
</li>
<li>
<p>
<a name="INDEX-694"></a><a name="INDEX-695"></a>Acquire and use Unix ODBC software via
<tt class="literal">DBD::ODBC</tt>. Several vendors, including MERANT
(<a href="../../../../../../../www.merant.com/">http://www.merant.com</a>) and
OpenLink Software (<a href="../../../../../../../www.openlinksw.com/">http://www.openlinksw.com</a>), will sell this to
you or you can attempt to use the work of the various Open Source
developers. For more information, see Brian Jepson's
<em class="emphasis">freeODBC</em> page at <a href="../../../../../../../users.ids.net/~bjepson/freeODBC">http://users.ids.net/~bjepson/freeODBC</a>. You
will need both an ODBC driver for your Unix platform (provided by the
database vendor) and an ODBC manager (such as
<tt class="literal">unixODBC</tt> or <tt class="literal">iODBC</tt>).</p>
</li>
</ol>
</div>

















































































































































































































































<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch06_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch07_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">6.7. References for More Information</td><td align="center" valign="top" width="171"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">7.2. Using the DBI Framework</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="index.htm">
</map>

<!-- END OF BODY -->

</body>
</html>
