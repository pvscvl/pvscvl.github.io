<html>
<head>
<title>Database Logins  (Perl for System Administration)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David N. Blank-Edelman">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1565926099L" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Database Logins">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home">
<map name="banner-map"><AREA SHAPE="RECT" COORDS="0,0,466,71" HREF="index.htm" ALT="Perl for System Administration"><AREA SHAPE="RECT" COORDS="467,0,514,18" HREF="jobjects/fsearch.htm" ALT="Search this book">
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch07_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch07_01.htm">Chapter 7: SQL Database Administration</a></td><td align="right" valign="top" width="172"><a href="ch07_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">7.5. Database Logins</h2>





<p>
<a name="INDEX-749"></a><a name="INDEX-750"></a><a name="INDEX-751"></a>As mentioned before, database
administrators have to deal with some of the same issues system
administrators contend with, like maintaining logins and accounts.
For instance, at my day job we teach database programming classes.
Each student who takes a class gets a login on our Sybase server and
her or his very own (albeit small) database on that server to play
with. Here's a simplified version of the code we use to create
these databases and logins:</p>





<blockquote>
<pre class="programlisting">use DBI;

# USAGE: syaccreate &lt;username&gt;

$admin = 'sa';
print "Enter passwd for $admin: ";
chomp($pw = &lt;STDIN&gt;);
$user=$ARGV[0];

# generate a *bogus* password based on user name reversed 
# and padded to at least 6 chars with dashes
$genpass = reverse join('',reverse split(//,$user));
$genpass .= "-" x (6-length($genpass));

# here's a list of the SQL commands we will execute in order
# we: 1) create the database on the USER_DISK device, 
#        with the log on USER_LOG
#     2) add a login to the server for the user, 
#        making the new database the default
#     3) switch to the newly created database
#     4) change its owner to be this user
@commands = ("create database $user on USER_DISK=5 log on USER_LOG=5",
             "sp_addlogin $user,\"$genpass\",$user",
             "use $user",
             "sp_changedbowner $user");

# connect to the server 
$dbh = DBI-&gt;connect('dbi:Sybase:',$admin,$pw);
die "Unable to connect: $DBI::errstr\n" 
  unless (defined $dbh);

# loop over the command array, execute each command in turn
for (@commands) {
    $dbh-&gt;do($_) or die "Unable to $_: " . $dbh-&gt;errstr . "\n";
}

$dbh-&gt;disconnect;</pre>
</blockquote>





<p>Because this task consists of running a set of commands that
don't return data sets, we can write this as a very compact
loop that just calls <tt class="literal">$dbh-&gt;do( )</tt> repeatedly. We
could use an almost identical script to delete these accounts and
their databases when the class has concluded:</p>





<blockquote>
<pre class="programlisting">use DBI;

# USAGE: syacdelete &lt;username&gt;

$admin = 'sa';
print "Enter passwd for $admin: ";
chomp($pw = &lt;STDIN&gt;);
$user=$ARGV[0];

# here's a list of the SQL commands we will execute in order
# we: drop the user's database
#     drop the user's server login
@commands = ("drop database $user",
            "sp_droplogin $user");

# connect to the server
$dbh = DBI-&gt;connect('dbi:Sybase:',$admin,$pw);
die "Unable to connect: $DBI::errstr\n" 
  unless(defined $dbh);

# loop over the command array, execute each command in turn 
for (@commands) {
    $dbh-&gt;do($_) or die "Unable to $_: " . $dbh-&gt;errstr . "\n";
}

$dbh-&gt;disconnect or
  warn "Unable to disconnect: " . $dbh-&gt;errstr . "\n";</pre>
</blockquote>





<p>There are many login-related functions that can be coded up. Here are
a few ideas:</p>




<dl>
<dt>
<b>Password checker </b>
</dt>
<dd>
<p>Connect to the server and get a listing of databases and logins.
Attempt to connect using weak passwords (login names, blank
passwords, default passwords).</p>
</dd>





<dt>
<b>User mapping </b>
</dt>
<dd>
<p>Generate a listing of which logins can access which databases.</p>
</dd>





<dt>
<b>Password control </b>
</dt>
<dd>
<p>Write a pseudo-password expiration system.<a name="INDEX-752"></a><a name="INDEX-753"></a><a name="INDEX-754"></a>
</p>
</dd>

</dl>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch07_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch07_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">7.4. Server Documentation</td><td align="center" valign="top" width="171"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">7.6. Monitoring Server Health</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="index.htm">
</map>

<!-- END OF BODY -->

</body>
</html>
