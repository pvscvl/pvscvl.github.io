<html><head>
<title>[Chapter 18] 18.3 Controlling Access to Files on Your Server</TITLE>
<meta name="DC.title" content="Practical UNIX &amp; Internet Security"><meta name="DC.creator" content="Simson Garfinkel &amp; Gene Spafford"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:14:39Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-148-8" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch18_01.htm" title="18. WWW Security"><link rel="prev" href="ch18_02.htm#PUIS-CHP-18-SECT-2.2.2" title="18.2 Running a Secure Server"><link rel="next" href="ch18_04.htm#PUIS-CHP-18-SECT-4.2" title="18.4 Avoiding the Risks of Eavesdropping"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Practical UNIX &amp; Internet Security" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Practical UNIX &amp; Internet Security"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch18_02.htm#PUIS-CHP-18-SECT-2.2.2" title="18.2 Running a Secure Server"><img src="../gifs/txtpreva.gif" alt="Previous: 18.2 Running a Secure Server" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 18<br>WWW Security</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch18_04.htm#PUIS-CHP-18-SECT-4.2" title="18.4 Avoiding the Risks of Eavesdropping"><img src="../gifs/txtnexta.gif" alt="Next: 18.4 Avoiding the Risks of Eavesdropping" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PUIS-CHP-18-SECT-3">18.3 Controlling Access to Files on Your Server</A
></H2
><p class="para"><a class="indexterm" name="AUTOID-24962"></A
><a class="indexterm" name="AUTOID-24965"></A
><a class="indexterm" name="AUTOID-24968"></A
><a class="indexterm" name="AUTOID-24971"></A
><a class="indexterm" name="AUTOID-24974"></A
>Many sites are interested in limiting the scope
of the information that they distribute with their Web servers.
This may be because a Web server is used by an organization to distribute
both internal data, such as employee handbooks or phone books, and
external data, such as how to reach the organization's
headquarters by mass transit. To provide for this requirement, many
Web servers have a system for restricting access to Web documents.</P
><div class="sidebar"><h4 class="sidebar"><a class="title" name="AUTOID-24978">The WN Server</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-24981"></A
><a class="indexterm" name="AUTOID-24983"></A
>Most of this chapter
discusses the <span class="acronym">NCSA</SPAN
> and <span class="acronym">CERN</SPAN
>
servers, which are two of the most popular servers in use on the
Internet at this time. A server that appears to offer considerably
more security than these servers is the WN server, developed by
John Franks.</P
><p class="para">The WN server is a Web server designed from the ground up
to provide security and flexibility. The server can perform many
functions, such as banners, footers, and searching, and the selective
retrieval of portions of documents, which can only be performed
on other servers using <span class="acronym">CGI</SPAN
> scripts. The server
is also smaller than the <span class="acronym">NCSA</SPAN
> and <span class="acronym">CERN</SPAN
>
servers, making it easier to validate.</P
><p class="para">Another feature of the WN server is that it will not transfer
any file in any directory unless that file is listed in a special
index file, normally called <i class="firstterm">index.cache</I
>.
The index file also contains the <span class="acronym">MIME</SPAN
> file type
of each file in the directory; thus, WN eliminates the need to give
your Web files extensions, such as <i class="filename">filename.html</I
>
or <i class="filename">picture.jpeg</I
>. Automated tools are provided
for creating these files, if you chose to use them.</P
><p class="para">We do not have significant experience with the WN server,
but its design looks promising. For more information, check <a class="systemitem.url" href="../../../../../../../hopf.math.nwu.edu/docs/manual.html.">http://hopf.math.nwu.edu/docs/manual.html.</A
></P
></DIV
><p class="para">Most servers support two primary techniques for controlling
access to files and directories:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Restricting access to particular <a class="indexterm" name="AUTOID-25003"></A
>
IP addresses, subnets,
or <span class="acronym">DNS</SPAN
> domains.</P
></LI
><li class="listitem"><p class="para">Restricting access to particular <a class="indexterm" name="AUTOID-25009"></A
>
users. Users are authenticated through the use
of a password that is stored on the server.</P
></LI
></OL
><p class="para">Servers that are equipped with the necessary software for
<a class="indexterm" name="AUTOID-25013"></A
><a class="indexterm" name="AUTOID-25015"></A
>
public
key cryptography (usually, servers that are purchased for commercial
purposes) have a third technique for restricting access:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Restricting access to users who present
public keys that are signed by an appropriate certification authority.</P
></LI
></OL
><p class="para">Each of these techniques has advantages and disadvantages.
Restricting to IP address is relatively simple within an organization,
although it leaves you open to attacks based on &quot;IP spoofing.&quot;
Using hostnames, instead of IP addresses, further opens your server
to the risk of <span class="acronym">DNS</SPAN
> spoofing. And usernames and
passwords, unless you use a server and clients that support encryption,
are sent in the clear over the network.</P
><p class="para">Of these three techniques, restricting access to people who
present properly signed certificates is probably the most secure,
provided that you trust your certification authority. (See below.)</P
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-18-SECT-3.1">18.3.1 The access.conf and .htaccess Files</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-25027"></A
><a class="indexterm" name="AUTOID-25029"></A
><a class="indexterm" name="AUTOID-25031"></A
>The
<span class="acronym">NCSA</SPAN
> server allows you to place all of your global
access restrictions in a single file called <i class="filename">conf/access.conf.</I
>
Alternatively, you can place the restrictions in each directory
using the name specified by the <i class="filename">AccessFileName</I
>
in the configuration file <a class="indexterm" name="AUTOID-25038"></A
>
<i class="filename">conf/srm.conf</I
>. The per-directory default
file name is <i class="filename">.htaccess</I
>, but you can change this name if
you wish.</P
><p class="para">Whether you choose to use many access files or a single file
is up to you. It is certainly more convenient to have a file in
each directory. It also makes it easier to move directories within
your Web server, as you do not need to update the master access
control file. Furthermore, you do not need to restart your server
whenever you make a change to the access control list&nbsp;- the
server will notice that there is a new <i class="filename">.htaccess </I
> file,
and behave appropriately.</P
><p class="para">On the other hand, having an access file in each directory
means that there are more files that you need to check to see whether
the directories are protected or not. There is also a bug with some
Web servers that allows the access file to be directly fetched (see
the Note below). As a result, most Web professionals recommend against
per-directory access control files.</P
><p class="para"><a class="indexterm" name="AUTOID-25047"></A
>The
contents of the <i class="filename">access.conf</I
> file looks like <span class="acronym">HTML</SPAN
>.
Accesses for each directory are bracketed with two tags, &lt;Directory<i class="filename"> directoryname</I
>&gt; and &lt;/Directory&gt;.
For example:</P
><blockquote class="screen"><pre class="screen">&lt;Directory /nsa/manual&gt; 
&lt;Limit GET&gt; 
order deny,allow 
deny from all 
allow from .nsa.mil 
&lt;/Limit&gt; 
&lt;/Directory&gt;</PRE
></BLOCKQUOTE
><p class="para">If you are using the per-directory access control, do not
include the &lt;Directory&gt; and &lt;/Directory&gt;
tags. For example:</P
><blockquote class="screen"><pre class="screen">&lt;Limit GET&gt; 
order deny,allow 
deny from all 
allow from .nsa.mil 
&lt;/Limit&gt;</PRE
></BLOCKQUOTE
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> There is a <a class="indexterm" name="AUTOID-25057"></A
><a class="indexterm" name="AUTOID-25060"></A
>
bug
in many Web servers (including the <span class="acronym">NCSA</SPAN
> server)
that allows the <i class="filename">.htaccess </I
>file to be fetched as a <span class="acronym">URL</SPAN
>.
This is bad, because it lets an attacker learn the details of your
authentication system. For this reason, if you do use per-directory
access control files, give them a name other than <i class="filename">.htaccess</I
>
by specifying a different <i class="filename">AccessFileName</I
> in
the <i class="filename">srm.conf</I
> file, as shown below:</P
></BLOCKQUOTE
><blockquote class="screen"><pre class="screen"># AccessFileName: The name of the file to look for in each directory
# for access control information.

AccessFileName .ap</PRE
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-18-SECT-3.2">18.3.2 Commands Within the &lt;Directory&gt;
Block</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-25073"></A
><a class="indexterm" name="AUTOID-25075"></A
>As the above examples illustrate, a number of
commands are allowed within the &lt;Directory&gt; blocks.
The commands that are useful for restricting access[2]
are:</P
><blockquote class="footnote"><p class="para">[2] Other
commands that can be inserted within a &lt;Directory&gt;
block can be found in NCSA's online documentation at <a class="systemitem.url" href="../../../../../../../hoohoo.ncsa.uiuc.edu/docs/setup/access/Overview.html.">http://hoohoo.ncsa.uiuc.edu/docs/setup/access/Overview.html.</A
></P
></BLOCKQUOTE
><dl class="variablelist"><dt class="term">Options <i class="filename">opt1 opt2 opt3</I
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-25086"></A
><a class="indexterm" name="AUTOID-25088"></A
><a class="indexterm" name="AUTOID-25091"></A
><a class="indexterm" name="AUTOID-25093"></A
><a class="indexterm" name="AUTOID-25095"></A
>Use the <kbd class="command">Options</KBD
> command for turning on
or off individual options within a particular directory. Options
available are <a class="indexterm" name="AUTOID-25099"></A
>
FollowSymLinks
(follows symbolic links), <a class="indexterm" name="AUTOID-25101"></A
>
SymLinksIfOwnerMatch
(follows symbolic links if the owner of the link's target
is the same as the owner of the link), <a class="indexterm" name="AUTOID-25103"></A
>
ExecCGI
(turns on execution of <span class="acronym">CGI</SPAN
> scripts), <a class="indexterm" name="AUTOID-25106"></A
><a class="indexterm" name="AUTOID-25108"></A
>
Includes
(turns on server-side includes), Index (allows the server to respond
to requests to generate a file list for the directory), and <a class="indexterm" name="AUTOID-25111"></A
>
IncludesNoExec (enables server-side includes,
but disables <span class="acronym">CGI</SPAN
> scripts in the includes.)</P
></DD
><dt class="term"><a class="indexterm" name="AUTOID-25116"></A
>AllowOverride
<i class="filename">what</I
></DT
><dd class="listitem"><p class="para">Specifies which directives can be overridden with
directory-based access files.</P
></DD
><dt class="term"><a class="indexterm" name="AUTOID-25123"></A
>AuthRealm
<i class="filename">realm</I
></DT
><dd class="listitem"><p class="para">Sets the name of the Authorization Realm for the
directory. The name of the realm is displayed by the Web browser
when it asks for a username and password.</P
></DD
><dt class="term"><a class="indexterm" name="AUTOID-25130"></A
>AuthType
<i class="filename">type</I
></DT
><dd class="listitem"><p class="para">Specifies the type of authentication used by the
server. When this book was written, <span class="acronym">NCSA</SPAN
>'s
<kbd class="command">httpd</KBD
> only supported the Basic authentication system (usernames
and passwords.)</P
></DD
><dt class="term"><a class="indexterm" name="AUTOID-25139"></A
><a class="indexterm" name="AUTOID-25141"></A
><a class="indexterm" name="AUTOID-25144"></A
>AuthUserFile <i class="filename">absolute_pathname</I
></DT
><dd class="listitem"><p class="para">Specifies the pathname of the <kbd class="command">httpd</KBD
> password file.
This password file is created and maintained with the <span class="acronym">NCSA</SPAN
>
<kbd class="command">htpasswd</KBD
> program. This password file is not stored in the same format
as <i class="filename">/etc/passwd.</I
> The format is described in the
section called &quot;Setting up Web Users and Passwords&quot;
later in this chapter.</P
></DD
><dt class="term"><a class="indexterm" name="AUTOID-25156"></A
><a class="indexterm" name="AUTOID-25158"></A
>AuthGroupFile <i class="filename">absolute_pathname</I
></DT
><dd class="listitem"><p class="para">This specifies the pathname of the <kbd class="command">httpd</KBD
> group file.
This group file is a regular text file. It is not in the format
of the <span class="acronym">UNIX</SPAN
> <i class="filename">/etc/group</I
> file.
Instead, each line begins with a group name and a colon, and then
lists the members, separating each member with a space. For example:</P
></DD
></DL
><blockquote class="screen"><pre class="screen">		stooges: larry moe curley</PRE
></BLOCKQUOTE
><dl class="variablelist"><dt class="term"><a class="indexterm" name="AUTOID-25171"></A
>Limit
<i class="filename">methods to limit</I
></DT
><dd class="listitem"><p class="para">Begins a section that lists the limitations on the
directory. In Version 1.42, this command can only be used to limit
the <span class="acronym">GET</SPAN
> and <span class="acronym">POST</SPAN
> directives.
Within the Limit section, you may have the following directives:</P
></DD
></DL
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Directive Usage</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Meaning</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">order ord</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Specifies the order in which allow and
deny statements should be checked.

Specify
&quot;deny,allow&quot; to check the deny entries first;
servers that match both the &quot;deny&quot; and &quot;allow&quot;
lists are allowed.

Specify &quot;allow,deny&quot;
to check the allow entries first; servers that match both are denied.

Specify &quot;mutual-failure&quot;
to cause hosts on the allow list to be allowed, those on the deny
list to be denied, and all others to be denied.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">allow from <i class="filename">host1 host2</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Specifies hosts that are allowed access.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">deny from <i class="filename">host1 host2</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Specifies hosts that should be denied
access.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">require user<i class="filename"> user1 user2 user3</I
>... require
group <i class="filename">group1 group2</I
>... require valid-user</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Specifies that access should be granted
to a specific user or group. If &quot;valid-user&quot; is
specified, then any user that appears in the user file will be allowed.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">Hosts in the allow and deny statements may be any of the following:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">A domain name, such as <i class="systemitem">.vineyard.net</I
>.</P
></LI
><li class="listitem"><p class="para">A fully qualified host name, such as <i class="systemitem">nc.vineyard.net</I
>.</P
></LI
><li class="listitem"><p class="para">An IP address, such as 204.17.195.100.</P
></LI
><li class="listitem"><p class="para">A partial IP address, such as 204.17.195, which
matches any host on the subnet.</P
></LI
><li class="listitem"><p class="para">The keyword &quot;all,&quot; which matches
all hosts.</P
></LI
></UL
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-18-SECT-3.2.1">18.3.2.1 <i class="systemitem">Examples</I
></A
></H4
><p class="para">For example, if you wish to restrict access to a directory's
files to everyone on the subnet 204.17.195.*, you could
add the following lines to your <i class="filename">access.conf</I
> file:</P
><blockquote class="screen"><pre class="screen">&lt;Directory /usr/local/etc/httpd/htdocs/special&gt;
&lt;Limit GET POST&gt; 
order deny,allow 
deny from all 
allow from 204.17.195 
&lt;/Limit&gt; 
&lt;/Directory&gt;</PRE
></BLOCKQUOTE
><p class="para">If you then wanted to allow only the authenticated users <i class="systemitem">beth</I
> and <i class="systemitem">simson</I
> to access the files,
and only when they are on subnet 204.17.195, you could add these
lines:</P
><blockquote class="screen"><pre class="screen">AuthType Basic 
AuthName The-T-Directory 
AuthUserFile /tmp/auth 
&lt;Limit GET POST&gt; 
order deny,allow 
deny from all 
allow from 204.17.195 
require user simson beth 
&lt;/Limit&gt;</PRE
></BLOCKQUOTE
><p class="para">Of course, the first three lines could as easily go in the
server's <i class="filename">access.conf</I
> file.</P
><p class="para">If you wish to allow the users <i class="systemitem">beth</I
>
and <i class="systemitem">simson</I
> to access
the files from anywhere on the Internet, provided that they type
the correct username and password, try this:</P
><blockquote class="screen"><pre class="screen">AuthType Basic 
AuthName The-T-Directory 
AuthUserFile /tmp/auth 
&lt;Limit GET POST&gt; 
require user simson beth 
&lt;/Limit&gt; <a class="indexterm" name="AUTOID-25241"></A
></PRE
></BLOCKQUOTE
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-18-SECT-3.3">18.3.3 Setting Up Web Users and Passwords</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-25246"></A
><a class="indexterm" name="AUTOID-25249"></A
><a class="indexterm" name="AUTOID-25252"></A
><a class="indexterm" name="AUTOID-25255"></A
><a class="indexterm" name="AUTOID-25258"></A
>To use authenticated users,
you will need to create a password file. You can do this with the
<kbd class="command">htpasswd</KBD
> program, using the <i class="filename">-c </I
>option to create
the file. For example:</P
><blockquote class="screen"><pre class="screen"># <b class="emphasis.bold">./htpasswd -c /usr/local/etc/httpd/pw/auth simsong</B
>
Adding password for simsong.
New password:<i class="systemitem.password">foo1234</I
>
Re-type new password:<i class="systemitem.password">foo1234</I
>
# </PRE
></BLOCKQUOTE
><p class="para">You can add additional users and passwords with the <kbd class="command">htpasswd</KBD
>
program. When you add additional users, do <em class="emphasis">not</EM
>
use the <kbd class="command">-c</KBD
> option, or you will erase all of the users who are currently
in the file:</P
><blockquote class="screen"><pre class="screen"># <b class="emphasis.bold">./htpasswd /usr/local/etc/httpd/pw/auth beth</B
>
Adding password for beth.
New password:<i class="systemitem.password">luvsim</I
>
Re-type new password:<i class="systemitem.password">luvsim</I
>
# </PRE
></BLOCKQUOTE
><p class="para">The password file is similar, but not identical, to the standard
<i class="filename">/etc/passwd</I
> file:</P
><blockquote class="screen"><pre class="screen"># cat /usr/local/etc/httpd/pw/auth
simsong:ZdZ2f8MOeVcNY
beth:ukJTIFYWHKwtA
#</PRE
></BLOCKQUOTE
><p class="para">Because the Web server uses <a class="indexterm" name="AUTOID-25278"></A
><a class="indexterm" name="AUTOID-25280"></A
>
<kbd class="command">crypt ( )</KBD
>-style passwords,
it is important that the password file be inaccessible to normal
users on the server (and to users over the Web) to prevent an ambitious
attacker from trying to guess passwords using a program such as
<i class="filename">Crack</I
>.<a class="indexterm" name="AUTOID-25284"></A
><a class="indexterm" name="AUTOID-25287"></A
><a class="indexterm" name="AUTOID-25290"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch18_02.htm#PUIS-CHP-18-SECT-2.2.2" title="18.2 Running a Secure Server"><img src="../gifs/txtpreva.gif" alt="Previous: 18.2 Running a Secure Server" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Practical UNIX &amp; Internet Security"><img src="../gifs/txthome.gif" alt="Practical UNIX &amp; Internet Security" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch18_04.htm#PUIS-CHP-18-SECT-4.2" title="18.4 Avoiding the Risks of Eavesdropping"><img src="../gifs/txtnexta.gif" alt="Next: 18.4 Avoiding the Risks of Eavesdropping" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">18.2 Running a Secure Server</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">18.4 Avoiding the Risks of Eavesdropping</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
