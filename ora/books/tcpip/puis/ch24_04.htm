<html><head>
<title>[Chapter 24] 24.4 Cleaning Up After the Intruder</TITLE>
<meta name="DC.title" content="Practical UNIX &amp; Internet Security"><meta name="DC.creator" content="Simson Garfinkel &amp; Gene Spafford"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:19:08Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-148-8" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch24_01.htm" title="24. Discovering a  Break-in"><link rel="prev" href="ch24_03.htm" title="24.3 The Log Files: Discovering an Intruder's Tracks"><link rel="next" href="ch24_05.htm#PUIS-CHP-24-SECT-5.1" title="24.5 An Example"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Practical UNIX &amp; Internet Security" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Practical UNIX &amp; Internet Security"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch24_03.htm" title="24.3 The Log Files: Discovering an Intruder's Tracks"><img src="../gifs/txtpreva.gif" alt="Previous: 24.3 The Log Files: Discovering an Intruder's Tracks" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 24<br>Discovering a  Break-in</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch24_05.htm#PUIS-CHP-24-SECT-5.1" title="24.5 An Example"><img src="../gifs/txtnexta.gif" alt="Next: 24.5 An Example" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PUIS-CHP-24-SECT-4">24.4 Cleaning Up After the Intruder</A
></H2
><p class="para">If your intruder gained superuser access, or access to another
privileged account such as <kbd class="command">uucp</KBD
>, he may have modified your system
to make it easier for him to break in again in the future. In particular,
your intruder may have:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Created a new account</P
></LI
><li class="listitem"><p class="para">Changed the password on an existing account</P
></LI
><li class="listitem"><p class="para">Changed the protections on certain files or devices</P
></LI
><li class="listitem"><p class="para">Created <span class="acronym">SUID</SPAN
> or <span class="acronym">SGID</SPAN
>
programs</P
></LI
><li class="listitem"><p class="para">Replaced or modified system programs</P
></LI
><li class="listitem"><p class="para">Installed a special alias in the mail system to
run a program</P
></LI
><li class="listitem"><p class="para">Added new features to your news or <span class="acronym">UUCP</SPAN
>
system</P
></LI
><li class="listitem"><p class="para">Installed a password sniffer</P
></LI
><li class="listitem"><p class="para">Stolen the password file for later cracking</P
></LI
></UL
><p class="para">If the intruder committed either of the last two misdeeds,
he'll now have access to a legitimate account and will
be able to get back in no matter what other precautions are taken.
You'll have to change all of the passwords on the system.</P
><p class="para">After a successful break-in, you must perform a careful audit
to determine the extent of the damage. Depending on the nature of
the break-in, you'll have to examine your entire system.
You may need to also examine other systems on your local net, or
possibly the entire network (including routers and other network
devices).</P
><p class="para">Note that <span class="acronym">COPS</SPAN
> and Tiger are helpful recovery
tools, as are many commercial security toolkits, especially because
they provide an automatic check of the suggestions we make in this
chapter. Remember, though, that they too could be compromised, so
fetch a new copy and work from there. <span class="acronym">COPS</SPAN
> and
Tiger assume the integrity of system executables, such as <kbd class="command">ls</KBD
> and
<i class="filename">find.</I
> We think they are best used in conjunction
with an integrity checker such as Tripwire. (See <a class="xref" href="appe_01.htm" title="Electronic Resources">Appendix E, <cite class="appendix">Electronic Resources</CITE
></A
>
for how to obtain all of these packages.)</P
><p class="para">The remainder of this chapter discusses in detail how to find
out what an intruder may have done and how you should clean up afterwards.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-24-SECT-4.1">24.4.1 New Accounts</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-33738"></A
><a class="indexterm" name="AUTOID-33741"></A
><a class="indexterm" name="AUTOID-33745"></A
><a class="indexterm" name="AUTOID-33747"></A
>After a break-in, scan the <i class="filename">/etc/passwd</I
>
file for newly created accounts. If you have made a backup copy
of <i class="filename">/etc/passwd</I
>, use diff to compare the two files.
But don't let the automated check be a substitute for going
through the <i class="filename">/etc/passwd</I
> file by hand, because
the intruder might have also modified your copy of the file or the
<i class="filename">diff </I
>program. (This is the reason it is advantageous
to keep a second copy of the <i class="filename">/etc/passwd</I
> file
and all of your comparison tools on removable media like a floppy
disk.)</P
><p class="para">Delete any accounts that have been created by an intruder.
You may wish to make a paper record of an account, before deleting
it in case you wish to prosecute the intruder (assuming that you
ever find the villain).</P
><p class="para">Also, be sure to check that every line of the <i class="filename">/etc/passwd</I
>
file is in the proper format, and that no <span class="acronym">UID</SPAN
>
or password fields have been changed to unauthorized values. Remember,
simply adding an extra colon to the <i class="filename">/etc/passwd</I
>
entry for root can do the same amount of damage as removing the
superuser's password entirely!</P
><p class="para">The following <kbd class="command">awk</KBD
> command will print <i class="filename">/etc/passwd</I
>
entries that do not have seven fields, that specify the superuser,
or that do not have a password:</P
><blockquote class="screen"><pre class="screen"># <b class="emphasis.bold">cat-passwd | awk -F: 'NF != 7 || $3 == 0 || $2 == &quot;&quot; { print $1 &quot; &quot; $2 &quot; &quot; $3}'</B
> 
root xq7Xm0Tv 0 
johnson f3V6Wv/u 0 
sidney 104 
#</PRE
></BLOCKQUOTE
><p class="para">This <kbd class="command">awk</KBD
> command sets the field separator to the colon (:),
which matches the format of the <i class="filename">/etc/passwd</I
> file.
The <kbd class="command">awk</KBD
> command then prints out the first three fields (username,
password, and <span class="acronym">UID</SPAN
>) of any line in the <i class="filename">/etc/passwd</I
>
file that does not have seven fields, has a <span class="acronym">UID</SPAN
>
of 0, or has no password.</P
><p class="para">In this example, the user <i class="systemitem.username">johnson</I
> has had her <span class="acronym">UID</SPAN
>
changed to 0, making her account an alias for the superuser, and
the user <b class="emphasis.bold">sidney</B
> has had his password removed.</P
><p class="para">This automated check is much more reliable than a visual inspection,
but make sure that the script that you use to run this automated
check hasn't been corrupted by an attacker. One approach
is to type the <kbd class="command">awk</KBD
> command each time you use it instead of embedding
it in a shell script.[3]</P
><blockquote class="footnote"><p class="para">[3] Or use Tripwire.</P
></BLOCKQUOTE
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-24-SECT-4.1.1">24.4.1.1 Changes in file contents</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-33783"></A
>An intruder
who gains superuser privileges can change any file on your system.
Although you should make a thorough inventory of your computer's
entire filesystem, you should look specifically for any changes
to the system that affect security. For example, an intruder may
have inserted trap doors or logic bombs to do damage at a later
point in time.</P
><p class="para">One way to easily locate changes to system programs is to
use the checklists described in <a class="xref" href="ch05_01.htm" title="The UNIX Filesystem">Chapter 5, <cite class="chapter">The UNIX Filesystem</CITE
></A
>.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-24-SECT-4.1.2">24.4.1.2 Changes in file and directory protections</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-33791"></A
><a class="indexterm" name="AUTOID-33794"></A
>After a break-in, review the protection
of every critical file on your system. Intruders who gain superuser
privileges may change the protections of critical files to make
it easier for them to regain superuser access in the future. For
example, an intruder might have changed the mode of the <i class="filename">/bin</I
>
directory to 777 to make it easier to modify system software in
the future, or altered the protections on <i class="filename">/dev/kmem</I
>
so as to be able to modify system calls directly using a symbolic
debugger.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-24-SECT-4.1.3">24.4.1.3 New SUID and SGID files</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-33802"></A
>Computer
crackers who gain superuser access frequently create <span class="acronym">SUID</SPAN
>
and <span class="acronym">SGID</SPAN
> files. After a break-in, scan your system
to make sure that new <span class="acronym">SUID</SPAN
> files have not been
created. See the section <a class="xref" href="ch05_05.htm#PUIS-CHP-5-SECT-5.3.2" title="SUID">Section 5.5, "SUID"</A
> for information about how to do
this.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-24-SECT-4.1.4">24.4.1.4 Changes in .rhosts files</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-33812"></A
>An intruder may have created new <i class="filename">.rhosts</I
>
files in your users' home directories, or may have modified
existing <i class="filename">.rhosts</I
> files. (The <i class="filename">.rhosts</I
> file allows other users on
the network to log into your account without providing a password.
For more information, see <a class="xref" href="ch16_01.htm" title="TCP/IP Networks">Chapter 16</A
>.) After
a break-in, tell your users to check their <i class="filename">.rhosts</I
> files to make
sure that none of these files have been modified.</P
><p class="para">Chapter&nbsp;16 also contains a shell script that you
can use to get a list of every <i class="filename">.rhosts</I
> file on the system. After
a break-in, you may wish to delete every <i class="filename">.rhosts</I
> file rather than
take the chance that a file modified by the attacker won't
be caught by the account's rightful owner. After all, the
<i class="filename">.rhosts</I
> file is simply a convenience, and your legitimate users
can recreate their <i class="filename">.rhosts</I
> files as necessary.[4]</P
><blockquote class="footnote"><p class="para">[4] At
some sites, this may be a drastic measure, and might make some of
your users very angry, so think it over carefully before taking
this step. Alternatively, you could rename each <i class="filename">.rhosts</I
>
file to <i class="filename">rhosts.old</I
> so that the file will not
be used, and so that your users do not need to retype the entire
file's contents.</P
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-24-SECT-4.1.5">24.4.1.5 Changes to the <a class="indexterm" name="AUTOID-33831"></A
>
<i class="filename">/etc/hosts.equiv</I
>
file</A
></H4
><p class="para">An intruder may have added more machines to your <i class="filename">/etc/hosts.equiv</I
>
file, so be sure to check for changes to this file. Also, check
your <i class="filename">/etc/netgroups</I
> and <i class="filename">/etc/exports</I
>
files (or equivalent) if you are running <span class="acronym">NIS</SPAN
>
or <span class="acronym">NFS</SPAN
>.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-24-SECT-4.1.6">24.4.1.6 Changes to startup files</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-33843"></A
><a class="indexterm" name="AUTOID-33846"></A
><a class="indexterm" name="AUTOID-33848"></A
><a class="indexterm" name="AUTOID-33850"></A
>An
intruder may have modified the contents of dot (.) files in your
users' home directories. Instruct all of your users to
check these files and report anything suspicious. You can force
your users to check the files by renaming them to names like <i class="filename">login.old</I
>,
<i class="filename">cshrc.old</I
>, and <i class="filename">profile.old</I
>. Be sure to check the versions of those
files belonging to the root user, and also check the <a class="indexterm" name="AUTOID-33855"></A
><a class="indexterm" name="AUTOID-33858"></A
>
<i class="filename">/etc/profile</I
>
file.</P
><p class="para">If you are using <a class="indexterm" name="AUTOID-33862"></A
><a class="indexterm" name="AUTOID-33865"></A
>
<kbd class="command">sendmail</KBD
>,
the attacker may have created or modified the <i class="filename">.forward</I
> files so
that they run programs when mail is received. This aspect is especially
critical on nonuser accounts such as <kbd class="command">ftp</KBD
> and <kbd class="command">uucp</KBD
>.</P
><p class="para">If you know the precise time that the intruder was logged
in, you can list all of the dot files in users' home directories,
sort the list by time of day, and then check them for changes. A
simple shell script to use is shown below:</P
><blockquote class="screen"><pre class="screen">#!/bin/ksh  
# Search for .files in home directories  
for user in $(cat-passwd | /bin/awk -F: &quot;length($6) &gt; 0 {print $6}&quot;) 
do  
&nbsp;&nbsp;&nbsp; for name in $user/.* 
&nbsp;&nbsp;&nbsp; do
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [[ $name == $user/.. ]] &amp;&amp; continue
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [[ -f $name ]] &amp;&amp; print &quot;$name&quot;
&nbsp;&nbsp;&nbsp; done 
done | xargs ls -ltd </PRE
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-33874"></A
><a class="indexterm" name="AUTOID-33877"></A
><a class="indexterm" name="AUTOID-33880"></A
>However, using timestamps
may not detect all modifications, as discussed at the end of this
chapter. The <kbd class="command">-c</KBD
> and <kbd class="command">-l</KBD
> options to the <kbd class="command">ls</KBD
> command
should be used to also check for modifications to permission settings,
and to determine if the mtime was altered to hide a modification.</P
><p class="para">Another approach is to sweep the entire filesystem with the<i class="filename">find </I
> command and observe what files and directories were
accessed around the time of the intrusion. This may give you some
clues as to what was done. For instance, if your compiler, loader,
and libraries all show access times within a few seconds of each
other, you can conclude that the intruder compiled something.</P
><p class="para">If you decide to take this approach, we suggest that you first
remount all your filesystems as read-only so that your examinations
don't alter the saved filesystem dates and times.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-24-SECT-4.1.7">24.4.1.7 Hidden files and directories</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-33891"></A
><a class="indexterm" name="AUTOID-33894"></A
><a class="indexterm" name="AUTOID-33897"></A
>The intruder may have created a &quot;hidden
directory&quot; on your computer, and be using it as a repository
for stolen information or for programs that break security.</P
><p class="para">On older <span class="acronym">UNIX</SPAN
> systems, one common trick
for creating a hidden directory was to unlink (as <i class="filename">root</I
>) the &quot;..&quot;
directory in a subdirectory and then create a new one. The contents
of such a hidden directory are overlooked by programs such as <kbd class="command">find</KBD
>
that search the filesystem for special files. Modern versions of
<span class="acronym">UNIX</SPAN
>, however, detect such hidden directories
as inconsistencies when you run the <a class="indexterm" name="AUTOID-33905"></A
><a class="indexterm" name="AUTOID-33908"></A
>
<i class="filename">/etc/fsck</I
>
program. For this reason, be sure to run <kbd class="command">fsck</KBD
> on each filesystem
as part of your routine security monitoring.</P
><p class="para">On some HP-UX systems, intruders have stored their tools and
files in a <a class="indexterm" name="AUTOID-33913"></A
><a class="indexterm" name="AUTOID-33915"></A
><a class="indexterm" name="AUTOID-33918"></A
><a class="indexterm" name="AUTOID-33921"></A
><a class="indexterm" name="AUTOID-33923"></A
><a class="indexterm" name="AUTOID-33926"></A
>
<span class="acronym">CDF</SPAN
>
(Context Dependent File) directory. On these systems, be sure to
use the <kbd class="command">-H</KBD
> option to <kbd class="command">find</KBD
> and <kbd class="command">ls</KBD
> when you are looking for files
that are out of place.</P
><p class="para">Nowadays, intruders often hide their files in directories
with names that are a little difficult to discover or enter on the
command line. This way, a novice system administrator who discovers
the hidden directory will be unlikely to figure out how to access
its contents. Filenames that are difficult to discover or enter
include &quot;..&quot; (dot dot space), control characters,
backspaces, or other special characters.</P
><p class="para">You can often discover hidden directories easily because they
cause results that differ from those of normal directories. For
example:</P
><blockquote class="screen"><pre class="screen">prose% <b class="emphasis.bold">ls -l </B
>
drwxr-xr-x 1 orpheus 1024 Jul 17 11:55 foobar 
prose% <b class="emphasis.bold">cd foobar </B
>
foobar: No such file or directory 
prose%</PRE
></BLOCKQUOTE
><p class="para">In this case, the real name of the directory is <i class="filename">foobar</I
>, with
a space following the letter <i class="filename">r</I
>. The easy way of entering filenames
like this one is to use the shell's wildcard capability:
The wildcard <i class="filename">*ob*</I
> will match the directory <i class="filename">foobar</I
>,
no matter how many spaces or other characters it has in it, as long
the letters <i class="filename">o</I
> and <i class="filename">b</I
> are adjacent.</P
><blockquote class="screen"><pre class="screen">prose% <b class="emphasis.bold">ls -l </B
>
drwxr-xr-x 1 orpheus 1024 Jul 17 11:55 foobar 
prose% <b class="emphasis.bold">cd *ob* prose%</B
></PRE
></BLOCKQUOTE
><p class="para">If you suspect that a filename has embedded control characters,
you can use the <a class="indexterm" name="AUTOID-33949"></A
>
<kbd class="command">cat
-v</KBD
> command to determine what they are. For example:</P
><blockquote class="screen"><pre class="screen">% <b class="emphasis.bold">ls -l </B
>
total 1 
-rw-r--r-- 1 john 21 Mar 10 23:38 bogus?file 
% <b class="emphasis.bold">echo * | cat -v </B
>
bogus^Yfile 
%</PRE
></BLOCKQUOTE
><p class="para">In this example, the file <i class="filename">bogus?file</I
> actually has a <span class="acronym">CTRL</SPAN
>-Y
character between the letters &quot;<i class="filename">bogus</I
>&quot; and the
letters <i class="filename">&quot;file&quot;</I
>. Some versions of the <kbd class="command">ls</KBD
> command
print control characters as question marks (?). To see what the
control character actually was, however, you must send the raw filename
to the <kbd class="command">cat</KBD
> command, which is accomplished with the shell <kbd class="command">echo</KBD
>.</P
><p class="para"><a class="indexterm" name="AUTOID-33965"></A
><a class="indexterm" name="AUTOID-33967"></A
>If you
are using the 93 version of the Korn shell, you can also list all
the files in the local directory in a readable manner. This approach
works even when your ls command has been replaced with an altered
version:</P
><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">printf $'entry: %'' .* * </B
>
entry: . 
entry: .. 
entry: $'..\n' 
entry: $'bogus\031file' 
entry: temp0001 entry: temp0002 $</PRE
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-24-SECT-4.1.8">24.4.1.8 Unowned files</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-33974"></A
><a class="indexterm" name="AUTOID-33976"></A
><a class="indexterm" name="AUTOID-33979"></A
><a class="indexterm" name="AUTOID-33982"></A
>Sometimes attackers leave files in the
filesystem that are not owned by any user or group&nbsp;- that
is, the files have a <span class="acronym">UID</SPAN
> or <span class="acronym">GID</SPAN
>
that does not correspond to any entries in the <i class="filename">/etc/passwd</I
>
and <i class="filename">/etc/group</I
> files. This can happen if the attacker
created an account and some files, and then deleted the account&nbsp;- leaving
the files. Alternatively, the attacker might have been modifying
the raw inodes on a disk and changed a <span class="acronym">UID</SPAN
> by
accident.</P
><p class="para">You can search for these files with the <kbd class="command">find</KBD
> command, as shown
in the following example:</P
><blockquote class="screen"><pre class="screen"><b class="emphasis.bold"># find / -nouser -o -nogroup -print</B
></PRE
></BLOCKQUOTE
><p class="para">Remember, if you are using <span class="acronym">NFS</SPAN
>, you should
instead run the following <kbd class="command">find</KBD
> command on each server:</P
><blockquote class="screen"><pre class="screen"><b class="emphasis.bold"># find / \( -local -o -prune \) -nouser -o -nogroup -print</B
></PRE
></BLOCKQUOTE
><p class="para">You might also notice unowned files on your system if you
delete a user from the <i class="filename">/etc/passwd</I
> file but leave
a few of that user's files on the system. It is a good
idea to scan for unowned files on a regular basis, copy them to
tape (in case they're ever needed), and then delete them
from your system.</P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch24_03.htm" title="24.3 The Log Files: Discovering an Intruder's Tracks"><img src="../gifs/txtpreva.gif" alt="Previous: 24.3 The Log Files: Discovering an Intruder's Tracks" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Practical UNIX &amp; Internet Security"><img src="../gifs/txthome.gif" alt="Practical UNIX &amp; Internet Security" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch24_05.htm#PUIS-CHP-24-SECT-5.1" title="24.5 An Example"><img src="../gifs/txtnexta.gif" alt="Next: 24.5 An Example" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">24.3 The Log Files: Discovering an Intruder's Tracks</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">24.5 An Example</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
