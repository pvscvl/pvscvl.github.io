<html><head>
<title>[Chapter 16] 16.3 IP Security</TITLE>
<meta name="DC.title" content="Practical UNIX &amp; Internet Security"><meta name="DC.creator" content="Simson Garfinkel &amp; Gene Spafford"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:12:37Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-148-8" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch16_01.htm" title="16. TCP/IP Networks"><link rel="prev" href="ch16_02.htm#PUIS-CHP-16-SECT-2.4.1" title="16.2 IPv4: The Internet Protocol Version 4"><link rel="next" href="ch16_04.htm#PUIS-CHP-16-SECT-4.3" title="16.4 Other Network Protocols"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Practical UNIX &amp; Internet Security" usemap="#srchmap" border="0"></H1
><map name="sindex.htmlrchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Practical UNIX &amp; Internet Security"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch16_02.htm#PUIS-CHP-16-SECT-2.4.1" title="16.2 IPv4: The Internet Protocol Version 4"><img src="../gifs/txtpreva.gif" alt="Previous: 16.2 IPv4: The Internet Protocol Version 4" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 16<br>TCP/IP Networks</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch16_04.htm#PUIS-CHP-16-SECT-4.3" title="16.4 Other Network Protocols"><img src="../gifs/txtnexta.gif" alt="Next: 16.4 Other Network Protocols" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PUIS-CHP-16-SECT-3">16.3 IP Security</A
></H2
><p class="para"><a class="indexterm" name="AUTOID-21088"></A
><a class="indexterm" name="AUTOID-21090"></A
>Throughout the 1980s, computers
on the Internet were subject to many individual attacks. The solution
to these attacks was relatively simple: encourage users to choose
good passwords, prevent users from sharing accounts with each other,
and eliminate security holes in programs such as sendmail and login
as holes were discovered.</P
><p class="para">In the 1990s, the actual infrastructure
of the Internet has come under attack:</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-21097"></A
><a class="indexterm" name="AUTOID-21100"></A
><i class="firstterm">Network sniffers</I
> have captured passwords and other sensitive pieces of information
passing through the network as they are transmitted.</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-21106"></A
><a class="indexterm" name="AUTOID-21108"></A
><a class="indexterm" name="AUTOID-21110"></A
><i class="firstterm">IP spoofing attacks</I
> have been used by attackers to break into hosts
on the Internet.</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-21116"></A
><i class="firstterm">Connection
hijacking</I
> has been used by attackers to seize control of existing
interactive sessions (e.g., telnet).</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">Data spoofing</EM
> has been used by attackers
of a rogue computer on a network to insert data into
an ongoing communication between two other hosts. Data spoofing
has been demonstrated as an effective means of compromising the
integrity of programs executed over the network from <span class="acronym">NFS</SPAN
>
servers.</P
></LI
></UL
><p class="para">Many of these attacks
were anticipated more than ten years ago. Yet the IP protocols and
the Internet itself are not well protected against them. There are
several reasons for this apparent failure:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">IP was designed for use in a hostile
environment, but its designers did not thoroughly appreciate how
hostile the network itself might one day become.</P
><p class="para">IP
was designed to allow computers to continue communicating after
some communications lines had been cut. The concept is the genesis
of packet communications: by using packets, you can route communications
around points of failure. But the IP designers appear to have not
anticipated wide-scale covert attacks from legitimate users. As
a result, while IP is quite resilient when subjected to hardware
failure, it is less resistant to purposeful attack.</P
></LI
><li class="listitem"><p class="para">IP was not designed to provide security.</P
><p class="para">IP
was designed to transmit packets from one computer to another. It
was not designed to provide a system for authenticating hosts, or
for allowing users to send communications on the network in absolute
secrecy. For these purposes, IP's creators assumed that
other techniques would be used.</P
></LI
><li class="listitem"><p class="para">IP is an evolving protocol.</P
><p class="para">IP is always
improving. Future versions of IP may provide greater degrees of
network security. However, IP is still, in many senses, an experimental
protocol. It is being employed for uses for which it was never designed.</P
></LI
></UL
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-16-SECT-3.1">16.3.1 Link-level Security</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-21138"></A
><a class="indexterm" name="AUTOID-21141"></A
><a class="indexterm" name="AUTOID-21144"></A
><a class="indexterm" name="AUTOID-21147"></A
>IP is designed to get packets from one computer
to another computer; the protocol makes no promise as to whether
or not other computers on the same network will be able to intercept
and read those packets in real time. Such interception is called
<a class="indexterm" name="AUTOID-21150"></A
>
<em class="emphasis">eavesdropping</EM
> or <a class="indexterm" name="AUTOID-21153"></A
><a class="indexterm" name="AUTOID-21155"></A
><a class="indexterm" name="AUTOID-21158"></A
>
<em class="emphasis">packet sniffing.</EM
></P
><p class="para">Different ways of transmitting packets have different susceptibility
to eavesdropping. The following table lists several different ways
of sending packets and notes the eavesdropping potential.</P
><table class="table"><caption class="table"><a class="title" name="PUIS-CHP-16-TAB-4">Table 16.4: Eavesdropping Potential for Different Data Links</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Data link</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Potential for Eavesdropping</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Comments</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Ethernet</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">High</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ethernet is a broadcast network. Most
incidents of packet sniffing that have plagued the Internet have
been the result of packet-sniffing programs running on a computer
that shares an Ethernet with a gateway or router.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">FDDI
Token-ring</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">High</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Although ring networks are not inherently
broadcast, in practice all packets that are transmitted on the ring
pass through, on average, one-half of the interfaces that are on
the network. High data rates make sniffing somewhat challenging.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Telephone lines</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Medium</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Telephones can be wiretapped by someone
who has the cooperation of the telephone company or who has physical
access to telephone lines. Calls that traverse microwave links can
also be intercepted. In practice, high-speed modems are more difficult
to wiretap than low-speed modems because of the many frequencies
involved.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">IP over cable TV</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">High</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Most systems that have been developed
for sending IP over cable TV rely on RF modems which use one TV
channel as an uplink and another TV channel for a downlink. Both
packet streams are unencrypted and can be intercepted by anyone
who has physical access to the TV cable.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Microwave and radio</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">High</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Radio is inherently a broadcast medium.
Anyone with a radio receiver can intercept your transmissions.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">The only way to protect against eavesdropping
in these networks is by using encryption. There are several methods:</P
><dl class="variablelist"><dt class="term">Link-level encryption</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-21219"></A
>With
link-level encryption, packets are automatically encrypted when
they are transmitted over an unsecure data link and decrypted when
they are received. Eavesdropping is defeated because an eavesdropper
does not know how to decrypt packets that are intercepted. Link-level
encryption is available on many radio networking products, but is
harder to find for other broadcast network technologies such as
Ethernet or <span class="acronym">FDDI</SPAN
>. Special link encryptors are
available for modems and leased-line links.</P
></DD
><dt class="term">End-to-end encryption</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-21227"></A
><a class="indexterm" name="AUTOID-21230"></A
>With
end-to-end encryption, the host transmitting the packet encrypts
the packet's data; the packet's contents are automatically
decrypted when they are received at the other end. Some organizations
that have more than one physical location use encrypting routers
for connecting to the Internet. These routers automatically encrypt
packets that are being sent from one corporate location to the other,
to prevent eavesdropping by attackers on the Internet; however,
the routers do not encrypt packets that are being sent from the
organization to third-party sites on the network.</P
></DD
><dt class="term">Application-level encryption</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-21236"></A
><a class="indexterm" name="AUTOID-21239"></A
>Instead of relying on hardware to encrypt
data, encryption can be done at the application layer. For example,
the Kerberos version of the telnet command can automatically encrypt
the contents of the telnet data stream in both directions.</P
><p class="para">These three encryption techniques are shown in<a class="indexterm" name="AUTOID-21242"></A
><a class="indexterm" name="AUTOID-21244"></A
><a class="indexterm" name="AUTOID-21247"></A
><a class="indexterm" name="AUTOID-21250"></A
>
 <a class="xref" href="#PUIS-CHP-16-FIG-8" title="Three types of encryption for communication">Figure 16.8</A
>.</P
></DD
></DL
><h4 class="figure"><a class="title" name="PUIS-CHP-16-FIG-8">Figure 16.8: Three types of encryption for communication</A
></H4
><img class="graphic" src="figs/puis_1608.gif" alt="Figure 16.8"></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-16-SECT-3.2">16.3.2 Security and Nameservice</A
></H3
><p class="para"><span class="acronym">DNS</SPAN
><a class="indexterm" name="AUTOID-21261"></A
><a class="indexterm" name="AUTOID-21264"></A
><a class="indexterm" name="AUTOID-21267"></A
>
was not designed to be a secure protocol. The protocol contains
no means by which the information returned by a <span class="acronym">DNS</SPAN
>
query can be verified as correct or incorrect. Thus, if <span class="acronym">DNS</SPAN
>
tells you that a particular host has a particular IP address, there
is no way that you can be certain if the information returned is
correct.</P
><p class="para"><span class="acronym">DNS</SPAN
> was designed as an unsecure
protocol because IP addresses and hostnames were designed as a system
for moving data, and not as a system for providing authentication.</P
><p class="para">Unfortunately, hostnames and IP addresses are commonly
used for authentication on the Internet. The Berkeley <span class="acronym">UNIX</SPAN
>
r commands (<a class="indexterm" name="AUTOID-21276"></A
><a class="indexterm" name="AUTOID-21278"></A
>
rsh
and rlogin) use the hostname for authentication. Many programs examine
the IP address of an incoming <span class="acronym">TCP</SPAN
> connection,
perform a <i class="filename"><a class="indexterm" name="AUTOID-21282"></A
>reverse
lookup</I
> <span class="acronym">DNS</SPAN
> operation, and trust that
the resulting hostname is correct. More sophisticated programs perform
a <i class="filename"><a class="indexterm" name="AUTOID-21286"></A
>double reverse</I
>
lookup, in which the network client performs an IP address lookup
with the resulting hostname, to see if the looked-up IP address
matches the IP address of the incoming <span class="acronym">TCP</SPAN
> connection.[12]</P
><blockquote class="footnote"><p class="para">[12] A double reverse lookup involves looking up the hostname that
corresponds to an incoming IP connection, then doing a lookup on
that hostname to verify that it has the same IP address. This process
is non-trivial, as Internet computers can have more than one IP
address, and IP addresses can resolve to more than one Internet
hostname. Although the double reverse lookup is designed to detect
primitive nameserver attacks, all that it usually detects is sites
that have not properly configured their nameserver files.</P
></BLOCKQUOTE
><p class="para">An attacker has more trouble spoofing a double reverse lookup,
but the possibility still exists. Some of these attacks are:</P
><dl class="variablelist"><dt class="term">Client flooding</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-21297"></A
><a class="indexterm" name="AUTOID-21299"></A
><a class="indexterm" name="AUTOID-21302"></A
>As <span class="acronym">DNS</SPAN
> uses <span class="acronym">UDP</SPAN
>,
an attacker can easily flood the host, making a nameserver request
with thousands of invalid responses. These can be constructed so
as to appear to come from the <span class="acronym">DNS</SPAN
> server. The
client performing a <span class="acronym">DNS</SPAN
> lookup will most likely
accept the attacker's response, rather than the legitimate
response from the authentic nameserver.</P
></DD
><dt class="term">Bogus <a class="indexterm" name="AUTOID-21311"></A
><a class="indexterm" name="AUTOID-21313"></A
>
nameserver cache loading</DT
><dd class="listitem"><p class="para">Some nameservers will cache any response that they
receive, whether it was requested or not. You can load these nameservers
with incorrect IP address translations as part of a response to
some other request.</P
></DD
><dt class="term">Rogue <span class="acronym">DNS</SPAN
> servers</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-21322"></A
>The
fact that someone runs a nameserver on his or her machine doesn't
mean you can trust the results. By appropriately modifying the responses
of a nameserver for one domain to respond to requests with inappropriate
information, the maintainer of a real <span class="acronym">DNS</SPAN
> server
can taint the responses to clients.</P
></DD
></DL
><p class="para">Firewalls (described in <a class="xref" href="ch21_01.htm" title="Firewalls">Chapter 21</A
>) can provide
some (small) degree of protection against a few <span class="acronym">DNS</SPAN
>
attacks. Nevertheless, the real safety relies on not using IP addresses
or hostnames for authentication.<a class="indexterm" name="AUTOID-21329"></A
><a class="indexterm" name="AUTOID-21332"></A
><a class="indexterm" name="AUTOID-21335"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-16-SECT-3.3">16.3.3 Authentication</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-21341"></A
>Most IP services do not provide a strong system
for positive authentication. As a result, an attacker (or a prankster)
can transmit information and claim that it comes from another source.</P
><p class="para">The lack of positive authentication presents problems especially
for services such as <span class="acronym">DNS</SPAN
> (see above), electronic
mail, and Usenet. In all of these services, the recipient of a message,
be it a machine or a person, is likely to take positive action based
on the content of a message, whether or not the message sender is
properly authenticated.</P
><p class="para">One of the best-known cases
of a fraudulently published Usenet message appears below. It was
not written by Gene Spafford; instead, it was created and posted
to the Usenet by Chuq von Rospach.</P
><blockquote class="screen"><pre class="screen">Path:
purdue!umd5!ames!mailrus!umix!uunet!seismo!sundc!pitstop!sun!moscvax!perdue!spaf
From: spaf@cs.purdue.EDU (Gene Spafford)
Newsgroups: news.announce.important
Subject: Warning: April Fools Time again (forged messages on loose)
Message-ID: &lt;35111-F@medusa.cs.purdue.edu&gt;
Date: 1 Apr 88 00:00:00 GMT
Expires: 1 May 88 00:00:00 GMT
Followup-To: news.admin
Organization: Dept. of Computer Sciences, Purdue Univ.
Lines: 25
Approved: spaf@cs.purdue.EDU

Warning: April 1 is rapidly approaching, and with it comes a USENET
tradition. On April Fools day comes a series of forged, tongue-in-cheek
messages, either from non-existent sites or using the name of a Well
Known USENET person. In general, these messages are harmless and meant
as a joke,and people who respond to these messages without thinking,
either by flaming or otherwise responding, generally end up looking
rather silly when the forgery is exposed. 

So, for the next couple of weeks, if you see a message that seems
completely out of line or is otherwise unusual, think twice before
posting a followup or responding to it; it's very likely a forgery.

There are a few ways of checking to see if a message is a forgery.
These aren't foolproof, but since most forgery posters want people to
figure it out, they will allow you to track down the vast majority of
forgeries:

* Russian computers. For historic reasons most forged messages
have as part of their Path: a non-existent (we think!) russian
computer, either kremvax or moscvax. Other possibilities are nsacyber
or wobegon. Please note, however, that walldrug is a real site and
isn't a forgery.

* Posted dates. Almost invariably, the date of the posting is forged
to be April 1. 

* Funky Message-ID. Subtle hints are often lodged into the
Message-Id, as that field is more or less an unparsed text string and
can contain random information. Common values include pi, the phone
number of the red phone in the white house, and the name of the
forger's parrot.

* Subtle mispellings. Look for subtle misspellings of the host names
in the Path: field when a message is forged in the name of a Big Name
USENET person. This is done so that the person being forged actually
gets a chance to see the message and wonder when he actually posted it.

Forged messages, of course, are not to be condoned. But they happen,
and it's important for people on the net not to over-react. They happen at this time every year, and the forger
generally gets their kick from watching the novice users take the
posting seriously and try to flame their tails off. If we can keep a
level head and not react to these postings, they'll taper off rather
quickly and we can return to the normal state of affairs: chaos.

Thanks for your support.

Gene Spafford, Spokeman, The Backbone Cabal.</PRE
></BLOCKQUOTE
><p class="para">The April 1 post is funny,
because it contains all of the signs of a forged message that it
claims to warn the reader about. But other forged messages are not
quite so friendly. Beware!<a class="indexterm" name="AUTOID-21349"></A
><a class="indexterm" name="AUTOID-21351"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch16_02.htm#PUIS-CHP-16-SECT-2.4.1" title="16.2 IPv4: The Internet Protocol Version 4"><img src="../gifs/txtpreva.gif" alt="Previous: 16.2 IPv4: The Internet Protocol Version 4" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Practical UNIX &amp; Internet Security"><img src="../gifs/txthome.gif" alt="Practical UNIX &amp; Internet Security" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch16_04.htm#PUIS-CHP-16-SECT-4.3" title="16.4 Other Network Protocols"><img src="../gifs/txtnexta.gif" alt="Next: 16.4 Other Network Protocols" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">16.2 IPv4: The Internet Protocol Version 4</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">16.4 Other Network Protocols</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
