<html><head>
<title>[Appendix C] C.5 Starting Up UNIX and Logging In</TITLE>
<meta name="DC.title" content="Practical UNIX &amp; Internet Security"><meta name="DC.creator" content="Simson Garfinkel &amp; Gene Spafford"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:22:13Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-148-8" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="appc_01.htm" title="C. UNIX Processes"><link rel="prev" href="appc_04.htm" title="C.4 The kill Command"><link rel="next" href="appd_01.htm" title="D. Paper Sources"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Practical UNIX &amp; Internet Security" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Practical UNIX &amp; Internet Security"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="appc_04.htm" title="C.4 The kill Command"><img src="../gifs/txtpreva.gif" alt="Previous: C.4 The kill Command" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Appendix C<br>UNIX Processes</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="APPENDIX" href="appd_01.htm" title="D. Paper Sources"><img src="../gifs/txtnexta.gif" alt="Next: D. Paper Sources" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PUIS-APP-C-SECT-5">C.5 Starting Up UNIX and Logging In</A
></H2
><p class="para"><a class="indexterm" name="AUTOID-39918"></A
><a class="indexterm" name="AUTOID-39920"></A
>Most
modern computers are equipped with a certain amount of read-only
memory (<span class="acronym">ROM</SPAN
>) that contains the first program
that a computer runs when it is turned on. Typically, this <span class="acronym">ROM</SPAN
>
will perform a small number of system diagnostic tests to ensure
that the system is operating properly, after which it will load
another program from a disk drive or from the network. This process
is called <kbd class="command">bootstrapping</KBD
>.</P
><p class="para">Although every <span class="acronym">UNIX</SPAN
> system bootstraps in
a slightly different fashion, usually the <span class="acronym">ROM</SPAN
>
monitor loads a small program called <kbd class="command">boot</KBD
> that is kept at a known
location on the hard disk (or on the network.) The <kbd class="command">boot</KBD
> program
then loads the <span class="acronym">UNIX</SPAN
> kernel into the computer
and starts running it.</P
><p class="para">After the kernel initializes itself and determines the machine's
configuration, it creates a process with a <span class="acronym">PID</SPAN
>
of 1 which runs the <i class="filename">/etc/init</I
> program.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-APP-C-SECT-5.1">C.5.1 Process #1: /etc/init</A
></H3
><p class="para">The program <a class="indexterm" name="AUTOID-39938"></A
><a class="indexterm" name="AUTOID-39940"></A
>
<i class="filename">/etc/init</I
>
finishes the task of starting up the computer system and lets users
log in.</P
><p class="para">Some <span class="acronym">UNIX</SPAN
> systems can be booted in a <a class="indexterm" name="AUTOID-39946"></A
>
single-user mode. If <span class="acronym">UNIX</SPAN
> is
booted in single-user mode, the init program forks and runs the
standard <span class="acronym">UNIX</SPAN
> shell, <i class="filename">/bin/sh,</I
>
on the system console. This shell, run as superuser, gives the person
sitting at the console total access to the system. It also allows
nobody else access to the system; no network daemons are started
unless root chooses to start them.</P
><p class="para">Some systems can be set up to require a password to boot in
single-user mode, while others cannot. Many workstations&nbsp;- including
those made by Sun Microsystems&nbsp;- allow you to set a special
user password using the boot monitor in <span class="acronym">ROM</SPAN
>.
Single-user mode is designed to allow the resurrection of a computer
with a partially corrupted filesystem; if the <a class="indexterm" name="AUTOID-39953"></A
><a class="indexterm" name="AUTOID-39956"></A
>
/etc/passwd
file is deleted, the only way to rebuild it would be to bring the
computer up in single-user mode. Unfortunately, single-user mode
is also a security hole, because it allows unprivileged people to
execute privileged commands simply by typing them on the system
console; computers that can be brought up in single-user mode should
have their consoles in a place that is physically secure. On many
Berkeley-derived systems, changing the line in the <a class="indexterm" name="AUTOID-39958"></A
><a class="indexterm" name="AUTOID-39961"></A
>
/etc/ttytab
file for the console so that it is not marked as &quot;secure&quot;
will force the user to provide a password when booting in single-user
mode.</P
><p class="para">Some <span class="acronym">UNIX</SPAN
> systems can also be booted in
a <a class="indexterm" name="AUTOID-39965"></A
>
<em class="emphasis">maintenance mode</EM
>. Maintenance
mode is similar to single-user mode, except that the <i class="filename">root</I
> password
must first be typed on the system console.</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> Do not depend on the maintenance mode to prevent people
from booting your computers in single-user mode. Most computers
can be booted from <span class="acronym">CDROMS</SPAN
> or floppy disks, allowing
anyone with even the most modest technical knowledge to gain superuser
privileges if they have physical access to the system.</P
></BLOCKQUOTE
><p class="para">In normal operation, <i class="filename">/etc/init</I
> then executes
the shell script <a class="indexterm" name="AUTOID-39974"></A
><a class="indexterm" name="AUTOID-39977"></A
>
<i class="filename">/etc/rc.</I
>
Depending on which version of <span class="acronym">UNIX</SPAN
> you are using,
<i class="filename">/etc/rc</I
> may execute a variety of other shell scripts
whose names all begin with <i class="filename">/etc/rc</I
> (common varieties
include <i class="filename">/etc/rc.network</I
> and <i class="filename">/etc/rc.local</I
>)
or which are located in the directory <i class="filename">/etc/init.d</I
>
or <i class="filename">/etc/rc?.d. </I
><a class="indexterm" name="AUTOID-39987"></A
>
System V systems additionally use the file<a class="indexterm" name="AUTOID-39990"></A
><a class="indexterm" name="AUTOID-39994"></A
>
 <i class="filename">/etc/inittab</I
> to control what
is done at various run levels. The <i class="filename">/etc/rc</I
> script(s)
set up the <span class="acronym">UNIX</SPAN
> as a multi-user system, performing
a variety of features, including:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Removing temporary files from the
<i class="filename">/tmp</I
> and/or <i class="filename">/usr/tmp</I
>
directories</P
></LI
><li class="listitem"><p class="para">Removing any lock files</P
></LI
><li class="listitem"><p class="para">Checking filesystem consistency and mounting additional
filesystems</P
></LI
><li class="listitem"><p class="para">Turning on accounting and quota checking</P
></LI
><li class="listitem"><p class="para">Setting up the network</P
></LI
></UL
><p class="para">When <i class="filename">/etc/rc</I
> finishes executing, &amp;<i class="filename">sol;etc/init</I
>
forks a new process for every enabled terminal on the system. On
older systems, this program is called <i class="filename">/etc/getty.</I
>
On newer systems, including <span class="acronym">SVR4</SPAN
>, it is called
<i class="filename">/usr/lib/saf/ttymon.</I
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-APP-C-SECT-5.2">C.5.2 Logging In</A
></H3
><p class="para">The <a class="indexterm" name="AUTOID-40021"></A
><a class="indexterm" name="AUTOID-40023"></A
>
<kbd class="command">getty</KBD
>
or <kbd class="command">ttymon</KBD
> program is responsible for configuring the user terminal
and displaying the initial prompt. A copy of the program is run
for each port that is monitored. Whenever the process dies, <kbd class="command">init</KBD
>
starts another one to take its place. If the <kbd class="command">init</KBD
> process dies,
<span class="acronym">UNIX</SPAN
> halts or reboots (depending on the version
of <span class="acronym">UNIX</SPAN
> installed).</P
><p class="para">The <kbd class="command">getty</KBD
> or <kbd class="command">ttymon</KBD
> program displays the word <em class="emphasis">login</EM
>: (or a
similar prompt) on its assigned terminal and waits for a username
to be typed. When it gets a username, <kbd class="command">getty/ttymon</KBD
> <i class="filename">exec'</I
>s
the program <i class="filename">/bin/login</I
>, which asks for a password
and validates it against the password stored in <i class="filename">/etc/passwd.</I
>
If the password does not match, the <kbd class="command">login</KBD
> program asks for a new
username and password combination.</P
><p class="para">Some versions of <span class="acronym">UNIX</SPAN
> can be set up to
require an additional password if you're trying to log
into the computer over a modem. See the reference page for your
<kbd class="command">login</KBD
> program for details.</P
><p class="para">If you do not log in within a short period of time (usually
60 seconds), or if you make too many incorrect attempts, <kbd class="command">login</KBD
> exits
and <kbd class="command">init</KBD
> starts up a new <i class="filename">getty/ttymon</I
> program on the terminal.
On some systems equipped with modems, this causes the telephone
to hang up. Again, this strategy is designed to deter an unauthorized
user from breaking into a <span class="acronym">UNIX</SPAN
> computer by making
the task more difficult: after trying a few passwords, a cracker
attempting to break into a <span class="acronym">UNIX</SPAN
> machine is forced
to redial the telephone.</P
><p class="para">If the username and password match, the <kbd class="command">login</KBD
> program performs
some accounting and initialization tasks, then changes its real
and effective <span class="acronym">UIDS</SPAN
> to be those of the username
that has been supplied. <kbd class="command">login</KBD
> then <i class="filename">exec's</I
> your shell program,
usually <i class="filename">/bin/csh</I
> or <i class="filename">/bin/ksh.</I
>
The process number of that shell is the same as the original getty.
<i class="filename">/etc/init</I
> receives a <span class="acronym">SIGCHLD</SPAN
>
signal when this process dies; <i class="filename">/etc/init</I
> then
starts a new <kbd class="command">getty</KBD
> or <kbd class="command">ttymon</KBD
>.</P
><p class="para">On Berkeley-derived systems, the file <i class="filename">/etc/ttys</I
>
or <i class="filename">/etc/ttytab</I
> contains a line for each terminal
that is to have a <i class="filename">getty/ttymon</I
> process enabled. It also
contains information on terminal type, if known, and an indication
if the line is &quot;secure.&quot; The root user cannot
log into a terminal that is not secure; to become the superuser
on one of these lines, you must first log in as yourself, then use
the <i class="filename">su </I
>command. Unless your terminal lines
are all in protected areas, turning off &quot;secure&quot;
on all lines is a good precaution.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-APP-C-SECT-5.3">C.5.3 Running the User's Shell</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-40069"></A
><a class="indexterm" name="AUTOID-40071"></A
><a class="indexterm" name="AUTOID-40073"></A
><a class="indexterm" name="AUTOID-40075"></A
><a class="indexterm" name="AUTOID-40077"></A
><a class="indexterm" name="AUTOID-40079"></A
>After you log in, <span class="acronym">UNIX</SPAN
> will
start up your shell. The shell will then read a series of start-up
commands from a variety of different files, depending on which shell
you are using and which flavor of <span class="acronym">UNIX</SPAN
> you are
running.</P
><p class="para">If your shell is <a class="indexterm" name="AUTOID-40085"></A
><a class="indexterm" name="AUTOID-40089"></A
><a class="indexterm" name="AUTOID-40093"></A
>
<i class="filename">/bin/sh</I
>
(the Bourne shell) or <i class="filename">/bin/ksh</I
> (the Korn shell),
<span class="acronym">UNIX</SPAN
> will execute all of the commands stored
in a special file called <i class="filename">.profile</I
> in your home directory. (On some
systems, <i class="filename">/bin/sh</I
> and <i class="filename">/bin/ksh</I
>
will also execute the commands stored in the <i class="filename">/etc/profile</I
>
or <i class="filename">/usr/lib/profile</I
> file.)</P
><p class="para">If your shell is <i class="filename">/bin/csh</I
> (the C shell),
<span class="acronym">UNIX</SPAN
> will execute all of the commands stored
in the <i class="filename">.cshrc</I
> file in your home directory. The C shell will then
execute all of the commands stored in the <i class="filename">.login</I
> file in your home
directory. When you log out, the commands in the file <i class="filename">.logout</I
> will
be executed.</P
><p class="para">Because these files are automatically run for you when you
log in, they can present a security problem: if an intruder were
to modify the files, the end result would be the same as if the
intruder were typing commands at your keyboard every time you logged
in! Thus, these files should be protected so that an intruder cannot
write to the files or replace them with other files. <a class="xref" href="ch05_01.htm" title="The UNIX Filesystem">Chapter 5, <cite class="chapter">The UNIX Filesystem</CITE
></A
>, explains how to protect your files. <a class="indexterm" name="AUTOID-40113"></A
><a class="indexterm" name="AUTOID-40115"></A
><a class="indexterm" name="AUTOID-40117"></A
><a class="indexterm" name="AUTOID-40120"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="appc_04.htm" title="C.4 The kill Command"><img src="../gifs/txtpreva.gif" alt="Previous: C.4 The kill Command" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Practical UNIX &amp; Internet Security"><img src="../gifs/txthome.gif" alt="Practical UNIX &amp; Internet Security" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="APPENDIX" href="appd_01.htm" title="D. Paper Sources"><img src="../gifs/txtnexta.gif" alt="Next: D. Paper Sources" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">C.4 The kill Command</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">D. Paper Sources</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
