<html><head>
<title>[Chapter 16] 16.2 IPv4: The Internet Protocol Version 4</TITLE>
<meta name="DC.title" content="Practical UNIX &amp; Internet Security"><meta name="DC.creator" content="Simson Garfinkel &amp; Gene Spafford"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:12:19Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-148-8" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch16_01.htm" title="16. TCP/IP Networks"><link rel="prev" href="ch16_01.htm" title="16.1 Networking"><link rel="next" href="ch16_03.htm#PUIS-CHP-16-SECT-3.1" title="16.3 IP Security"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Practical UNIX &amp; Internet Security" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Practical UNIX &amp; Internet Security"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch16_01.htm" title="16.1 Networking"><img src="../gifs/txtpreva.gif" alt="Previous: 16.1 Networking" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 16<br>TCP/IP Networks</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch16_03.htm#PUIS-CHP-16-SECT-3.1" title="16.3 IP Security"><img src="../gifs/txtnexta.gif" alt="Next: 16.3 IP Security" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PUIS-CHP-16-SECT-2">16.2 IPv4: The Internet Protocol Version 4</A
></H2
><p class="para"><a class="indexterm" name="AUTOID-20000"></A
>The Internet Protocol is the glue that
holds together modern computer networks. IP specifies the way that
messages are sent from computer to computer; it essentially defines
a common &quot;language&quot; that is spoken by every computer
stationed on the Internet.</P
><p class="para">This section describes IPv4,
the fourth version of the Internet Protocol, which has been used
on the Internet since 1982. As this book is going to press, work
is continuing on IPv6, previously called &quot;IP: The Next
Generation,&quot; or IPng. (IPv5 was an experimental protocol
that was never widely used.) We do not know when (or if) IPv6 will
be widely used on the network.</P
><p class="para">As we said earlier, at
a very abstract level the Internet is similar to the phone network.
However, as we look more closely at the underlying protocols, we
find that it is quite different. On the telephone network, each
conversation is assigned a circuit (either a pair of wires or a
channel on a multiplexed connection) that it uses for the duration
of the telephone call. Whether you talk or not, the channel remains
open until you hang up the phone.</P
><p class="para">On the Internet,
the connections between computers are shared by all of the conversations.
Data is sent in blocks of characters called datagrams, or more colloquially,
<a class="indexterm" name="AUTOID-20005"></A
>
packets. Each packet has a small
block of bytes called the <a class="indexterm" name="AUTOID-20007"></A
>
header,
which identifies its sender and intended destination on each computer.
The header is followed by another, usually larger, block of characters
of data called the packet's <em class="emphasis">contents</EM
>.
(See <a class="xref" href="#PUIS-CHP-16-FIG-3" title="IP header and packet">Figure 16.3</A
>.) After the packets reach their
destination, they are often reassembled into a continuous stream
of data; this fragmentation and reassembly process is usually invisible
to the user. As there are often many different routes from one system
to another, each packet may take a slightly different path from
source to destination. Because the Internet switches packets, instead
of circuits, it is called a <a class="indexterm" name="AUTOID-20011"></A
><a class="indexterm" name="AUTOID-20013"></A
>
packet-switching
network.</P
><h4 class="figure"><a class="title" name="PUIS-CHP-16-FIG-3">Figure 16.3: IP header and packet</A
></H4
><img class="graphic" src="figs/puis_1603.gif" alt="Figure 16.3"><p class="para">We'll borrow an analogy from Vint
<a class="indexterm" name="AUTOID-20020"></A
>
Cerf, one of the original architects
of the <span class="acronym">ARPANET</SPAN
>: think of the IP protocol as sending
a novel a page at a time, numbered and glued to the back of postcards.
All the postcards from every user get thrown together and carried
by the same trucks to their destinations, where they get sorted
out. Sometimes, the postcards get delivered out of order. Sometimes,
a postcard may not get delivered at all, but you can use the page
numbers to request another copy. And, key for security, anyone in
the postal service who handles the post cards can read the contents
without the recipient or sender knowing about it.</P
><p class="para">There
are three distinct ways to directly connect two computers together
using IP:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">The computers can all be connected
to the same <a class="indexterm" name="AUTOID-20027"></A
><a class="indexterm" name="AUTOID-20030"></A
>
local area network. Two common <span class="acronym">LANS</SPAN
>
are Ethernet and token ring. Internet packets are then encapsulated
within the packets used by the local area network.[4]</P
><blockquote class="footnote"><p class="para">[4] LANs and token rings can also carry protocols other than IP
(including Novell IPX and Appletalk), often at the same time as
IP network traffic.</P
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Two computers can be directly connected to each
other with a serial line. IP packets are then sent using either
<a class="indexterm" name="AUTOID-20037"></A
><a class="indexterm" name="AUTOID-20039"></A
><a class="indexterm" name="AUTOID-20041"></A
><a class="indexterm" name="AUTOID-20043"></A
>
<span class="acronym">SLIP</SPAN
>
(Serial Line Internet Protocol), <span class="acronym">CSLIP</SPAN
> (Compressed
<span class="acronym">SLIP</SPAN
>), or <span class="acronym">PPP</SPAN
> (Point-to-Point
Protocol). If both computers are each in turn connected to a local
area network, the telephone link will bridge together the two <span class="acronym">LANS</SPAN
>.
(See <a class="xref" href="#PUIS-CHP-16-FIG-4" title="Bridging two local area networks">Figure 16.4</A
>.)</P
></LI
><li class="listitem"><p class="para">The IP packets can themselves be encapsulated within
packets used by other network protocols. Today, many 56K &quot;leased
lines&quot; are actually built by encapsulating IP packets within
Frame Relay packets. Within a few years, IP may be commonly encapsulated
within <a class="indexterm" name="AUTOID-20053"></A
><a class="indexterm" name="AUTOID-20055"></A
>
<span class="acronym">ATM</SPAN
> (Asynchronous
Transfer Mode) networks.[5]</P
><blockquote class="footnote"><p class="para">[5] If our use of all these network terms
is causing your eyes to roll back into your head and a loud buzzing
sound to fill your ears, take a break and several deep breaths.
Then consult a book on IP and networks for a more complete explanation.
We recommend the excellent <em class="emphasis">Internetworking with TCP/IP</EM
>
by Doug Comer (Prentice Hall, 1991).</P
></BLOCKQUOTE
></LI
></UL
><h4 class="figure"><a class="title" name="PUIS-CHP-16-FIG-4">Figure 16.4: Bridging two local area networks</A
></H4
><img class="graphic" src="figs/puis_1604.gif" alt="Figure 16.4"><p class="para">IP is a scalable network protocol: it works
as well with a small office network of ten workstations as it does
with a university-sized network supporting a few hundred workstations,
or with the national (and international) networks that support tens
of thousands of computers. IP scales because it views these large
networks merely as collections of smaller ones. Computers connected
to a network are called hosts. Computers that are connected to two
or more networks can be programmed to forward packets automatically
from one network to another; today, these computers are called <i class="firstterm">routers</I
>
(originally they were called <i class="firstterm">gateways</I
>). Routers
use routing tables to determine where to send packets next.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-16-SECT-2.1">16.2.1 Internet Addresses</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-20070"></A
><a class="indexterm" name="AUTOID-20073"></A
>Every
interface that a computer has on an IP network is assigned a unique
32-bit address. These addresses are often expressed as a set of
four 8-bit numbers, called <a class="indexterm" name="AUTOID-20076"></A
>
octets.
A sample address is 18.70.0.224. Think of an IP address as if it
were a telephone number: if you know a computer's IP address,
you can connect to it and exchange information.</P
><p class="para">Theoretically,
the 32-bit IP address allows a maximum of 232&nbsp;=&nbsp;4,294,967,296
computers to be attached to the Internet at a given time. In practice,
the total number of computers that can be connected is much less,
because of the way that IP addresses are assigned. Organizations
are usually assigned blocks of addresses, not all of which are used.
This approach is similar to the method by which the phone company
assigns area codes to a region. The approach has led to a problem
with IP addresses similar to that faced by the telephone company:
we're running out of numbers.</P
><p class="para">Here are some
more sample Internet addresses:</P
><blockquote class="screen"><pre class="screen">18.85.0.2
198.3.5.1
204.17.195.100</PRE
></BLOCKQUOTE
><p class="para">IP addresses are typically abbreviated ii.jj.kk.ll, where
the numbers ii, jj, kk, and ll are between 0 and 255. Each decimal
number represents an 8-bit octet. Together, they represent the 32-bit
IP address.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-16-SECT-2.1.1">16.2.1.1 IP networks</A
></H4
><p class="para">The Internet is a network
of networks. Although most people think of these networks as major
networks, such as those belonging to companies like AT&amp;T,
<span class="acronym">MCI</SPAN
>, and Sprint, the networks that make up the
Internet are actually local area networks, such as the network in
your office building or the network in a small research laboratory.
Each of these small networks is given its own network number.</P
><p class="para">There are two methods of looking at network numbers. The &quot;classical&quot;
network numbers were distinguished by a unique prefix of bits in
the address of each host in the network. This approach partitioned
the address space into a well-defined set of different size networks.
However, several of these networks had large &quot;holes&quot;&nbsp;- sets
of host addresses that were never used. With the explosion of sites
on the Internet, a somewhat different interpretation of network
addresses has been proposed, to result in some additional addresses
that can be assigned to networks and hosts. This approach is the
<a class="indexterm" name="AUTOID-20087"></A
><a class="indexterm" name="AUTOID-20089"></A
>
<span class="acronym">CIDR</SPAN
> (<i class="firstterm">Classless
InterDomain Routing</I
>) scheme. We briefly describe both
schemes below.</P
><p class="para">The <span class="acronym">CIDR</SPAN
> method may
not be adequate to provide addresses for all the expected hosts
on the network; therefore, as we've mentioned, a new protocol,
IPv6, is being developed. This new protocol will provide a bigger
address space for hosts and networks, and will provide some additional
security features. Host addresses will be 128 bits long in IPv6.
As this book goes to press, the features of IPv6 are not completely
finalized, so we won't try to detail them here.[6]</P
><blockquote class="footnote"><p class="para">[6] But you can be sure we'll cover them in the next
edition!</P
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-16-SECT-2.1.2">16.2.1.2 Classical network addresses</A
></H4
><p class="para">There are
five primary kinds of IP addresses in the &quot;classical&quot;
address scheme; the first few bits of the address (the<i class="firstterm">most significant</I
> bits) define the class of network to
which the address belongs. The remaining bits are divided into a
network part and a host part:</P
><dl class="variablelist"><dt class="term">Class A addresses	 </DT
><dd class="listitem"><p class="para">Hosts on Class A networks have addresses in the
form <i class="filename">N.a.b.c</I
>, where <i class="filename">N</I
> is the 
network number and <i class="filename">a.b.c</I
> is the host
number; the most significant bit of <i class="filename">N</I
> must be zero. There are not
many Class A networks, as they are quite wasteful: unless your network
has 16,777,216 separate hosts, you don't need a Class A
network. Nevertheless, many early pioneers of the Internet, such
as <span class="acronym">MIT</SPAN
> and Bolt Beranek and Newman (<span class="acronym">BBN</SPAN
>),
have been assigned Class A networks. Of course, these organizations
don't really put all of their computers on the same piece
of network. Instead, most of them divide their internal networks
as (effectively) Class B or Class C networks. This approach is known
as <i class="firstterm"><a class="indexterm" name="AUTOID-20113"></A
>subnetting</I
>.</P
></DD
><dt class="term">Class B addresses</DT
><dd class="listitem"><p class="para">Hosts on Class B networks have addresses in the
form <i class="filename">N.M.a.b</I
>, where <i class="filename">N.M</I
> is 
the network number and <i class="filename">a.b</I
> is the host
number; the most significant two bits of <i class="filename">N</I
> must be 10. Class B networks
are commonly found at large universities and major commercial organizations.</P
></DD
><dt class="term">Class C addresses</DT
><dd class="listitem"><p class="para">Hosts on Class C networks have addresses in the
form <i class="filename">N.M.O.a</I
>, where <i class="filename">N.M.O</I
> is 
the network number and <i class="filename">a</I
> is the host
number; the most significant three bits of <i class="filename">N</I
> must be 110. These
networks can only accommodate a maximum of 254 hosts. (Flaws and
incompatibilities between various <span class="acronym">UNIX IP</SPAN
> implementations
make it unwise to assign IP addresses ending in 0 or 255.) Most
organizations have one or more Class C networks.</P
></DD
><dt class="term">Class D addresses</DT
><dd class="listitem"><p class="para">A Class D address is of the form <i class="filename">N.M.O.a</I
>, where
the most significant four bits of <i class="filename">N</I
> are 1110. These addresses are
not actually of networks, but of <i class="firstterm"><a class="indexterm" name="AUTOID-20139"></A
>multicast</I
> groups&nbsp;- sets of
hosts that listen on a common address to receive broadcast addresses.</P
></DD
><dt class="term">Class E addresses</DT
><dd class="listitem"><p class="para">A Class E address is of the form <i class="filename">N.M.O.P</I
>, where
the most significant four bits of <i class="filename">N</I
> are 1111. These addresses are
currently reserved for experimental use.</P
></DD
></DL
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-16-SECT-2.1.3">16.2.1.3 CIDR addresses</A
></H4
><p class="para">In recent years, a new
form of address assignment has been developed. This assignment is
the <i class="firstterm"><a class="indexterm" name="AUTOID-20151"></A
><a class="indexterm" name="AUTOID-20153"></A
><a class="indexterm" name="AUTOID-20155"></A
>CIDR</I
>,
or <i class="firstterm">Classless InterDomain Routing</I
>, method.
As the name implies, there are no &quot;classes&quot; of
addresses as in the classical scheme. Instead, networks are defined
as being the most significant k bits of each address, with the remaining
32-k bits being used for the host part of the address.
Thus, a service provider could be given a range of addresses whereby
the first 12 bits of the address are fixed at a particular value
(the network address), and the remaining 20 bits represent the host
portion of the address. This method allows the service provider
to allocate up to 220 distinct addresses to customers.</P
><p class="para">In
reality, the host portion of an address is further divided into
subnets. This subdivision is done by fixing the first j<kbd class="command"></KBD
>bits of the host portion of the address to some set value,
and using the remaining bits for host addresses. And those can be
further divided into subnets, and so on. A <span class="acronym">CIDR</SPAN
>-format
address is of the form k.j.l.(m...n), where each of the fields is
of variable length. Thus, the fictional service-provider network
address described above could be subdivided into 1024 subnets, one
for each customer. Each customer would have 210 bits of host address,
which they could further subdivide into local subnets.</P
><p class="para">The
<span class="acronym">CIDR</SPAN
> scheme is compatible with the classical
address format, with Class A addresses using an 8-bit network field,
Class B networks using a 16-bit network address, and so on. <span class="acronym">CIDR</SPAN
>
is being adopted as this book goes to press. Combined with new developments
in IP address rewriting, there is the potential to spread out the
useful life of IPv4 for many years to come.<a class="indexterm" name="AUTOID-20165"></A
><a class="indexterm" name="AUTOID-20168"></A
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-16-SECT-2.2">16.2.2 Routing</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-20174"></A
><a class="indexterm" name="AUTOID-20176"></A
>Despite
the complexity of the Internet and addressing, computers can easily
send each other messages across the global network. To send a packet,
most computers simply set the packet's destination address
and then send the packet to a computer on their local network called
a gateway. If the gateway makes a determination of where to send
the packet next, the gateway is a router. The router takes care
of sending the packet to its final destination by forwarding the
packet on to a directly connected gateway that is one step closer
to the destination host.</P
><p class="para">Many organizations configure
their internal networks as a large tree. At the root of the tree
is the organization's connection to the Internet. When
a gateway receives a packet, it decides whether to send it to one
of its own subnetworks, or to direct it towards the root.</P
><p class="para">Out
on the Internet, major IP providers such as <span class="acronym">AT&T</SPAN
>,
<span class="acronym">BBN</SPAN
> Planet, <span class="acronym">MCI</SPAN
>, and Sprint
have far more complicated networks with sophisticated routing algorithms.
Many of these providers have redundant networks, so that if one
link malfunctions other links can take over.</P
><p class="para">Nevertheless,
from the point of view of any computer on the Internet, routing
is transparent, regardless of whether packets are being sent across
the room or across the world. The only information that you need
to know to make a connection to another computer on the Internet
is the computer's 32-bit IP address&nbsp;- you do not
need to know the route to the host, or on what type of network the
host resides. You do not even need to know if the host is connected
by a high-speed local area network, or if it is at the other end
of a modem-based <span class="acronym">SLIP</SPAN
> connection. All you need
to know is its address, and your packets are on their way.</P
><p class="para">Of
course, if you are the site administrator and you are configuring
the routing on your system, you <em class="emphasis">do</EM
> need to
be concerned with a little more than the IP number of a destination
machine. You must know at least the addresses of gateways out of
your network so you can configure your routing tables. We'll
assume you know how to do that,[7]
but we will point out that if your routes are fairly stable and
simple, you would be safer by statically setting the routes rather
than allowing them to be set dynamically with a mechanism such as
the <kbd class="command">routed</KBD
> daemon.</P
><blockquote class="footnote"><p class="para">[7] If not, you should
consult your vendor manual, or one of the references in <a class="xref" href="appd_01.htm" title="Paper Sources">Appendix D, <cite class="appendix">Paper Sources</CITE
></A
>.</P
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-16-SECT-2.3">16.2.3 Hostnames</A
></H3
><p class="para">A <i class="firstterm">hostname</I
> is the name of
<a class="indexterm" name="AUTOID-20195"></A
><a class="indexterm" name="AUTOID-20197"></A
><a class="indexterm" name="AUTOID-20200"></A
>
a computer on the Internet. Hostnames make life easier for users:
they are easier to remember than IP addresses. You can change a
computer's IP address but keep its hostname the same. If
you think of an IP address as a computer's phone number,
think of its hostname as the name under which it is listed in the
telephone book. Some hosts can also have more than one address on
more than one network. Rather than needing to remember each one,
you can remember a single hostname and let the underlying network
mechanisms pick the most appropriate addresses to use.</P
><p class="para">Let
us repeat that: a single hostname can have more than one IP address,
and a single IP address can be associated with more than one hostname.
Both of these facts have profound implications for people who are
attempting to write secure network programs.</P
><p class="para">Hostnames
must begin with a letter or number and may contain letters, numbers,
and a few symbols, such as the dash (-). Case is ignored.
A sample hostname is <i class="filename">arthur.cs.purdue.edu</I
>.
For more information on host names, see <span class="acronym">RFC</SPAN
> 1122
and <span class="acronym">RFC</SPAN
> 1123.</P
><p class="para">Each hostname has two
parts: the computer's <a class="indexterm" name="AUTOID-20209"></A
><a class="indexterm" name="AUTOID-20211"></A
>
machine
<i class="firstterm">name</I
> and its <i class="firstterm">domain</I
>.
The computer's machine name is the name to the left of
the first period; the domain name is everything to the right of
the first period. In our example above, the machine name is <i class="filename">arthur</I
>
and the domain is <i class="filename">cs.purdue.edu</I
>. The domain
name may represent further hierarchical domains if there is a period
in the name. For instance, <i class="filename">cs.purdue.edu</I
> represents
the Computer Sciences department domain, which is part of the Purdue
University domain, which is, in turn, part of the Educational Institutions
domain.</P
><p class="para">Here are some other examples:</P
><p class="para"><i class="filename">whitehouse.gov next.cambridge.ma.us jade.tufts.edu</I
></P
><p class="para">If you specify a machine name, but do not specify a domain,
then your computer might append a <i class="firstterm"><a class="indexterm" name="AUTOID-20223"></A
>default
domain</I
> when it tries to resolve the name's
IP address. Alternatively, your computer might simply return an
&quot;unknown host&quot; error message.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-16-SECT-2.3.1">16.2.3.1 The /etc/hosts file</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-20229"></A
><a class="indexterm" name="AUTOID-20232"></A
>Early <span class="acronym">UNIX</SPAN
> systems used a
single file called /etc/hosts to keep track of
the network address for each host on the Internet. Many systems
still use this file today to keep track of the IP addresses of computers
on the organization's <span class="acronym">LAN</SPAN
>.</P
><p class="para">A
sample /etc/hosts file for a small organization
might look like this:</P
><blockquote class="screen"><pre class="screen"># /etc/hosts 
# 
192.42.0.1 server 
192.42.0.2 art 
192.42.0.3 science sci 
192.42.0.4 engineering eng </PRE
></BLOCKQUOTE
><p class="para">In this example, the
computer called <i class="filename">server</I
> has the network address
192.42.0.1. The computer called <i class="filename">engineering</I
>
has the address 192.42.0.4. The hostname<i class="filename"> sci</I
>
following the computer called <i class="filename">science</I
> means
that <i class="filename">sci </I
>can be used as a second name, or alias,
for that computer.</P
><p class="para">In the early 1980s, the number of
hosts on the Internet started to jump from thousands to tens of
thousands and more. Maintaining a single file of host names and
addresses soon proved to be impossible. Instead, the Internet adopted
a distributed system for hostname resolution known as the Domain
Name System (<span class="acronym">DNS</SPAN
>). For more information, see
the &quot;Name Service&quot; section later in this chapter.<a class="indexterm" name="AUTOID-20246"></A
><a class="indexterm" name="AUTOID-20248"></A
><a class="indexterm" name="AUTOID-20251"></A
><a class="indexterm" name="AUTOID-20254"></A
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-16-SECT-2.4">16.2.4 Packets and Protocols</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-20260"></A
><a class="indexterm" name="AUTOID-20262"></A
><a class="indexterm" name="AUTOID-20264"></A
><a class="indexterm" name="AUTOID-20268"></A
>Today there
are four main kinds of IP packets that are sent on the Internet
that will be seen by typical hosts. Each is associated with a particular
protocol:[8]</P
><blockquote class="footnote"><p class="para">[8] There may be some special routing or maintenance
protocols in use on the Internet backbone or other major network
trunks. However, we won't discuss them here as you are
unlikely to ever encounter them.</P
></BLOCKQUOTE
><dl class="variablelist"><dt class="term"><span class="acronym">ICMP</SPAN
> </DT
><dd class="listitem"><p class="para">Internet Control Message Protocol. This protocol
is used for low-level operation of the IP protocol. There are several
subtypes, for example, for the exchange of routing and traffic information.</P
></DD
><dt class="term"><span class="acronym">TCP</SPAN
></DT
><dd class="listitem"><p class="para">Transmission Control Protocol. This protocol is
used to create a two-way stream connection between two computers.
It is a &quot;connected&quot; protocol, and includes time-outs
and retransmission to ensure reliable delivery of information.</P
></DD
><dt class="term"><span class="acronym">UDP</SPAN
> </DT
><dd class="listitem"><p class="para">User Datagram Protocol.[9] This protocol is used to send packets
from host to host. The protocol is &quot;connectionless&quot;
and makes a best-effort attempt at delivery.</P
><blockquote class="footnote"><p class="para">[9] UDP <em class="emphasis">does
not</EM
> stand for Unreliable Datagram Protocol, even though
the protocol is technically unreliable because it does not guarantee
that information sent will be delivered. We use the term <i class="firstterm">best-effort</I
>because the underlying network infrastructure is expected
to make its best effort to get the packets to their destination.
In fact, most UDP packets reach their destination under normal operating
circumstances.</P
></BLOCKQUOTE
></DD
><dt class="term"><span class="acronym">IGMP</SPAN
></DT
><dd class="listitem"><p class="para">Internet Group Management Protocol. This protocol
is used to control multicasting&nbsp;- the process of purposely
directing a packet to more than one host. Multicasting is the basis
of the Internet's multimedia backbone, the <span class="acronym">MBONE</SPAN
>.
(Currently, <span class="acronym">IGMP</SPAN
> is not used inside the <span class="acronym">MBONE</SPAN
>,
but is used on the edge.)</P
></DD
></DL
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-16-SECT-2.4.1">16.2.4.1 <span class="acronym">ICMP</SPAN
></A
></H4
><p class="para">The <a class="indexterm" name="AUTOID-20305"></A
><a class="indexterm" name="AUTOID-20307"></A
>
Internet
Control Message Protocol is used to send messages between gateways
and hosts regarding the low-level operation of the Internet. For
example, <span class="acronym">ICMP</SPAN
> Echo packets are commonly used
to test for network connectivity; the response is usually either
an <span class="acronym">ICMP</SPAN
> Echo Reply or an <span class="acronym">ICMP</SPAN
>
Destination Unreachable message type. <span class="acronym">ICMP</SPAN
> packets
are identified by an 8-bit <span class="acronym">TYPE</SPAN
> field (see <a class="xref" href="#PUIS-CHP-16-TAB-1" title="ICMP Packet Types">Table 16.1</A
>):</P
><table class="table"><caption class="table"><a class="title" name="PUIS-CHP-16-TAB-1">Table 16.1: ICMP Packet Types</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">TYPE Field</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">ICMP Message Type</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Echo Reply (used by <kbd class="command">ping</KBD
>)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">3</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Destination Unreachable</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">4</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Source Quench</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">5</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Redirect (change a route)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">8</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Echo Request (used by <kbd class="command">ping</KBD
>)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">9</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Router Advertisement</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">10</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Router Solicitation</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">11</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Time Exceeded for a Datagram</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">12</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Parameter Problem on a Datagram</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">13</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Timestamp Request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">14</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Timestamp Reply</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">15</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Information Request (obsolete)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">16</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Information Reply (obsolete)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">17</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Address-Mask Request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">18</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Address-Mask Reply</P
></TD
></TR
></TBODY
></TABLE
><p class="para">Although we have included all types for completeness,
the most important types for our purposes are types 3, 4, and 5.
An attacker can craft <span class="acronym">ICMP</SPAN
> packets with these
fields to redirect your network traffic away, or to perform a denial
of service. If you use a firewall (discussed in <a class="xref" href="ch21_01.htm" title="Firewalls">Chapter 21, <cite class="chapter">Firewalls</CITE
></A
>),
you will want to be sure that these types are blocked or monitored.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-16-SECT-2.4.2">16.2.4.2 TCP</A
></H4
><p class="para"><span class="acronym">TCP</SPAN
><a class="indexterm" name="AUTOID-20411"></A
><a class="indexterm" name="AUTOID-20413"></A
>
provides a reliable, ordered, two-way transmission stream between
two programs that are running on the same or different computers.
&quot;Reliable&quot; means that every byte transmitted is
guaranteed to reach its destination (or you are notified that the
transmission failed), and that each byte arrives in the order in
which it is sent. Of course, if the connection is physically broken,
bytes that have not yet been transmitted will not reach their destination
unless an alternate route can be found. In such an event, the computer's
<span class="acronym">TCP</SPAN
> implementation will send an error message
to the process that is trying to send or receive characters, rather
than give the impression that the link is still operational.</P
><p class="para">Each <span class="acronym">TCP</SPAN
> connection is attached at each
end to a <a class="indexterm" name="AUTOID-20418"></A
>
<kbd class="command">port</KBD
>. Ports are identified
by 16-bit numbers. Indeed, at any instant, every connection on the
Internet can be identified by a set of two 32-bit numbers and two
16-bit numbers:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Host address of the connection's
originator</P
></LI
><li class="listitem"><p class="para">Port number of the connection's originator</P
></LI
><li class="listitem"><p class="para">Host address of the connection's target</P
></LI
><li class="listitem"><p class="para">Port number of the connection's target</P
></LI
></UL
><p class="para">For example, <a class="xref" href="#PUIS-CHP-16-FIG-5" title="A few Internet connections with port numbers">Figure 16.5</A
>
shows three people on three separate workstations logged into a
server using the <kbd class="command">rlogin</KBD
> program. Each process's <span class="acronym">TCP</SPAN
>
connection starts on a different host and at a different originating
port number, but each connection terminates on the same host (the
server) and the same port (513).</P
><h4 class="figure"><a class="title" name="PUIS-CHP-16-FIG-5">Figure 16.5: A few Internet connections with port numbers</A
></H4
><img class="graphic" src="figs/puis_1605.gif" alt="Figure 16.5"><p class="para">The idea that the workstations are all connecting
to port number 513 can be confusing. Nevertheless, these are all
distinct connections, because each one is coming from a different
originating host-port pair, and the server moves each connection
to a separate, higher-numbered port.</P
><p class="para">The <span class="acronym">TCP</SPAN
>
protocol uses two special bits in the packet header, <a class="indexterm" name="AUTOID-20440"></A
><a class="indexterm" name="AUTOID-20442"></A
>
<span class="acronym">SYN</SPAN
> and <span class="acronym">ACK</SPAN
>,
to negotiate the creation of new connections. To open a <span class="acronym">TCP</SPAN
>
connection, the requesting host sends a packet that has the <span class="acronym">SYN</SPAN
>
bit set but does not have the <span class="acronym">ACK</SPAN
> bit set. The
receiving host acknowledges the request by sending back a packet
that has both the <span class="acronym">SYN</SPAN
> and the <span class="acronym">ACK</SPAN
>
bits set. Finally, the originating host sends a third packet, again
with the <span class="acronym">ACK</SPAN
> bit set, but this time with the
<span class="acronym">SYN</SPAN
> bit unset. This process is called the <span class="acronym">TCP</SPAN
>
&quot;<a class="indexterm" name="AUTOID-20454"></A
>
three-way
handshake,&quot; and is shown in <a class="xref" href="#PUIS-CHP-16-FIG-6" title='The TCP/IP "three-way handshake&quot;'>Figure 16.6</A
>.
By looking for packets that have the <span class="acronym">ACK</SPAN
> bit
unset, one can distinguish packets requesting new connections from
those which are being sent in response to connections that have
already been created. This distinction is useful when constructing
packet filtering firewalls, as we shall see in <a class="xref" href="ch21_01.htm" title="Firewalls">Chapter 21</A
>.</P
><h4 class="figure"><a class="title" name="PUIS-CHP-16-FIG-6">Figure 16.6: The TCP/IP &quot;three-way handshake&quot;</A
></H4
><img class="graphic" src="figs/puis_1606.gif" alt="Figure 16.6"><p class="para"><span class="acronym">TCP</SPAN
> is used
for most Internet services which require the sustained synchronous
transmission of a stream of data in one or two directions. For example,
<span class="acronym">TCP</SPAN
> is used for remote terminal service, file
transfer, and electronic mail. <span class="acronym">TCP</SPAN
> is also used
for sending commands to displays using the X Window System.</P
><p class="para"><a class="xref" href="#PUIS-CHP-16-TAB-2" title="Some Common TCP Services and Ports">Table 16.2</A
> identifies some <span class="acronym">TCP</SPAN
>
services commonly enabled on <span class="acronym">UNIX</SPAN
> machines. These
services and port numbers are usually found in the <i class="filename">/etc/services</I
>
file.[10]
(Note that
non<span class="acronym">-UNIX</SPAN
> hosts can run most of these services;
the protocols are usually specified independent of any particular
implementation.)</P
><blockquote class="footnote"><p class="para">[10] A more extensive list of TCP and UDP ports and services
may be found in <a class="xref" href="appg_01.htm" title="Table of IP Services">Appendix G, <cite class="appendix">Table of IP Services</CITE
></A
>.</P
></BLOCKQUOTE
><table class="table"><caption class="table"><a class="title" name="PUIS-CHP-16-TAB-2">Table 16.2: Some Common TCP Services and Ports</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">TCP Port</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Service Name</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Function</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">7</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">echo</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Echoes characters (for testing)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">9</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">discard</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Discards characters (for testing)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">13</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">daytime</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Time of day</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">19</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">chargen</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Character generator</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">21</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">ftp</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">File Transfer Protocol (FTP)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">23</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">telnet</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Virtual terminal</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">25</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">smtp</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Electronic mail</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">37</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">time</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Time of day</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">42</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">nameserver</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">TCP nameservice</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">43</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">whois</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">NIC <i class="filename">whois </I
>service</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">domain</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Domain Name Service (DNS)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">79</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">finger</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">User information</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">80</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">http</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">World Wide Web (WWW)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">109</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">pop2</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Post Office Protocol (POP)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">110</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">pop3</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Post Office Protocol (POP)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">111</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">sunrpc</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Sun Microsystem's Remote Procedure
Call (RPC)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">113</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">auth</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Authentication Service</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">119</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">nntp</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Network News Transfer Protocol (NNTP)
(Usenet)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">178</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">nsws</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">NeXTSTEP Window Server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">512</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">exec</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Executes commands on a remote UNIX host</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">513</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">login</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Logs in to a remote UNIX host</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">514</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">shell</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Retrieves a shell on a remote UNIX host</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">515</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">printer</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Remote printing</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">540</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">uucp</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Runs UUCP over TCP/IP (primarily
used for transporting netnews)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">2049</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">NFS</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">NFS over TCP</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">6000+</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">X</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">X Window System<a class="indexterm" name="AUTOID-20698"></A
><a class="indexterm" name="AUTOID-20700"></A
></P
></TD
></TR
></TBODY
></TABLE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-16-SECT-2.4.3">16.2.4.3 UDP</A
></H4
><p class="para">The <a class="indexterm" name="AUTOID-20705"></A
><a class="indexterm" name="AUTOID-20707"></A
>
User Datagram Protocol
provides a simple, unreliable system for sending packets of data
between two or more programs running on the same or different computers.
&quot;Unreliable&quot; means that the operating system does
not guarantee that every packet sent will be delivered, or that
packets will be delivered in order. <span class="acronym">UDP</SPAN
> does
make its best effort to deliver the packets, however. On a <span class="acronym">LAN</SPAN
>,
<span class="acronym">UDP</SPAN
> often approaches 100% reliability.</P
><p class="para"><span class="acronym">UDP</SPAN
>'s advantage is that it has
less overhead than <span class="acronym">TCP</SPAN
>&nbsp;- less overhead
lets <span class="acronym">UDP</SPAN
>-based services transmit information
with as much as 10 times the throughput. <span class="acronym">UDP</SPAN
>
is used primarily for Sun's Network Filesystem, for <a class="indexterm" name="AUTOID-20717"></A
>
<span class="acronym">NIS</SPAN
>,
for resolving hostnames, and for transmitting routing information.
It is also used for services that aren't affected negatively
if they miss an occasional packet because they will get another
periodic update later, or because the information isn't
really that important. This includes services such as rwho, talk,
and some time services.</P
><p class="para"><span class="acronym">UDP</SPAN
> packets
are often broadcast to a given port on every host that resides on
the same local area network. Broadcast packets are used frequently
for services such as time of day.</P
><p class="para">As with <span class="acronym">TCP</SPAN
>,
<span class="acronym">UDP</SPAN
> packets are also sent from a port<i class="firstterm"></I
>on the sending host to another port on the receiving
host. Each <span class="acronym">UDP</SPAN
> packet also contains user data.
If a program is listening to the particular port and is ready for
the packet, it will be received. Otherwise, the packet will be ignored.</P
><p class="para">Ports are identified by 16-bit numbers. Table 0-71
lists some common <span class="acronym">UDP</SPAN
> ports.</P
><table class="table"><caption class="table"><a class="title" name="PUIS-CHP-16-TAB-3">Table 16.3: Some Common UDP Services and Ports</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">UDP Port</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Service Name</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Function</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">7</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">echo</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Returns the user's data in another
datagram</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">9</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">discard</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Does nothing</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">13</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">daytime</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Returns time of day</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">19</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">chargen</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Character Generator</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">37</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">time</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Returns time of day</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">domain</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Domain Name Service (DNS)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">69</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">tftp</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Trivial File Transfer Protocol (TFTP)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">111</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">sunrpc</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Sun Microsystem's Remote Procedure
Call (RPC) portmapper</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">123</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">ntp</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Network Time Protocol (NTP)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">161</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">snmp</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Simple Network Management Protocol (SNMP)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">512</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">biff</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Alerts you to incoming mail (Biff was
the name of a dog who barked when the mailman came)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">513</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">who</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Returns who is logged into the system</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">514</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">syslog</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">System logging facility</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">517</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">talk</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Initiates a talk request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">518</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">ntalk</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The &quot;new&quot; talk request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">520</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">route</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Routing Information Protocol (RIP)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">533</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">netwall</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Write on every user's terminal</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">2049</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">NFS</I
> (usually)</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Network Filesystem (NFS)<a class="indexterm" name="AUTOID-20889"></A
><a class="indexterm" name="AUTOID-20891"></A
></P
></TD
></TR
></TBODY
></TABLE
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-16-SECT-2.5">16.2.5 Clients and Servers</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-20896"></A
><a class="indexterm" name="AUTOID-20898"></A
>The Internet Protocol is based on the <i class="filename">client/server</I
>
model. Programs called clients initiate connections over the network
to other programs called servers, which wait for the connections
to be made. One example of a client/server pair is the
network time system. The client program is the program that asks
the network server for the time. The server program is the program
that listens for these requests and transmits the correct time.
In <span class="acronym">UNIX</SPAN
> parlance, server programs that run in
the background and wait for user requests are often known as <i class="filename">daemons</I
>.</P
><p class="para">Clients and servers are normally different programs.
For example, if you wish to log onto another machine, you can use
the <a class="indexterm" name="AUTOID-20904"></A
>
telnet program:</P
><blockquote class="screen"><pre class="screen">% <b class="emphasis.bold">telnet athens.com</B
>
Trying... 
Connected to ATHENS.COM 
Escape character is '^]'.  

4.4 BSD Unix (ATHENS.COM)  

login:</PRE
></BLOCKQUOTE
><p class="para">When
you type telnet, the client telnet program on your computer (usually
the program <i class="filename">/usr/bin/telnet</I
>, or possibly <i class="filename">/usr/ucb/telnet</I
>)
connects to the <kbd class="command">telnet</KBD
> server (in this case, named <i class="filename">/usr/etc/in.telnetd)</I
>
running on the computer <i class="filename">athens.com</I
>. As stated, clients and servers
normally reside in different programs. One exception to this rule
is the <kbd class="command">sendmail</KBD
> program, which includes the code for both the server
and a client, bundled together in a single application.</P
><p class="para">The
<kbd class="command">telnet</KBD
> program can also be used to connect to any other <span class="acronym">TCP</SPAN
>
port that has a process listening. For instance, you might connect
to port 25 (the <span class="acronym">SMTP</SPAN
> port) to fake some mail
without going through the normal mailer:</P
><blockquote class="screen"><pre class="screen">% <b class="emphasis.bold">telnet control.mil 25</B
>
Trying 45.1.12.2 ...
Connected to hq.control.mil.
Escape character is '^]'.
220-hq.control.mil Sendmail 8.6.10 ready at Tue, 17 Oct 1995 20:00:09 -0500
220 ESMTP spoken here
<b class="emphasis.bold">HELO kaos.org</B
>
250 hq.control.mil Hello kaos.org, pleased to meet you
<b class="emphasis.bold">MAIL FROM:&lt;agent86@control.gov&gt;</B
>
250 &lt;agent86&gt;... Sender ok
<b class="emphasis.bold">RCPT TO:&lt;agent99@control.mil&gt;</B
>
550 &lt;agent99&gt;... Recipient ok
<b class="emphasis.bold">DATA</B
>
354 Enter mail, end with &quot;.&quot; on a line by itself
<b class="emphasis.bold">To: agent99
From: Max &lt;agent86&gt;
Subject: tonight

99,
I know I was supposed to take you out to dinner tonight, but I have
been captured by KAOS agents, and they won't let me out until they
finish torturing me. I hope you understand. 
Love, Max</B
>
.
250 UAA01441 Message accepted for delivery
<b class="emphasis.bold">quit</B
>
221 hq.control.mil closing connection
Connection closed by foreign host.
%</PRE
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-16-SECT-2.6">16.2.6 Name Service</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-20930"></A
><a class="indexterm" name="AUTOID-20932"></A
><a class="indexterm" name="AUTOID-20935"></A
>As
we mentioned, in the early days of the Internet, a single <i class="filename">/etc/hosts</I
>
file contained the address and name of each computer on the Internet.
But as the file grew to contain thousands of lines, and as changes
to the list of names (or the namespace) started being made on a
daily basis, a single <i class="filename">/etc/hosts</I
> file soon became
impossible to maintain. Instead, the Internet developed a distributed
networked-based naming service called the <a class="indexterm" name="AUTOID-20940"></A
><a class="indexterm" name="AUTOID-20943"></A
>
Domain
Name Service (<span class="acronym">DNS</SPAN
>).</P
><p class="para"><span class="acronym">DNS</SPAN
>
implements a large-scale distributed database for translating hostnames
into IP addresses and vice-versa, and performing related name functions.
The software performs this function by using the network to resolve
each part of the hostname distinctly. For example, if a computer
is trying to resolve the name <i class="filename">girigiri.gbrmpa.gov.au</I
>,
it would first get the address of the root domain server (usually
stored in a file) and ask that machine for the address of the <i class="filename">au</I
>
domain server. The computer would then ask the <i class="filename">au </I
>domain
server for the address of the gov.au domain server, and then would
ask that machine for the address of the <i class="filename">gbrmpa.gov.au</I
>
domain server. Finally, the computer would then ask the <i class="filename">gbrmpa.gov.au</I
>
domain server the address for the computer called <i class="filename">girigiri.gbrmpa.gov.au</I
>.
(Name resolution is shown in <a class="xref" href="#PUIS-CHP-16-FIG-7" title="The DNS tree hierarchy for name resolution">Figure 16.7</A
>.) A variety
of caching techniques are employed to minimize overall network traffic.</P
><h4 class="figure"><a class="title" name="PUIS-CHP-16-FIG-7">Figure 16.7: The DNS tree hierarchy for name resolution</A
></H4
><img class="graphic" src="figs/puis_1607.gif" alt="Figure 16.7"><p class="para"><span class="acronym">DNS</SPAN
> is based on <span class="acronym">UDP</SPAN
>,
but can also use a <span class="acronym">TCP</SPAN
> connection for some operations.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-16-SECT-2.6.1">16.2.6.1 DNS under UNIX</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-20965"></A
><a class="indexterm" name="AUTOID-20968"></A
>The standard <span class="acronym">UNIX</SPAN
>
implementation of <span class="acronym">DNS</SPAN
> is called <kbd class="command">bind</KBD
> and was
originally written at the University of California at Berkeley.
This implementation is based on three parts: a library for the client
side, and two programs for the server:</P
><dl class="variablelist"><dt class="term">Resolver</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-20978"></A
><a class="indexterm" name="AUTOID-20980"></A
><a class="indexterm" name="AUTOID-20982"></A
>The resolver library
uses <span class="acronym">DNS</SPAN
> to implement the <kbd class="command">gethostbyname()</KBD
>
and <kbd class="command">gethost-byaddress()</KBD
> library calls.
It is linked into any program that needs to perform name resolution
using <span class="acronym">DNS</SPAN
>. The first time that a program linked
with the resolver attempts to resolve a hostname, the library reads
the <i class="filename">/etc/resolv.conf</I
> file to determine the IP
address of the nameserver to be used for name resolution. The <i class="filename">resolv.conf</I
>
file can also contain the program's default domain, which
is used to resolve unqualified hostnames (such as <i class="filename">girigiri</I
>,
as opposed to <i class="filename">girigiri.gbrmpa.gov.au</I
>).</P
></DD
><dt class="term">named (or in.named) </DT
><dd class="listitem"><p class="para">The <i class="filename"><a class="indexterm" name="AUTOID-20997"></A
><a class="indexterm" name="AUTOID-20999"></A
>named</I
>
daemon is the program which implements the server side of the <span class="acronym">DNS</SPAN
>
system. When <kbd class="command">named</KBD
> is started, it reads a <i class="filename">boot file</I
> (usually <i class="filename">/etc/named.boot)</I
>
that directs the program to the location of its auxiliary files.
These files then initialize the<i class="filename"> named</I
> daemon
with the location of the root domain servers. If the <i class="filename">named</I
>
daemon is the nameserver for a domain or a subdomain (which is usually
the case), the configuration file instructs the program to read
in the domain's host tables or get them from a &quot;master&quot;
server.</P
></DD
><dt class="term">named-xfer</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-21011"></A
><a class="indexterm" name="AUTOID-21013"></A
>Program
used to transfer zones from primary to secondary servers. This program
is usually installed as <i class="filename">/etc/named-xfer.</I
> It is
run by the secondary server to perform a zone transfer. The <kbd class="command">named-xfer</KBD
>
program connects to the named program running on the primary server
and performs the transfer using <span class="acronym">TCP</SPAN
>.</P
></DD
></DL
><p class="para">More details about <span class="acronym">DNS</SPAN
> and the <span class="acronym">BIND</SPAN
>
name server may be found in the O'Reilly &amp; Associates
book <em class="emphasis">DNS and BIND</EM
> by Paul Albitz and Cricket Liu.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-16-SECT-2.6.2">16.2.6.2 Other naming services</A
></H4
><p class="para">In addition to
<span class="acronym">DNS</SPAN
>, there are at least four vendor-specific
systems for providing nameservice and other information to networked
workstations. They are:</P
><dl class="variablelist"><dt class="term"><span class="acronym">NIS</SPAN
> (Sun Microsystems)</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-21032"></A
><a class="indexterm" name="AUTOID-21035"></A
>Originally called &quot;Yellow
Pages,&quot; Sun's Network Information System (<span class="acronym">NIS</SPAN
>)
creates a simple mechanism whereby files such as <i class="filename">/etc/passwd</I
>
and <i class="filename">/etc/hosts</I
> from one computer can be shared
by another. Although <span class="acronym">NIS</SPAN
> has numerous security
problems, it is widely used. [11]</P
><blockquote class="footnote"><p class="para">[11] We describe
NIS and NIS+ in more detail in <a class="xref" href="ch19_01.htm" title="RPC, NIS, NIS+,  and Kerberos">Chapter 19, <cite class="chapter">RPC, NIS, NIS+,  and Kerberos</CITE
></A
>.</P
></BLOCKQUOTE
></DD
><dt class="term"><span class="acronym">NIS</SPAN
>+ (Sun Microsystems)</DT
><dd class="listitem"><p class="para"><span class="acronym">NIS</SPAN
>+<a class="indexterm" name="AUTOID-21050"></A
>
is a total rewrite of <span class="acronym">NIS</SPAN
>, and it dramatically
increases both security and flexibility. Nevertheless, <span class="acronym">NIS</SPAN
>+
is not used as widely as <span class="acronym">NIS</SPAN
>.</P
></DD
><dt class="term">NetInfo (NeXT, Inc.)</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-21059"></A
>NetInfo is a distributed
database similar to <span class="acronym">NIS</SPAN
>+. NetInfo is
tightly integrated in NeXT's <span class="acronym">NEXTSTEP</SPAN
>
operating system and is available for other operating systems from
a third party.</P
></DD
><dt class="term"><span class="acronym">DCE</SPAN
> (Open Software Foundation)</DT
><dd class="listitem"><p class="para"><span class="acronym">OSF</SPAN
>'s <a class="indexterm" name="AUTOID-21069"></A
>
Distributed Computing Environment
offers yet another system for distributing a database of information,
such as usernames and hosts addresses, to networked workstations.</P
></DD
></DL
><p class="para">All of these systems are designed to distribute a variety
of administrative information throughout a network. All of these
systems must also use <span class="acronym">DNS</SPAN
> to resolve hostnames
outside the local organization. <a class="indexterm" name="AUTOID-21073"></A
><a class="indexterm" name="AUTOID-21075"></A
><a class="indexterm" name="AUTOID-21078"></A
><a class="indexterm" name="AUTOID-21081"></A
><a class="indexterm" name="AUTOID-21083"></A
></P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch16_01.htm" title="16.1 Networking"><img src="../gifs/txtpreva.gif" alt="Previous: 16.1 Networking" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Practical UNIX &amp; Internet Security"><img src="../gifs/txthome.gif" alt="Practical UNIX &amp; Internet Security" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch16_03.htm#PUIS-CHP-16-SECT-3.1" title="16.3 IP Security"><img src="../gifs/txtnexta.gif" alt="Next: 16.3 IP Security" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">16.1 Networking</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">16.3 IP Security</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
