<html><head>
<title>[Chapter 4] 4.2 Special Usernames</TITLE>
<meta name="DC.title" content="Practical UNIX &amp; Internet Security"><meta name="DC.creator" content="Simson Garfinkel &amp; Gene Spafford"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:00:56Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-148-8" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch04_01.htm" title="4. Users, Groups, and the Superuser"><link rel="prev" href="ch04_01.htm" title="4.1 Users and Groups"><link rel="next" href="ch04_03.htm#PUIS-CHP-4-SECT-3.1" title="4.3 su: Changing Who You Claim to Be"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Practical UNIX &amp; Internet Security" usemap="#srchmap" border="0"></H1
><map name="srchmindex.htmlap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Practical UNIX &amp; Internet Security"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch04_01.htm" title="4.1 Users and Groups"><img src="../gifs/txtpreva.gif" alt="Previous: 4.1 Users and Groups" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 4<br>Users, Groups, and the Superuser</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch04_03.htm#PUIS-CHP-4-SECT-3.1" title="4.3 su: Changing Who You Claim to Be"><img src="../gifs/txtnexta.gif" alt="Next: 4.3 su: Changing Who You Claim to Be" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PUIS-CHP-4-SECT-2">4.2 Special Usernames</A
></H2
><p class="para">In <a class="indexterm" name="AUTOID-3082"></A
>
addition
to regular users, <span class="acronym">UNIX </SPAN
>comes with a number of
special users that exist for administrative and accounting purposes.
We've already mentioned some of these users. The most important
of them is <i class="systemitem.username">root</I
>, the
superuser.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-4-SECT-2.1">4.2.1 The Superuser</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-3090"></A
><a class="indexterm" name="AUTOID-3092"></A
><a class="indexterm" name="AUTOID-3094"></A
>Every
<span class="acronym">UNIX</SPAN
> system comes with a special user in the
<i class="filename">/etc/passwd</I
> file with a <span class="acronym">UID</SPAN
>
of 0. This user is known as the <i class="firstterm">superuser</I
>
and is normally given the username <i class="systemitem.username">root</I
>.
The password for the <i class="systemitem.username">root</I
>
account is usually called simply the &quot;<i class="systemitem.username">root</I
> password.&quot;</P
><p class="para">The <i class="systemitem.username">root</I
> account
is the identity used by the operating system itself to accomplish
its basic functions, such as logging users in and out of the system,
recording accounting information, and managing input/output
devices. For this reason, the superuser exerts nearly complete control
over the operating system: nearly all security restrictions are
bypassed for any program that is run by the <i class="systemitem.username">root</I
> user, and most of the checks
and warnings are turned off.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-4-SECT-2.1.1">4.2.1.1 Any username can be the superuser</A
></H4
><p class="para">As
we noted in the section <a class="xref" href="ch04_01.htm" title="Users and Groups">Section 4.1, "Users and Groups</A
>&quot;
Although every UNIX user has a username of up to eight characters
long, inside the computer UNIX represents each user by a single
number: the user identifier (UID). Usually, the UNIX system administrator
gives every user on the computer a different UID. UNIX also uses
special usernames for a variety of system functions. As with usernames
associated with human users, system usernames usually have their
own UIDs as well. Here are some common &quot;users&quot;
on various versions of UNIX:&quot;&gt;&quot; earlier in
this chapter, any account which has a <span class="acronym">UID</SPAN
> of
0 has superuser privileges. The username <i class="systemitem.username">root</I
>
is merely a convention. Thus, in the following sample <i class="filename">/etc/passwd</I
>
file, both <i class="systemitem.username">root</I
> and
<i class="systemitem.username">beth</I
> can execute commands
without any security checks:</P
><blockquote class="screen"><pre class="screen">root:zPDeHbougaPpA:0:1:Operator:/:/bin/ksh
beth:58FJ32JK.fj3j:0:101:Beth Cousineau:/u/beth:/bin/csh
rachel:eH5/.mj7NB3dx:181:100:Rachel Cohen:/u/rachel:/bin/ksh</PRE
></BLOCKQUOTE
><p class="para">You should immediately be suspicious of accounts on your system
which have a <span class="acronym">UID</SPAN
> of 0 that you did not install;
accounts such as these are frequently added by people who break
into computers so that they will have a simple way of obtaining
superuser access in the future.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-4-SECT-2.1.2">4.2.1.2 Superuser is not for casual use</A
></H4
><p class="para">The <i class="systemitem.username">root</I
> account is not an account
designed for the personal use of the system administrator. Because
all security checks are turned off for the superuser, a typing error
could easily trash the entire system.</P
><p class="para"><a class="indexterm" name="AUTOID-3125"></A
>The <span class="acronym">UNIX</SPAN
> system administrator
will frequently have to become the superuser to perform various
system administration tasks. This change in status can be completed
using the <kbd class="command">su</KBD
> command (discussed later in this chapter) to spawn
a privileged shell. Extreme caution must be exercised when operating
with superuser capabilities. When the need for superuser access
has ended, the system administrator should exit from the privileged
shell.</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> Many versions of <span class="acronym">UNIX</SPAN
> allow you to
configure certain terminals so that users can't log in
as the superuser from the login: prompt. Anyone who wishes to have
superuser privileges must first log in as himself or herself and
then <kbd class="command">su</KBD
> to <i class="systemitem.username">root</I
>. This
feature makes tracking who is using the <i class="systemitem.username">root</I
>
account easier, because the <kbd class="command">su</KBD
> command logs the username of the
person who runs it and the time that it was run.[7]
The feature also adds to overall system security, because people
will need to know <em class="emphasis">two</EM
> passwords to gain superuser
access to your system.</P
><p class="para">In general, most <span class="acronym">UNIX</SPAN
>
systems today are configured so that the superuser can log in with
the <i class="systemitem.username">root</I
> account on the system console, but not on other terminals.
We describe this technique in the section called <a class="xref" href="ch04_03.htm#PUIS-CHP-4-SECT-3.1" title="Restricting su">Section 4.3.6, "Restricting <kbd class="command">su</KBD
></A
>&quot; later in this chapter.</P
><p class="para">Even if your system allows users
to log directly into the <i class="systemitem.username">root</I
>
account, we recommend that you institute rules that require users
to first log into their own accounts and then use the <kbd class="command">su</KBD
> command.</P
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-4-SECT-2.1.3">4.2.1.3 What the superuser can do</A
></H4
><p class="para">Any process
that has an <i class="firstterm">effective </I
>UID of 0 (see &quot;Real
and Effective User IDs&quot; later in this chapter) runs as
the superuser&nbsp;- that is, any process with a <span class="acronym">UID</SPAN
>
of 0 runs without security checks and is allowed to do almost anything.
Normal security checks and constraints are ignored for the superuser,
although most systems do audit and log some of the superuser's
actions.</P
><p class="para">Some of the things that the superuser can
do include:</P
><p class="para">Process Control:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Change the <i class="firstterm">nice</I
>
value of any process (see the section &quot;Process priority
and niceness&quot; in <a class="xref" href="appc_01.htm" title="UNIX Processes">Appendix C, <cite class="appendix">UNIX Processes</CITE
></A
>).</P
></LI
><li class="listitem"><p class="para">Send any signal to any process (see &quot;Signals&quot;
in <a class="xref" href="appc_01.htm" title="UNIX Processes">Appendix C</A
>).</P
></LI
><li class="listitem"><p class="para">Alter &quot;hard limits&quot; for maximum
<span class="acronym">CPU</SPAN
> time as well as maximum file, data segment,
stack segment, and core file sizes (see <a class="xref" href="ch11_01.htm" title="Protecting Against Programmed Threats">Chapter 11, <cite class="chapter">Protecting Against Programmed Threats</CITE
></A
>).</P
></LI
><li class="listitem"><p class="para">Turn accounting on and off (see <a class="xref" href="ch10_01.htm" title="Auditing and Logging">Chapter 10</A
>).</P
></LI
><li class="listitem"><p class="para">Bypass login restrictions prior to shutdown. (Note:
this may not be possible if you have configured your system so that
the superuser cannot log into terminals.)</P
></LI
><li class="listitem"><p class="para">Change his or her process <span class="acronym">UID</SPAN
>
to that of any other user on the system.</P
></LI
><li class="listitem"><p class="para">Log out all users and shutdown or reboot the system.</P
></LI
></UL
><p class="para">Device Control:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Access any working device.</P
></LI
><li class="listitem"><p class="para">Shut down the computer.</P
></LI
><li class="listitem"><p class="para">Set the date and time.</P
></LI
><li class="listitem"><p class="para">Read or modify any memory location.</P
></LI
><li class="listitem"><p class="para">Create new devices (anywhere in the filesystem)
with the mknod command.</P
></LI
></UL
><p class="para"></P
><p class="para">Network Control:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Run network services on &quot;trusted&quot;
ports (see <a class="xref" href="ch17_01.htm" title="TCP/IP Services">Chapter 17, <cite class="chapter">TCP/IP Services</CITE
></A
>).</P
></LI
><li class="listitem"><p class="para">Reconfigure the network.</P
></LI
><li class="listitem"><p class="para">Put the network interface into &quot;promiscuous
mode&quot; and examine all packets on the network (possible
only with some kinds of network interfaces).</P
></LI
></UL
><p class="para">Filesystem Control:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Read, modify, or delete any file or
program on the system (see <a class="xref" href="ch05_01.htm" title="The UNIX Filesystem">Chapter 5, <cite class="chapter">The UNIX Filesystem</CITE
></A
>).</P
></LI
><li class="listitem"><p class="para">Run any program.[8]</P
><blockquote class="footnote"><p class="para">[8] If a program has
a file mode of 000, <i class="systemitem.username">root</I
>
must set the execute bit of the program with the 
<kbd class="command">chmod()</KBD
>
system call before the program can be run, although
shell scripts can be run by feeding their input directly into /bin/sh.</P
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Change a disk's electronic label.[9]</P
><blockquote class="footnote"><p class="para">[9] Usually stored on the first 16 blocks of a hard disk or floppy
disk formatted with the UNIX filesystem.</P
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Mount and unmount filesystems.</P
></LI
><li class="listitem"><p class="para">Add, remove, or change user accounts.</P
></LI
><li class="listitem"><p class="para">Enable or disable quotas and accounting.</P
></LI
><li class="listitem"><p class="para">Use the <kbd class="command">chroot()</KBD
> system call,
which changes a process's view of the filesystem <i class="systemitem.username">root</I
> directory.</P
></LI
><li class="listitem"><p class="para">Write to the disk after it is &quot;100 percent&quot;
full. (The Berkeley Fast Filesystem and the Linux ext2 File System
both allow the reservation of some <i class="filename">minfree </I
>amount
of the disk. Normally, a report that a disk is 100% full
implies that there is still 10% left. Although this space
can be used by the superuser, it shouldn't be: filesystems
run faster when their disks are not completely filled.)</P
></LI
></UL
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-4-SECT-2.1.4">4.2.1.4 What the superuser can't do</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-3232"></A
>Despite all of the powers listed above, there are
some things that the superuser can't do, including:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Make a change to a filesystem that
is mounted read-only. (However, the su-peruser can make changes
directly to the raw device, or unmount a read-only filesystem and
remount it read/write, provided that the media is not physically
write-protected.)</P
></LI
><li class="listitem"><p class="para">Unmount a filesystem which contains open files,
or in which some running process has set its current directory.[10]</P
><blockquote class="footnote"><p class="para">[10] Many BSD variants (including NetBSD and FreeBSD) provide an
<em class="emphasis">-f</EM
> option to <em class="emphasis">umount</EM
>, which
forcibly unmounts a busy filesystem.</P
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Write directly to a directory, or create a hard
link to a directory (although these operations are allowed on some
<span class="acronym">UNIX</SPAN
> systems).</P
></LI
><li class="listitem"><p class="para">Decrypt the passwords stored in the <i class="filename">/etc/passwd</I
>
file, although the superuser can modify the <i class="filename">/bin/login</I
>
and <kbd class="command">su</KBD
> system programs to record passwords when they are typed.
The superuser can also use the passwd command to change the password
of any account.</P
></LI
><li class="listitem"><p class="para">Terminate a process that has entered a wait state
inside the kernel, although the superuser can shut down the computer,
effectively killing all processes.</P
></LI
></UL
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-4-SECT-2.1.5">4.2.1.5 The problem with the superuser</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-3257"></A
><a class="indexterm" name="AUTOID-3260"></A
>The superuser is the
main security weakness in the <span class="acronym">UNIX</SPAN
> operating
system. Because the superuser can do anything, after a person gains
superuser privileges&nbsp;- for example, by learning the <i class="systemitem.username">root</I
> password and logging in
as <i class="systemitem.username">root</I
>&nbsp;- that
person can do virtually anything to the system. This explains why
most attackers who break into <span class="acronym">UNIX</SPAN
> systems try
to become superusers.</P
><p class="para">Most <span class="acronym">UNIX</SPAN
>
security holes that have been discovered are of the kind that allow
regular users to obtain superuser privileges. Thus, most <span class="acronym">UNIX</SPAN
>
security holes result in a catastrophic bypass of the operating
system's security mechanisms. After a flaw is discovered
and exploited, the entire computer is compromised.</P
><p class="para">There
are a number of techniques for minimizing the impact of such system
compromises, including:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Store your files on removable media,
so that an attacker who gains superuser privileges will still not
have access to critical files.</P
></LI
><li class="listitem"><p class="para">Encrypt your files. Being the superuser grants privileges
only on the <span class="acronym">UNIX</SPAN
> system; it does not magically
grant the mathematical prowess necessary to decrypt a well-coded
file or the necessary clairvoyance to divine encryption keys. (Encryption
is discussed in <a class="xref" href="ch06_01.htm" title="Cryptography">Chapter 6, <cite class="chapter">Cryptography</CITE
></A
>.)</P
></LI
><li class="listitem"><p class="para">Mount disks read-only when possible.</P
></LI
><li class="listitem"><p class="para">Keep your backups of the system current. This practice
is discussed further in <a class="xref" href="ch07_01.htm" title="Backups">Chapter 7, <cite class="chapter">Backups</CITE
></A
>.</P
></LI
></UL
><p class="para">There are many other defenses, too, and we'll continue
to present them throughout this book.</P
><p class="para">Other operating
systems&nbsp;- including Multics&nbsp;- obviate the superuser
flaw by compartmentalizing the many system privileges which <span class="acronym">UNIX</SPAN
>
bestows on the <i class="systemitem.username">root</I
>
user. Indeed, attempts to design a &quot;secure&quot; <span class="acronym">UNIX</SPAN
>
(one that meets U.S. Government definitions of highly trusted systems)
have adopted this same strategy of dividing superuser privileges
into many different categories.</P
><p class="para">Unfortunately, attempts
at compartmentalization often fail. For example, Digital's
<span class="acronym">VAX/VMS</SPAN
> operating system divides system privileges
into many different classifications. But many of these privileges
can be used by a persistent person to establish the others: an attacker
who achieves &quot;physical <span class="acronym">I/O</SPAN
> access&quot;
can modify the operating system's database to grant himself
any other privilege that he desires. Thus, instead of a single catastrophic
failure in security, we have a cascading series of smaller failures
leading to the same end result. For compartmentalization to be successful,
it must be carefully thought out.<a class="indexterm" name="AUTOID-3291"></A
><a class="indexterm" name="AUTOID-3293"></A
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-4-SECT-2.2">4.2.2 Other Special Users</A
></H3
><p class="para">To minimize the
danger of superuser penetration, many <span class="acronym">UNIX</SPAN
> systems
use other special user accounts to execute system functions that
require special privileges&nbsp;- for example, to access certain
files or directories&nbsp;- but that do not require superuser
privileges. These special users are associated with particular system
functions, rather than individual users.</P
><p class="para"><a class="indexterm" name="AUTOID-3300"></A
>One very common special user is the <i class="systemitem.username">uucp </I
>user, which is used by
the <span class="acronym">UUCP</SPAN
> system for transferring files and electronic
mail between <span class="acronym">UNIX</SPAN
> computers connected by telephone.
When one computer dials another computer, it must first log in:
instead of logging in as <i class="systemitem.username">root</I
>,
the remote computer logs in as <i class="systemitem.username">uucp</I
>.
Electronic mail that's awaiting transmission to the remote
machine is stored in directories that are readable only by the <i class="systemitem.username">uucp</I
> user so that other users
on the computer can't access each other's personal
mail. (See <a class="xref" href="ch15_01.htm" title="UUCP">Chapter 15</A
>.)</P
><p class="para">Other common
special users include <i class="systemitem.username">daemon</I
>,
which is often used for network utilities, <i class="systemitem.username">bin</I
> and <i class="systemitem.username">sys</I
>, which are used for system
files, and <i class="systemitem.username">lp</I
>, which
is used for the line printer system.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-4-SECT-2.3">4.2.3 Impact of the /etc/passwd and /etc/group
Files  on Security</A
></H3
><p class="para">From <a class="indexterm" name="AUTOID-3317"></A
><a class="indexterm" name="AUTOID-3319"></A
><a class="indexterm" name="AUTOID-3321"></A
><a class="indexterm" name="AUTOID-3324"></A
><a class="indexterm" name="AUTOID-3327"></A
>
the point
of view of system security, <i class="filename">/etc/passwd</I
> is
one of the <span class="acronym">UNIX</SPAN
> operating system's most
important files. (Another very important file is <i class="filename">/dev/kmem</I
>,
which, if left unprotected, can be used to read or write any address
in the kernel's memory.) If you can alter the contents
of <i class="filename">/etc/passwd</I
>, you can change the password
of any user or make yourself the superuser by changing your <span class="acronym">UID</SPAN
>
to 0.</P
><p class="para">The <i class="filename">/etc/group</I
> file is also
very important. If you can change the <i class="filename">/etc/group</I
>
file, you can add yourself to any group that you wish. Often, by
adding yourself to the correct group, you can eventually gain access
to the <i class="filename">/etc/passwd</I
> file, and thus achieve all
superuser privileges. <a class="indexterm" name="AUTOID-3340"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch04_01.htm" title="4.1 Users and Groups"><img src="../gifs/txtpreva.gif" alt="Previous: 4.1 Users and Groups" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Practical UNIX &amp; Internet Security"><img src="../gifs/txthome.gif" alt="Practical UNIX &amp; Internet Security" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch04_03.htm#PUIS-CHP-4-SECT-3.1" title="4.3 su: Changing Who You Claim to Be"><img src="../gifs/txtnexta.gif" alt="Next: 4.3 su: Changing Who You Claim to Be" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">4.1 Users and Groups</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">4.3 su: Changing Who You Claim to Be</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
