<html><head>
<title>[Chapter 22] 22.3 tcpwrapper</TITLE>
<meta name="DC.title" content="Practical UNIX &amp; Internet Security"><meta name="DC.creator" content="Simson Garfinkel &amp; Gene Spafford"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:17:09Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-148-8" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch22_01.htm" title="22. Wrappers and Proxies"><link rel="prev" href="ch22_02.htm" title="22.2 sendmail (smap/smapd) Wrapper"><link rel="next" href="ch22_04.htm" title="22.4 SOCKS"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Practical UNIX &amp; Internet Security" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Practical UNIX &amp; Internet Security"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch22_02.htm" title="22.2 sendmail (smap/smapd) Wrapper"><img src="../gifs/txtpreva.gif" alt="Previous: 22.2 sendmail (smap/smapd) Wrapper" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 22<br>Wrappers and Proxies</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch22_04.htm" title="22.4 SOCKS"><img src="../gifs/txtnexta.gif" alt="Next: 22.4 SOCKS" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PUIS-CHP-22-SECT-3">22.3 tcpwrapper</A
></H2
><p class="para">The <i class="filename">tcpwrapper</I
>
program, written by Wietse Venema, is an easy-to-use utility that
you can use for logging and intercepting <span class="acronym">TCP</SPAN
>
services that are started by <i class="filename">inetd.</I
></P
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-3.1">22.3.1 Getting tcpwrapper</A
></H3
><p class="para">The <kbd class="command">tcpwrapper</KBD
> program
can be downloaded from the Internet using anonymous <span class="acronym">FTP</SPAN
>.
The path is:</P
><p class="para"><a class="systemitem.url" href="../../../WebStripper/protected.html#link=ftp://ftp.win.tue.nl/pub/security/tcp_wrapper_XXX.tar.gz">ftp://ftp.win.tue.nl/pub/security/tcp_wrapper_XXX.tar.gz</A
></P
><p class="para">Where <i class="filename">XXX</I
> is the current version
number. The file that you <span class="acronym">FTP</SPAN
> will be a <i class="filename">tar</I
> archive compressed with <i class="filename">gunzip</I
> (often
called <i class="filename">gzip</I
>). While you are connected to the
computer <a class="systemitem.ftpserver" href="../../../WebStripper/protected.html#link=ftp://ftp.win.tue.nl">ftp.win.tue.nl</A
>,
you might want to pick up Venema's <i class="filename">portmapper</I
>
replacement.</P
><p class="para">Another good place to look for <i class="filename">tcpwrapper</I
>
is:</P
><p class="para"><a class="systemitem.url" href="../../../WebStripper/protected.html#link=ftp://coast.cs.purdue.edu/pub/tools/tcp_wrappers">ftp://coast.cs.purdue.edu/pub/tools/tcp_wrappers</A
></P
><p class="para">While you are connected to the <i class="systemitem">coast.cs.purdue.edu</I
> machine,
you can find scores of other nifty security tools and papers, so
don't connect if you only have a few minutes to spare!</P
><p class="para">The tcpwrapper program is shipped standard with only a few
operating systems such as <span class="acronym">BSD/OS</SPAN
>. (It is shipped
standard with Linux but is rarely configured properly.) We hope
that this standard will change in the future.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-3.2">22.3.2 What tcpwrapper Does</A
></H3
><p class="para">The <kbd class="command">tcpwrapper</KBD
>
program gives the system administrator a high degree of control
over incoming <span class="acronym">TCP</SPAN
> connections. The program is
started by <kbd class="command">inetd</KBD
> after a remote host connects to your computer;
then <kbd class="command">tcpwrapper</KBD
> does one or more of the following:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Optionally sends a &quot;banner&quot;
to the connecting client. Banners are useful for displaying legal
messages or advisories.</P
></LI
><li class="listitem"><p class="para">Performs a double-reverse lookup of the IP address,
making sure that the <span class="acronym">DNS</SPAN
>[5] entries for the IP address and
hostname match. If they do not, this fact is logged. (By default,
<kbd class="command">tcpwrapper</KBD
> is compiled with the -<span class="acronym">DPARANOID</SPAN
> option,
so the program will automatically drop the incoming connection if
the two do not match, under the assumption that something somewhere
is being hacked.)</P
><blockquote class="footnote"><p class="para">[5] Domain
Name Service, the distributed service that maps IP numbers to hostnames,
and vice versa.</P
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Compares the incoming hostname and requested service
with an access control list, to see if this host or this combination
of host and service has been explicitly denied. If either is denied,
<kbd class="command">tcpwrapper</KBD
> drops the connection.</P
></LI
><li class="listitem"><p class="para">Uses the <i class="filename">ident</I
> protocol (<span class="acronym">RFC</SPAN
>
1413)[6] to determine the
username associated with the incoming connection.</P
><blockquote class="footnote"><p class="para">[6] RFC 1413 superseded RFC 931, but the <kbd class="command">define</KBD
>
in the code has not changed.</P
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Logs the results with <kbd class="command">syslog</KBD
>. (For further information,
see Chapter 10, <em class="emphasis">Auditing and Logging</EM
>.)</P
></LI
><li class="listitem"><p class="para">Optionally runs a command. (For example, you can
have <kbd class="command">tcpwrapper</KBD
> run <kbd class="command">finger</KBD
>, to get a list of users on a computer
that is trying to contact yours.)</P
></LI
><li class="listitem"><p class="para">Passes control of the connection to the &quot;real&quot;
network daemon, or passes control to some other program that can
take further action.</P
></LI
><li class="listitem"><p class="para">Transfers to a &quot;jail&quot; or &quot;faux&quot;
environment where you study the user's actions.[7]</P
><blockquote class="footnote"><p class="para">[7] We won't describe this approach further. It requires
some significant technical sophistication to get right, is of limited
value in most environments, and may pose some potentially significant
legal problems. For further information on hacker jails, see <em class="emphasis">Firewalls
and Internet Security</EM
> by Bill Cheswick and Steve Bellovin.</P
></BLOCKQUOTE
></LI
></UL
><p class="para">The <kbd class="command">tcpwrapper</KBD
> thus gives you a way to add logging to services
that are not normally logged, such as <kbd class="command">finger</KBD
>
and <kbd class="command">systat</KBD
>. It also allows you to substitute
different versions of a service daemon depending on the calling
host&nbsp;- or to reject the connection without providing any
server at all.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-3.3">22.3.3 Understanding Access Control</A
></H3
><p class="para">The
<kbd class="command">tcpwrapper</KBD
> system has a simple but powerful language and a pair
of configuration files that allow you to specify whether or not
incoming connections should be accepted. The files are <i class="filename">/etc/hosts.allow</I
> and <i class="filename"> /etc/hosts.deny</I
>. When an incoming
connection is handed to <kbd class="command">tcpwrapper</KBD
>, the program
applies the following rules:</P
><ol class="orderedlist"><li class="listitem"><p class="para">The file <i class="filename">/etc/hosts.allow</I
>
is searched to see if this (host, protocol) pair should be allowed.</P
></LI
><li class="listitem"><p class="para">If no match if found, the file <i class="filename">/etc/hosts.deny</I
>
is searched to see if this (host, protocol) pair should be denied.</P
></LI
><li class="listitem"><p class="para">If no match is found, the connection is allowed.</P
></LI
></OL
><p class="para">Each line in the <i class="filename">/etc/hosts.allow </I
>and<i class="filename">/etc/hosts.deny</I
> file has the following format:</P
><blockquote class="screen"><pre class="screen">daemon_list : client_host_list [: shell_command]</PRE
></BLOCKQUOTE
><p class="para">Where:</P
><dl class="variablelist"><dt class="term">daemon_list</DT
><dd class="listitem"><p class="para">Specifies the command name (<i class="filename">argv[0]</I
>)
of a list of <span class="acronym">TCP</SPAN
> daemons (e.g., <kbd class="command">telnetd</KBD
>). The
reserved keyword &quot;<span class="acronym">ALL</SPAN
>&quot; matches
all daemons; you can also use the &quot;<span class="acronym">EXCEPT</SPAN
>&quot;
operator (e.g., &quot;<span class="acronym">ALL</SPAN
> <span class="acronym">EXCEPT</SPAN
>
<i class="filename">in.ftpd&quot;</I
>).</P
></DD
><dt class="term">client_host_list</DT
><dd class="listitem"><p class="para">Specifies the hostname or IP address of the incoming
connection. You can also use the format <i class="filename">username@hostname</I
>
to specify a particular user on a remote computer, although the
remote computer must implement the <kbd class="command">ident</KBD
> protocol.[8]
The keyword <span class="acronym">ALL</SPAN
> matches all clients; for a full
list of keywords, see <a class="xref" href="#PUIS-CHP-22-TAB-1" title=" Special tcpwrapper Hosts">Table 22.1</A
>.</P
><blockquote class="footnote"><p class="para">[8] And as we noted in the discussion of <kbd class="command">ident</KBD
>, the identification
returned is not something that can always be believed.</P
></BLOCKQUOTE
></DD
><dt class="term">shell_command</DT
><dd class="listitem"><p class="para">Specifies a command that should be executed if the
<i class="filename">daemon_list</I
> and <i class="filename">client_host_list</I
> are
matched. A limited amount of token expansion is available within
the shell command; see <a class="xref" href="#PUIS-CHP-22-TAB-2" title=" Token Expansion Available for the tcpwrapper Shell Command">Table 22.2</A
> for a list of
the tokens that are available.</P
></DD
></DL
><table class="table"><caption class="table"><a class="title" name="PUIS-CHP-22-TAB-1">Table 22.1:  Special tcpwrapper Hosts</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Hostname as it Appears in the File <i class="filename">/etc/hosts.allow</I
>
or <i class="filename">/etc/hosts.deny</I
></P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Has This Effect:</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">ALL</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches all hosts.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">KNOWN</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches any IP address that has a corresponding
hostname; also matches usernames when the <kbd class="command">ident</KBD
>
service is available.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">LOCAL</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches any host that does not have a
period (.) in its name.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">PARANOID</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches any host for which double-reverse
hostname/IP address translation does not match.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">UNKNOWN</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches any IP address that does not
have a corresponding hostname. Also matches usernames when <kbd class="command">ident</KBD
>
service is not available.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">.subdomain.domain</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If the hostname begins with a period
(.), the hostname will match any host whose hostname ends with the
hostname (in this case, &quot;<i class="filename">.subdomain.domain</I
>&quot;).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">iii.
iii.jjj.
iii.jjj.kkk.
iii.jjj.kkk.lll.
(e.g.,18. or 204.17.195.)</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If the hostname ends with a period (.),
the hostname is interpreted as the beginning of an IP address. The
string &quot;18.&quot; will match any host with an IP addresses
18.0.0.1 through 18.255.255.254. The string <i class="filename">&quot;204.17.195.&quot;</I
>
will match any host with an IP addresses 204.17.195.1 through 204.17.195.254.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis">a </EM
><i class="filename">pattern</I
><em class="emphasis"></EM
> EXCEPT <i class="filename">another pattern</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches any host that is matched by <em class="emphasis">a
pattern</EM
> except those that also match <em class="emphasis">another
pattern.</EM
>[9]</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[9] The EXCEPT operator may also be used for specifying
an Internet service.</P
></BLOCKQUOTE
><table class="table"><caption class="table"><a class="title" name="PUIS-CHP-22-TAB-2">Table 22.2:  Token Expansion Available for the tcpwrapper Shell Command</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Token</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Mnemonic</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Expands to:</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%a</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">address</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The IP address of the client.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%A</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">address</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The IP address of the server.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%c</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">client info</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">username@hostname</I
> (if username
is available); otherwise, only hostname or IP address.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%d</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">daemon name</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The name of the daemon (<kbd class="command">argv</KBD
>[0]).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%h</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">hostname</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The hostname of the client. (IP address
if hostname is unavailable.)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%H</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">hostname</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The hostname of the server. (IP address
if hostname is unavailable.)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%p</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">process</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The Process ID of the daemon process.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%s</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">server info.</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">daemon@host.</I
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%u</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">user</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The client username (or unknown)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%%</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">percent</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Expands to the &quot;%&quot;
character.</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> The <kbd class="command">tcpwrapper</KBD
> is vulnerable to IP spoofing because
it uses IP addresses for authentication. The <kbd class="command">tcpwrapper</KBD
> also provides
only limited support for <span class="acronym">UDP</SPAN
> servers, because
once the server is launched, it will continue to accept packets
over the network, even if those packets come from &quot;blocked&quot;
hosts.</P
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-3.4">22.3.4 Installing tcpwrapper</A
></H3
><p class="para"><kbd class="command">tcpwrapper</KBD
> is a
powerful program that can seriously mess up your computer if it
is not properly installed. It has many configuration options that
are set at compile time. Therefore, before you start compiling or
installing the program, <em class="emphasis">read all of the documentation.</EM
></P
><p class="para">Briefly, here is what the documentation will tell you to do:</P
><ol class="orderedlist"><li class="listitem"><p class="para">You need to decide where to place the
<kbd class="command">tcpwrapper</KBD
> program and where to place your &quot;real&quot;
network daemons. The documentation will give you a choice. Your
first option is to name the <kbd class="command">tcpwrapper</KBD
> program something innocuous,
like <i class="filename">/usr/local/etc/tcpd,</I
> leave
the &quot;real&quot; network daemons in their original locations,
and modify the inetd configuration file <i class="filename">/etc/inetd.conf</I
>.
Alternatively, you can move the network daemons (such as <i class="filename">/usr/sbin/in.fingerd</I
>)
to another location (such as <i class="filename">/usr/sbin.real/in.fingerd</I
>),
place the tcpwrapper in the location that the daemon formerly occupied,
and leave the file <i class="filename">/etc/inetd.conf</I
> as is.</P
><p class="para">We recommend that you leave your executable programs where
they currently are, and modify the <i class="filename">/etc/inetd.conf</I
>
file. The reason for this recommendation is that having changes
in your system configuration clearly indicated in your system configuration
files is less confusing than changing the names and/or
the locations of your distributed system programs. In the long run,
this option is much more maintainable. This is especially important
if vendor patches expect to find the binary where it was originally
stored, and overwrite it.</P
></LI
><li class="listitem"><p class="para">Having followed our advice and decided that you
will modify your <i class="filename">/etc/inetd.conf</I
> file, make a
copy of the file, in case you make any mistakes later:</P
><blockquote class="screen"><pre class="screen"># <b class="emphasis.bold">cp /etc/inetd.conf /etc/inetd.conf.DIST</B
>
#</PRE
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Edit <kbd class="command">tcpwrapper</KBD
>'s <i class="filename">Makefile</I
> so that the
variable <i class="filename">REAL_DAEMON_DIR</I
> reflects where your operating
system places its network daemons. Check the other options in the
<i class="filename">Makefile</I
> to be sure they are appropriate to your needs.</P
></LI
><li class="listitem"><p class="para">Compile <kbd class="command">tcpwrapper</KBD
>.</P
></LI
><li class="listitem"><p class="para">Read the <kbd class="command">tcpwrapper</KBD
> man pages <i class="filename">host_access</I
>
and <i class="filename">host_options</I
>. These files define the tcpwrapper host
access-control language that is used by the files <i class="filename">/etc/hosts.allow</I
>
and <i class="filename">/etc/hosts.deny.</I
></P
><p class="para">You may wish
to start off with a relatively simple set of rules&nbsp;- for
example, allowing all services to all machines except for a small
group that have been known to cause problems. But you may wish to
also enable complete logging, so that you can see if particular
services or sites warrant further attention.</P
></LI
><li class="listitem"><p class="para">Create your <i class="filename">/etc/hosts.allow </I
>and<i class="filename">/etc/hosts.deny</I
> files. If you wish to allow all <span class="acronym">TCP</SPAN
>
servers through, you do not need to create these files at all
(<kbd class="command">tcpwrapper</KBD
> will default to rule #3, which is to pass through all connections).
If you wish to deny service from a specific machine, such as <i class="systemitem">pirate.net</I
>, you could simply
create a single /etc/hosts.deny file, like this:</P
><blockquote class="screen"><pre class="screen">#
# /etc/hosts.deny
#
all : pirate.net</PRE
></BLOCKQUOTE
><p class="para">Alternatively, you could use
the following <i class="filename">/etc/hosts.deny</I
>, which would finger
the computer <i class="systemitem">pirate.net</I
>
and email the result to you (<i class="filename">security@machine.com</I
>), whenever
somebody from that network tries to initiate any connection to your
machine. Note that this example uses the <i class="filename">safe_finger</I
> command
that comes with <kbd class="command">tcpwrapper</KBD
>; this version of the <kbd class="command">finger</KBD
> command will
remove control characters or other nasty data that might be returned
from a <kbd class="command">finger</KBD
> server running on a remote machine, as well as limit
the total amount of data received:[10]</P
><blockquote class="footnote"><p class="para">[10] The <kbd class="command">safe_finger</KBD
>
program is a replacement for your system's <kbd class="command">finger</KBD
> program,
which automatically filters out dangerous characters allowed through
by the standard versions of <i class="filename">finger</I
>. If you
don't think that your standard UNIX <kbd class="command">finger</KBD
> program should
allow data-driven attacks, you might wish to send a letter to your
UNIX vendor.</P
></BLOCKQUOTE
><blockquote class="screen"><pre class="screen">#
# /etc/hosts.deny with more logging!
#
all EXCEPT in.fingerd : pirate.net : (/usr/local/bin/safe_finger -l @%h | \
						/bin/mailx -s %d-%h security@machine.com) &amp;</PRE
></BLOCKQUOTE
><p class="para">Note that the <i class="filename">/etc/hosts.deny</I
> file allows
continuation lines by using the backslash (\) character.</P
><p class="para">The <kbd class="command">finger</KBD
> command is run for all services <em class="emphasis">except</EM
>
<i class="filename">in.fingerd;</I
> this restriction prevents a &quot;feedback loop&quot;
in which a <kbd class="command">finger</KBD
> on one computer triggers a <kbd class="command">finger</KBD
> on a second
computer, and vice versa. Also note that the <kbd class="command">finger</KBD
> command is run
in the background; this mode prevents <kbd class="command">tcpwrapper</KBD
> from waiting until
the <i class="filename">safe_finger</I
> command completes.</P
></LI
><li class="listitem"><p class="para">Check out your <i class="filename">/etc/syslog.conf</I
>
file to make sure that <kbd class="command">tcpwrapper</KBD
>'s events will be logged!
By default, <kbd class="command">tcpwrapper</KBD
> will log with <span class="acronym">LOG_ERR</SPAN
>
if a program cannot be launched, <span class="acronym">LOG_WARNING</SPAN
>
if a connection is rejected, and <span class="acronym">LOG_INFO</SPAN
> if
a connection is accepted. The logging service is <span class="acronym">LOG_MAIL</SPAN
>,
but you can change it by editing the program's <i class="filename">Makefile</I
>.</P
></LI
><li class="listitem"><p class="para">If you make any changes to the <kbd class="command">syslog</KBD
> configuration
file, restart <kbd class="command">syslog</KBD
> with the command:</P
><blockquote class="screen"><pre class="screen">		# <b class="emphasis.bold">kill -1 `cat /etc/syslog.pid`</B
></PRE
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Edit your <i class="filename">/etc/inetd.conf</I
> file
so that the <kbd class="command">tcpwrapper</KBD
> program is invoked by <kbd class="command">inetd</KBD
> for each service
that you wish to log and control.</P
><p class="para">Modifying the <i class="filename">/etc/inetd.conf</I
>
file is easy: simply change the filename of each program to the
full pathname of the <kbd class="command">tcpwrapper</KBD
> program, and edit the command name
of each program so that it is the complete pathname of the original
network daemon.</P
><p class="para">For example, if you have a line in your
original <i class="filename">/etc/inetd.conf</I
> file that says this:</P
><blockquote class="screen"><pre class="screen">finger   stream tcp nowait nobody /usr/etc/fingerd fingerd</PRE
></BLOCKQUOTE
><p class="para">Change it to this:</P
><blockquote class="screen"><pre class="screen">finger  stream tcp nowait nobody /usr/local/bin/tcpd /usr/etc/fingerd</PRE
></BLOCKQUOTE
><p class="para">You
may need to send a signal to the <kbd class="command">inetd</KBD
> daemon, or restart it, to
get it to note the new configuration you have added.</P
></LI
><li class="listitem"><p class="para">Test to make sure that everything works! For example,
try doing a <kbd class="command">finger</KBD
> of your computer; does a message get written
into your system's log files? If not, check to make sure
that <kbd class="command">inetd</KBD
> is starting the <kbd class="command">tcpwrapper</KBD
>, that <kbd class="command">tcpwrapper</KBD
> can access
its configuration files, and that the <kbd class="command">syslog</KBD
> system is set up to
do something with <kbd class="command">tcpwrapper</KBD
>'s messages.</P
></LI
></OL
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-3.5">22.3.5 Advanced tcpwrapper Options</A
></H3
><p class="para">Instead of
specifying a particular shell command that should be executed when
a (daemon, host) line is matched, <kbd class="command">tcpwrapper</KBD
> allows you to specify
a rich set of options. To use options, you compile the <kbd class="command">tcpwrapper</KBD
>
program with the option -<span class="acronym">DPROCESS_OPTIONS</SPAN
>. If
you compile with -<span class="acronym">DPROCESS_OPTIONS</SPAN
>, you must
change the files <i class="filename">/etc/hosts.allow</I
> and <i class="filename">/etc/hosts.deny</I
>
files to reflect that change; the format of these files when <kbd class="command">tcpwrapper</KBD
>
is compiled with -<span class="acronym">DPROCESS_OPTIONS</SPAN
> is incompatible
with the format of the files when tcpwrapper is compiled without
the options.</P
><p class="para">If you do compile with -<span class="acronym">DPROCESS_OPTIONS</SPAN
>,
the new format of the <i class="filename">/etc/hosts.allow</I
> and <i class="filename">/etc/hosts.deny</I
>
becomes:</P
><blockquote class="screen"><pre class="screen">daemon_list : client_host_list : option : option ...</PRE
></BLOCKQUOTE
><p class="para">Because you may have
more than one option on a line, if you need to place a colon (:)
within the option, you must protect it with a backslash (\).</P
><p class="para">The options allow you considerable flexibility in handling
a variety of conditions. They also somewhat obsolete the need to
have separate <i class="filename">/etc/hosts.allow</I
> and <i class="filename">/etc/hosts.deny</I
>
files, as the words &quot;allow&quot; and &quot;deny&quot;
are now option keywords (making it possible to deny a specific pair
(daemon, client) in the /etc/hosts.allow file,
or vice versa). Although you should check <kbd class="command">tcpwrapper</KBD
>'s
documentation for a current list of options, most of them are included
in <a class="xref" href="#PUIS-CHP-22-TAB-3" title="Advanced Options for tcpwrapper When Compiled with -DPROCESS_OPTIONS">Table 22.3</A
></P
><table class="table"><caption class="table"><a class="title" name="PUIS-CHP-22-TAB-3">Table 22.3: Advanced Options for tcpwrapper When Compiled with -DPROCESS_OPTIONS</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Option</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Effect</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">allow</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Allows the connection.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">deny</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Denies the connection.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="2"><p class="para">Options for dealing with sub-shells:</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">nice <em class="emphasis">nn</EM
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Changes the priority of the process to
<em class="emphasis">nn</EM
>. Use numbers such as +4 or +8
to reduce the amount of CPU time allocated to network services.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">setenv <em class="emphasis">name value</EM
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Sets the environment variable <em class="emphasis">name</EM
> to <em class="emphasis">value</EM
> for the daemon<em class="emphasis">.</EM
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">spawn <em class="emphasis">shell_command</EM
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Runs the <em class="emphasis">shell_command. </EM
>The
streams <kbd class="command">stdin</KBD
>, <kbd class="command">stdout</KBD
>, and <kbd class="command">stderr</KBD
> are connected to <i class="filename">/dev/null</I
>
to avoid conflict with any communications with the client.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">twist <em class="emphasis">shell_command</EM
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Runs the <em class="emphasis">shell_command. </EM
>The
streams <kbd class="command">stdin</KBD
>, <kbd class="command">stdout</KBD
>, and <kbd class="command">stderr</KBD
> are connected to the remote client.
This allows you to run a server process other than the one specified
in the file <i class="filename">/etc/inetd.conf.</I
> (Note: Will not work
with some UDP services.)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">umask <i class="filename">nnn</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Specifies the umask that should be used
for sub-shells. Specify it in octal.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">user <em class="emphasis">username</EM
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Assume the privileges of <em class="emphasis">username.</EM
>
(Note: <kbd class="command">tcpwrapper</KBD
> must be running as root for this option to work.)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">user <em class="emphasis">username.groupname</EM
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Assume the privileges of <em class="emphasis">username</EM
>
and set the current group to be <em class="emphasis">groupname.</EM
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="2"><p class="para">Options for dealing with the network connection:</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">banners <i class="filename">/some/directory/</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Specifies a directory that contains banner
files. If a filename is found in the banner directory that has the
same name as the network server (such as <i class="filename">telnetd</I
>),
the contents of the banner file are sent to the client before the
TCP connection is turned over to the server. This process allows
you to send clients messages, for example, informing them that unauthorized
use of your computer is prohibited.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">keepalive</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Causes the <span class="acronym">UNIX</SPAN
> kernel
to periodically send a message to a  client process; if the message
cannot be sent, the connection is automatically broken.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">linger <em class="emphasis">seconds</EM
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Specifies how long the <span class="acronym">UNIX</SPAN
>
kernel should spend trying to send a message to the remote client
after the server closes the connection.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">rfc931 [<em class="emphasis">timeout in
seconds</EM
>]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Specifies that the <kbd class="command">ident</KBD
> protocol should
be used to attempt to determine the username of the person running
the client program on the remote computer. The <em class="emphasis">timeout</EM
>,
if specified, is the number of seconds that <kbd class="command">tcpwrapper</KBD
> should spend
waiting for this information.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">.</P
><p class="para">Don't be afraid of
using these so-called &quot;advanced&quot; options: they
actually allow you to have simpler configurations than the <i class="filename">/etc/hosts.allow</I
>
and <i class="filename">/etc/hosts.deny</I
> files.</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> The following examples use <span class="acronym">DNS</SPAN
> hostnames
for clarity. For added security, use IP addresses instead.</P
></BLOCKQUOTE
><p class="para">Suppose you wish to allow all connections to your computer,
except those from the computers in the domain <i class="systemitem">pirate.net</I
>, with this very simple
<i class="filename">/etc/hosts.allow</I
> file; specify:</P
><blockquote class="screen"><pre class="screen">#
# /etc/hosts.allow:
#
# Allow anybody to connect to our machine except people from pirate.net
#
all : .pirate.net : deny
all : all         : allow</PRE
></BLOCKQUOTE
><p class="para">Suppose you wish to modify your rules to allow the use of
<kbd class="command">finger</KBD
> from any of your internal machines, but you wish to have
external <kbd class="command">finger</KBD
> requests met with a canned message. You might try
this configuration file:</P
><blockquote class="screen"><pre class="screen">#
# /etc/hosts.allow:
#
# Allow anybody to connect to our machine except people from pirate.net
#
#
in.fingerd : LOCAL : allow
in.fingerd : all : twist /usr/local/bin/external_fingerd_message
all : .pirate.net : deny
all : all : allow</PRE
></BLOCKQUOTE
><p class="para">If you discover repeated break-in attempts through <kbd class="command">telnet</KBD
>
and <kbd class="command">rlogin</KBD
> from all over the world, but you have
a particular user who needs to <i class="filename">telnet</I
> into
your computer from the host <i class="systemitem">sleepy.com</I
>,
you could accomplish this somewhat more complex security requirement
with the following configuration file:</P
><blockquote class="screen"><pre class="screen">#
# /etc/hosts.allow:
#
# Allow email from pirate.net, but nothing else:
# Allow telnet &amp; rlogin from sleepy.com, but nowhere else
#
telnetd,rlogind : sleepy.com : allow
telnetd,rlogind : all : deny
in.fingerd : LOCAL : allow
in.fingerd : all : twist /usr/local/bin/external_fingerd_message
all : .pirate.net : deny
all : all : allow</PRE
></BLOCKQUOTE
><p class="para">Here's an example that combines two possible options:</P
><blockquote class="screen"><pre class="screen">#
# /etc/hosts.deny:
#
# Don't allow logins from pirate.net, and log attempts
#
telnetd,rlogind : pirate.net : spawn=(/security/logit %d deny %c %p %a %h %u)&amp;\  	
: linger 10 : banners /security/banners</PRE
></BLOCKQUOTE
><p class="para">In the file <i class="filename">/security/banners/telnetd,</I
>
you would have the following text:</P
><blockquote class="blockquote"><p class="para">This machine is owned and operated by the Big
Whammix Corporation for the exclusive use of Big Whammix Corporation
employees. Your attempt to access this machine is not allowed.</P
><p class="para">Access to Big Whammix Corporation computers is logged and
monitored. If you use or attempt to use a Big Whammix computer system,
you consent to such monitoring and to adhere to Big Whammix Corporation
policies about appropriate use. If you do not agree, then do not
attempt use of these systems. Unauthorized use of Big Whammix Corporation
computers may be in violation of state or Federal law, and will
be prosecuted.</P
><p class="para">If you have any questions about this
message or policy, contact  &lt;security@bwammix.com&gt;
or call during EST business hours: 1-800-555-3662.</P
></BLOCKQUOTE
><p class="para">The banner will be displayed if anyone from <i class="systemitem">pirate.net</I
> tries to log in over
the net. The system will pause 10 seconds for the message to be
fully displayed before disconnecting.</P
><p class="para">In the <i class="filename">/security/logit</I
> shell file, you could have something similar to the script
in <a class="xref" href="#PUIS-CHP-22-EX-1" title="alert Script">Example 22.1</A
>. This
script puts an entry into the <kbd class="command">syslog</KBD
> about the event, and attempts
to raise a very visible alert window on the screen of the security
administrator's workstation. Furthermore, it does a reverse
<kbd class="command">finger</KBD
> on the calling host, and for good measure does a <kbd class="command">netstat</KBD
>
and <kbd class="command">ps</KBD
> on the local machine. This process is
done in the event that some mischief is already occurring that hasn't
triggered an alarm.</P
><p class="para">Note the -n option to the <kbd class="command">netstat</KBD
>
command in the script. This is because <span class="acronym">DNS</SPAN
> can
be slow to resolve all the IP numbers to names. You want the command
to complete before the connection is dropped; it is always possible
to look the hostnames up later from the log file.</P
><div class="example"><h4 class="example"><a class="title" name="PUIS-CHP-22-EX-1">Example 22.1: alert Script</A
></H4
><pre class="programlisting">#!/bin/ksh

set -o nolog -u -h +a +o bgnice +e -m

#  Bmon is intended to capture some information about whatever site is
#  twisting my doorknob. It is probably higher overhead than I need,
#  but...

export PATH=/usr/ucb:/usr/bin:/bin:/usr/etc:/etc

mkdir /tmp/root

# Create /tmp/root in case it doesn't exist.

print &quot;Subject: Notice\nFrom: operator\n\n$@&quot; | /usr/lib/sendmail security

typeset daemon=&quot;$1&quot; status=&quot;$2&quot; client=&quot;$3&quot; pid=$4 addr=$5 host=$6 user=$7

# For most things, we simply want a notice.
# Unsuccessful attempts are warnings
# Unsuccessful attempts on special accounts merit an alert

typeset level=notice

[[ $status != allow ]] &amp;&amp; level=warning
[[ $daemon = in.@(rshd|rlogind) &amp;&amp; $user = @(root|security) ]] &amp;&amp; level=alert

/usr/ucb/logger -t tcpd -p auth.$level &quot;$*&quot; &amp;

umask 037

function mktemp {
    typeset temp=/security/log.$$
    typeset -Z3 suffix=0


    while [[ -a $temp.$suffix ]]
    do
    let suffix+=1
    done

    logfile=$temp.$suffix
    chgrp security $logfile
}

function Indent {
    sed -e 's/^//' &gt;&gt; $logfile
}


exec 3&gt;&amp;1 &gt;&gt;$logfile 2&gt;&amp;1

date
print &quot;Remote host: $host   Remote user: $user&quot;

print &quot;&quot;
print &quot;Local processes:&quot;
ps axg | Indent

print &quot;&quot;
print &quot;Local network connections:&quot;
netstat -n -a -f inet | Indent

print &quot;&quot;
print &quot;Finger of $host&quot;
safe_finger -s @$host|Indent
print &quot;&quot;
[[ $user != unknown ]] &amp;&amp; safe_finger -h -p -m $user@$host | Indent


exec &gt;&gt; /netc/log/$daemon.log 2&gt;&amp;1
print &quot;-----------------------&quot;
print &quot;\npid=$pid client=$client addr=$addr user=$user&quot;
print Details in $logfile
date
print &quot;&quot;


# Now bring up an alert box on the admin's workstation

{
  print &quot;\ndaemon=$daemon client=$client addr=$addr user=$user&quot;
  print Details in $logfile
  date
  print &quot;&quot;
  print -n &quot;(press return to close window.)&quot; &gt;&gt; /tmp/root/alert.$$ 
} &gt; /tmp/root/alert.$$

integer lines=$(wc -l &lt; /tmp/root/alert.$$ | tr -d ' ')

xterm -display security:0  -fg white -bg red -fn 9x15 -T &quot;ALERT&quot; -fn 9x15B\
   -geom 60x$lines+20+20 -e sh -c &quot;cat /tmp/root/alert.$$;read nothing&quot;
/bin/rm /tmp/root/alert.$$</PRE
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-3.6">22.3.6 Making Sense of Your tcpwrapper Configuration Files</A
></H3
><p class="para">The configuration files we have shown earlier are
simple; unfortunately, sometimes things get complicated. The <kbd class="command">tcpwrapper</KBD
>
system comes with a utility called <kbd class="command">tcpdchk</KBD
> that
will scan through your configuration file and report on a wide variety
of potential configuration errors.</P
><p class="para">The <kbd class="command">tcpwrapper</KBD
> system
comes with another utility program called <kbd class="command">tcpdmatch</KBD
>,
which allows you to simulate an incoming connection and determine
if the connection would be permitted or blocked with your current
configuration files.</P
><p class="para">Programs like <kbd class="command">tcpdchk</KBD
>
and <kbd class="command">tcpdmatch</KBD
> are excellent complements to the
security program <kbd class="command">tcpwrapper</KBD
>, because they help you head off security
problems before they happen. Wietse Venema is to be complimented
for thinking to write and include them in his <kbd class="command">tcpwrapper</KBD
> release;
other programmers should follow his example.</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch22_02.htm" title="22.2 sendmail (smap/smapd) Wrapper"><img src="../gifs/txtpreva.gif" alt="Previous: 22.2 sendmail (smap/smapd) Wrapper" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Practical UNIX &amp; Internet Security"><img src="../gifs/txthome.gif" alt="Practical UNIX &amp; Internet Security" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch22_04.htm" title="22.4 SOCKS"><img src="../gifs/txtnexta.gif" alt="Next: 22.4 SOCKS" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">22.2 sendmail (smap/smapd) Wrapper</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">22.4 SOCKS</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
