<html><head>
<title>[Chapter 5] 5.2 Using File Permissions</TITLE>
<meta name="DC.title" content="Practical UNIX &amp; Internet Security"><meta name="DC.creator" content="Simson Garfinkel &amp; Gene Spafford"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:01:36Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-148-8" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch05_01.htm" title="5. The UNIX Filesystem"><link rel="prev" href="ch05_01.htm" title="5.1 Files"><link rel="next" href="ch05_03.htm" title="5.3 The umask"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Practical UNIX &amp; Internet Security" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Practical UNIX &amp; Internet Security"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch05_01.htm" title="5.1 Files"><img src="../gifs/txtpreva.gif" alt="Previous: 5.1 Files" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 5<br>The UNIX Filesystem</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch05_03.htm" title="5.3 The umask"><img src="../gifs/txtnexta.gif" alt="Next: 5.3 The umask" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PUIS-CHP-5-SECT-2">5.2 Using File Permissions</A
></H2
><p class="para">Because file permissions determine who can read and modify
the information stored in your files, they are your primary method
for protecting the data that you store on your <span class="acronym">UNIX</SPAN
>
system.</P
><p class="para">Consider the directory listing presented earlier in this chapter:</P
><blockquote class="screen"><pre class="screen">% <b class="emphasis.bold">ls -lF </B
>
total 161 
-rw-r--r-- 1 sian     user        505 Feb  9 13:19 instructions 
-rw-r--r-- 1 sian     user       3159 Feb  9 13:14 invoice 
-rw-r--r-- 1 sian     user       6318 Feb  9 13:14 letter 
-rw------- 1 sian     user      15897 Feb  9 13:20 more-stuff 
-rw-r----- 1 sian     biochem    4320 Feb  9 13:20 notes 
-rwxr-xr-x 1 sian     user     122880 Feb  9 13:26 stats* 
-------r-x 1 sian     user     989987 Mar  6 08:13 weird-file 
%</PRE
></BLOCKQUOTE
><p class="para">In this example, any user on the system can read the files
<i class="filename">instructions</I
>, <i class="filename">invoice</I
>,
<i class="filename">letter</I
>, or <i class="filename">stats</I
> because
they all have the letter r in the &quot;other&quot; column
of the permissions field. The file <i class="filename">notes</I
> can
be read only by user sian or by users who are in the <i class="systemitem.username">biochem</I
> group. And only <i class="systemitem.username">sian</I
> can read the information
in the file <i class="filename">more-stuff</I
>.</P
><p class="para">A more interesting set of permissions is present on <i class="filename">weird-file</I
>.
User <i class="filename">sian</I
> owns the file but cannot access it.
Members of group <i class="filename">user</I
> also are not allowed
access. However, any user except <i class="filename">sian</I
> who is
also <em class="emphasis">not</EM
> in the group <i class="filename">user</I
>
can read and execute the file. Some variant of these permissions
are useful in some cases where you want to make a file readable
or executable by others, but you don't want to accidentally
overwrite or execute it yourself. If you are the owner of the file
and the permissions deny you access, it does not matter if you are
in the group, or if other bits are set to allow the access.</P
><p class="para">Of course, the superuser can read any file on the system,
and anybody who knows Sian's password can log in as <i class="systemitem.username">sian</I
> and read her files (including
<i class="filename">weird-file</I
>, if the permissions are changed
first).</P
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-5-SECT-2.1">5.2.1 chmod: Changing a File's Permissions</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-4278"></A
><a class="indexterm" name="AUTOID-4280"></A
>You
can change a file's permissions with the <kbd class="command">chmod</KBD
> command
or the <kbd class="command">chmod()</KBD
> system call. You can change a
file's permissions only if you are the file's
owner. The one exception to this rule is the superuser: if you are
logged in as superuser, you can change the permissions of any file.[12]</P
><blockquote class="footnote"><p class="para">[12] Any file that is not mounted using <span class="acronym">NFS</SPAN
>,
that is. See <a class="xref" href="ch20_01.htm" title="NFS">Chapter 20</A
> for details.</P
></BLOCKQUOTE
><p class="para">In its simplest form, the <kbd class="command">chmod</KBD
> command lets you specify which
of a file's permissions you wish to change. This usage
is called <i class="firstterm">symbolic mode</I
>. The symbolic form
of the <kbd class="command">chmod</KBD
> command[13] has the
form:</P
><blockquote class="footnote"><p class="para">[13] The <span class="acronym">UNIX</SPAN
>
kernel actually supports two system calls for changing a file's
mode: <kbd class="command">chmod()</KBD
>, which changes the mode of a file,
and <kbd class="command">fchmod()</KBD
>, which changes the mode of a file
associated with an open file descriptor.</P
></BLOCKQUOTE
><blockquote class="screen"><pre class="screen">chmod [-Rfh] [agou][+-=][rwxXstugol] <i class="filename">filelist</I
></PRE
></BLOCKQUOTE
><p class="para">This command changes the permissions of filelist, which can
be either a single file or a group of files. The letters agou specify
whose privileges are being modified. You may provide none, one,
or more, as shown in <a class="xref" href="#PUIS-CHP-5-TAB-5" title="Whose Privileges Are Being Modified?">Table 5.5</A
>.</P
><table class="table"><caption class="table"><a class="title" name="PUIS-CHP-5-TAB-5">Table 5.5: Whose Privileges
Are Being Modified?</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Letter</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Meaning</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">a</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Modifies privileges for all users</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">g</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Modifies group privileges</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">o</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Modifies others' privileges</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">u</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Modifies the owner's privileges</P
></TD
></TR
></TBODY
></TABLE
><p class="para">The symbols specify what is supposed to be done with the privilege.
You must type only one symbol, as shown in <a class="xref" href="#PUIS-CHP-5-TAB-6" title="What to Do with Privilege">Table 5.6</A
>.</P
><table class="table"><caption class="table"><a class="title" name="PUIS-CHP-5-TAB-6">Table 5.6: What to Do with
Privilege</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Symbol</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Meaning</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">+</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Adds to the current privilege</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">-</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Removes from the current privilege</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">=</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Replaces the current privilege</P
></TD
></TR
></TBODY
></TABLE
><p class="para">The last letters specify which privilege is to be added, as
shown in <a class="xref" href="#PUIS-CHP-5-TAB-7" title="What Privileges Are Being Changed?">Table 5.7</A
>.</P
><table class="table"><caption class="table"><a class="title" name="PUIS-CHP-5-TAB-7">Table 5.7: What Privileges
Are Being Changed?</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Letter</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Meaning</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="2"><p class="para"><em class="emphasis">Options for all versions of <span class="acronym">UNIX</SPAN
></EM
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">r</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Read access</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">w</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Write access</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">x</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Execute access</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">s</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">SUID</SPAN
> or <span class="acronym">SGID</SPAN
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">t</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Sticky bit[14]</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="2"><p class="para"><em class="emphasis">Options for <span class="acronym">BSD</SPAN
>-derived versions of <span class="acronym">UNIX</SPAN
> only:</EM
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">X</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Sets execute only if the file is a directory
or already has some other execute bit set.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">u</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Takes permissions from the user permissions.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">g</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Takes permissions from the group permissions.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">o</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Takes permissions from other permissions.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="2"><p class="para"><em class="emphasis">Options for System V-derived versions of <span class="acronym">UNIX</SPAN
> only:</EM
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">l</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Enables mandatory locking on file.</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[14] On most systems, only the superuser can set the sticky bit on a non-directory filesystem
entry.</P
></BLOCKQUOTE
><p class="para">If the <a class="indexterm" name="AUTOID-4449"></A
>
<kbd class="command">-R</KBD
>
option is specified for versions that support it, the <kbd class="command">chmod</KBD
> command
runs recursively. If you specify a directory in <i class="filename">filelist</I
>,
that directory has its permission changed, as do all of the files
contained in that directory. If the directory contains any subdirectories,
the process is repeated.</P
><p class="para">If the <a class="indexterm" name="AUTOID-4456"></A
>
<kbd class="command">-f</KBD
>
option is specified for versions that support it, <kbd class="command">chmod</KBD
> does not
report any errors encountered. This processing is sometimes useful
in shell scripts if you don't know whether the <i class="filename">filelist</I
>
exists or not and if you don't want to generate an error
message.</P
><p class="para">The <a class="indexterm" name="AUTOID-4463"></A
>
<kbd class="command">-h</KBD
>
option is specified in some systems to change how <kbd class="command">chmod</KBD
> works with
symbolic links. If the <kbd class="command">-h</KBD
> option is specified and one of
the arguments is a symbolic link, the permissions of the file or
directory pointed to by the link are <em class="emphasis">not</EM
> changed.</P
><p class="para">The symbolic form of the <kbd class="command">chmod</KBD
> command is useful if you only
want to add or remove a specific privilege from a file. For example,
if Sian wanted to give everybody in her group write permission to
the file <i class="filename">notes</I
>, she could issue the command:</P
><blockquote class="screen"><pre class="screen">% <b class="emphasis.bold">ls -l notes </B
>
-rw-r--r-- 1 sian     biochem    4320 Feb  9 13:20 notes % 
<b class="emphasis.bold">chmod g+w notes </B
>
% <b class="emphasis.bold">ls -l notes </B
>
-rw-rw-r-- 1 sian     biochem    4320 Feb  9 13:20 notes %</PRE
></BLOCKQUOTE
><p class="para">To change this file further so people who aren't
in her group can't read it, she could use the command:</P
><blockquote class="screen"><pre class="screen">% <b class="emphasis.bold">chmod o-r notes </B
>
% <b class="emphasis.bold">ls -l notes</B
> 
-rw-rw---- 1 sian     biochem    4320 Feb  9 13:20 notes 
%</PRE
></BLOCKQUOTE
><p class="para">To change the permissions of the <i class="filename">invoice</I
>
file so nobody else on the system can read or write it, Sian could
use the command:</P
><blockquote class="screen"><pre class="screen">% <b class="emphasis.bold">chmod go= invoice</B
> 
% <b class="emphasis.bold">ls -l invoice</B
> 
-rw------- 1 sian     user    4320 Feb  9 13:20 invoice 
% <b class="emphasis.bold">date</B
> 
Sun Feb 10 00:32:55 EST 1991 
% </PRE
></BLOCKQUOTE
><p class="para">Notice that changing a file's permissions does <em class="emphasis">not</EM
>
change its modification time (although it will alter the inode's
<a class="indexterm" name="AUTOID-4489"></A
>
ctime).</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-5-SECT-2.2">5.2.2 Changing a File's Permissions</A
></H3
><p class="para">You can also use the <kbd class="command">chmod</KBD
> command to set a file's
permissions, without regard to the settings that existed before
the command was executed. This format is called the <em class="emphasis">absolute</EM
>
form of the <kbd class="command">chmod</KBD
> command.</P
><p class="para">The absolute form of <kbd class="command">chmod</KBD
> has the syntax:</P
><blockquote class="screen"><pre class="screen">% chmod [-Rfh] <kbd class="command">mode</KBD
> <i class="filename">filelist</I
></PRE
></BLOCKQUOTE
><p class="para">where options have the following meanings:</P
><dl class="variablelist"><dt class="term">-R</DT
><dd class="listitem"><p class="para">As described earlier</P
></DD
><dt class="term">-f</DT
><dd class="listitem"><p class="para">As described earlier</P
></DD
><dt class="term">-h</DT
><dd class="listitem"><p class="para">As described earlier</P
></DD
><dt class="term">mode</DT
><dd class="listitem"><p class="para">The mode to which you wish to set the file, expressed
as an octal[15] value</P
><blockquote class="footnote"><p class="para">[15] Octal means &quot;base 8.&quot;
Normally, we use base 10, which uses the digits 0, 1, 2, 3, 4, 5,
6, 7, 8, and 9. The octal system uses the digitals 0, 1, 2, 3, 4,
5, 6, and 7. If you are confused, don't be: for most purposes,
you can pretend that the numbers are in decimal notation and never
know the difference.</P
></BLOCKQUOTE
></DD
><dt class="term"><i class="filename">filelist</I
></DT
><dd class="listitem"><p class="para">The list of the files whose modes you wish to set</P
></DD
></DL
><p class="para">To use this form of the <kbd class="command">chmod</KBD
> command, you must calculate
the octal value of the file permissions that you want. The next
section describes how to do this.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-5-SECT-2.3">5.2.3 Calculating Octal File Permissions</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-4532"></A
><a class="indexterm" name="AUTOID-4534"></A
><kbd class="command">chmod</KBD
>
allows you to specify a file's permissions with a four-digit
octal number. You calculate the number by adding[16]

the permissions. Use <a class="xref" href="#PUIS-CHP-5-TAB-8" title="Octal Numbers and Permissions">Table 5.8</A
>
to determine the octal number that corresponds to each file permission.</P
><blockquote class="footnote"><p class="para">[16] Technically,
we are ORing the values together, but as there is no carry, it's
the same as adding.</P
></BLOCKQUOTE
><table class="table"><caption class="table"><a class="title" name="PUIS-CHP-5-TAB-8">Table 5.8: Octal Numbers
and Permissions</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Octal Number</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Permission</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">4000</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Set user ID on execution (<span class="acronym">SUID</SPAN
>)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">2000</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Set group ID on execution (<span class="acronym">SGID</SPAN
>)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">1000</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&quot;Sticky bit&quot;</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0400</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Read by owner</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0200</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Write by owner</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0100</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Execute by owner</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0040</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Read by group</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0020</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Write by group</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0010</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Execute by group</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0004</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Read by other</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0002</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Write by other</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0001</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Execute by other</P
></TD
></TR
></TBODY
></TABLE
><p class="para">Thus, a file with the permissions &quot;-rwxr-x---&quot;
has a mode of 0750, calculated as follows:</P
><p class="para">0400	Read by owner</P
><p class="para">0200	Write by owner</P
><p class="para">0100	Execute by owner</P
><p class="para">0040	Read by group</P
><p class="para">0010	Execute by group   0750	Result</P
><p class="para"><a class="xref" href="#PUIS-CHP-5-TAB-9" title="Common File Permissions">Table 5.9</A
> contains some common file permissions
and their uses.</P
><table class="table"><caption class="table"><a class="title" name="PUIS-CHP-5-TAB-9">Table 5.9: Common File Permissions</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Octal Number</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">File</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Permission</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0755</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">/bin/ls</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Anybody can copy or run the program;
the file's owner can modify it.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0711</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">$<span class="acronym">HOME</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Locks a user's home directory
so that no other users on the system can display its contents, but
allows other users to access files or subdirectories contained within
the directory if they know the names of the files or directories.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0700</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">$<span class="acronym">HOME</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Locks a user's home directory
so that no other users on the system can access its contents, or
the contents of any subdirectory.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0600</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">/usr/mail/$USER</I
>
and other mailboxes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The user can read or write the contents
of the mailbox, but no other users (except the superuser) may access
it.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0644</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">any file</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The file's owner can read or
modify the file; everybody else can only read it.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0664</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">groupfile</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The file's owner or anybody
in the group can modify the file; everybody else can only read it.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0666</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">writable</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Anybody can read or modify the file.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0444</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">readable</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Anybody can read the file; only the superuser
can modify it without changing the permissions.</P
></TD
></TR
></TBODY
></TABLE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-5-SECT-2.4">5.2.4 Using Octal File Permissions</A
></H3
><p class="para">After you have calculated the octal file permission that you
want, you can use the <kbd class="command">chmod</KBD
> command to set the permissions of files
you own.</P
><p class="para">For example, to make all of the C language source files in
a directory writable by the owner and readable by everybody else,
type the command:</P
><blockquote class="screen"><pre class="screen">% <b class="emphasis.bold">chmod 644 *.c</B
> 
% <b class="emphasis.bold">ls -l *.c</B
> 
-rw-r--r-- 1 kevin     okisrc   28092 Aug  9 9:52 cdrom.c 
-rw-r--r-- 1 kevin     okisrc    5496 Aug  9 9:52 cfs_subr.c 
-rw-r--r-- 1 kevin     okisrc    5752 Aug  9 9:52 cfs_vfsops.c 
-rw-r--r-- 1 kevin     okisrc   11998 Aug  9 9:53 cfs_vnodeops.c 
-rw-r--r-- 1 kevin     okisrc    3031 Aug  9 9:53 load_unld.c 
-rw-r--r-- 1 kevin     okisrc    1928 Aug  9 9:54 Unix_rw.c 
-rw-r--r-- 1 kevin     okisrc     153 Aug  9 9:54 vers.c 
%</PRE
></BLOCKQUOTE
><p class="para">To change the permissions of a file so it can be read or modified
by anybody in your group, but can't be read or written
by anybody else in the system, type the command:</P
><blockquote class="screen"><pre class="screen">% c<b class="emphasis.bold">hmod 660 memberlist</B
> 
% l<b class="emphasis.bold">s -l memberlist</B
> 
-rw-rw---- 1 kevin    okisrc     153 Aug 10 8:32 memberlist <a class="indexterm" name="AUTOID-4710"></A
><a class="indexterm" name="AUTOID-4713"></A
><a class="indexterm" name="AUTOID-4715"></A
><a class="indexterm" name="AUTOID-4717"></A
><a class="indexterm" name="AUTOID-4720"></A
>
  
%</PRE
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-5-SECT-2.5">5.2.5 Access Control Lists[17]</A
></H3
><blockquote class="footnote"><p class="para">[17] This section is
largely based on &AElig;leen Frisch's <em class="emphasis">Essential
System Administration, Second Edition </EM
>(O'Reilly
&amp; Associates, 1995), Chapter 6, and is used here with permission.</P
></BLOCKQUOTE
><p class="para">Some <a class="indexterm" name="AUTOID-4728"></A
><a class="indexterm" name="AUTOID-4731"></A
><a class="indexterm" name="AUTOID-4733"></A
>
versions
of <span class="acronym">UNIX</SPAN
> support Access Control Lists, or <span class="acronym">ACLS</SPAN
>.
These are normally provided as an extension to standard <span class="acronym">UNIX</SPAN
>
file permission modes. With <span class="acronym">ACLS</SPAN
>, you can specify
additional access rights to each file and directory for many individual
users rather than lumping them all into the category &quot;other.&quot;
You can also set different permissions for members of different
groups. We think they are a wonderful feature, and something we
will see more of in future years. Unfortunately, every vendor has
implemented them differently, and this makes describing them somewhat
complex.</P
><p class="para"><span class="acronym">ACLS</SPAN
> offer a further refinement to the
standard <span class="acronym">UNIX</SPAN
> file permissions capabilities.
<span class="acronym">ACLS</SPAN
> enable you to specify file access for completely
arbitrary subsets of users and/or groups. Both <span class="acronym">AIX</SPAN
>
and HP-UX provide access control lists. Solaris and Linux are supposed
to have them in future releases. Also, the Open Software Foundation's
Distributed Computing Environment has a form of <span class="acronym">ACLS</SPAN
>.</P
><p class="para">For many purposes, <span class="acronym">ACLS</SPAN
> are superior to
the <span class="acronym">UNIX</SPAN
> group mechanism for small collaborative
projects. If Hana wants to give Miria&nbsp;- and only Miria&nbsp;- access
to a particular file, Hana can modify the file's <span class="acronym">ACL</SPAN
>
to give Miria access. Without <span class="acronym">ACLS</SPAN
>, Hana would
have to go to the system administrator, have a new group created
that contains both Hana and Miria (and only Hana and Miria) as group
members, and then change the group of the file to the newly created
group.</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> Because <span class="acronym">ACLS</SPAN
> are not standard across
<span class="acronym">UNIX</SPAN
> versions, you should not expect them to
work in a network filesystem environment. In particular, Sun plans
to support <span class="acronym">ACLS</SPAN
> through the use of private extensions
to the <span class="acronym">NFS3</SPAN
> filesystem, rather than building
<span class="acronym">ACLS</SPAN
> into the specification. Therefore, be sure
that anything you export via <span class="acronym">NFS</SPAN
> is adequately
protected by the default <span class="acronym">UNIX</SPAN
> file permissions
and ownership settings.</P
></BLOCKQUOTE
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-5-SECT-2.5.1">5.2.5.1 AIX Access Control Lists</A
></H4
><p class="para">An <span class="acronym">AIX</SPAN
> <span class="acronym">ACL</SPAN
> <a class="indexterm" name="AUTOID-4765"></A
>
contains these fields (the text in italics
to the right describes the line contents):</P
><blockquote class="screen"><pre class="screen">attributes:	<em class="emphasis">	  Special modes like SUID.</EM
>
base permissions		  Normal UNIX file modes:
    owner(chavez): rw-		<em class="emphasis">   User access.</EM
>
    group(chem): rw-		<em class="emphasis">   Group access.</EM
>
    others: r--		<em class="emphasis">   Other access.</EM
>
extended permissions		  More specific permissions entries:
    enabled		<em class="emphasis">   Whether they're used or not.</EM
>
    specify  r-- u:harvey		<em class="emphasis">   Permissions for user harvey.</EM
>
    deny     -w- g:organic		<em class="emphasis">   Permissions for group organic.</EM
>
    permit   rw- u:hill, g:bio<em class="emphasis">	 	   Permissions for user hill when in group bio</EM
>.</PRE
></BLOCKQUOTE
><p class="para">The first line specifies any special attributes on the file
(or directory). The possible attribute keywords are <span class="acronym">SETUID, SETGID</SPAN
>, and <span class="acronym">SVTX</SPAN
> (sticky bit is set).
Multiple attributes are all placed on one line, separated by commas.</P
><p class="para">The next section of the <span class="acronym">ACL</SPAN
> lists the <em class="emphasis">base
permissions </EM
>for the file or directory. These correspond
exactly to the <span class="acronym">UNIX</SPAN
> file modes. Thus, for the
file we&quot;re looking at, the owner (who is <em class="emphasis">chavez</EM
>)
has read and write access, members of the group <em class="emphasis">chem</EM
>
(which is the group owner of the file) also have read and write
access, and all others have read access.</P
><p class="para">The final section specifies <em class="emphasis">extended permissions</EM
>
for the file: access information specified by user and group name.
The first line in this section is either the word <em class="emphasis">enabled</EM
>
or <em class="emphasis">disabled</EM
>, indicating whether the extended
permissions that follow are actually used to determine file access
or not. In our example, extended permissions are in use.</P
><p class="para">The rest of the lines in the <span class="acronym">ACL</SPAN
> are <em class="emphasis">access
control entrie</EM
>s (<span class="acronym">ACES</SPAN
>), which have
the following format:</P
><blockquote class="screen"><pre class="screen">operation  access-types  user-and-group-info</PRE
></BLOCKQUOTE
><p class="para">where the <em class="emphasis">operation</EM
> is one of the keywords
<em class="emphasis">permit</EM
>, <em class="emphasis">deny</EM
>, or <em class="emphasis">specify</EM
>,
which correspond to <kbd class="command">chmod</KBD
>'s +, -, and
= operators, respectively. <em class="emphasis">permit</EM
>
adds the specified permissions to the ones the user already has,
based on the base permissions; <em class="emphasis">deny</EM
> takes away
the specified access; and <em class="emphasis">specify</EM
> sets the
access for the user to the listed value. The <em class="emphasis">access-types</EM
>
are the same as those for normal <span class="acronym">UNIX</SPAN
> file modes.
The <em class="emphasis">user-and-group-info</EM
> consists of a user
name (preceded by <em class="emphasis">u:</EM
>) or one or more group
names (each preceded by <em class="emphasis">g:</EM
>) or both. Multiple
items are separated by commas.</P
><p class="para">Let&quot;s look again at the <span class="acronym">ACES</SPAN
> in
our sample <span class="acronym">ACL</SPAN
>:</P
><blockquote class="screen"><pre class="screen">specify  r--     u:harvey
deny     r--     g:organic
permit   rw-     u:hill, g:bio</PRE
></BLOCKQUOTE
><p class="para">The first line grants read-only access to user <em class="emphasis">harvey</EM
>
on this file. The second line removes read access for the <em class="emphasis">organic</EM
>
group from whatever permissions a user in that group already has.
The final line adds read and write access to user <em class="emphasis">hill</EM
>
while group <em class="emphasis">bio</EM
> is part of the current group
set. By default, the current group set is all of the groups to which
the user belongs.</P
><p class="para"><span class="acronym">ACLS</SPAN
> that specify a username and group
are useful mostly for accounting purposes; the <span class="acronym">ACL</SPAN
>
shown earlier ensures that user <em class="emphasis">hill</EM
> has group
<em class="emphasis">bio</EM
> active when working with this file. They
are also useful if you add a user to a group on a temporary basis,
ensuring that the added file access goes away if the user is later
removed from the group. In the previous example, user <em class="emphasis">hill</EM
>
would no longer have access to the file if she were removed from
the <em class="emphasis">bio</EM
> group (unless, of course, the file's
base permissions grant it to her).</P
><p class="para">If more than one item is included in the <em class="emphasis">user-and-group-info</EM
>,
then all of the items must be true for the entry to be applied to
a process (<span class="acronym">AND</SPAN
> logic). For example, the first
<span class="acronym">ACE</SPAN
> below is applied only to users who &quot;have
both <em class="emphasis">bio</EM
> and <em class="emphasis">chem</EM
> in their
group sets&quot; (which is often equivalent to &quot;are
members of both the <em class="emphasis">chem</EM
> and <em class="emphasis">bio</EM
>
groups&quot;):</P
><blockquote class="screen"><pre class="screen">permit   rw-    g:chem, g:bio
permit   rw-    u:hill, g:chem, g:bio</PRE
></BLOCKQUOTE
><p class="para">The second <span class="acronym">ACE</SPAN
> applies to user <em class="emphasis">hill</EM
>
only when both groups are in the current group set. If you wanted
to grant write access to anyone who was a member of either group
<em class="emphasis">chem</EM
> or group <em class="emphasis">bio</EM
>, you
would specify two separate entries:</P
><blockquote class="screen"><pre class="screen">permit   rw-    g:chem
permit   rw-    g:bio</PRE
></BLOCKQUOTE
><p class="para">At this point, you might wonder what happens when more than
one entry applies. When a process requests access to a file with
extended permissions, the permitted accesses from the base permissions
and <em class="emphasis">all</EM
> applicable <span class="acronym">ACES</SPAN
>&nbsp;- all
<span class="acronym">ACES</SPAN
> which match the user and group identity
of the process&nbsp;- are combined via a union operation. The
denied accesses from the base permissions and all applicable <span class="acronym">ACES</SPAN
>
are also combined. If the requested access is permitted <em class="emphasis">and</EM
>
it is not denied, then it is granted. Thus, contradictions among
<span class="acronym">ACES</SPAN
> are resolved in the most conservative way:
access is denied unless it is both permitted and not denied.</P
><p class="para">For example, consider the <span class="acronym">ACL</SPAN
> below:</P
><blockquote class="screen"><pre class="screen">attributes:  base permissions
    owner(chavez): rw-
    group(chem): r--
    others:         ---
extended permissions
    enabled
    specify         r--   u:stein
    permit          rw-   g:organic, g:bio
    deny            rwx   g:physics</PRE
></BLOCKQUOTE
><p class="para">Now suppose that the user <em class="emphasis">stein</EM
>, who
is a member of both the <em class="emphasis">organic</EM
> and <em class="emphasis">bio</EM
>
groups (and not a member of the <em class="emphasis">chem</EM
> group),
wants write access to this file. The base permissions clearly grant
<em class="emphasis">stein</EM
> no access at all to the file. The <span class="acronym">ACES</SPAN
>
in lines one and two of the extended permissions apply to <em class="emphasis">stein</EM
>.
These <span class="acronym">ACES</SPAN
> grant him read access (lines one and
two) and write access (line two). They also deny him write and execute
access (implicit in line one). Thus, <em class="emphasis">stein</EM
>
will not be given write access because while the combined <span class="acronym">ACES</SPAN
>
do grant it to him, they also deny write access, and so the request
will fail.</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> The base permissions on a file with an extended access
control list may be changed with <kbd class="command">chmod</KBD
>'s symbolic mode,
and any changes made in this way will be reflected in the base permissions
section of the <span class="acronym">ACL</SPAN
>. However, <kbd class="command">chmod</KBD
>'s
numeric mode must not be used for files with extended permissions,
because using it automatically disables them.</P
></BLOCKQUOTE
><p class="para"><span class="acronym">ACLS</SPAN
> may be applied and modified with the
<a class="indexterm" name="AUTOID-4868"></A
>
acledit command. acledit retrieves
the current <span class="acronym">ACL</SPAN
> for the file specified as its
argument and opens it for editing, using the text editor specified
by the <span class="acronym">EDITOR</SPAN
> environment variable. The use of
this variable under <span class="acronym">AIX</SPAN
> is different from its
use in other <span class="acronym">UNIX</SPAN
> systems.[18]
For one thing, no default exists
(most <span class="acronym">UNIX</SPAN
> implementations use vi when <span class="acronym">EDITOR</SPAN
>
is unset). For another, <span class="acronym">AIX</SPAN
> requires that the
full pathname to the editor be supplied, rather than only the filename.[19]</P
><blockquote class="footnote"><p class="para">[18] As are many things
in <span class="acronym">AIX</SPAN
>.</P
><p class="para">[19] E.g., <i class="filename">/bin/vi</I
>, not <i class="filename">vi</I
>.</P
></BLOCKQUOTE
><p class="para">Once in the editor, make any changes to the <span class="acronym">ACL</SPAN
>
that you wish. If you are adding extended permission <span class="acronym">ACES</SPAN
>,
be sure to change <em class="emphasis">disabled</EM
> to <em class="emphasis">enabled</EM
>
in the first line of that section. When you are finished, exit from
the editor normally. <span class="acronym">AIX</SPAN
> will then print the
message:</P
><blockquote class="screen"><pre class="screen">Should the modified <span class="acronym">ACL</SPAN
> be applied? (y)</PRE
></BLOCKQUOTE
><p class="para">If <a class="indexterm" name="AUTOID-4893"></A
><a class="indexterm" name="AUTOID-4896"></A
>
you wish to discard your changes to
the <span class="acronym">ACL</SPAN
>, enter &quot;n&quot;; otherwise,
you should enter a carriage return. <span class="acronym">AIX</SPAN
> will
then check the new <span class="acronym">ACL</SPAN
>, and if it has no errors,
apply it to the file. If there are errors in the <span class="acronym">ACL</SPAN
>
(misspelled keywords or usernames are the most common), you will
be placed back in the editor where you can correct the errors and
try again. <span class="acronym">AIX</SPAN
> will put error messages like the
following example at the bottom of the file, describing the errors
it found:</P
><blockquote class="screen"><pre class="screen">* line number  9: unknown keyword: spceify
* line number 10: unknown user: chavze</PRE
></BLOCKQUOTE
><p class="para">You don't need to delete the error messages themselves
from the <span class="acronym">ACL</SPAN
>.</P
><p class="para">However, this is the slow way of applying an <span class="acronym">ACL</SPAN
>.
The <kbd class="command">aclget</KBD
> and <kbd class="command">aclput</KBD
> commands offer alternative ways to display
and apply <span class="acronym">ACLS</SPAN
> to files.</P
><p class="para"><a class="indexterm" name="AUTOID-4913"></A
><kbd class="command">aclget</KBD
> takes
a filename as its argument, and displays the corresponding <span class="acronym">ACL</SPAN
>
on standard output (or to the file specified in its <kbd class="command">-o</KBD
>
option).</P
><p class="para">The <kbd class="command">aclput</KBD
> command is used to read an <span class="acronym">ACL</SPAN
>
from a text file. By default, it takes its input from standard input,
or from an input file specified with the<i class="filename"> -i </I
>option.
Thus, to set the <span class="acronym">ACL</SPAN
> for the file <em class="emphasis">gold</EM
>
to the one stored in the file <em class="emphasis">metal.acl</EM
>, you
could use this command:</P
><blockquote class="screen"><pre class="screen">$ aclput -i metal.acl gold</PRE
></BLOCKQUOTE
><p class="para">This form of aclput is useful if you use only a few different
<span class="acronym">ACLS</SPAN
>, all of which are saved as separate files
to be applied as needed.</P
><p class="para">To copy an <span class="acronym">ACL</SPAN
> from one file to another,
put <kbd class="command">aclget</KBD
> and <kbd class="command">aclput</KBD
> together in a pipe. For example, the command
below copies the <span class="acronym">ACL</SPAN
> from the file <em class="emphasis">silver</EM
>
to the file <em class="emphasis">emerald</EM
>:</P
><blockquote class="screen"><pre class="screen">$ aclget silver | aclput emerald</PRE
></BLOCKQUOTE
><p class="para">To copy an <span class="acronym">ACL</SPAN
> from one file to a group
of files, use <a class="indexterm" name="AUTOID-4938"></A
>
<kbd class="command">xargs</KBD
>:</P
><blockquote class="screen"><pre class="screen">$ ls *.dat *.old | xargs -i /bin/sh -c &quot;aclget silver | aclput {}&quot;</PRE
></BLOCKQUOTE
><p class="para">These commands copy the <span class="acronym">ACL</SPAN
> in <em class="emphasis">silver</EM
>
to all the files ending in <em class="emphasis">.dat</EM
> and <em class="emphasis">.old</EM
>
in the current directory.</P
><p class="para">You can use the <a class="indexterm" name="AUTOID-4948"></A
><a class="indexterm" name="AUTOID-4951"></A
>
<kbd class="command">ls -le</KBD
> command to quickly determine whether
a file has an extended permissions set or not:</P
><blockquote class="screen"><pre class="screen">$ ls -le *_acl
-rw-r-----+   1 chavez  chem           51 Mar 20 13:27  has_acl
-rwxrws----   2 chavez  chem          512 Feb 08 17:58  no_acl</PRE
></BLOCKQUOTE
><p class="para">The plus sign appended to the normal mode string indicates
the presence of extended permissions; the minus sign is present
otherwise.<a class="indexterm" name="AUTOID-4957"></A
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-5-SECT-2.5.2">5.2.5.2 HP-UX access control lists</A
></H4
><p class="para">The <a class="indexterm" name="AUTOID-4963"></A
><a class="indexterm" name="AUTOID-4965"></A
>
<kbd class="command">lsacl</KBD
> command can be used to view the access control
list for a file. For a file having only normal <span class="acronym">UNIX</SPAN
>
file modes set, the output looks like this:</P
><blockquote class="screen"><pre class="screen">(chavez.%,rw-)(%.chem,r--)(%.%,---)  bronze</PRE
></BLOCKQUOTE
><p class="para">This example shows the format an <span class="acronym">ACL</SPAN
> takes
under HP-UX. Each parenthesized item is known as an <em class="emphasis">access
control list entry</EM
>, although we're going to
call them &quot;entries.&quot; The percent sign character
(&quot;%&quot;) is a wildcard within an entry,
and the three entries in the previous listing specify the access
for user <em class="emphasis">chavez</EM
> as a member of any group, for
any user in group <em class="emphasis">chem</EM
>, and for all other users
and groups, respectively.</P
><p class="para">A file can have up to 16 access control list entries: three
base entries corresponding to normal file modes and up to 13 optional
entries. Here is the access control list for another file (generated
this time by lsacl -l):</P
><blockquote class="screen"><pre class="screen">silver:
rwx chavez.%
r-x %.chem
r-x %.phys
r-x hill.bio
rwx harvey.%
--- %.%</PRE
></BLOCKQUOTE
><p class="para">This <span class="acronym">ACL</SPAN
> grants every access to user <em class="emphasis">chavez</EM
>
with any current group membership (she is the file owner). It grants
read and execute access to members of the <em class="emphasis">chem</EM
>
and <em class="emphasis">phys</EM
> groups; it grants read and execute
access to user <em class="emphasis">hill, </EM
>if hill is a member of
group <em class="emphasis">bio</EM
>; it grants user <em class="emphasis">harvey</EM
>
read, write, and execute access regardless of his group membership;
and it grants no access to any other user or group.</P
><p class="para">Entries within an HP-UX access control list are examined
in order of decreasing specificity: entries with a specific user
and group are considered first; those with only a specific user
follow; ones with only a specific group are next; and the other
entries are last of all. Within a class, entries are examined in
order. When determining whether or not to permit file access, the
first applicable entry is used. Thus, user <i class="filename">harvey</I
>
will be given write access to the file <i class="filename">silver</I
>
even if he is a member of the <i class="filename">chem</I
> or <em class="emphasis">phys</EM
>
group.</P
><p class="para">The <a class="indexterm" name="AUTOID-4992"></A
>
<kbd class="command">chacl</KBD
> command is used
to modify the access control list for a file. <span class="acronym">ACLS</SPAN
>
can be specified to <kbd class="command">chacl</KBD
> in two distinct forms:
as a list of entries or via a <kbd class="command">chmod</KBD
>-like syntax. By default, <kbd class="command">chacl</KBD
>
adds entries to the current <span class="acronym">ACL</SPAN
>. For example,
these two commands add to the file server's <span class="acronym">ACL</SPAN
>
read access for the <i class="systemitem.username">bio</I
> group and read and
execute access for user <i class="systemitem.username">hill</I
>:</P
><blockquote class="screen"><pre class="screen">$ chacl &quot;(%.bio,r--) (hill.%,r-x)&quot; silver
$ chacl &quot;%.bio = r, hill.% = rx&quot; silver</PRE
></BLOCKQUOTE
><p class="para">In either format, the access control list must be passed to
<kbd class="command">chacl</KBD
> as a single argument. The second format also includes +
and - operators as in <kbd class="command">chmod</KBD
>. For example, this command
adds read access for group <em class="emphasis">chem</EM
> and user <em class="emphasis">harvey,</EM
>
and removes write access for group <em class="emphasis">chem</EM
>, adding
or modifying <span class="acronym">ACL</SPAN
> entries as needed:</P
><blockquote class="screen"><pre class="screen">$ chacl &quot;%.chem -w+r, harvey.% +r&quot; silver</PRE
></BLOCKQUOTE
><p class="para">chacl's <a class="indexterm" name="AUTOID-5013"></A
><a class="indexterm" name="AUTOID-5016"></A
>
-<i class="filename">r</I
> option
can be used to replace the current <span class="acronym">ACL</SPAN
>:</P
><blockquote class="screen"><pre class="screen">$ chacl -r &quot;@.% = 7, %.@ = rx, %.bio = r, %.% = &quot; *.dat</PRE
></BLOCKQUOTE
><p class="para">The <a class="indexterm" name="AUTOID-5023"></A
>
@ sign is a shorthand for the current
user or group owner as appropriate, and also enables user-independent
<span class="acronym">ACLS</SPAN
> to be constructed. <kbd class="command">chacl</KBD
>'s <i class="filename">-f</I
> option can be used to copy an <span class="acronym">ACL</SPAN
>
from one file to another file or group of files. This command applies
the <span class="acronym">ACL</SPAN
> from the file <em class="emphasis">silver</EM
>
to all files in the current directory having the extension <em class="emphasis">.dat</EM
> :</P
><blockquote class="screen"><pre class="screen">$ chacl -f silver *.dat</PRE
></BLOCKQUOTE
><p class="para">Be careful with this option as it will change the ownership
of target files if necessary so that the <span class="acronym">ACL</SPAN
>
exactly matches that of the specified file. If you merely want to
apply a standard <span class="acronym">ACL</SPAN
> to a set of files, you're
better off creating a file containing the desired <span class="acronym">ACL</SPAN
>,
using @ characters as appropriate, and then applying it
to files in this way:</P
><blockquote class="screen"><pre class="screen">$ chacl -r `cat acl.metal` *.dat</PRE
></BLOCKQUOTE
><p class="para">You can create the initial template file by using <kbd class="command">lsacl</KBD
> on
an existing file and capturing the output.</P
><p class="para">You can still use <a class="indexterm" name="AUTOID-5042"></A
>
<kbd class="command">chmod</KBD
>
to change the base entries of a file with an <span class="acronym">ACL</SPAN
>
if you include the -A option. Files with optional entries
are marked by a plus sign appended to the mode string in long directory
listings:</P
><blockquote class="screen"><pre class="screen">-rw-------+  1 chavez   chem        8684 Jun 20 16:08 has_one
-rw-r--r--   1 chavez   chem      648205 Jun 20 11:12 none_here <a class="indexterm" name="AUTOID-5048"></A
><a class="indexterm" name="AUTOID-5051"></A
><a class="indexterm" name="AUTOID-5053"></A
><a class="indexterm" name="AUTOID-5056"></A
>
 </PRE
></BLOCKQUOTE
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch05_01.htm" title="5.1 Files"><img src="../gifs/txtpreva.gif" alt="Previous: 5.1 Files" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Practical UNIX &amp; Internet Security"><img src="../gifs/txthome.gif" alt="Practical UNIX &amp; Internet Security" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch05_03.htm" title="5.3 The umask"><img src="../gifs/txtnexta.gif" alt="Next: 5.3 The umask" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">5.1 Files</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">5.3 The umask</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
