<html><head>
<title>[Chapter 1] 1.3 History of UNIX</TITLE>
<meta name="DC.title" content="Practical UNIX &amp; Internet Security"><meta name="DC.creator" content="Simson Garfinkel &amp; Gene Spafford"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-03T23:58:35Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-148-8" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch01_01.htm" title="1. Introduction"><link rel="prev" href="ch01_02.htm" title="1.2 What Is an Operating System?"><link rel="next" href="ch01_04.htm#PUIS-CHP-1-SECT-4.1" title="1.4 Security and UNIX"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Practical UNIX &amp; Internet Security" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Practical UNIX &amp; Internet Security"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch01_02.htm" title="1.2 What Is an Operating System?"><img src="../gifs/txtpreva.gif" alt="Previous: 1.2 What Is an Operating System?" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 1<br>Introduction</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch01_04.htm#PUIS-CHP-1-SECT-4.1" title="1.4 Security and UNIX"><img src="../gifs/txtnexta.gif" alt="Next: 1.4 Security and UNIX" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PUIS-CHP-1-SECT-3">1.3 History of UNIX</A
></H2
><p class="para"><a class="indexterm" name="AUTOID-684"></A
>The roots
of <span class="acronym">UNIX</SPAN
>[4] go
back to the mid-1960s, when American Telephone and Telegraph, Honeywell,
General Electric, and the Massachusetts Institute of Technology
embarked on a massive project to develop an information utility.
The project, called<a class="indexterm" name="AUTOID-692"></A
>
<span class="acronym">MULTICS</SPAN
> (standing for
Multiplexed Information and Computing Service), was heavily funded
by the Department of Defense Advanced Research Projects Agency (<span class="acronym">ARPA</SPAN
>,<a class="indexterm" name="AUTOID-696"></A
><a class="indexterm" name="AUTOID-698"></A
>
 once also known as <span class="acronym">DARPA</SPAN
>). Most of
the research took place in Cambridge, Massachusetts, at <span class="acronym">MIT</SPAN
>.</P
><blockquote class="footnote"><p class="para">[4] A more comprehensive history
of <span class="acronym">UNIX</SPAN
>, from which some of the following is
derived, is Peter Salus's book, A Quarter Century of UNIX,
mentioned in <a class="xref" href="appd_01.htm" title="Paper Sources">Appendix D</A
>.</P
></BLOCKQUOTE
><p class="para"><span class="acronym">MULTICS</SPAN
> was a modular system built from
banks of high-speed processors, memory, and communications equipment.
By design, parts of the computer could be shut down for service
without affecting other parts or the users. The goal was to provide
computer service 24 hours a day, 365 days a year&nbsp;- a computer
that could be made faster by adding more parts, much in the same
way that a power plant can be made bigger by adding more furnaces,
boilers, and turbines. Although this level of processing is simply
assumed today, such a capability was not available when <span class="acronym">MULTICS</SPAN
>
was begun.</P
><p class="para"><span class="acronym">MULTICS</SPAN
><a class="indexterm" name="AUTOID-708"></A
><a class="indexterm" name="AUTOID-710"></A
>
was also designed
with military security in mind. <span class="acronym">MULTICS</SPAN
> was designed
both to be resistant to external attacks and to protect the users
on the system from each other. <span class="acronym">MULTICS</SPAN
> was to
support the concept of <i class="firstterm">multilevel security. </I
>Top
Secret, Secret, Confidential, and Unclassified information could
all coexist on the same computer. The <span class="acronym">MULTICS</SPAN
>
operating system was designed to prevent information that had been
classified at one level from finding its way into the hands of someone
who had not been cleared to see that information. <span class="acronym">MULTICS</SPAN
>
eventually provided a level of security and service that is still
unequaled by many of today's computer systems&nbsp;- including,
perhaps, <span class="acronym">UNIX</SPAN
>.</P
><p class="para">In 1969, <span class="acronym">MULTICS</SPAN
> was far behind schedule.
Its creators had promised far more than they could deliver within
the projected time frame. Already at a disadvantage because of the
distance between its New Jersey laboratories and <span class="acronym">MIT</SPAN
>,
AT&amp;T decided to pull out of the <span class="acronym">MULTICS</SPAN
>
Project.</P
><p class="para">That year Ken <a class="indexterm" name="AUTOID-724"></A
>
Thompson,
an AT&amp;T researcher who had worked on the <span class="acronym">MULTICS</SPAN
>
Project, took over an unused <span class="acronym">PDP</SPAN
>-7 computer to
pursue some of the <span class="acronym">MULTICS</SPAN
> ideas on his own.
Thompson was soon joined by <a class="indexterm" name="AUTOID-729"></A
>
Dennis
Ritchie, who had also worked on <span class="acronym">MULTICS</SPAN
>. <a class="indexterm" name="AUTOID-732"></A
>
Peter Neumann suggested the name <span class="acronym">UNIX</SPAN
>
for the new system. The name was a pun on the name <span class="acronym">MULTICS</SPAN
>
and a backhanded slap at the project that was continuing in Cambridge
(and indeed continued for another decade and a half). Whereas <span class="acronym">MULTICS</SPAN
>
tried to do many things, <span class="acronym">UNIX</SPAN
> tried to do one
thing well: run programs. The concept of strong security was not
part of this goal.</P
><p class="para">The smaller scope was all the impetus that the researchers
needed; an early version of <span class="acronym">UNIX</SPAN
> was operational
several months before <span class="acronym">MULTICS</SPAN
>. Within a year,
Thompson, Ritchie, and others rewrote <span class="acronym">UNIX</SPAN
> for
Digital's new <span class="acronym">PDP</SPAN
>-11 <a class="indexterm" name="AUTOID-743"></A
>
computer.</P
><p class="para"><a class="indexterm" name="AUTOID-746"></A
>As AT&amp;T's scientists
added features to their system throughout the 1970s, <span class="acronym">UNIX</SPAN
>
evolved into a programmer's dream. The system was based
on compact programs, called tools, each of which performed a single
function. By putting tools together, programmers could do complicated
things. <span class="acronym">UNIX </SPAN
>mimicked the way programmers thought.
To get the full functionality of the system, users needed access
to all of these tools&nbsp;- and in many cases, to the source
code for the tools as well. Thus, as the system evolved, nearly
everyone with access to the machines aided in the creation of new
tools and in the debugging of existing ones.</P
><p class="para">In 1973, Thompson rewrote most of <span class="acronym">UNIX</SPAN
>
in Ritchie's newly invented C programming language. <a class="indexterm" name="AUTOID-752"></A
>
C was designed to be a simple, portable
language. Programs written in C could be moved easily from one kind
of computer to another&nbsp;- as was the case with programs written
in other high-level languages like <span class="acronym">FORTRAN</SPAN
>&nbsp;- yet
they ran nearly as fast as programs coded directly in a computer's
native machine language.</P
><p class="para">At least, that was the theory. In practice, every different
kind of computer at Bell Labs had its own operating system. C programs
written on the <span class="acronym">PDP</SPAN
>-11 could be recompiled on
the lab's other machines, but they didn't always
run properly, because every operating system performed input and
output in slightly different ways. Mike <a class="indexterm" name="AUTOID-757"></A
>
Lesk
developed a &quot;<a class="indexterm" name="AUTOID-759"></A
><a class="indexterm" name="AUTOID-761"></A
>
portable <span class="acronym">I/O</SPAN
>
library&quot; to overcome some of the incompatibilities, but
many remained. Then, in 1977, the group realized that it might be
easier to port the <span class="acronym">UNIX</SPAN
> operating system itself
rather than trying to port all of the libraries. <span class="acronym">UNIX</SPAN
>
was first ported to the lab's Interdata 8/32,
a microcomputer similar to the <span class="acronym">PDP</SPAN
>-11. In 1978,
the operating system was ported to Digital's new <span class="acronym">VAX</SPAN
>
minicomputer. <span class="acronym">UNIX</SPAN
> still remained very much an
experimental operating system. Nevertheless, <span class="acronym">UNIX</SPAN
>
had become a popular operating system in many universities and was
already being marketed by several companies. <span class="acronym">UNIX</SPAN
>
was suddenly more than just a research curiosity.</P
><p class="para">Indeed, as early as 1973, there were more than 16 different
AT&amp;T or Western Electric sites outside Bell Labs running
the operating system. <span class="acronym">UNIX</SPAN
> soon spread even further.
Thompson and Ritchie presented a paper on the operating system at
the <span class="acronym">ACM</SPAN
> Symposium on Operating System Principles
(<span class="acronym">SOSP</SPAN
>) in October 1973. Within a matter of months,
sites around the world had obtained and installed copies of the
system. Even though AT&amp;T was forbidden under the terms
of its 1956 Consent Decree with the U.S. Federal government from
advertising, marketing, or supporting computer software, demand
for <span class="acronym">UNIX</SPAN
> steadily rose. By 1977, more than 500
sites were running the operating system; 125 of them were at universities,
in the U.S. and more than 10 foreign countries. 1977 also saw the
first commercial support for <span class="acronym">UNIX</SPAN
>, then at <a class="indexterm" name="AUTOID-778"></A
>
Version 6.</P
><p class="para">At most sites, and especially at universities, the typical
<span class="acronym">UNIX</SPAN
> environment was like that inside Bell Labs:
the machines were in well-equipped labs with restricted physical
access. The users who made extensive use of the machines were people
who had long-term access and who usually made significant modifications
to the operating system and its utilities to provide additional
functionality. They did not need to worry about security on the
system because only authorized individuals had access to the machines.
In fact, implementing security mechanisms often hindered the development
of utilities and customization of the software. One of the authors
worked in two such labs in the early 1980s, and one location viewed
having a password on the <i class="filename">root</I
> account as an
annoyance because everyone who could get to the machine was authorized
to use it as the superuser!</P
><p class="para">This environment was perhaps best typified by the development
at the University of California at Berkeley. Like other schools,
Berkeley had paid $400 for a tape that included the complete
source code to the operating system. Instead of merely running <span class="acronym">UNIX</SPAN
>,
two of Berkeley's bright graduate students, Bill <a class="indexterm" name="AUTOID-786"></A
><a class="indexterm" name="AUTOID-788"></A
>
Joy and Chuck Haley, started making
significant modifications. In 1978, Joy sent out 30 copies of the
&quot;<a class="indexterm" name="AUTOID-790"></A
>
Berkeley Software Distribution
(<span class="acronym">BSD</SPAN
>),&quot; a collection of programs and
modifications to the <span class="acronym">UNIX</SPAN
> system. The charge:
$50 for media and postage.</P
><p class="para">Over the next six years, in an effort funded by <span class="acronym">ARPA</SPAN
>,
the so-called <span class="acronym">BSD</SPAN
> <span class="acronym">UNIX</SPAN
> grew
into an operating system of its own that offered significant improvements
over AT&amp;T's. For example, a programmer using <span class="acronym">BSD</SPAN
>
<span class="acronym">UNIX</SPAN
> could switch between multiple programs running
at the same time. AT&amp;T's <span class="acronym">UNIX</SPAN
>
allowed the names on files to be only 14 letters long, but Berkeley's
allowed names of up to 255 characters. But perhaps the most important
of the Berkeley improvements was the <span class="acronym">BSD</SPAN
> 4.2
<span class="acronym">UNIX</SPAN
> networking software, which made it easy
to connect <span class="acronym">UNIX</SPAN
> computers to local area[5]
networks (<span class="acronym">LAN</SPAN
>s). For all of these reasons, the
Berkeley version of <span class="acronym">UNIX</SPAN
> became very popular
with the research and academic communities.</P
><blockquote class="footnote"><p class="para">[5] And we stress, <em class="emphasis">local</EM
> area.</P
></BLOCKQUOTE
><p class="para">About the same time, AT&amp;T had been freed from its
restrictions on developing and marketing source code as a result
of the enforced divestiture of the phone company. Executives realized
that they had a strong potential product in <span class="acronym">UNIX</SPAN
>,
and they set about developing it into a more polished commercial
product. This led to an interesting change in the numbering of the
<span class="acronym">BSD</SPAN
> releases.</P
><p class="para">Berkeley 4.2 <span class="acronym">UNIX</SPAN
> should have been numbered
5.0. However, by the time that the 4.2 Berkeley Software Distribution
was ready to be released, friction was growing between the developers
at Berkeley and the management of AT&amp;T, who owned the <span class="acronym">UNIX</SPAN
>
trademark and rights to the operating system. As <span class="acronym">UNIX</SPAN
>
had grown in popularity, AT&amp;T executives became increasingly
worried that, with the popularity of Berkeley <span class="acronym">UNIX</SPAN
>,
AT&amp;T was on the verge of losing control of a valuable property
right. To retain control of <span class="acronym">UNIX</SPAN
>, AT&amp;T
formed the <a class="indexterm" name="AUTOID-818"></A
>
<span class="acronym">UNIX</SPAN
>
Support Group (<span class="acronym">USG</SPAN
>) to continue development and
marketing of the <span class="acronym">UNIX</SPAN
> operating system. <span class="acronym">USG</SPAN
>
proceeded to christen a new version of <span class="acronym">UNIX</SPAN
> as
AT&amp;T <a class="indexterm" name="AUTOID-825"></A
>
System V, and
declare it the new &quot;standard&quot;; AT&amp;T representatives
referred to <span class="acronym">BSD</SPAN
> <span class="acronym">UNIX</SPAN
> as nonstandard
and incompatible.</P
><p class="para">Under Berkeley's license with AT&amp;T, the
university was free to release updates to existing AT&amp;T
<span class="acronym">UNIX</SPAN
> customers. But if Berkeley had decided to
call its new version of <span class="acronym">UNIX</SPAN
> &quot;5.0,&quot;
it would have needed to renegotiate its licensing agreement to distribute
the software to other universities and companies. Thus, Berkeley
released <span class="acronym">BSD</SPAN
> 4.2. By calling the new release
of the operating system &quot;4.2,&quot; they pretended
that the system was simply a minor update.</P
><p class="para">As interest in <span class="acronym">UNIX</SPAN
> grew, the industry
was beset by two competing versions of <span class="acronym">UNIX</SPAN
>:
Berkeley<span class="acronym"> UNIX</SPAN
> and AT&amp;T's System
V. The biggest non-university proponent of Berkeley <span class="acronym">UNIX</SPAN
>
was Sun Microsystems. Founded in part by graduates from Berkeley's
computer science program, Sun's <a class="indexterm" name="AUTOID-838"></A
>
SunOS operating system was, for all practical
purposes, Berkeley's operating system, as it was based
on <span class="acronym">BSD</SPAN
> 4.1c. Many people believe that Sun's
adoption of Berkeley <span class="acronym">UNIX</SPAN
> was responsible for
the early success of the company. Another early adopter was the
Digital Equipment Corporation, whose <a class="indexterm" name="AUTOID-842"></A
>
Ultrix
operating system was also quite similar to Berkeley <span class="acronym">UNIX</SPAN
>&nbsp;- 
not surprising as it was based on <span class="acronym">BSD</SPAN
> 4.2.</P
><p class="para">As other companies entered the <span class="acronym">UNIX</SPAN
> marketplace,
they faced a question of which version of <span class="acronym">UNIX</SPAN
>
to adopt. On the one hand, there was Berkeley <span class="acronym">UNIX</SPAN
>,
which was preferred by academics and developers, but which was &quot;unsupported&quot;
and was frighteningly similar to the operating system used by Sun,
soon to become the market leader. On the other hand, there was AT&amp;T
System V <span class="acronym">UNIX</SPAN
>, which AT&amp;T, the owner
of <span class="acronym">UNIX</SPAN
>, was proclaiming as the operating system
&quot;standard.&quot; As a result, most computer manufacturers
that tried to develop <span class="acronym">UNIX</SPAN
> in the mid-to-late
1980s&nbsp;- including Data General, <span class="acronym">IBM</SPAN
>, Hewlett
Packard, and Silicon Graphics&nbsp;- adopted System V as their
standard. A few tried to do both, coming out with systems that had
dual &quot;universes.&quot; A third version of <span class="acronym">UNIX</SPAN
>,
called <a class="indexterm" name="AUTOID-855"></A
>
Xenix, was
developed by Microsoft in the early 1980s and licensed to the Santa
Cruz Operation (<span class="acronym">SCO</SPAN
>). Xenix was based on AT&amp;T's
older System III operating system, although Microsoft and <span class="acronym">SCO</SPAN
>
had updated it throughout the 1980s, adding some new features, but
not others.</P
><p class="para">As <span class="acronym">UNIX</SPAN
> started to move from the technical
to the commercial markets in the late 1980s, this conflict of operating
system versions was beginning to cause problems for all vendors.
Commercial customers wanted a standard version of <span class="acronym">UNIX</SPAN
>,
hoping that it could cut training costs and guarantee software portability
across computers made by different vendors. And the nascent <span class="acronym">UNIX</SPAN
>
applications market wanted a standard version, believing that this
would make it easier for them to support multiple platforms, as
well as compete with the growing PC-based market.</P
><p class="para">The first two versions of <span class="acronym">UNIX</SPAN
> to merge
were Xenix and AT&amp;T's System V. The resulting
version, <span class="acronym">UNIX</SPAN
> System V/386, release
3.l2, incorporated all the functionality of traditional <span class="acronym">UNIX</SPAN
>
System V and Xenix. It was released in August 1988 for 80386-based
computers.</P
><p class="para">In the spring of 1988, AT&amp;T and Sun Microsystems
signed a joint development agreement to merge the two versions of
<span class="acronym">UNIX</SPAN
>. The new version of <span class="acronym">UNIX</SPAN
>,
<a class="indexterm" name="AUTOID-870"></A
><a class="indexterm" name="AUTOID-872"></A
>
System
V Release 4 (<span class="acronym">SVR4</SPAN
>), was to have the best features
of System V and Berkeley <span class="acronym">UNIX</SPAN
> and be compatible
with programs written for either. Sun proclaimed that it would abandon
its SunOS operating system and move its entire user base over to
its own version of the new operating system, which it would call
<a class="indexterm" name="AUTOID-877"></A
>
Solaris.[6]</P
><blockquote class="footnote"><p class="para">[6] Some documentation
labels the combined versions of SunOS and AT&amp;T System V
as SunOS 5.0, and uses the name Solaris to designate SunOS 5.0 with
the addition of OpenWindows and other applications.</P
></BLOCKQUOTE
><p class="para">The rest of the <span class="acronym">UNIX</SPAN
> industry felt left
out and threatened by the Sun<span class="acronym">/</SPAN
>AT&amp;T announcement.
Companies including <span class="acronym">IBM</SPAN
> and Hewlett-Packard worried
that, because they were not a part of the <span class="acronym">SVR4</SPAN
>
development effort, they would be at a disadvantage when the new
operating system was finally released. In May 1988, seven of the
industry's <span class="acronym">UNIX</SPAN
> leaders&nbsp;- Apollo
Computer, Digital Equipment Corporation, Hewlett-Packard, <span class="acronym">IBM</SPAN
>,
and three major European computer manufacturers &nbsp;- announced
the formation of the <a class="indexterm" name="AUTOID-888"></A
>
Open
Software Foundation (<span class="acronym">OSF</SPAN
>).</P
><p class="para">The stated purpose of <span class="acronym">OSF</SPAN
> was to wrest
control of <span class="acronym">UNIX</SPAN
> away from AT&amp;T and put
it in the hands of a not-for-profit industry coalition, which would
be chartered with shepherding the future development of <span class="acronym">UNIX</SPAN
>
and making it available to all under uniform licensing terms. <span class="acronym">OSF</SPAN
>
decided to base its version of <span class="acronym">UNIX</SPAN
> on <span class="acronym">AIX</SPAN
>,
then moved to the <span class="acronym">MACH</SPAN
> kernel from Carnegie Mellon
University, and an assortment of <span class="acronym">UNIX</SPAN
> libraries
and utilities from HP, <span class="acronym">IBM</SPAN
>, and Digital. To date,
the result of this effort has not been widely adopted or embraced
by all the participants. The <span class="acronym">OSF</SPAN
> operating system
(<span class="acronym">OSF</SPAN
>/1) was late in coming, so some
companies built their own (e.g., <span class="acronym">IBM</SPAN
>'s
<span class="acronym">AIX</SPAN
>). Others adopted <span class="acronym">SVR4</SPAN
>
after it was released, in part because it was available, and in
part because AT&amp;T and Sun went their separate ways&nbsp;- thus
ending the threat against which <span class="acronym">OSF</SPAN
> had been
rallied.</P
><p class="para">As of 1996, the <span class="acronym">UNIX</SPAN
> wars are far from
settled, but they are much less important than they seemed in the
early 1990s. In 1993, AT&amp;T sold <span class="acronym">UNIX</SPAN
>
Systems Laboratories (<span class="acronym">USL</SPAN
>) to <a class="indexterm" name="AUTOID-911"></A
><a class="indexterm" name="AUTOID-913"></A
>
Novell, having succeeded in making <span class="acronym">SVR4</SPAN
>
an industry standard, but having failed to make significant inroads
against Microsoft's Windows operating system on the corporate
desktop. Novell then transferred the <span class="acronym">UNIX</SPAN
> trademark
to the X/Open Consortium, which is granting use of the
name to systems that meet its 1170 test suite. Novell subsequently
sold ownership of the <span class="acronym">UNIX</SPAN
> source code to <span class="acronym">SCO</SPAN
>
in 1995, effectively disbanding <span class="acronym">USL</SPAN
>.</P
><p class="para">Although Digital Equipment Corporation provides Digital <span class="acronym">UNIX</SPAN
>
(formerly <a class="indexterm" name="AUTOID-922"></A
><a class="indexterm" name="AUTOID-924"></A
><a class="indexterm" name="AUTOID-926"></A
><a class="indexterm" name="AUTOID-928"></A
>
<span class="acronym">OSF</SPAN
>/1)
on its workstations, Digital's strongest division isn't
workstations, but its PC division. Despite the fact that Sun's
customers said that they wanted System V compatibility, Sun had
difficulty convincing the majority of its customers to actually
use its Solaris operating system during the first few years of its
release (and many users still complain about the switch). <a class="indexterm" name="AUTOID-932"></A
>
<span class="acronym">BSD/OS</SPAN
> by <span class="acronym">BSD</SPAN
>
Inc., a commercial version of <span class="acronym">BSD</SPAN
> 4.4, is used
in a significant number of network firewall systems, <span class="acronym">VAR</SPAN
>
systems, and academic research labs. Meanwhile, a free <span class="acronym">UNIX</SPAN
>-like
operating system&nbsp;- <a class="indexterm" name="AUTOID-939"></A
>
Linux&nbsp;- has
taken the hobbyist and small-business market by storm. Several other
free implementations of <span class="acronym">UNIX</SPAN
> and <span class="acronym">UNIX</SPAN
>-like
systems for PCs&nbsp;- including versions based on <span class="acronym">BSD</SPAN
>
4.3 and 4.4, and the <a class="indexterm" name="AUTOID-944"></A
>
Mach
system developed at Carnegie Mellon University&nbsp;- have also
gained widespread use. <a class="xref" href="#PUIS-CHP-1-FIG-1" title="Versions of UNIX">Figure 1.1</A
> shows the current
situation with versions of <span class="acronym">UNIX</SPAN
>.</P
><h4 class="figure"><a class="title" name="PUIS-CHP-1-FIG-1">Figure 1.1: Versions of UNIX</A
></H4
><img class="graphic" src="figs/puis_0101.gif" alt="Figure 1.1"><p class="para">Despite the lack of unification, the number of <span class="acronym">UNIX</SPAN
>
systems continues to grow. As of the mid 1990s, <span class="acronym">UNIX</SPAN
>
runs on an estimated five million computers throughout the world.
Versions of <span class="acronym">UNIX</SPAN
> run on nearly every computer
in existence, from small <span class="acronym">IBM</SPAN
> PCs to large supercomputers
such as Crays. Because it is so easily adapted to new kinds of computers,
<span class="acronym">UNIX</SPAN
> is the operating system of choice for many
of today's high-performance microprocessors. Because a
set of versions of the operating system's source code is
readily available to educational institutions, <span class="acronym">UNIX</SPAN
>
has also become the operating system of choice for educational computing
at many universities and colleges. It is also popular in the research
community because computer scientists like the ability to modify
the tools they use to suit their own needs.</P
><p class="para"><span class="acronym">UNIX</SPAN
> has become popular too, in the business
community. In large part this popularity is because of the increasing
numbers of people who have studied computing using a <span class="acronym">UNIX</SPAN
>
system, and who have sought to use <span class="acronym">UNIX</SPAN
> in their
business applications. Users who become familiar with <span class="acronym">UNIX</SPAN
>
tend to become very attached to the openness and flexibility of
the system. The client-server model of computing has also become
quite popular in business environments, and <span class="acronym">UNIX</SPAN
>
systems support this paradigm well (and there have not been too
many other choices).</P
><p class="para">Furthermore, a set of standards for a <span class="acronym">UNIX</SPAN
>-like
operating system (including interface, library, and behavioral characteristics)
has emerged, although considerable variability among implementations
remains. This set of standards is <a class="indexterm" name="AUTOID-966"></A
>
<span class="acronym">POSIX</SPAN
>,
originally initiated by <span class="acronym">IEEE</SPAN
>, but also adopted
as <span class="acronym">ISO/IEC</SPAN
> 9945. People can now buy different
machines from different vendors, and still have a common interface.
Efforts are also focused on putting the same interface on <span class="acronym">VMS</SPAN
>,
Windows NT, and other platforms quite different from <span class="acronym">UNIX</SPAN
>
&quot;under the hood.&quot; Today's <span class="acronym">UNIX</SPAN
>
is based on many such standards, and this greatly increases its
attractiveness as a common platform base in business and academia
alike. <span class="acronym">UNIX</SPAN
> vendors and users are the leaders
of the &quot;open systems&quot; movement: without <span class="acronym">UNIX</SPAN
>,
the very concept of &quot;open systems&quot; would probably
not exist. No longer do computer purchases lock a customer into
a multi-decade relationship with a single vendor.<a class="indexterm" name="AUTOID-976"></A
></P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch01_02.htm" title="1.2 What Is an Operating System?"><img src="../gifs/txtpreva.gif" alt="Previous: 1.2 What Is an Operating System?" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Practical UNIX &amp; Internet Security"><img src="../gifs/txthome.gif" alt="Practical UNIX &amp; Internet Security" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch01_04.htm#PUIS-CHP-1-SECT-4.1" title="1.4 Security and UNIX"><img src="../gifs/txtnexta.gif" alt="Next: 1.4 Security and UNIX" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">1.2 What Is an Operating System?</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">1.4 Security and UNIX</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
