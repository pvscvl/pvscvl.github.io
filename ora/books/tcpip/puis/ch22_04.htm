<html><head>
<title>[Chapter 22] 22.4 SOCKS</TITLE>
<meta name="DC.title" content="Practical UNIX &amp; Internet Security"><meta name="DC.creator" content="Simson Garfinkel &amp; Gene Spafford"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:17:13Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-148-8" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch22_01.htm" title="22. Wrappers and Proxies"><link rel="prev" href="ch22_03.htm" title="22.3 tcpwrapper"><link rel="next" href="ch22_05.htm" title="22.5 UDP Relayer"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Practical UNIX &amp; Internet Security" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Practical UNIX &amp; Internet Security"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch22_03.htm" title="22.3 tcpwrapper"><img src="../gifs/txtpreva.gif" alt="Previous: 22.3 tcpwrapper" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 22<br>Wrappers and Proxies</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch22_05.htm" title="22.5 UDP Relayer"><img src="../gifs/txtnexta.gif" alt="Next: 22.5 UDP Relayer" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PUIS-CHP-22-SECT-4">22.4 SOCKS</A
></H2
><p class="para"><span class="acronym">SOCKS</SPAN
> is a system
that allows computers behind a firewall to access services on the
Internet. The program allows you to centrally control how programs
on your organization's network communicate with the Internet.
With <span class="acronym">SOCKS</SPAN
>, you can allow specific services to
specific computers, disable access to individual hosts on the Internet,
and log as much or as little as you want.</P
><p class="para"><span class="acronym">SOCKS</SPAN
>
was originally written by David Koblas and Michelle <a class="indexterm" name="AUTOID-31164"></A
><a class="indexterm" name="AUTOID-31166"></A
>
Koblas. It has since been extended
by Ying-Da <a class="indexterm" name="AUTOID-31168"></A
>
Lee at <span class="acronym">NEC</SPAN
>'s
Systems Laboratory, and a commercially supported version is available
from <span class="acronym">NEC</SPAN
>. The name <span class="acronym">SOCKS</SPAN
> stands
for &quot;<span class="acronym">SOCK</SPAN
>-et-S.&quot; According
to the <span class="acronym">SOCKS</SPAN
> <span class="acronym">FAQ</SPAN
>, &quot;it
was one of those `development names' that never
left.&quot;</P
><p class="para"><span class="acronym">SOCKS</SPAN
> consists of
two parts:</P
><dl class="variablelist"><dt class="term">SOCKS server</DT
><dd class="listitem"><p class="para">A program that is run on a host that can communicate
directly with both the Internet and the internal computers on your
network (e.g., the firewall's gate).</P
></DD
><dt class="term">SOCKS client programs</DT
><dd class="listitem"><p class="para">Specially modified Internet client programs that
know to contact the <span class="acronym">SOCKS</SPAN
> server instead of sending
requests directly to the Internet.</P
></DD
></DL
><p class="para">The standard <span class="acronym">SOCKS</SPAN
> distribution comes with
client programs for <kbd class="command">finger</KBD
>, <kbd class="command">ftp</KBD
>, <kbd class="command">telnet</KBD
>, and <kbd class="command">whois</KBD
>. <span class="acronym">SOCKS</SPAN
>
also includes a library you can use to create other <span class="acronym">SOCKS</SPAN
>
clients at will. Furthermore, many programs, such as <span class="acronym">NCSA</SPAN
>
Mosaic, include provisions for using <span class="acronym">SOCKS</SPAN
> to
negotiate firewalls.</P
><p class="para"><span class="acronym">SOCKS</SPAN
> is available
for most versions of <span class="acronym">UNIX</SPAN
>, including SunOS, Sun
Solaris, <span class="acronym">IRIX</SPAN
>, Ultrix, <span class="acronym">HP-UX</SPAN
>,
<span class="acronym">AIX</SPAN
>, Interactive Systems <span class="acronym">UNIX</SPAN
>,
<span class="acronym">OSF</SPAN
>/1, Net<span class="acronym">BSD</SPAN
>, <span class="acronym">UNIX</SPAN
>Ware,
and Linux. A version called PC <span class="acronym">SOCKS</SPAN
>, by Cornell
Kinderknecht, is available for Microsoft Windows. A Macintosh version
is under development.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-4.1">22.4.1 What SOCKS Does</A
></H3
><p class="para">The <span class="acronym">SOCKS</SPAN
>
client software works by replacing calls to the <span class="acronym">UNIX</SPAN
>
socket functions&nbsp;- 
<kbd class="command">connect</KBD
>(),
<kbd class="command">getsocketname</KBD
>(),
<kbd class="command">bind</KBD
>(),
<kbd class="command">accept</KBD
>(),
<kbd class="command">listen</KBD
>()
and <kbd class="command">select</KBD
>()&nbsp;- with
its own versions of these functions. In practice, this replacement
is done by adding a few macro definitions to the <span class="acronym">CFLAGS</SPAN
>
in the <i class="filename">Makefile</I
> of the program that is used to compile the network
client program, and then linking the resulting program with the
<span class="acronym">SOCKS</SPAN
> library.</P
><p class="para">When a <span class="acronym">SOCKS</SPAN
>-modified
client attempts to connect to a server on the Internet, the <span class="acronym">SOCKS</SPAN
>
library intercepts the connection attempt and instead opens up a
connection to the <span class="acronym">SOCKS</SPAN
> server. After the connection
is established, the <span class="acronym">SOCKS</SPAN
> client sends through
the following information:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Version number</P
></LI
><li class="listitem"><p class="para">Connect request command</P
></LI
><li class="listitem"><p class="para">Port number to which the client requested to connect</P
></LI
><li class="listitem"><p class="para">IP address to which the client requested to connect</P
></LI
><li class="listitem"><p class="para">Username of the person initiating the request</P
></LI
></UL
><p class="para">The <span class="acronym">SOCKS</SPAN
> server then checks its access
control list to see if the connection should be accepted or rejected.
If the connection is accepted, the server opens up a connection
to the remote machine and then relays all information back and forth.
If the connection is rejected, the server disconnects from the client.
This configuration is shown graphically in <a class="xref" href="#PUIS-CHP-22-FIG-1" title=": Using SOCKS for proxying">Figure 22.1</A
>.</P
><h4 class="figure"><a class="title" name="PUIS-CHP-22-FIG-1">Figure 22.1: : Using SOCKS for proxying</A
></H4
><img class="graphic" src="figs/puis_2201.gif" alt="Figure 22.1"><p class="para"><span class="acronym">SOCKS</SPAN
> can also be used
to allow computers behind a firewall to receive connections. In
this case, a connection is opened to the <span class="acronym">SOCKS</SPAN
>
server, which in turn gets ready to accept connections from the
Internet.</P
><p class="para"><span class="acronym">SOCKS</SPAN
> works only with
<span class="acronym">TCP/IP</SPAN
>; for <span class="acronym">UDP</SPAN
> services (such
as Archie), use <span class="acronym">UDP</SPAN
> Relayer as described later
in this chapter.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-4.2">22.4.2 Getting SOCKS</A
></H3
><p class="para">Socks may be freely downloaded
from the Internet. The address is:</P
><blockquote class="literallayout"><p class="literallayout"><a class="systemitem.url" href="../../../WebStripper/protected.html#link=ftp://ftp.nec.com/pub/security/socks.cstc/">ftp://ftp.nec.com/pub/security/socks.cstc/</A
><br><a class="systemitem.url" href="../../../../../../../www.socks.nec.com/">http://www.socks.nec.com/</A
></P
></BLOCKQUOTE
><p class="para">If you operate two nameservers to hide information from the
Internet, you will also need to download the file <i class="filename">Rgethostbyname.c</I
>.
This file contains a function that can be used to query multiple
nameservers to resolve a hostname.</P
><p class="para">There is a mailing
list devoted to <span class="acronym">SOCKS</SPAN
> and related issues. To
join it, send the message &quot;subscribe socks <em class="emphasis">your-email-address</EM
>&quot;
to <i class="filename">majordomo@syl.dl.nec.com.</I
></P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> This section discusses <span class="acronym">SOCKS</SPAN
> Version
4. At the time of this writing, <span class="acronym">SOCKS</SPAN
> Version
5 was under development. New features in <span class="acronym">SOCKS</SPAN
>
5 include strong authentication, authentication method negotiation,
message integrity, message privacy, and support for <span class="acronym">UDP</SPAN
>
applications.</P
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-4.3">22.4.3 Getting SOCKS Running</A
></H3
><p class="para">After you have
downloaded the system, you will need to follow these steps to get
the system running:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Unpack the <span class="acronym">SOCKS</SPAN
>
distribution.</P
></LI
><li class="listitem"><p class="para">Decide whether you wish to have the <span class="acronym">SOCKS</SPAN
>
daemon started automatically when the system starts (boot time),
or started by <kbd class="command">inetd</KBD
> when each <span class="acronym">SOCKS</SPAN
> request is
received.</P
><p class="para">The advantage of having the daemon start automatically
at system start-up is that the daemon will need to read its configuration
file only once. Otherwise, the configuration file will have to be
read each time a <span class="acronym">SOCKS</SPAN
> connection is requested.
We recommend that you have <span class="acronym">SOCKS</SPAN
> started at boot
time.</P
></LI
><li class="listitem"><p class="para">Edit the file <i class="filename">Makefile</I
> in the main <span class="acronym">SOCKS</SPAN
>
directory and the file <i class="filename">include/socks.h</I
> to reflect the policy
of your site. Be sure to edit the variables found in <a class="xref" href="#PUIS-CHP-22-TAB-4" title="Variables">Table 22.4</A
>.



<table class="table"><caption class="table"><a class="title" name="PUIS-CHP-22-TAB-4">Table 22.4: Variables</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Variable</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Location</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Purpose/Setting</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">SOCKS_DEFAULT_SERVER</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">include/socks.h</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Set with the hostname of the computer
that hosts the <kbd class="command">sockd</KBD
> daemon.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">SOCKS_DEFAULT_NS</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">include/socks.h</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Set if the clients inside your firewall
cannot look up the IP addresses of external hosts.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">NOT_THROUGH_INETD</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">include/socks.h</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Set if <kbd class="command">socksd</KBD
> will be started automatically
at system boot.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">SOCKS_CONF</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">include/socks.h</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Location of the SOCKS configuration file
for client machines.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">SOCKD_CONF</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">include/socks.h</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Location of the SOCKS configuration file
for the <kbd class="command">sockd</KBD
> daemon.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">MULTIHOMED_SERVER</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">include/socks.h</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Set if <kbd class="command">sockd</KBD
> will be running on a multihomed
server (a gate computer with two Ethernet ports).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">SOCKD_ROUTE_FILE</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">include/socks.h</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Location of the SOCKS routing file, for
use with multihomed servers.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">FACIST</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">Makefile</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Causes SOCKS FTP client to log names
of all files transferred.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">FOR_PS</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">Makefile</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Causes <kbd class="command">sockd</KBD
> to display information about
its current activity in the output from the ps command.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">SERVER_BIN_DIR</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">Makefile</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Directory containing the <kbd class="command">sockd</KBD
> daemon.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">CLIENTS_BIN_DIR</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="filename">Makefile</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Directory containing the SOCKS client
programs.</P
></TD
></TR
></TBODY
></TABLE
>&#13;</P
></LI
><li class="listitem"><p class="para">Compile <span class="acronym">SOCKS</SPAN
> with
a suitable C compiler.</P
></LI
><li class="listitem"><p class="para">Verify that <kbd class="command">sockd</KBD
> compiled properly and with the
correct configuration by running <kbd class="command">sockd</KBD
> with the <i class="filename">-ver</I
> option:</P
><blockquote class="screen"><pre class="screen">% <b class="emphasis.bold">./sockd -ver</B
>
 CSTC single-homed, stand-alone SOCKS proxy server version 4.2.
 Supports clients that use Rrcmd().
%</PRE
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Become superuser.</P
></LI
><li class="listitem"><p class="para">Install the <span class="acronym">SOCKS</SPAN
> daemon in the
location that you specified in the <i class="filename">Makefile</I
>; you may be able to
do this by typing &quot;<kbd class="command">make install.server</KBD
>&quot;.</P
></LI
><li class="listitem"><p class="para">Add the <span class="acronym">SOCKS</SPAN
> service to your
<i class="filename">/etc/services</I
> file. It should look like this:</P
><blockquote class="screen"><pre class="screen">socks			1080/tcp</PRE
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Now you need to set up the <span class="acronym">SOCKS</SPAN
>
configuration file. See the section called &quot;The SOCKS Server
Configuration File: <i class="filename">/etc/sockd.conf</I
> below.</P
></LI
><li class="listitem"><p class="para">If you decided to have <span class="acronym">SOCKS</SPAN
>
start automatically at system boot time, modify your boot configuration
files (either by adding a few lines to /etc/rc.local
or by creating a new file in /etc/rc2.d/).
You can set the start-up by adding a few lines that look like this:</P
><blockquote class="screen"><pre class="screen"># Start SOCKS server
if [ -f /usr/etc/sockd ]; then
      (echo -n &quot;sockd... &quot;)
                &gt;/dev/console
      /usr/etc/sockd &gt;/dev/console 2&gt;&amp;1
fi</PRE
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">If you decided to have <span class="acronym">SOCKS</SPAN
>
start from inetd (and you probably don't want to do this),
add this line to the /etc/inetd.conf file:</P
><blockquote class="screen"><pre class="screen">socks stream tcp nowait nobody /usr/etc/sockd </PRE
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Start the sockd daemon manually, or reset inetd.</P
></LI
><li class="listitem"><p class="para">Test the system.</P
></LI
></OL
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-4.4">22.4.4 SOCKS and Usernames</A
></H3
><p class="para"><span class="acronym">SOCKS</SPAN
>
permits you to allow or deny access to Internet services based on
both IP address and the username of the person on the local network
making the request. There are two ways that <span class="acronym">SOCKS</SPAN
>
can determine the username of a person on the internal network:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Normally, a <span class="acronym">SOCKS</SPAN
>
client will send through the username of the person initiating the
connection as part of the <span class="acronym">SOCKS</SPAN
> protocol.</P
></LI
><li class="listitem"><p class="para"><span class="acronym">SOCKS</SPAN
> can also use the <kbd class="command">ident</KBD
>
protocol. For more information, see the section &quot;Identification
Protocol (auth) (TCP Port 113)&quot; in Chapter 17.</P
></LI
></OL
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-4.5">22.4.5 SOCKS Identification Policy</A
></H3
><p class="para">The choice
of identification policy is determined by the way in which the 
<kbd class="command">sockd</KBD
> program is invoked and by the <i class="filename">/etc/sockd.conf</I
>
configuration file.</P
><p class="para">Normally, <kbd class="command">sockd</KBD
> is invoked with
one of three options:</P
><blockquote class="screen"><pre class="screen">sockd [-ver | -i | -I]</PRE
></BLOCKQUOTE
><p class="para">These options have the following meanings:</P
><dl class="variablelist"><dt class="term">-ver</DT
><dd class="listitem"><p class="para">Prints the <kbd class="command">sockd</KBD
> configuration information and exits.</P
></DD
><dt class="term">-I</DT
><dd class="listitem"><p class="para">Forces <span class="acronym">SOCKS</SPAN
> to use the <kbd class="command">ident</KBD
>
protocol. Denies access to any client that is not running the <kbd class="command">ident</KBD
>
protocol. Also denies access to clients for which the username returned
by the <kbd class="command">ident</KBD
> protocol does not match the username provided by the
<span class="acronym">SOCKS</SPAN
> protocol.</P
></DD
><dt class="term">-i</DT
><dd class="listitem"><p class="para">Less restrictive than <i class="filename">-I</I
>. Denies access to clients
when the username returned by the <kbd class="command">ident</KBD
> protocol is different from
the username returned by the <span class="acronym">SOCKS</SPAN
> protocol,
but allows use of <kbd class="command">sockd</KBD
> by users who do not have <kbd class="command">ident</KBD
> running on
their systems.</P
></DD
></DL
><p class="para">The
identification options -i and -I can be overridden by a statement
in the <span class="acronym">SOCKS</SPAN
> configuration file, <i class="filename">/etc/sockd.conf.</I
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-4.6">22.4.6 The SOCKS Server Configuration File: /etc/sockd.conf</A
></H3
><p class="para">The <kbd class="command">sockd</KBD
> configuration file, <i class="filename">/etc/sockd.conf,</I
>
allows you to control which <span class="acronym">TCP/IP</SPAN
> connections
are passed by the <kbd class="command">sockd</KBD
> daemon. As the daemon usually runs on a
computer that has access to both your organization's internal
network and the Internet, the <i class="filename">sockd.conf</I
> file controls, in part,
which services are passed between the two.</P
><p class="para">The <kbd class="command">sockd</KBD
>
program doesn't know the difference between your internal
and external networks. It simply receives connections, determines
the parameters of the connections (username, source, requested destination,
and <span class="acronym">TCP/IP</SPAN
> service), then scans rules in the
<i class="filename">/etc/sockd.conf</I
> file to determine if the connections
should be permitted or denied.</P
><p class="para">The <i class="filename">/etc/sockd.conf</I
>
file is an <span class="acronym">ASCII</SPAN
> text file. Each line consists
of a rule to either allow connections or reject (deny) them. The
<kbd class="command">sockd</KBD
> program scans the file from the first line to the last line
until a match is found. When a match is found, the action specified
by the line is followed.</P
><p class="para">Lines in the <i class="filename">/etc/sockd.conf</I
>
file may be up to 1023 characters long. Each line has the following
form:</P
><blockquote class="screen"><pre class="screen">[allow | deny] [?=auth] [*=username(s)|filename(s)] 		
source-address source-mask 		
[destination-address destination-mask] 		
[operator destination-port] 		
[: shell-command]</PRE
></BLOCKQUOTE
><p class="para">Fields are separated by spaces or tabs. If a number sign (#)
is found on the line, everything after the number sign is assumed
to be a comment, except as noted below.</P
><p class="para">If an incoming
<span class="acronym">TCP/IP</SPAN
> connection does not match any of the lines
in the <i class="filename">/etc/sockd.conf</I
> configuration file, it
is rejected.</P
><p class="para">Here is an explanation of the fields:</P
><dl class="variablelist"><dt class="term">allow | deny</DT
><dd class="listitem"><p class="para">Specifies whether a connection matching the rule
on this line should be allowed or denied.</P
></DD
><dt class="term">?=auth</DT
><dd class="listitem"><p class="para">If present, this field allows you to override the
identification policy specified when the program was invoked. Specify
&quot;?=I&quot; to cause <kbd class="command">sockd</KBD
> to reject the connection
if the user on the client machine is not running <kbd class="command">ident</KBD
>, or if the
name returned by <kbd class="command">ident</KBD
> is not the same as the username sent by the
<span class="acronym">SOCKS</SPAN
> client. Specify &quot;?=i&quot;
to cause <kbd class="command">sockd</KBD
> to reject the connection if the name returned by
<kbd class="command">ident</KBD
> is not the same as the name sent by the <span class="acronym">SOCKS</SPAN
>
client.</P
></DD
><dt class="term">*=username(s)|filename(s)</DT
><dd class="listitem"><p class="para">If present, causes the rule to match a particular
username. You can also specify a filename, in which case the usernames
are read out of the file (one username per line). Here are some
examples:</P
></DD
></DL
><table class="informaltable"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Username</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Result</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">*=<i class="filename">simsong</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches the user <i class="filename">simsong</I
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">*=<i class="filename">fred,julie</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches the users <i class="filename">fred</I
> and <i class="filename">julie</I
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">*=<i class="filename">/etc/goodusers</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches anybody in the file <i class="filename">/etc/goodusers.</I
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">*=<i class="filename">fred,/etc/goodusers</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches the user <i class="systemitem">fred</I
> and all of the users in
the file <i class="filename">/etc/goodusers.</I
></P
></TD
></TR
></TBODY
></TABLE
><dl class="variablelist"><dt class="term">source-address source-mask</DT
><dd class="listitem"><p class="para">The <i class="filename">address</I
> and <i class="filename">mask</I
> allow you to specify a match
for a single IP address or a range of addresses. The <i class="filename">source-address</I
>
may be either an IP address in the form <i class="filename">hhh.iii.jjj.kkk</I
> or an Internet
hostname; the <i class="filename">source-mask</I
> must be an IP address mask in the form
<i class="filename">hhh.iii.jjj.kkk.</I
></P
><p class="para">The <i class="filename">source-mask</I
> specifies which bits of the <i class="filename">source-address</I
>
should be compared with the actual address of the incoming IP connection.
Thus, a <i class="filename">source-mask</I
> of  0.0.0.0 will cause the rule to match any
IP address, while a <i class="filename">source-mask</I
> of 255.255.255.255 will only allow
for an exact match. These and other possibilities are explored in
the table below:</P
></DD
></DL
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">source-address</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">source-mask</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Result</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">18.80.0.1</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">255.255.255.255</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches the host 18.80.0.1.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">204.17.190.0</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">255.255.255.0</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches any host on the subnet 204.17.190.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">10.80.0.1</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">255.0.0.0</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches any host on net 10.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0.0.0.0</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">0.0.0.0</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Matches every host on the Internet.</P
></TD
></TR
></TBODY
></TABLE
><dl class="variablelist"><dt class="term">operator destination-port</DT
><dd class="listitem"><p class="para">These optional arguments allow you to specify a
particular <span class="acronym">TCP</SPAN
> service or a range of <span class="acronym">TCP/IP</SPAN
>
ports. For example, you can specify &quot;le 1023&quot;
to select all of the <span class="acronym">UNIX</SPAN
> &quot;privileged&quot;
ports, or you can specify &quot;eq 25&quot; to specify the
<span class="acronym">SMTP</SPAN
> port. The following table lists all of the
operators:</P
></DD
></DL
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">operator</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Meaning</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">eq</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Equal to</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">neq</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Not equal to</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">lt</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Less than</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">le</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Less than or equal to</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">gt</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Greater than</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">ge</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Greater than or equal to</P
></TD
></TR
></TBODY
></TABLE
><dl class="variablelist"><dt class="term">: shell-command</DT
><dd class="listitem"><p class="para">You can specify a command that will be executed
when the line is matched. The command line is executed by the Bourne
shell (/bin/sh). Before the line is executed,
the following substitutions are made:</P
></DD
></DL
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Token</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Replaced With</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%A</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The fully qualified domain name (FQDN)
of the client (the computer contacting <kbd class="command">sockd</KBD
>), if it can be determined;
otherwise, the computer's IP address</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%a</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The IP address of the client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%c</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The direction of the <i class="filename">connection</I
>; replaced
with connect if the client is attempting to make an outgoing connection,
or <kbd class="command">bind</KBD
> if the client is waiting for an incoming connection</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%p</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The process ID of <kbd class="command">sockd</KBD
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%S</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The service name, if it can be determined
from the <i class="filename">/etc/services</I
> database; otherwise, the
destination port number</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%s</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The destination port number</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%U</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The username reported by <kbd class="command">identd</KBD
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%u</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The username sent by the client program</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%Z</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The FQDN name of the destination host,
if it can be determined; otherwise, the computer's IP address</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%z</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The IP address of the destination computer</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">%%</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&quot;%&quot;</P
></TD
></TR
></TBODY
></TABLE
><p class="para">Obviously, token expansions that require
that <kbd class="command">sockd</KBD
> look up a value in a database (such as %A, %S,
and %Z) will take longer to execute than token expansions
that merely report an IP or port number (such as %a, %s
and %z).</P
><p class="para">This example command runs <kbd class="command">finger</KBD
> to
determine the users on a particular computer, and then sends the
results to the <i class="filename">root</I
> account of the computer that is running sockd:</P
><blockquote class="screen"><pre class="screen">/usr/ucb/finger @%A | /bin/mailx -s 'SOCKS: rejected %u@%A' root</PRE
></BLOCKQUOTE
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-22-SECT-4.6.1">22.4.6.1 #NO_IDENTD and #BAD_ID</A
></H4
><p class="para">In addition to the pattern matching described above, <kbd class="command">sockd</KBD
>
allows you to specify rules that will match any computer contacting
the <kbd class="command">sockd</KBD
> daemon which is not running the <kbd class="command">ident</KBD
>
protocol, or for which the username returned by the ident protocol
is different from the username provided in the initial <kbd class="command">sockd</KBD
> contact.
These lines have the form:</P
><blockquote class="screen"><pre class="screen">#NO_IDENTD: command
#BAD_ID: command</PRE
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-22-SECT-4.6.2">22.4.6.2 Example /etc/sockd.conf configuration
files</A
></H4
><p class="para">Here are some example lines from an <i class="filename">/etc/sockd.conf</I
>
configuration file. The configuration file is designed to protect
an organization that has placed a set of <span class="acronym">UNIX</SPAN
>
workstations on IP subnet 204.99.90.</P
><dl class="variablelist"><dt class="term">deny</DT
><dd class="listitem"><p class="para"><b class="emphasis.bold">204.99.90.0	255.255.255.0	204.99.90.0	255.255.255.0 </B
></P
><p class="para">This
initial rule disallows access to the internal network from internal
computers using <span class="acronym">SOCKS</SPAN
>. (Why tie up the <span class="acronym">SOCKS</SPAN
>
server if you don't need to?)</P
></DD
><dt class="term">allow</DT
><dd class="listitem"><p class="para"><b class="emphasis.bold">0.0.0.0	0.0.0.0	204.99.90.100	255.255.255.255	eq 25 </B
></P
><p class="para">Allows connections to port 25 (<span class="acronym">SMTP</SPAN
>) of
the machine 204.99.90.100. This allows incoming electronic mail
to that network.</P
></DD
><dt class="term">allow</DT
><dd class="listitem"><p class="para"><b class="emphasis.bold">204.99.90.100	255.255.255.255	0.0.0.0	0.0.0.0	eq 25 </B
></P
><p class="para">Allows outgoing connections from the machine 204.99.90.100
to port 25 of any computer on the Internet. This rule allows the
organization to send mail to outside computers.</P
></DD
><dt class="term">allow</DT
><dd class="listitem"><p class="para"><b class="emphasis.bold">204.99.90.0	255.255.255.0	0.0.0.0	0.0.0.0 </B
></P
><p class="para">Allows
outgoing connections from any host on subnet 204.99.90 to any computer
on the Internet. If you have this rule, the previous rule is unnecessary.</P
></DD
><dt class="term">deny</DT
><dd class="listitem"><p class="para"><b class="emphasis.bold">0.0.0.0	0.0.0.0	204.99.90.255	255.255.255.000	eq 23 : \ </B
></P
><p class="para">safe_finger @%A |/bin/mailx -s 'Telnet denied from %U/%A'
root</P
></DD
></DL
><p class="para">This
rather complex rule denies any attempted login to the organization's
internal network. In addition to stopping the logins, it also does
a <kbd class="command">finger</KBD
> of the computer from where the attempt is coming and sends
email to the <i class="filename">root</I
> account of the computer running <kbd class="command">sockd</KBD
>. If the
remote machine is running the <kbd class="command">ident</KBD
> protocol, the username will
be sent as well.</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> Do not use reverse <kbd class="command">finger</KBD
> for logging contacts on the
<kbd class="command">finger</KBD
> port (port 79). Otherwise, a loop may result, with two <kbd class="command">sockd</KBD
>
daemons continually attempting to <kbd class="command">finger</KBD
> each other until they are
manually shut down or the disks fill up.</P
></BLOCKQUOTE
><dl class="variablelist"><dt class="term">deny</DT
><dd class="listitem"><p class="para">   <b class="emphasis.bold">0.0.0.0     0.0.0.0     204.99.90.0     255.255.255.0</B
></P
><p class="para">Denies all other connections to the subnet 204.99.99.
Strictly speaking, this rule is not necessary, as a connection that
does not specifically match the &quot;allow&quot; rules
above will be rejected.</P
></DD
></DL
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PUIS-CHP-22-SECT-4.7">22.4.7 SOCKS Client Configuration File: /etc/socks.conf</A
></H3
><p class="para">Each client that wishes to use the <kbd class="command">sockd</KBD
> server must
also have its own configuration file. The configuration file has
a syntax that is similar to, but slightly different from, the syntax
of the <i class="filename">/etc/sockd</I
>.conf file.</P
><p class="para">When
a <span class="acronym">SOCKS</SPAN
> client attempts to make an outgoing connection
to another host on the Internet, or when it calls the <i class="filename">Rbind()</I
>
function to accept an incoming connection, the <span class="acronym">SOCKS</SPAN
>
library scans the <i class="filename">/etc/socks.conf</I
> configuration
file line by line, starting with the first line, until it finds
a line that matches the requested connection. The library then performs
the action that is specified in the file.</P
><p class="para">Each line
in the file can have the following form:</P
><blockquote class="screen"><pre class="screen">deny [*=username(s)|filename(s)] destination-address destination-mask  		
	[operator destination-port] 		
	[: shell-command]

direct [*=username(s)|filename(s)] destination-address destination-mask  		
	[operator destination-port] 		
[: shell-command]

sockd [@=serverlist] [*=username(s)|filename(s)]  		
	destination-address destination-mask  		
	[operator destination-port] 		
	[: shell-command]</PRE
></BLOCKQUOTE
><p class="para">Most of these fields are similar to those in the <i class="filename">/etc/sockd.conf</I
>
file. The differences are described below:</P
><dl class="variablelist"><dt class="term">deny</DT
><dd class="listitem"><p class="para">The <kbd class="command">deny</KBD
> operator specifies that a <span class="acronym">TCP/IP</SPAN
>
connection that matches the line should be denied. (Remember, even
though this connection will prevent the <span class="acronym">SOCKS</SPAN
>
package from making a connection to the site in question, the user
may still have the option of connecting to the site using a client
program that has not been linked with the <span class="acronym">SOCKS</SPAN
>
library. Thus, the <kbd class="command">deny</KBD
> operator running on the client computer
is not a substitute for a suitable firewall choke. For more information
on firewalls, see <a class="xref" href="ch21_01.htm" title="Firewalls">Chapter 21, <cite class="chapter">Firewalls</CITE
></A
>.)</P
></DD
><dt class="term">direct</DT
><dd class="listitem"><p class="para">The <kbd class="command">direct</KBD
> operator tells the <span class="acronym">SOCKS</SPAN
>
library that the <span class="acronym">TCP/IP</SPAN
> connection should be
sent directly through.</P
></DD
><dt class="term">sockd [@=serverlist]</DT
><dd class="listitem"><p class="para">The <kbd class="command">sockd</KBD
> operator tells the <span class="acronym">SOCKS</SPAN
>
library that the <span class="acronym">TCP/IP</SPAN
> connection should be
sent to the <kbd class="command">sockd</KBD
> daemon, which presumably will then pass it through
to the outside network.</P
><p class="para">The name of the host that is running the <kbd class="command">sockd</KBD
> server
is compiled into the <span class="acronym">SOCKS</SPAN
> library. It may also
be specified on the command line, the <span class="acronym">SOCKS_SERVER</SPAN
>
environment variable, or it may be specified in the <i class="filename">/etc/socks.conf</I
>
configuration file using the @ argument. More than one
server may be specified by separating the names with a comma, such
as:</P
></DD
></DL
><blockquote class="screen"><pre class="screen">sockd @=socks1,socks2,sock3 0.0.0.0 0.0.0.0</PRE
></BLOCKQUOTE
><p class="para">In <span class="acronym">SOCKS</SPAN
> version
4.2, the servers are tried in the order in which they appear in
the configuration file. Thus, you can specify different servers
in different orders on different clients to distribute the load.
(A more intelligent approach, though, would be for the servers to
be tried in random order.)</P
><div class="sect3"><h4 class="sect3"><a class="title" name="PUIS-CHP-22-SECT-4.7.1">22.4.7.1 Example /etc/socks.conf file</A
></H4
><p class="para">This simple configuration file, for an organization administrating
the subnet 204.90.80, specifies that all connections to organization's
internal subnet should go direct, while all connections to the outside
network should go through the <span class="acronym">SOCKS</SPAN
> server:</P
><blockquote class="screen"><pre class="screen">direct 204.90.80.0 255.255.255.0
sockd @=socks-server 0.0.0.0 0.0.0.0</PRE
></BLOCKQUOTE
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch22_03.htm" title="22.3 tcpwrapper"><img src="../gifs/txtpreva.gif" alt="Previous: 22.3 tcpwrapper" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Practical UNIX &amp; Internet Security"><img src="../gifs/txthome.gif" alt="Practical UNIX &amp; Internet Security" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch22_05.htm" title="22.5 UDP Relayer"><img src="../gifs/txtnexta.gif" alt="Next: 22.5 UDP Relayer" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">22.3 tcpwrapper</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">22.5 UDP Relayer</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
