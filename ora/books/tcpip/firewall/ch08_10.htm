<html><head>
<title>[Chapter 8] 8.10 Domain Name System (DNS)</TITLE>
<meta name="DC.title" content="Building Internet Firewalls"><meta name="DC.creator" content="D. Brent Chapman &amp; Elizabeth D. Zwicky"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:25:24Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-124-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch08_01.htm" title="8. Configuring Internet Services"><link rel="prev" href="ch08_09.htm#FIRE-08-S2-30" title="8.9 Real-Time Conferencing Services"><link rel="next" href="ch08_11.htm#FIRE-08-S2-90" title="8.11 syslog"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Building Internet Firewalls" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Building Internet Firewalls"><area shape="RECT" coords="467,0,514,18" href="../search/fsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_09.htm#FIRE-08-S2-30" title="8.9 Real-Time Conferencing Services"><img src="../gifs/txtpreva.gif" alt="Previous: 8.9 Real-Time Conferencing Services" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 8<br>Configuring Internet Services</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_11.htm#FIRE-08-S2-90" title="8.11 syslog"><img src="../gifs/txtnexta.gif" alt="Next: 8.11 syslog" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="FIRE-08-S1-10">8.10 Domain Name System
(<span class="acronym">DNS</SPAN
>)</A
></H2
><p class="para"><a class="indexterm" name="CH08DNS"></A
><a class="indexterm" name="CH08CONFDNS"></A
><span class="acronym">DNS</SPAN
> is a distributed database system that
translates hostnames to <span class="acronym">IP</SPAN
> addresses and
<span class="acronym">IP</SPAN
> addresses to hostnames (e.g., it translates
hostname <em class="emphasis">miles.somewhere.net</EM
> to
<span class="acronym">IP</SPAN
> address 192.168.244.34). <span class="acronym">DNS</SPAN
>
is also the standard Internet mechanism for storing and accessing
several other kinds of information about hosts; it provides
information about a particular host to the world at large. For
example, if a host cannot receive mail directly, but another machine
will receive mail for it and pass it on, that information is
communicated with an <span class="acronym">MX</SPAN
> record in
<span class="acronym">DNS</SPAN
>.</P
><p class="para"><span class="acronym">DNS</SPAN
> clients include any program that needs to do
any of the following:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Translate a hostname to an <span class="acronym">IP</SPAN
> address</P
></LI
><li class="listitem"><p class="para">Translate an <span class="acronym">IP</SPAN
> address to a hostname</P
></LI
><li class="listitem"><p class="para">Obtain other published information about a host (such as its <span class="acronym">MX</SPAN
>
record)</P
></LI
></UL
><p class="para">Fundamentally, any program that uses hostnames can be a
<span class="acronym">DNS</SPAN
> client. This includes essentially every program
that has anything to do with networking, including both client and
server programs for Telnet, <span class="acronym">SMTP</SPAN
>,
<span class="acronym">FTP</SPAN
>, and almost any other network
service. <span class="acronym">DNS</SPAN
> is thus a fundamental networking
service, upon which other network services rely.</P
><p class="para"><a class="indexterm" name="AUTOID-13148"></A
>Other protocols may be used to provide this kind of information. For
example, <span class="acronym">NIS/YP</SPAN
> is used to provide host information
within a network. However, <span class="acronym">DNS</SPAN
> is the service used for this
purpose across the Internet, and clients that need to access Internet
hosts will have to use <span class="acronym">DNS</SPAN
>, directly or
indirectly. On networks that use <span class="acronym">NIS/YP</SPAN
> or other
methods internally, the server for the other protocol usually acts as
a <span class="acronym">DNS</SPAN
> proxy for the client. Many clients can also
be configured to use multiple services, so that if a host lookup
fails, it will retry using another method. Thus, it might start by
looking in <span class="acronym">NIS/YP</SPAN
>, which will show only local
hosts, but try <span class="acronym">DNS</SPAN
> if that fails, or it might start
by looking in <span class="acronym">DNS</SPAN
>, and then try a file on its own
disk if that fails (so that you can put in personal favorite names,
for example).</P
><p class="para"><a class="indexterm" name="AUTOID-13159"></A
>In <span class="acronym">UNIX</SPAN
>, <span class="acronym">DNS</SPAN
> is implemented by
the Berkeley Internet Name Domain (<span class="acronym">BIND</SPAN
>). On the
client side is the resolver, a library of routines called by network
processes. On the server side is a daemon called <em class="emphasis">named</EM
> (also known as <em class="emphasis">in.named</EM
> on some
systems).</P
><p class="para"><span class="acronym">DNS</SPAN
> is designed to forward queries and responses
between clients and servers, so that servers may act on behalf of
clients or other servers. This capability is very important to your
ability to build a firewall that handles <span class="acronym">DNS</SPAN
>
services securely.</P
><p class="para">How does <span class="acronym">DNS</SPAN
> work? Essentially, when a client needs
a particular piece of information (e.g., the
<span class="acronym">IP</SPAN
> address of host
<em class="emphasis">ftp.somewhere.net</EM
>), it asks its local
<span class="acronym">DNS</SPAN
> server for that information. The local
<span class="acronym">DNS</SPAN
> server first examines its own cache to see if
it already knows the answer to the client's query. If not, the
local <span class="acronym">DNS</SPAN
> server asks other <span class="acronym">DNS</SPAN
>
servers, in turn, to discover the answer to the client's query. When
the local <span class="acronym">DNS</SPAN
> server gets the answer (or decides
that it can't for some reason), it caches any information it
got[34] 

and answers the client. For example, to find the <span class="acronym">IP</SPAN
>
address for <em class="emphasis">ftp.somewhere.net</EM
>, the local
<span class="acronym">DNS</SPAN
> server first asks one of the public root
nameservers which machines are nameservers for the
<em class="emphasis">net</EM
> domain. It then asks one of those 
<em class="emphasis">net</EM
> nameservers
which
machines are nameservers for the <em class="emphasis">somewhere.net</EM
>
domain, and then it asks one of those nameservers
for the <span class="acronym">IP</SPAN
>
address of <em class="emphasis">ftp.somewhere.net</EM
>.</P
><blockquote class="footnote"><p class="para">[34] Some servers will cache the fact that the query failed, on some types
of failures; others cache only information retrieved on a successful
query.</P
></BLOCKQUOTE
><p class="para">This asking and answering is all transparent to the client. As far as
the client is concerned, it has communicated only with the local server.
 It doesn't know or care that the local server may have contacted
several other servers in the process of answering the original question.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-32">8.10.1 Packet Filtering Characteristics of
<span class="acronym">DNS</SPAN
></A
></H3
><p class="para"><a class="indexterm" name="AUTOID-13193"></A
><a class="indexterm" name="AUTOID-13195"></A
><a class="indexterm" name="AUTOID-13197"></A
>There are two types of <span class="acronym">DNS</SPAN
> network activities:
lookups and zone transfers. <em class="emphasis">Lookups</EM
> occur when a
<span class="acronym">DNS</SPAN
> client (or a <span class="acronym">DNS</SPAN
> server
acting on behalf of a client) queries a <span class="acronym">DNS</SPAN
> server
for information, e.g., the <span class="acronym">IP</SPAN
> address for a given
hostname, the hostname for a given IP address, the name server for a
given domain, or the mail exchanger for a given host. 
<em class="emphasis">Zone transfers</EM
>
occur when a <span class="acronym">DNS</SPAN
> server (the secondary server)
requests from another <span class="acronym">DNS</SPAN
> server (the primary
server) everything the primary server knows about a given piece of the
<span class="acronym">DNS</SPAN
> naming tree (the zone). Zone transfers happen
only among servers that are supposed to be providing the same
information; a server won't try to do a zone transfer from a random
other server under normal circumstances. People occasionally do zone
transfers in order to gather information (this is
<span class="acronym">OK</SPAN
> when they're calculating what the most popular
hostname on the Internet is, but bad when they're trying to find out
what hosts to attack at your site).</P
><p class="para">For performance reasons, <span class="acronym">DNS</SPAN
> lookups are usually
executed using <span class="acronym">UDP</SPAN
>. If some of the data is lost in
transit by <span class="acronym">UDP</SPAN
> (remember that
<span class="acronym">UDP</SPAN
> doesn't guarantee delivery), the lookup will be
redone using <span class="acronym">TCP</SPAN
>. There may be other exceptions. <a class="xref" href="#FIRE-08-FIG-13" title="DNS name lookup">Figure 8.13</A
> shows a <span class="acronym">DNS</SPAN
> name lookup.</P
><h4 class="figure"><a class="title" name="FIRE-08-FIG-13">Figure 8.13: <span class="acronym">DNS</SPAN
> name lookup</A
></H4
><img class="graphic" src="figs/fire0813.gif" alt="Figure 8.13"><p class="para">A <span class="acronym">DNS</SPAN
> server uses well-known port 53 for all its
<span class="acronym">UDP</SPAN
> activities and as its server port for
<span class="acronym">TCP</SPAN
>. It uses a random port above 1023 for
<span class="acronym">TCP</SPAN
> requests. A <span class="acronym">DNS</SPAN
> client uses
a random port above 1023 for both <span class="acronym">UDP</SPAN
> and
<span class="acronym">TCP</SPAN
>. You can thus differentiate between the
following:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">A client-to-server query&nbsp;- source port is above 1023, destination
port is 53.</P
></LI
><li class="listitem"><p class="para">A server-to-client response&nbsp;- source port is 53, destination port
is above 1023.</P
></LI
><li class="listitem"><p class="para">A server-to-server query or response&nbsp;- at least with
<span class="acronym">UDP</SPAN
>, where both source and destination port are 53;
with <span class="acronym">TCP</SPAN
>, the requesting server will use a port
above 1023.</P
></LI
></UL
><p class="para"><span class="acronym">DNS</SPAN
> zone transfers are performed using
<span class="acronym">TCP</SPAN
>. The connection is initiated from a random port
above 1023 on the secondary server (which requests the data) to port
53 on the primary server (which sends the data requested by the
secondary). A secondary server must also do a regular
<span class="acronym">DNS</SPAN
> query of a primary server to decide when to do
a zone transfer. <a class="xref" href="#FIRE-08-FIG-14" title="DNS zone transfer">Figure 8.14</A
> shows a
<span class="acronym">DNS</SPAN
> zone transfer.</P
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Direc-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Pro-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">ACK</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">tion</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tocol</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Set</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Notes</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[35]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming query via <span class="acronym">UDP</SPAN
>, client to server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[35]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Answer to incoming <span class="acronym">UDP</SPAN
> query, server to client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[36]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming query via <span class="acronym">TCP</SPAN
>, client to server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Answer to incoming <span class="acronym">TCP</SPAN
> query, server to client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[35]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing query via <span class="acronym">UDP</SPAN
>, client to server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[35]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Answer to outgoing <span class="acronym">UDP</SPAN
> query, server to client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[36]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing query via <span class="acronym">TCP</SPAN
>, client to server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Answer to outgoing <span class="acronym">TCP</SPAN
> query, server to client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[35]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Query or response between two servers via <span class="acronym">UDP</SPAN
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[35]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Query or response between two servers via <span class="acronym">UDP</SPAN
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[36]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Query from external server to internal server via <span class="acronym">TCP</SPAN
>;
also zone transfer request from external secondary server via <span class="acronym">TCP</SPAN
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Answer from internal server to external server via <span class="acronym">TCP</SPAN
>;
also zone transfer response to external secondary server via <span class="acronym">TCP</SPAN
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[36]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Query from internal server to external server via <span class="acronym">TCP</SPAN
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Answer from external server to internal server via <span class="acronym">TCP</SPAN
></P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[35] <span class="acronym">UDP</SPAN
> packets do not have <span class="acronym">ACK</SPAN
> bits.</P
><p class="para">[36] <span class="acronym">ACK</SPAN
> is not set on the first packet of this type
(establishing connection) but will be set on the rest.</P
></BLOCKQUOTE
><h4 class="figure"><a class="title" name="FIRE-08-FIG-14">Figure 8.14: <span class="acronym">DNS</SPAN
> zone transfer</A
></H4
><img class="graphic" src="figs/fire0814.gif" alt="Figure 8.14"></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-33">8.10.2 Proxying Characteristics of
<span class="acronym">DNS</SPAN
></A
></H3
><p class="para"><a class="indexterm" name="AUTOID-13568"></A
><span class="acronym">DNS</SPAN
> is structured so that servers always act as
proxies for clients. It's also possible to use a
<span class="acronym">DNS</SPAN
> feature called <em class="emphasis">forwarding</EM
> so that
a <span class="acronym">DNS</SPAN
> server is effectively a proxy for another
server. The remainder of this <span class="acronym">DNS</SPAN
>
discussion describes the use of these
built-in proxying features of <span class="acronym">DNS</SPAN
>.</P
><p class="para">In most implementations, it would be possible to modify the
<span class="acronym">DNS</SPAN
> libraries to use a modified-client proxy. On
machines that do not support dynamic linking, using a modified-client
proxy for <span class="acronym">DNS</SPAN
> would require recompiling every
network-aware program. Because users don't directly specify server
information for <span class="acronym">DNS</SPAN
>, modified-procedure proxies
seem nearly impossible.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-34">8.10.3 <span class="acronym">DNS</SPAN
> Data</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-13586"></A
><a class="indexterm" name="AUTOID-13589"></A
><a class="indexterm" name="AUTOID-13592"></A
>
The <span class="acronym">DNS</SPAN
> is a tree-structured database, with servers
for various subtrees scattered throughout the Internet. There are a
number of defined record types in the tree, including:[37]</P
><blockquote class="footnote"><p class="para">[37] For detailed information about <span class="acronym">DNS</SPAN
> record types,
what they mean, and how to use them, see 
<em class="emphasis"><span class="acronym">DNS</SPAN
> and <span class="acronym">BIND</SPAN
></EM
>, 
referenced earlier in this chapter.</P
></BLOCKQUOTE
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Record Type</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Usage</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">A</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Translates hostname to <span class="acronym">IP</SPAN
> address</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">PTR</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Translates <span class="acronym">IP</SPAN
> address to hostname</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">CNAME</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Translates host alias to hostname (&quot;canonical&quot; name)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">HINFO</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Gives hardware/software information about a host</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">NS</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Delegates a zone of the <span class="acronym">DNS</SPAN
> tree to some other server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">SOA</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Denotes start of authority for a zone of the <span class="acronym">DNS</SPAN
> tree</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">TXT</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Unstructured text records</P
></TD
></TR
></TBODY
></TABLE
><p class="para">In fact, there are two separate <span class="acronym">DNS</SPAN
> data trees: one
for obtaining information by hostname (such as the
<span class="acronym">IP</SPAN
> address, <span class="acronym">CNAME</SPAN
> record,
<span class="acronym">HINFO</SPAN
> record, or <span class="acronym">TXT</SPAN
> record that
corresponds to a given hostname), and one for obtaining information by
<span class="acronym">IP</SPAN
> address (the hostname for a given address).</P
><p class="para">For example, here is a sample of the <span class="acronym">DNS</SPAN
> data for a
fake domain <em class="emphasis">somebody.net</EM
>:</P
><blockquote class="screen"><pre class="screen">somebody.net. IN SOA tiger.somebody.net. root.tiger.somebody.net. (
                        1001      ; serial number
                        36000       ; refresh (10 hr)
                        3600        ; retry (1 hr)
                        3600000     ; expire (1000 hr)
                        36000       ; default ttl (10 hr)
                        )
               IN  NS       tiger.somebody.net.
               IN  NS       lion.somebody.net.
tiger          IN  A        192.168.2.34
               IN  MX       5 tiger.somebody.net.
               IN  MX       10 lion.somebody.net.
               IN  HINFO    INTEL-486 BSDI
ftp            IN  CNAME    tiger.somebody.net.
lion           IN  A        192.168.2.35
               IN  MX       5 lion.somebody.net.
               IN  MX       10 tiger.somebody.net.
               IN  HINFO    SUN-3 SUNOS
www            IN  CNAME    lion.somebody.net.
wais           IN  CNAME    lion.somebody.net.
alaska         IN  NS       bear.alaska.somebody.net.
bear.alaska    IN  A        192.168.2.81&#13;</PRE
></BLOCKQUOTE
><p class="para"></P
><p class="para">This domain would also need a corresponding set of
<span class="acronym">PTR</SPAN
> records to map <span class="acronym">IP</SPAN
> addresses
back to hostnames. To translate an <span class="acronym">IP</SPAN
> address to a
hostname, you reverse the components of the <span class="acronym">IP</SPAN
>
address, append <em class="emphasis">.IN-ADDR.ARPA</EM
>, and look up the
<span class="acronym">DNS PTR</SPAN
> record for that name. For example, to
translate <span class="acronym">IP</SPAN
> address 1.2.3.4, you would look up the
<span class="acronym">PTR</SPAN
> record for
<em class="emphasis">4.3.2.1.IN-ADDR.ARPA</EM
>.</P
><blockquote class="screen"><pre class="screen">2.168.192.IN-ADDR.ARPA. IN  SOA tiger.somebody.net.root.tiger.somebody.net. ( 
                                 1001     ; serial number
                                 36000    ; refresh (10 hr)
                                 3600     ; retry (1 hr)
                                 3600000  ; expire (1000 hr)
                                 36000    ; default ttl (10 hr)
                                  )
                         IN  NS  tiger.somebody.net.
                         IN  NS  lion.somebody.net.
34                       IN  PTR tiger.somebody.net.
35                       IN  PTR lion.somebody.net.
81                       IN  PTR bear.alaska.somebody.net.&#13;</PRE
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-35">8.10.4 <span class="acronym">DNS</SPAN
> Security Problems</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-13676"></A
>There are some security problems with <span class="acronym">DNS</SPAN
> that
are described below.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-67">8.10.4.1 Bogus answers to <span class="acronym">DNS</SPAN
> queries</A
></H4
><p class="para">The first security problem with <span class="acronym">DNS</SPAN
> is that many
<span class="acronym">DNS</SPAN
> servers and clients can be tricked by an
attacker into believing bogus information. Many clients and servers
don't check to see whether all the answers they get relate to
questions they actually asked, or whether the answers they get are
coming from the server they asked. Servers, in particular, may cache
these &quot;extra&quot; answers without really thinking about it,
and answer later queries with this bogus cached data. This lack of
checking can allow an attacker to give false data to your clients and
servers. For example, an attacker could use this capability to load
your server's cache with information that says that his
<span class="acronym">IP</SPAN
> address maps to the hostname of a host you trust
for password-less access via <em class="emphasis">rlogin</EM
>. (This is
only one of several reasons you shouldn't allow the <span class="acronym">BSD</SPAN
>
&quot;r&quot; commands across your firewall; see the full discussion
of these commands earlier in this chapter.)</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> Later versions of <span class="acronym">DNS</SPAN
> for <span class="acronym">UNIX</SPAN
>
(<span class="acronym">BIND</SPAN
> 4.9 and later) check for bogus answers
and are less susceptible to these problems. Earlier versions, and
<span class="acronym">DNS</SPAN
> clients and servers for other platforms, may
still be susceptible.</P
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-68">8.10.4.2 Mismatched data between the hostname
and <span class="acronym">IP</SPAN
> address <span class="acronym">DNS</SPAN
> trees</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-13700"></A
><a class="indexterm" name="AUTOID-13704"></A
><a class="indexterm" name="AUTOID-13706"></A
><a class="indexterm" name="AUTOID-13708"></A
>The attack described in the previous section points out the problem of
mismatched data between the hostname and <span class="acronym">IP</SPAN
> address
trees in the <span class="acronym">DNS</SPAN
>. In a case like the one we've
described, if you look up the hostname corresponding to the attacker's
<span class="acronym">IP</SPAN
> address (this is called a <em class="emphasis">reverse
lookup</EM
>), you get back the name of a host you trust. If you then
look up the <span class="acronym">IP</SPAN
> address of this hostname (which is
called a <em class="emphasis">double-reverse lookup</EM
>), you should see that the
IP address doesn't match the one the attacker is using. This should
alert you that something suspicious is going on. Reverse and 
double-reverse lookups are described in more detail in the section called
&quot;Set up a `fake' <span class="acronym">DNS</SPAN
> server on
the bastion host for the outside world to use&quot; later in this
<span class="acronym">DNS</SPAN
> discussion. </P
><p class="para">Any program that makes authentication or authorization decisions based
on the hostname information it gets from <span class="acronym">DNS</SPAN
> should
be very careful to validate the data with this reverse 
lookup/double-reverse lookup method. In some 
operating systems (for example, SunOS
4.x and later), this check is automatically done for you by the
<em class="emphasis">gethostbyaddr()</EM
> library function. In most
other operating systems, you have to do the check yourself. Make sure
that you know which approach your own operating system takes and make
sure that the daemons that are making such decisions in your system do
the appropriate validation. (And be sure you're preserving this
functionality if you modify or replace the vendor's
<em class="emphasis">libc</EM
>.) Better yet, don't do any authentication or
authorization based solely on hostname or even on
<span class="acronym">IP</SPAN
> address; there is no way to be sure that a
packet comes from the <span class="acronym">IP</SPAN
> address it claims to come
from, unless there is some kind of cryptographic authentication within
the packet that only the true source could have generated.</P
><p class="para">Some implementations of double-reverse lookup fail on hosts with
multiple addresses, e.g., dual-homed hosts used for proxying. If both
addresses are registered at the same name, a <span class="acronym">DNS</SPAN
>
lookup by name will return both of them, but many programs will read
only the first. If the connection happened to come from the second
address, the double-reverse will incorrectly fail even though the host
is correctly registered. Although you should avoid using double-reverse 
implementations that have this flaw, you may also want to
ensure that on your externally visible multi-homed hosts, lookup by
address returns a different name for each address, and that those
names have only one address returned when it is looked up. For
example, for a host named &quot;foo&quot; with two interfaces named
&quot;e0&quot; and &quot;e1&quot;, have lookups of 
&quot;foo&quot; return both
addresses, lookups of &quot;foo-e0&quot; and &quot;foo-e1&quot;
return only the address of that interface, and lookups by
<span class="acronym">IP</SPAN
> address return &quot;foo-e0&quot; or
&quot;foo-e1&quot; (but not simply &quot;foo&quot;) as appropriate.</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> For internal multi-homed hosts, you probably don't want to set things
up in the way we've described; if
you do, you may end up needing to list them by multiple names anywhere
you want to give them permissions, such as in
<em class="emphasis">/etc/exports</EM
> files.</P
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-69">8.10.4.3 Revealing too much information to
attackers</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-13733"></A
><a class="indexterm" name="AUTOID-13736"></A
>Another problem you may encounter when supporting
<span class="acronym">DNS</SPAN
> with a firewall is that it may reveal
information that you don't want revealed. Some
organizations view internal hostnames (as well as other information
about internal hosts) as confidential information. They want to
protect these host names much as they do their internal telephone
directories. They're nervous because internal hostnames may reveal
project names or other product intelligence, or because these names
may reveal the type of the hosts (which may make an attack
easier). For example, it's easy to guess what kind of system
something is if its name is &quot;lab-sun&quot; or
&quot;cisco-gw&quot;.</P
><p class="para">Even the simplest hostname information can be helpful to an attacker
who wants to bluff his way into your site, physically or
electronically. Using information in this way is an example of what is
commonly called a <em class="emphasis">social engineering</EM
> attack. The
attacker first examines the <span class="acronym">DNS</SPAN
> data to determine
the name of a key host or hosts at your site. Such hosts will often be
listed as <span class="acronym">DNS</SPAN
> servers for the domain, or as
<span class="acronym">MX</SPAN
> gateways for lots of other hosts. Next, the
attacker calls or visits your site, posing as a service technician,
and says he needs to work on these hosts. He'll ask for the passwords
for the hosts (if he calls on the telephone), or ask to be shown to
the machine room (if he visits the site). Because the attacker seems
legitimate, and seems to have inside information about the site&nbsp;- after
all, he knows the names of your key hosts&nbsp;- he'll often gain
access. Social engineering attacks like this takes a lot of brazenness
on the part of the attacker, particularly if he actually visits your
site, but you'd be amazed at how often such attacks succeed.</P
><p class="para">Besides internal hostnames, other information is often placed within
the <span class="acronym">DNS</SPAN
>; information which is useful locally, but
which you'd really rather an attacker not have access
to. <span class="acronym">DNS</SPAN
> <span class="acronym">HINFO</SPAN
> and
<span class="acronym">TXT</SPAN
> resource records are particularly revealing:</P
><dl class="variablelist"><dt class="term"><em class="emphasis"><span class="acronym">HINFO</SPAN
>: Host information records</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-13757"></A
>These name the hardware and operating system release that a machine is
running: it's very useful information for system and network
administrators, but also tells an attacker exactly which list of
bugs to try on that machine.  </P
></DD
><dt class="term"><em class="emphasis"><span class="acronym">TXT</SPAN
>: Textual information records</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-13765"></A
>These are essentially short unformatted
text records used by a variety of different services to provide various
information. For example, some versions of Kerberos and related tools
use these records to store information that, at another site, might be
handled by <span class="acronym">NIS/YP</SPAN
>.</P
></DD
></DL
><p class="para">Attackers will often obtain <span class="acronym">DNS</SPAN
> information about
your site wholesale by contacting your <span class="acronym">DNS</SPAN
> server
and asking for a zone transfer, as if they were a secondary server for
your site. You can either prevent this with packet filtering (by
blocking <span class="acronym">TCP</SPAN
>-based
<span class="acronym">DNS</SPAN
> queries, which will unfortunately block more
than just zone transfers) or through the <em class="emphasis">xfernets</EM
>
directive of current implementations of <span class="acronym">BIND</SPAN
> (see
the <span class="acronym">BIND</SPAN
> documentation for more information).</P
><p class="para">The question to keep in mind when considering what
<span class="acronym">DNS</SPAN
> data to reveal is, &quot;Why give attackers
any more information than necessary?&quot; The following sections
provide some suggestions to help you reveal only the data you want
people to have.</P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-36">8.10.5 Setting Up <span class="acronym">DNS</SPAN
> to Hide
Information</A
></H3
><p class="para"><a class="indexterm" name="CH08DNSHIDE"></A
><a class="indexterm" name="CH08HIDING"></A
>We've mentioned that <span class="acronym">DNS</SPAN
> has a query-forwarding
capability.[38] By taking advantage of this capability, you can give
internal hosts an unrestricted view of both internal and external
<span class="acronym">DNS</SPAN
> data, while restricting external hosts to a
very limited (&quot;sanitized&quot;) view of internal
<span class="acronym">DNS</SPAN
> data. You might want to do this for such
reasons as:</P
><blockquote class="footnote"><p class="para">[38] Cricket Liu has pointed out that the strategies described in this section do not work for subdomains. If you are using subdomains, refer to <a class="systemitem.url" href="../../../../../../../www.greatcircle.com/firewalls-book/errata.html">http://www.greatcircle.com/firewalls-book/errata.html</A
> or to the second edition of <em class="emphasis"><span class="acronym">DNS</SPAN
> and <span class="acronym">BIND</SPAN
></EM
>.</P
></BLOCKQUOTE
><ul class="itemizedlist"><li class="listitem"><p class="para">Because your internal <span class="acronym">DNS</SPAN
> data is too
sensitive to show to everybody.</P
></LI
><li class="listitem"><p class="para">Because you know that your internal <span class="acronym">DNS</SPAN
> servers
don't all work perfectly and you want a better-maintained view for the
outside world.</P
></LI
><li class="listitem"><p class="para">Because you want to give certain information to external hosts and
different information to 
internal hosts (for example, you want internal hosts to send mail
directly to internal machines, but external hosts to see an
<span class="acronym">MX</SPAN
> record directing the mail to a bastion host).</P
></LI
></UL
><p class="para"><a class="xref" href="#FIRE-08-FIG-15" title="A firewall can be used to hide DNS information">Figure 8.15</A
> shows how to set up
<span class="acronym">DNS</SPAN
> to hide information; the following sections
describe all the details.</P
><h4 class="figure"><a class="title" name="FIRE-08-FIG-15">Figure 8.15: A firewall can be used to hide <span class="acronym">DNS</SPAN
> information</A
></H4
><img class="graphic" src="figs/fire0815.gif" alt="Figure 8.15"><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-70">8.10.5.1 Set up a `fake'
<span class="acronym">DNS</SPAN
> server on the bastion host for the outside
world to use</A
></H4
><p class="para"><a class="indexterm" name="CH08DNSFAKE"></A
><a class="indexterm" name="CH08BHFAKE"></A
><a class="indexterm" name="CH08SERVERFAKE"></A
>The first step in hiding <span class="acronym">DNS</SPAN
> information from the
external world is to set up a fake <span class="acronym">DNS</SPAN
> server on a
bastion host. This server claims to be authoritative for your
domain. Make it the server for your domain that is named by the Name
Server records maintained by your parent domain. If you have multiple
such servers for the outside world to talk to (which you should&nbsp;- some
or all of the rest may belong to your service provider), make your
fake server the primary server of the set of authoritative servers;
make the others secondaries of this primary server.</P
><p class="para">As far as this fake server on the bastion host is aware, it knows
everything about your domain. In fact, though, all it knows about is
whatever information you want revealed to the outside world. This
information typically includes only basic hostname and
<span class="acronym">IP</SPAN
> address information about the following hosts:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">The machines on your perimeter network (i.e., the machines that make
up your firewall).</P
></LI
><li class="listitem"><p class="para">Any machines that somebody in the outside world needs to be able to
contact directly. One example of such a machine is an internal Usenet
news (<span class="acronym">NNTP</SPAN
>) server that is reachable from your
service provider. (See the section on <span class="acronym">NNTP</SPAN
>
elsewhere in this chapter for an example of why you might want to
allow this.) Another example is any host reachable over the Internet
from trusted affiliates. External machines need an externally visible
name for such an internal machine; it need not be the internal
machine's real name, however, if you feel that the real name is
somehow sensitive information, or you just want to be able to change
it on a whim.</P
></LI
></UL
><p class="para"><a class="indexterm" name="AUTOID-13839"></A
>In addition, you'll need to publish <span class="acronym">MX</SPAN
> records for
any host or domain names that are used as part of email addresses in
email messages and Usenet news postings, so that people can reply to
these messages. Keep in mind that people may reply to messages days,
weeks, months, or even years after they were sent. If a given host or
domain name has been widely used as part of an email address, you may
need to preserve an <span class="acronym">MX</SPAN
> record for that host or
domain forever, or at least until well after it's dead and gone, so
that people can still reply to old messages. If it has appeared in
print, &quot;forever&quot; may be all too accurate; sites still
receive electronic mail for machines decommissioned five and 10 years
ago.</P
><p class="para">You will also need to publish fake information for any machines that
can contact the outside world directly. Many servers on the Internet
(for example, most major anonymous <span class="acronym">FTP</SPAN
> servers)
insist on knowing the hostname (not just the <span class="acronym">IP</SPAN
>
address) of any machines that contact them, even if they do nothing
with the hostname but log it. In the <span class="acronym">DNS</SPAN
> resource
records, A (name-to-address mapping) records and
<span class="acronym">PTR</SPAN
> (address-to-name mapping) records handle
lookups for names and addresses.</P
><p class="para"><a class="indexterm" name="AUTOID-13849"></A
>As we've mentioned earlier, machines that have <span class="acronym">IP</SPAN
>
addresses and need hostnames do reverse lookups. With a reverse
lookup, the server starts with the remote <span class="acronym">IP</SPAN
>
address of the incoming connection, and looks up the hostname that the
connection is coming from. It takes the <span class="acronym">IP</SPAN
> address
(for example, 172.16.19.67), permutes it in a particular way (reverses
the parts and adds <em class="emphasis">.IN-ADDR.ARPA</EM
> to get
<em class="emphasis">67.19.16.172.IN-ADDR.ARPA</EM
>, and looks up a
<span class="acronym">PTR</SPAN
> record for that name. The
<span class="acronym">PTR</SPAN
> record should return the hostname for the host
with that address (e.g., <em class="emphasis">mycroft.somewhere.net</EM
>),
which the server then uses for its logs or whatever.</P
><p class="para">How can you deal with these reverse lookups? If all these servers
wanted was a name to log, you could simply create a wildcard
<span class="acronym">PTR</SPAN
> record. That record would indicate that a whole
range of addresses belongs to an unknown host in a particular
domain. For example, you might have a lookup for
<em class="emphasis">*.19.16.172.IN-ADDR.ARPA</EM
> return
<em class="emphasis">unknown.somewhere.net</EM
>). Returning this
information would be fairly helpful; it would at least tell the server
administrator whose machine it was
(<em class="emphasis">somewhere.net</EM
>'s). Anyone who had a problem with
the machine could pursue it through the published contacts for the
<em class="emphasis">somewhere.net</EM
> domain.</P
><p class="para"><a class="indexterm" name="AUTOID-13866"></A
>There is a problem with doing only this, however. In an effort to
validate the data returned by the <span class="acronym">DNS</SPAN
>, more and
more servers (particularly anonymous <span class="acronym">FTP</SPAN
> servers)
are now doing a double-reverse lookup, and won't talk to you unless
the double-reverse lookup succeeds. This is the same kind of lookup we
mentioned above; it's certainly necessary for people who provide a
service where they need any degree of authentication of the requesting
host. Whether or not anonymous <span class="acronym">FTP</SPAN
> is such a
service is another question. Some people believe that once you put a
file up for anonymous <span class="acronym">FTP</SPAN
>, you no longer have
reason to try to authenticate hosts; after all, you're trying to give
information away. People running anonymous <span class="acronym">FTP</SPAN
>
servers that do double-reverse lookup argue that people who want
services have a responsibility to be members of the network community
and that requires being identifiable. Whichever side of the argument
you're on, it is certainly true that the maintainers of several of the
largest and best-known anonymous <span class="acronym">FTP</SPAN
> servers are on
the side that favors double-reverse lookup, and will not provide
service to you unless double-reverse lookup succeeds.</P
><p class="para">In a double-reverse lookup, a <span class="acronym">DNS</SPAN
> client:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Performs a reverse lookup to translate an <span class="acronym">IP</SPAN
>
address to a hostname.</P
></LI
><li class="listitem"><p class="para">Does a regular lookup on that hostname to determine its nominal <span class="acronym">IP</SPAN
>
address.</P
></LI
><li class="listitem"><p class="para">Compares this nominal <span class="acronym">IP</SPAN
> address to the original
<span class="acronym">IP</SPAN
> address.</P
></LI
></UL
><p class="para">Your fake server needs to provide consistent fake data for all hosts
in your domain whose <span class="acronym">IP</SPAN
> addresses are going to be
seen by the outside world. For every <span class="acronym">IP</SPAN
> address you
own, the fake server must publish a <span class="acronym">PTR</SPAN
> record with
a fake hostname, as well as a corresponding A record that maps the
fake hostname back to the <span class="acronym">IP</SPAN
> address. For example,
for address 172.16.1.2, you might publish a <span class="acronym">PTR</SPAN
>
record with the name
<em class="emphasis">host-172-16-1-2.somewhere.net</EM
> and a corresponding
A record which maps <em class="emphasis">host-172-16-1-2.somewhere.net</EM
>
back to the corresponding <span class="acronym">IP</SPAN
> address
(172.16.1.2). When you connect to some remote system that attempts to
do a reverse lookup of your <span class="acronym">IP</SPAN
> address (e.g.,
172.16.1.2) to determine your hostname, that system will get back the
fake hostname (e.g., <em class="emphasis">host-172-16-1-2</EM
>). If the
system then attempts to do a double-reverse lookup to translate that
hostname to an <span class="acronym">IP</SPAN
> address, it will get back
172.16.1.2, which matches the original <span class="acronym">IP</SPAN
> address
and satisfies the consistency check.</P
><p class="para">If you are strictly using proxying to connect internal hosts to the
external world, you don't need to set up the fake information for your
internal hosts; you simply need to put up information for the host or
hosts running the proxy server. The external world will see only the
proxy server's address. For a large network, this by itself may make
using proxy service for <span class="acronym">FTP</SPAN
> worthwhile.<a class="indexterm" name="AUTOID-13902"></A
><a class="indexterm" name="AUTOID-13903"></A
><a class="indexterm" name="AUTOID-13904"></A
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-71">8.10.5.2 Set up a real <span class="acronym">DNS</SPAN
>
server on an internal system for internal hosts to use</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-13909"></A
><a class="indexterm" name="AUTOID-13912"></A
>Your internal machines need to use the real <span class="acronym">DNS</SPAN
>
information about your hosts, not the fake information presented to
the outside world. You do this through a standard
<span class="acronym">DNS</SPAN
> server setup on some internal system. Your
internal machines may also want to find out about external machines,
though, e.g., to translate the hostname of a remote anonymous
<span class="acronym">FTP</SPAN
> site to an IP address.</P
><p class="para">One way to accomplish this is to provide access to external
<span class="acronym">DNS</SPAN
> information by configuring your internal
<span class="acronym">DNS</SPAN
> server to query remote <span class="acronym">DNS</SPAN
>
servers directly, as appropriate, to resolve queries from internal
clients about external hosts. Such a configuration, however, would
require opening your packet filtering to allow your internal
<span class="acronym">DNS</SPAN
> server to talk to these remote
<span class="acronym">DNS</SPAN
> servers (which might be on any host on the
Internet). This is a problem because <span class="acronym">DNS</SPAN
> is
<span class="acronym">UDP</SPAN
>-based, and as we discuss in <a class="xref" href="ch06_01.htm" title="Packet Filtering">Chapter 6</A
>, you need to block
<span class="acronym">UDP</SPAN
> altogether in order to block outside access to
vulnerable <span class="acronym">RPC</SPAN
>-based services like
<span class="acronym">NFS</SPAN
> and <span class="acronym">NIS/YP</SPAN
>.</P
><p class="para"><a class="indexterm" name="AUTOID-13933"></A
>Fortunately, the most common <span class="acronym">DNS</SPAN
> server (the
<span class="acronym">UNIX</SPAN
> <em class="emphasis">named</EM
> program) provides a
solution to this dilemma: the <em class="emphasis">forwarders</EM
>
directive in the <em class="emphasis">/etc/named.boot</EM
> server
configuration file. The <em class="emphasis">forwarders</EM
> directive
tells the server that, if it doesn't know the information itself
already (either from its own zone information or from its cache),
it should forward the query to a specific server and let this other
server figure out the answer, rather than try to contact servers all
over the Internet in an attempt to determine the answer itself. In the
<em class="emphasis">/etc/named.boot </EM
> configuration file, you set up
the <em class="emphasis">forwarders</EM
> line to point to the fake server
on the bastion host; the file also needs to contain a
&quot;slave&quot; line, to tell it to only use the servers on the
<em class="emphasis">forwarders</EM
> line, even if the 
<em class="emphasis">forwarders</EM
> are slow in answering.</P
><p class="para">The use of the <em class="emphasis">forwarders</EM
> mechanism doesn't really have
anything to do with hiding the information in the internal
<span class="acronym">DNS</SPAN
> server; it has everything to do with making the
packet filtering as strict as possible (i.e., applying the principle
of least privilege), by making it so that the internal
<span class="acronym">DNS</SPAN
> server need only be able to talk to the
bastion host <span class="acronym">DNS</SPAN
> server, not to
<span class="acronym">DNS</SPAN
> servers throughout the whole Internet.</P
><p class="para">If internal hosts can't contact external hosts, you may not want to
bother setting things up so that they can resolve external host names.
<span class="acronym">SOCKS</SPAN
> proxy clients can be set up to use the
external name server directly. This simplifies your name service
configuration somewhat, but it complicates your proxying
configuration, and some users may want to resolve hostnames
even though they can't reach them (for example, they may be
interested in knowing whether the hostname in an email address is
valid).</P
><p class="para"><a class="xref" href="#FIRE-08-FIG-16" title="DNS with forwarding">Figure 8.16</A
> shows how <span class="acronym">DNS</SPAN
> works
with forwarding; <a class="xref" href="#FIRE-08-FIG-17" title="DNS without forwarding">Figure 8.17</A
> shows how it
works without forwarding.</P
><h4 class="figure"><a class="title" name="FIRE-08-FIG-16">Figure 8.16: <span class="acronym">DNS</SPAN
> with forwarding</A
></H4
><img class="graphic" src="figs/fire0816.gif" alt="Figure 8.16"><h4 class="figure"><a class="title" name="FIRE-08-FIG-17">Figure 8.17: <span class="acronym">DNS</SPAN
> without forwarding</A
></H4
><img class="graphic" src="figs/fire0817.gif" alt="Figure 8.17"></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-72">8.10.5.3 Internal <span class="acronym">DNS</SPAN
>
clients query the internal server</A
></H4
><p class="para">The next step is to configure your internal <span class="acronym">DNS</SPAN
>
clients to ask all their queries of the internal server. On
<span class="acronym">UNIX</SPAN
> systems, you do this through the
<em class="emphasis">/etc/resolv.conf</EM
> file. There are two cases:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">When the internal server receives a query about an internal system, or
about an external system which is in its cache, it answers directly and
immediately because it already knows the answers to such queries. </P
></LI
><li class="listitem"><p class="para">When the internal server receives a query about an external system
that isn't in its cache, the internal server forwards this query to
the bastion host server (because of the <em class="emphasis">forwarders</EM
> line
described above). The bastion host server obtains the answer from the
appropriate <span class="acronym">DNS</SPAN
> servers on the Internet and relays
the answer back to the internal server. The internal server then
answers the original client and caches the answer.</P
></LI
></UL
><p class="para">In either case, as far as the client is concerned, it asked a question
of the internal server and got an answer from the internal
server. The client doesn't know whether the internal server already
knew the answer or had to obtain the answer from other servers
(indirectly, via the bastion server). Therefore, the
<em class="emphasis">/etc/resolv.conf</EM
> file will look perfectly
standard on internal clients.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-73">8.10.5.4 Bastion <span class="acronym">DNS</SPAN
>
clients also query the internal server</A
></H4
><p class="para">The key to this whole information-hiding configuration is that
<span class="acronym">DNS</SPAN
> clients on the bastion host must query the
internal server for information, not the server on the bastion
host. This way, <span class="acronym">DNS</SPAN
> clients on the bastion host
(such as Sendmail, for example) can use the real hostnames and so on
for internal hosts, but clients in the outside world can't access the
internal data.</P
><p class="para"><span class="acronym">DNS</SPAN
> server and client configurations are completely
separate. Many people assume that they must have configuration files
in common, that the clients will automatically know about the
local server, and that pointing them elsewhere will also point the server
elsewhere. In fact, there is no overlap. Clients never read
<em class="emphasis">/etc/named.boot</EM
>, which tells the server what to
do, and the server never reads <em class="emphasis">/etc/resolv.conf</EM
>,
which tells the clients what to do.</P
><p class="para">Again, there are two cases:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">When a <span class="acronym">DNS</SPAN
> client on the bastion host asks about
an internal system, it gets the real answer directly from the internal
server.</P
></LI
><li class="listitem"><p class="para">When a <span class="acronym">DNS</SPAN
> client on the bastion host asks about
an external system, the internal <span class="acronym">DNS</SPAN
> server
forwards the query to the bastion <span class="acronym">DNS</SPAN
> server. The
bastion server obtains the answer from the appropriate
<span class="acronym">DNS</SPAN
> servers on the Internet, and then relays the
answer back to the internal server. The internal server, in turn,
answers the original client on the bastion host.</P
></LI
></UL
><p class="para"><span class="acronym">DNS</SPAN
> clients on the bastion host could obtain
information about external hosts more directly by asking the
<span class="acronym">DNS</SPAN
> server on the bastion host instead of the one
on the internal host. However, if they did that, they'd be unable to
get the &quot;real&quot; internal information, which only the server
on the internal host has. They're going to need that information,
because they're talking to the internal hosts as well as the external
hosts.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-74">8.10.5.5 What your packet filtering system
needs to allow</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-14008"></A
>In order for this <span class="acronym">DNS</SPAN
> forwarding scheme to work,
any packet filtering system between the bastion host and the internal
systems has to allow all of the following (see the table
below for details):</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><span class="acronym">DNS</SPAN
> queries from the internal server to the bastion
host server: <span class="acronym">UDP</SPAN
> packets from port 53 on
the internal server to port 53 on the bastion host (rule A), and
<span class="acronym">TCP</SPAN
> packets from ports above 1023 on the internal
server to port 53 on the bastion host (rule B).</P
></LI
><li class="listitem"><p class="para">Responses to those queries from the bastion host to the internal
server: <span class="acronym">UDP</SPAN
> packets from port 53 on the
bastion host to port 53 on the internal server (rule C), and
<span class="acronym">TCP</SPAN
> packets with the ACK bit set from port 53 on
the bastion host to ports above 1023 on the internal server (rule D).</P
></LI
><li class="listitem"><p class="para"><span class="acronym">DNS</SPAN
> queries from the bastion host
<span class="acronym">DNS</SPAN
> clients to the internal server:
<span class="acronym">UDP</SPAN
> and <span class="acronym">TCP</SPAN
> packets from ports
above 1023 on the bastion host to port 53 on the internal server
(rules E and F).</P
></LI
><li class="listitem"><p class="para">Responses from the internal server to those bastion host
<span class="acronym">DNS</SPAN
> clients: <span class="acronym">UDP</SPAN
>
packets and <span class="acronym">TCP</SPAN
> packets with the ACK bit set from
port 53 on the internal server to ports above 1023 on the bastion host
(Rules G and H).</P
></LI
></UL
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Direc-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Pro-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">ACK</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Rule</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tion</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tocol</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Set</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Action</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">A</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[39]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">B</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1">Any</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">C</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[39]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">D</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">E</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[39]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">F</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1">Any</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">G</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[39]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">H</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[39] <span class="acronym">UDP</SPAN
> packets do not have <span class="acronym">ACK</SPAN
> bits.</P
></BLOCKQUOTE
><a class="indexterm" name="AUTOID-14232"></A
><a class="indexterm" name="AUTOID-14233"></A
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-37">8.10.6 Setting up <span class="acronym">DNS</SPAN
> Without Hiding
Information</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-14238"></A
>The approach we've described above is not the only option. Suppose
that you don't feel it's necessary to hide your internal
<span class="acronym">DNS</SPAN
> data from the world. In this case, your
<span class="acronym">DNS</SPAN
> configuration is similar to the one we've
described above, but it's somewhat simpler. <a class="xref" href="#FIRE-08-FIG-18" title="DNS without information hiding">Figure 8.18</A
> shows how <span class="acronym">DNS</SPAN
> works
without information hiding.</P
><h4 class="figure"><a class="title" name="FIRE-08-FIG-18">Figure 8.18: <span class="acronym">DNS</SPAN
> without information hiding</A
></H4
><img class="graphic" src="figs/fire0818.gif" alt="Figure 8.18"><p class="para">With this alternate approach, you should still have a bastion
host <span class="acronym">DNS</SPAN
> server and an internal
<span class="acronym">DNS</SPAN
> server; however, one of these can be a
secondary server of the other. Generally, it's easier to make the
bastion <span class="acronym">DNS</SPAN
> server a secondary of the internal
<span class="acronym">DNS</SPAN
> server, and to maintain your
<span class="acronym">DNS</SPAN
> data on the internal server. You should still
configure the internal <span class="acronym">DNS</SPAN
> server to forward
queries to the bastion host <span class="acronym">DNS</SPAN
> server, but the
bastion host <span class="acronym">DNS</SPAN
> clients can be configured to query
the bastion host server instead of the internal server.</P
><p class="para">You need to configure any packet filtering system between the bastion
host and the internal server to allow the following (see the
table below for details):</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><span class="acronym">DNS</SPAN
> queries from the internal
<span class="acronym">DNS</SPAN
> server to the bastion <span class="acronym">DNS</SPAN
>
server: <span class="acronym">UDP</SPAN
> packets from port 53 on the
internal server to port 53 on the bastion host (rule A) and
<span class="acronym">TCP</SPAN
> packets from ports above 1023 on the internal
server to port 53 on the bastion host (rule B).</P
></LI
><li class="listitem"><p class="para">Responses from the bastion <span class="acronym">DNS</SPAN
> server to the
internal <span class="acronym">DNS</SPAN
> server:
<span class="acronym">UDP</SPAN
> packets from port 53 on the bastion host to
port 53 on the internal server (rule C) and <span class="acronym">TCP</SPAN
>
packets with the ACK bit set from port 53 on the bastion host to ports
above 1023 on the internal server (rule D).</P
></LI
></UL
><p class="para">If the bastion host is also a <span class="acronym">DNS</SPAN
> secondary server
and the internal host is the corresponding <span class="acronym">DNS</SPAN
>
primary server, you also have to allow the following:</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><span class="acronym">DNS</SPAN
> queries from the bastion host
<span class="acronym">DNS</SPAN
> server to the internal <span class="acronym">DNS</SPAN
>
server: <span class="acronym">UDP</SPAN
> packets from port 53 on the
bastion host to port 53 on the internal server (note that this is the
same as rule C), and <span class="acronym">TCP</SPAN
> packets from ports above
1023 on the bastion host to port 53 on the internal server (rule E).</P
></LI
><li class="listitem"><p class="para">Responses from the internal <span class="acronym">DNS</SPAN
> server back to the
bastion <span class="acronym">DNS</SPAN
> server: <span class="acronym">UDP</SPAN
>
packets from port 53 on the internal server to port 53 on the bastion
host (note that this is the same as rule A), and
<span class="acronym">TCP</SPAN
> packets with the ACK bit set from port 53 on
the internal server to ports above 1023 on the bastion host (rule F).</P
></LI
><li class="listitem"><p class="para"><span class="acronym">DNS</SPAN
> zone transfer requests from the bastion host to
the internal server: <span class="acronym">TCP</SPAN
> packets from
ports above 1023 on the bastion host to port 53 on the internal server
(note that this is the same as rule E).</P
></LI
><li class="listitem"><p class="para"><span class="acronym">DNS</SPAN
> zone transfer responses from the internal
server to the bastion host: <span class="acronym">TCP</SPAN
> packets
with the ACK bit set from port 53 on the internal server to ports
above 1023 on the bastion host (note that this is the same as rule F).</P
></LI
></UL
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Direc-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Pro-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">ACK</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Rule</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tion</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tocol</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Set</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Action</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">A</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[40]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">B</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1">Any</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">C</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[40]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">D</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">E</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1">Any</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">F</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal Server</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bastion Host</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">53</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Permit</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[40] <span class="acronym">UDP</SPAN
> packets do not have <span class="acronym">ACK</SPAN
> bits.</P
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-38">8.10.7 Summary of <span class="acronym">DNS</SPAN
>
Recommendations</A
></H3
><ul class="itemizedlist"><li class="listitem"><p class="para">Set up an external <span class="acronym">DNS</SPAN
> server on a bastion host for
the outside world to access.</P
></LI
><li class="listitem"><p class="para">Do not make <span class="acronym">HINFO</SPAN
> records visible to the outside
world; either don't use them, or configure <span class="acronym">DNS</SPAN
>
for information hiding as described above.</P
></LI
><li class="listitem"><p class="para">Use an up-to-date <span class="acronym">BIND</SPAN
> implementation and 
double-reverse lookups to avoid spoofing.</P
></LI
><li class="listitem"><p class="para">Consider hiding all internal <span class="acronym">DNS</SPAN
> data and using
forwarding and fake records; this doesn't make sense for all sites,
but it might for yours.</P
></LI
><li class="listitem"><p class="para">Disable zone transfers to anyone but your secondaries, using packet
filtering or the <em class="emphasis">xfernets</EM
> directive. Even if you've chosen not to hide
your <span class="acronym">DNS</SPAN
> information, there's probably no valid
reason for anyone but your secondaries to do a zone transfer, and
disallowing zone transfers makes life a bit harder for
attackers.</P
></LI
></UL
><a class="indexterm" name="AUTOID-14476"></A
><a class="indexterm" name="AUTOID-14477"></A
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_09.htm#FIRE-08-S2-30" title="8.9 Real-Time Conferencing Services"><img src="../gifs/txtpreva.gif" alt="Previous: 8.9 Real-Time Conferencing Services" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Building Internet Firewalls"><img src="../gifs/txthome.gif" alt="Building Internet Firewalls" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_11.htm#FIRE-08-S2-90" title="8.11 syslog"><img src="../gifs/txtnexta.gif" alt="Next: 8.11 syslog" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">8.9 Real-Time Conferencing Services</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_a.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">8.11 syslog</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
