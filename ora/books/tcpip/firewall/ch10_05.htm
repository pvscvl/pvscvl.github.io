<html><head>
<title>[Chapter 10] 10.5 Network-Level Encryption</TITLE>
<meta name="DC.title" content="Building Internet Firewalls"><meta name="DC.creator" content="D. Brent Chapman &amp; Elizabeth D. Zwicky"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:28:50Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-124-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" title="10. Authentication and Inbound Services"><link rel="prev" href="ch10_04.htm#FIRE-10-S2-10" title="10.4 Complete Authentication Systems"><link rel="next" href="ch10_06.htm" title="10.6 Terminal Servers and Modem Pools"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Building Internet Firewalls" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Building Internet Firewalls"><area shape="RECT" coords="467,0,514,18" href="../search/fsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_04.htm#FIRE-10-S2-10" title="10.4 Complete Authentication Systems"><img src="../gifs/txtpreva.gif" alt="Previous: 10.4 Complete Authentication Systems" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 10<br>Authentication and Inbound
Services</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_06.htm" title="10.6 Terminal Servers and Modem Pools"><img src="../gifs/txtnexta.gif" alt="Next: 10.6 Terminal Servers and Modem Pools" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="FIRE-10-S1-5">10.5 Network-Level Encryption</A
></H2
><p class="para"><a class="indexterm" name="CH10ENCR"></A
><a class="indexterm" name="CH10NETENCR"></A
><a class="indexterm" name="CH10SEC"></A
>Encryption allows you to create secure connections over insecure
channels. Encrypting your network traffic provides two useful
guarantees: privacy and authentication. Privacy is obvious; if your
data is encrypted by the sending end, sent over an unsecured network,
and then decrypted by the receiving end, your data is kept private
from someone snooping on the unsecured network. Authentication is less
obvious, but very useful. Basically, if the receiving end is
successfully able to decrypt the data, it knows the data must have
really come from the sending end (not from somebody in the middle
pretending to be the sending end). Why? Because the data was properly
encrypted, and only the sending end could do that. This all assumes,
of course, that the keys that need to be kept secret
<em class="emphasis">have</EM
> been kept secret; someone who knows your
keys can violate both your privacy and your authentication.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-10-S2-13">10.5.1 At What Level Do You Encrypt?</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-20739"></A
><a class="indexterm" name="AUTOID-20742"></A
>Encryption over the Internet can take place at various levels; the most
common are the application, link, and network levels. </P
><p class="para"><em class="emphasis">Application-level encryption</EM
> requires support in
all the applications (both clients and servers) you want to
use. This might be an effective approach if you have one or two
applications that you use heavily (or are particularly concerned
about) across the Internet among a small number of machines, because
you can install custom, encrypting versions of those clients and
servers on those machines. For general use, however, it doesn't scale
up well; you may not even have source code available for all the
applications you wish to operate encrypted. Some applications use
<span class="acronym">PGP</SPAN
> to provide application-level
encryption. Senders use <span class="acronym">PGP</SPAN
> to encrypt their
outgoing mail before sending it across the Internet, and recipients
use <span class="acronym">PGP</SPAN
> to decrypt it. (<span class="acronym">PGP</SPAN
> is
also frequently used independently of applications, which is less
convenient for the user, but extremely flexible.)</P
><p class="para">Application-level encryption is done at too high a level to be useful
as a blanket protection for a network link; you have to spend too much
time and effort integrating support for it into too many different
clients, servers, and procedures. However, application-level
encryption may be useful if you only need a single application to work
securely.</P
><p class="para"><a class="indexterm" name="AUTOID-20753"></A
><em class="emphasis">Link-level encryption </EM
>protects only a single
network link. For example, encryption in modems at either end of a
leased line will protect your data as it traverses that leased line,
but not elsewhere, as it traverses other lines, or passes through
routers or other intermediate hosts. Link-level encryption is done at
too low a level to be widely useful. Usually, you don't control all
the links in the untrusted network between the source and the
destination, so you can't really ensure that the link-level encryption
is being done properly (or at all) at each of those points.</P
><p class="para"><em class="emphasis">Network-level encryption </EM
>seems to be a workable
middle ground between application-level encryption and link-level
encryption. With network-level encryption, all network traffic between
two trusted sites is encrypted at one end, sent across the
untrusted intermediate network, and then decrypted at the other
end. The encryption and decryption is done by routers or other network
devices at the perimeter of each trusted site. A firewall, which all
traffic must pass through anyway, is thus a natural place to do
network-level encryption. To machines within either trusted site, the
traffic is unencrypted; this means that those machines don't require
any custom applications or configuration to use or benefit from the
encryption. To machines outside the trusted sites, the packets are
encrypted, and thus are private (unintelligeable to those without the
keys) and authenticated (could only have been sent by a key-holder).</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-10-S2-14">10.5.2 What Do You Encrypt?</A
></H3
><p class="para">When you are performing network-level encryption, how much of the packet
do you want to encrypt?

<ul class="itemizedlist"><li class="listitem"><p class="para">Only the <span class="acronym">TCP</SPAN
>, <span class="acronym">UDP</SPAN
>, or
<span class="acronym">ICMP</SPAN
> data segments (leaving the
<span class="acronym">TCP</SPAN
>, <span class="acronym">UDP</SPAN
>, or
<span class="acronym">ICMP</SPAN
> headers, as well as the <span class="acronym">IP</SPAN
>
headers, unencrypted)?</P
></LI
><li class="listitem"><p class="para">The <span class="acronym">IP</SPAN
> data segment (including the whole
<span class="acronym">TCP</SPAN
>, <span class="acronym">UDP</SPAN
>, or
<span class="acronym">ICMP</SPAN
> packet)?</P
></LI
><li class="listitem"><p class="para">The whole <span class="acronym">IP</SPAN
> packet?</P
></LI
></UL
></P
><p class="para">If you encrypt only the <span class="acronym">TCP</SPAN
>,
<span class="acronym">UDP</SPAN
>, or <span class="acronym">ICMP</SPAN
> data segments,
you're protecting the data itself from compromise by an attacker, and
you're making life easy for your packet filtering system (it can still
see all the headers it needs to for normal packet filtering). However,
a snooper can still see which machines are using which protocols to
communicate with which other machines.</P
><p class="para"><a class="indexterm" name="AUTOID-20785"></A
><a class="indexterm" name="AUTOID-20789"></A
>If you encrypt the <span class="acronym">IP</SPAN
> data segment (which means
that the whole <span class="acronym">UDP</SPAN
>, <span class="acronym">TCP</SPAN
>, or
<span class="acronym">ICMP</SPAN
> packet, headers and all, is encrypted), you
prevent a snooper from seeing what protocols you're using (they can
still see what hosts are talking to what other hosts), but you may
make life harder for your own packet filtering system. Unless the
packet filtering system is between the encryption unit and the
internal network, it can no longer see the <span class="acronym">TCP</SPAN
>,
<span class="acronym">UDP</SPAN
>, or <span class="acronym">ICMP</SPAN
> headers, because
they're encrypted as part of the <span class="acronym">IP</SPAN
> data
segment. If your packet filtering system is outside the encryption
unit (between the encryption unit and the untrusted network), it would
have to make all of its decisions strictly on the basis of
<span class="acronym">IP</SPAN
> source and destination addresses, which is very
rarely enough.</P
><p class="para">If you encrypt the whole <span class="acronym">IP</SPAN
> packet, you prevent an
attacker from seeing anything, but you may also prevent your
packet filtering system from seeing anything either, depending on
where it's located relative to the encryption unit. To fully encrypt
an <span class="acronym">IP</SPAN
> packet between two sites, you have to provide
some sort of encapsulation &quot;tunnel&quot;&nbsp;- e.g., a simple
<span class="acronym">TCP</SPAN
> connection&nbsp;- between the encryption units at the
two sites to send the encrypted packets through. The reason the tunnel
is necessary is because the IP headers are no longer there for the
intermediate routers to look at. All an attacker can see is that the
two encryption units are talking to each other. Some commercial
routers, such as Morning Star Express routers (as well as
<span class="acronym">UNIX</SPAN
> machines running Morning Star
<span class="acronym">PPP</SPAN
> software) are capable of creating such
&quot;virtual private networks.&quot; Morning Star does it by running
encrypted <span class="acronym">PPP</SPAN
> over a <span class="acronym">TCP</SPAN
>
connection between two of their boxes; so you have your original
packet encapsulated in an encrypted <span class="acronym">PPP</SPAN
> packet,
which is itself encapsulated in a <span class="acronym">TCP</SPAN
> packet from
one Morning Star box to the other.</P
><p class="para">Most sites using network-level encryption don't mind if attackers can
determine which machines are talking to each other, or even what
protocols they're using (this attack is commonly called <em class="emphasis">traffic
analysis</EM
>). Such sites generally encrypt only the
<span class="acronym">TCP</SPAN
>, <span class="acronym">UDP</SPAN
>, or
<span class="acronym">ICMP</SPAN
> data segments of packets, for their own
convenience in processing the packets. Sites that encrypt the whole
<span class="acronym">TCP</SPAN
>, <span class="acronym">UDP</SPAN
>, or
<span class="acronym">ICMP</SPAN
> packet (the <span class="acronym">IP</SPAN
> data
segment) generally do it for performance reasons, rather than for
security reasons: it's faster for a router to find the start of the
<span class="acronym">IP</SPAN
> data segment than for it to find the start of
the <span class="acronym">IP</SPAN
> data segment and, within that, the start of
the <span class="acronym">TCP</SPAN
>, <span class="acronym">UDP</SPAN
>, or
<span class="acronym">ICMP</SPAN
> data segment.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-10-S2-15">10.5.3 Where Do You Encrypt?</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-20828"></A
><a class="indexterm" name="AUTOID-20831"></A
>If you're going to set up network-level encryption, the question of
where you do the encryption and decryption relative to your packet
filtering is an important one. If you do the encryption and decryption
inside the packet filtering perimeter (i.e., on your internal net), then
the filters just have to allow the encrypted packets in and out. This
is especially easy if you're doing tunneling, because all the tunneled
packets will be addressed to the same remote address and port number at
the other end of the tunnel (the decryption unit). On the other hand,
doing the encryption and decryption inside your filtering perimeter
means that packets arriving encrypted are not subject to the scrutiny of
the packet filters. This leaves you vulnerable to attack from the other
site if that site has been compromised.</P
><p class="para">If you do the encryption and decryption outside the packet filtering
perimeter (i.e., on your perimeter net or in your exterior router), then
the packets coming in from the other site can be subjected to the full
scrutiny of your packet filtering system. On the other hand, they can
also be subjected to the full scrutiny of anyone who has broken into a
machine on your perimeter net, such as your bastion host.</P
><p class="para">Encryption is starting to appear as a feature in some commercial
router products, and several vendors have announced their intentions
to add encryption. This trend will probably continue over the next few
years. As yet, though, there are few or no standards for
<span class="acronym">IP</SPAN
> network-level encryption, so few of the products
interoperate with each other. They all assume that you have another
one of their products at the other end. We hope that his will change,
and that standards will emerge as encryption becomes more common.</P
><p class="para"><a class="xref" href="#FIRE-10-FIG-4" title="Network-level encryption">Figure 10.4</A
> shows a simplified view of
network-level encryption scheme.</P
><h4 class="figure"><a class="title" name="FIRE-10-FIG-4">Figure 10.4: Network-level encryption</A
></H4
><img class="graphic" src="figs/fire1004.gif" alt="Figure 10.4"></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-10-S2-16">10.5.4 Key Distribution</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-20845"></A
><a class="indexterm" name="AUTOID-20847"></A
>As with any encryption system, key distribution for network-level
encryption can be a very sticky problem. All of the discussion above
assumes that the two ends share a key so that each knows how to
encrypt and decrypt data sent to and from the other. Most of the
systems in use today rely on &quot;out of band&quot; key
distribution: their manufacturers say &quot;key distribution is your
problem, not ours.&quot; Customers have to manually establish keys
(by transferring them by voice over the phone, or on floppy disk, or
through some other secure, private mechanism) on each participating
system. This means that this network-level encryption can work well
for sites you exchange information with frequently (e.g., partners,
key clients, or other branches of your own organization). But it
doesn't work well for ad hoc or transient connections, because of the
setup time and effort involved. Some systems use public key technology
or key distribution systems, and can deal more quickly and effectively
with ad hoc or transient connections.</P
></DIV
><a class="indexterm" name="AUTOID-20850"></A
><a class="indexterm" name="AUTOID-20851"></A
><a class="indexterm" name="AUTOID-20852"></A
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_04.htm#FIRE-10-S2-10" title="10.4 Complete Authentication Systems"><img src="../gifs/txtpreva.gif" alt="Previous: 10.4 Complete Authentication Systems" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Building Internet Firewalls"><img src="../gifs/txthome.gif" alt="Building Internet Firewalls" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_06.htm" title="10.6 Terminal Servers and Modem Pools"><img src="../gifs/txtnexta.gif" alt="Next: 10.6 Terminal Servers and Modem Pools" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.4 Complete Authentication Systems</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_a.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.6 Terminal Servers and Modem Pools</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
