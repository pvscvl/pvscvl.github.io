<html><head>
<title>[Chapter 8] 8.16 X11 Window System</TITLE>
<meta name="DC.title" content="Building Internet Firewalls"><meta name="DC.creator" content="D. Brent Chapman &amp; Elizabeth D. Zwicky"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:26:58Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-124-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch08_01.htm" title="8. Configuring Internet Services"><link rel="prev" href="ch08_15.htm#FIRE-08-S2-55" title="8.15 Network Information Service/Yellow Pages (NIS/YP)"><link rel="next" href="ch08_17.htm#FIRE-08-S2-62" title="8.17 Printing Protocols (lpr and lp)"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Building Internet Firewalls" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Building Internet Firewalls"><area shape="RECT" coords="467,0,514,18" href="../search/fsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_15.htm#FIRE-08-S2-55" title="8.15 Network Information Service/Yellow Pages (NIS/YP)"><img src="../gifs/txtpreva.gif" alt="Previous: 8.15 Network Information Service/Yellow Pages (NIS/YP)" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 8<br>Configuring Internet Services</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_17.htm#FIRE-08-S2-62" title="8.17 Printing Protocols (lpr and lp)"><img src="../gifs/txtnexta.gif" alt="Next: 8.17 Printing Protocols (lpr and lp)" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="FIRE-08-S1-16">8.16 X11 Window System</A
></H2
><p class="para"><a class="indexterm" name="CH08X11"></A
><a class="indexterm" name="CH08CONFX11"></A
><a class="indexterm" name="CH08FWX11"></A
><a class="indexterm" name="AUTOID-16382"></A
>The X11 window system poses a number of problems for a firewall
system. (Note that most window systems supplied by <span class="acronym">UNIX</SPAN
>
vendors are either based on or very similar to X11&nbsp;- from a firewalls
point of view, most of the considerations are the same&nbsp;- so this
discussion of X11 applies to other window systems as well.)</P
><p class="para">The first problem with X11 is that the client/server relationship is
backwards from most other protocols. The X11
&quot;server&quot; is the display/mouse/keyboard unit, and the
&quot;clients&quot; are the application programs driving windows or
interacting with the mouse and keyboard on that server. Thus, the
server is typically inside the firewall (sitting on the
user's desk), and the clients are outside (running on
whatever remote computers the user has accessed).</P
><p class="para">X11 servers have certain capabilities that make them a very tempting
target for attackers. There are a number of things an attacker can do
with access to an X11 server, including:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Getting screen dumps&nbsp;- obtaining a copy of whatever information
is being displayed on the screen at any given time.</P
></LI
><li class="listitem"><p class="para">Reading keystrokes&nbsp;- for example, reading a user's password as he
or she types it at the keyboard.</P
></LI
><li class="listitem"><p class="para">Injecting keystrokes as if they were typed by the user; this
potentially allows the attacker to do all kinds of mean and nasty
things, especially in a window where the user happens to be running a
root shell.</P
></LI
></UL
><p class="para"><a class="indexterm" name="AUTOID-16397"></A
>X11 has certain security mechanisms, but to date they've proven either
too weak or too cumbersome to be truly useful against determined
attack. One, commonly referred to as the &quot;magic cookie&quot;
mechanism, relies on a secret shared between the server and legitimate
clients; clients are allowed to access the server only if they can
prove they know the secret. The problem is, even though the secret is
never passed directly between the X11 client and server, most ways
that users make the secret available to both the server and the
client (via an <span class="acronym">NFS</SPAN
>-accessible file in their home
directory that's accessible to both server and client, for example)
compromise the secret to anybody who is snooping on the network. While
the magic cookie mechanism is theoretically secure, in
practice it is undermined by the way that it is commonly and
incorrectly used; unfortunately, there's no easy way to use it
correctly.</P
><p class="para"><a class="indexterm" name="AUTOID-16402"></A
>Another of X11's security mechanisms, called the
<em class="emphasis">xhost</EM
> mechanism, allows the user to tell the
server which remote <span class="acronym">IP</SPAN
> addresses the server should
accept connections from. Users are supposed to authorize only
specific hosts where they intend to run X11 clients. The
problem is, users forget to preauthorize the hosts before starting
the clients, and the clients are refused access; after this happens a
few times, many users disable the controls altogether. For example,
they issue an 
<em class="emphasis">xhost +</EM
> command to
allow connections from any and all hosts in the name of convenience
(so they can easily run programs on remote systems), without giving
any thought to the security implications of their actions. Even if
users don't disable <em class="emphasis">xhost</EM
> altogether, they're
still vulnerable to any connections from the machines they've
approved; there's no way for the <em class="emphasis">xhost</EM
> mechanism
to determine whether or not any given connection from one of those
machines is legitimate.</P
><p class="para">Few sites need to run X11 across their firewalls from the
Internet. There are occasional <span class="acronym">WWW</SPAN
> sites that
provide X clients as a way to provide real-time displays, but they are
few and far between. If you need to allow X11 from the
Internet, consider using one of the X11 proxies discussed in <a class="xref" href="ch07_01.htm" title="Proxy Systems">Chapter 7</A
>, for example, <em class="emphasis">x-gw</EM
> 
in the TIS Firewall Toolkit.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-57">8.16.1 Packet Filtering Characteristics of
X11</A
></H3
><p class="para"><a class="indexterm" name="CH08PFX11"></A
>X11 uses <span class="acronym">TCP</SPAN
>. X11 uses port 6000 for the first
server on a machine. This choice of ports presents another problem for
packet filtering systems: the X11 ports are in the middle of the
&quot;above 1023&quot; range of ports that most applications use for
random client-side ports. Thus, any packet filtering scheme that
allows packets in to ports above 1023 (in order to allow packets from
remote servers to local clients) needs to be very careful not to allow
connections in to X11 servers. It can do this 
either by totally blocking access to
the range of ports used by these servers (which can be a tricky
proposition because of the possibility of multiple servers per
machine, per the discussion below) or by using 
&quot;start-of-connection&quot; 
filtering (looking at the <span class="acronym">TCP ACK</SPAN
>
bit) to disallow inbound <span class="acronym">TCP</SPAN
> connections to any
ports.</P
><p class="para">Some machines run multiple X11 servers. The first server is at port
6000, the second at 6001, and so on. On a <span class="acronym">UNIX</SPAN
>
system, the DISPLAY environment variable tells clients
what X11 server to contact. This variable is of the form
<em class="emphasis">hostname:n</EM
>; this tells clients to
contact the server on port 6000+<em class="emphasis">n</EM
> on machine
<em class="emphasis">hostname</EM
>.</P
><p class="para">Sometimes such machines actually have multiple display/keyboard/mouse
setups, but more often the multiple servers are
<em class="emphasis">virtual</EM
> servers for some remote X terminal. X11
is a very verbose, high-bandwidth protocol; it doesn't run well over
dial-up links. One of the solutions that's been adopted (for example,
by <span class="acronym">NCD</SPAN
>'s <em class="emphasis">XRemote</EM
> package) is
to run a virtual X11 server on a well-connected machine (for example,
linked by Ethernet to the machines the client programs are running
on), and then to speak some other, more frugal protocol over the slow
link between this virtual server and the real X terminal. Every
machine running X11 will have a server at port 6000. A few will have
servers at 6000 and 6001. Only a very few machines will have more than
that.</P
><p class="para">Thus, to block access to all these servers, assuming that you can't do
start-of-connection filtering, you need to block access to ports 6000
through 6000+<em class="emphasis">n</EM
>, where <em class="emphasis">n</EM
> is
some undetermined number. You don't want to make
<em class="emphasis">n</EM
> too small, because that might expose some of
the virtual X11 servers to attack. On the other hand, you don't want
to make it too big, either, because you're blocking ports in the range
of random ports that could be used by other application clients. You
don't want to keep another protocol's client (e.g., Telnet or
<span class="acronym">FTP</SPAN
>) from working simply because it happened to
pick as its random client port a port blocked to prevent X11 access.</P
><p class="para">You do have one thing going for you: the way most operating systems
allocate such random ports. Generally, when a client
application asks the operating system to allocate a random port for its
use, the kernel allocates the next available port after the last one
allocated (wrapping around to the beginning of the port number space
when necessary). If a client happens to grab a port blocked because of
X11, the client will fail. If the user tries to run the client again a
few times, the client will get a new port each time, and will eventually
succeed when the port allocated moves beyond the blocked range.</P
><p class="para">A common approach (again, assuming that you can't 
do start-of-connection filtering to block external connections to internal
servers) is to block, say, four ports (ports 6000 through 6003) on all
hosts, and more ports on hosts where you know or suspect people will run
lots of virtual X11 servers, e.g., the hosts people dial in to
from their X terminals at home. A more straightforward approach is to
use proxying to direct connections to a bastion host that is not running
a window system. It can make outbound connections on any port without
worrying about hitting the blocked range, because it doesn't need a
blocked range.</P
><p class="para">What should you do on a machine where you've blocked a large range of
ports (because of the potential for many X11 servers on that machine)? 
If you have problems with clients of other protocols because of the
blocked ports, you could run a simple program to keep the kernel's
&quot;next port&quot; assignment out of the blocked range. The
program would simply need to ask the kernel for a random port, and if
the port it was assigned was in the blocked range, keep asking for more
random ports until the ports being assigned were no longer in the
blocked range. The program would then need to perform this check every
minute or so. Most sites will choose to either avoid the problem
altogether with proxying, or ignore the problem, rather than going to
this length to deal with it, but if you have a server that must provide
heavily used Internet client access and multiple X servers, it may be
worth it to you.</P
><p class="para">Some vendors provide modified or enhanced X11 servers with somewhat
different characteristics; for example, Sun's OpenWindows server listens
at both port 6000 (for X11) and port 2000 (for Sun's older
NeWS window system protocol), with second servers at ports
6001 and 2001, and so on.</P
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Direc-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Pro-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">ACK</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">tion</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tocol</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Set</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Notes</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">6000+<em class="emphasis">n</EM
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[52]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming X11 connection to <em class="emphasis">n</EM
>th server, client to
server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">6000+<em class="emphasis">n</EM
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming X11 connection to <em class="emphasis">n</EM
>th server, server to
client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">6000+<em class="emphasis">n</EM
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[52]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing X11 connection to <em class="emphasis">n</EM
>th server, client to
server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">6000+<em class="emphasis">n</EM
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing X11 connection to <em class="emphasis">n</EM
>th server, server to
client</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[52] <span class="acronym">ACK</SPAN
> is not set on the first packet of this type
(establishing connection) but will be set on the rest.</P
></BLOCKQUOTE
><a class="indexterm" name="AUTOID-16555"></A
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-58">8.16.2 Summary of X11 Recommendations</A
></H3
><ul class="itemizedlist"><li class="listitem"><p class="para">Do not allow clients on the Internet to connect to X11 servers on
your internal network. If you have to, use an X11 proxy server (such as
the one in the <span class="acronym">TIS FWTK</SPAN
>) running on a bastion host.</P
></LI
><li class="listitem"><p class="para">If you cannot use start-of-connection filters, blocking X11 may
block other connections. You will need to use proxying or special
programs if you have large numbers of X11 servers on the same machine.</P
></LI
></UL
><a class="indexterm" name="AUTOID-16564"></A
><a class="indexterm" name="AUTOID-16565"></A
><a class="indexterm" name="AUTOID-16566"></A
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_15.htm#FIRE-08-S2-55" title="8.15 Network Information Service/Yellow Pages (NIS/YP)"><img src="../gifs/txtpreva.gif" alt="Previous: 8.15 Network Information Service/Yellow Pages (NIS/YP)" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Building Internet Firewalls"><img src="../gifs/txthome.gif" alt="Building Internet Firewalls" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_17.htm#FIRE-08-S2-62" title="8.17 Printing Protocols (lpr and lp)"><img src="../gifs/txtnexta.gif" alt="Next: 8.17 Printing Protocols (lpr and lp)" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">8.15 Network Information Service/Yellow Pages (NIS/YP)</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_a.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">8.17 Printing Protocols (lpr and lp)</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
