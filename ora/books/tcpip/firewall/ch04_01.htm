<html><head>
<title>[Chapter 4] Firewall Design</TITLE>
<meta name="DC.title" content="Building Internet Firewalls"><meta name="DC.creator" content="D. Brent Chapman &amp; Elizabeth D. Zwicky"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:12:51Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-124-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="part02.htm" title="II. Building Firewalls"><link rel="prev" href="part02.htm" title="II. Building Firewalls"><link rel="next" href="ch04_02.htm#FIRE-04-S3-4" title="4.2 Firewall Architectures"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Building Internet Firewalls" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Building Internet Firewalls"><area shape="RECT" coords="467,0,514,18" href="../search/fsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="PART" href="part02.htm" title="II. Building Firewalls"><img src="../gifs/txtpreva.gif" alt="Previous: II. Building Firewalls" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 4</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch04_02.htm#FIRE-04-S3-4" title="4.2 Firewall Architectures"><img src="../gifs/txtnexta.gif" alt="Next: 4.2 Firewall Architectures" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="CHAPTER"><h1 class="chapter"><a class="title" name="FIRE-04-CHP">4. Firewall Design</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="SECT1" href="#FIRE-04-S1-1" title="4.1 Some Firewall Definitions">Some Firewall Definitions</A
><br><a class="SECT1" href="ch04_02.htm#FIRE-04-S3-4" title="4.2 Firewall Architectures">Firewall Architectures</A
><br><a class="SECT1" href="ch04_03.htm#FIRE-04-S2-14" title="4.3 Variations on Firewall Architectures">Variations on Firewall
Architectures</A
><br><a class="SECT1" href="ch04_04.htm#FIRE-04-S2-18" title="4.4 Internal Firewalls">Internal Firewalls</A
><br><a class="SECT1" href="ch04_05.htm" title="4.5 What the Future Holds">What the Future Holds</A
></P
><p></P
></DIV
><p class="para"><a class="indexterm" name="CH04FWDESIGN"></A
>In <a class="xref" href="ch01_01.htm" title="Why Internet Firewalls?">Chapter 1, <cite class="chapter">Why Internet Firewalls?</CITE
></A
>, we introduced Internet firewalls and
summarized what they can and cannot do to improve network
security. In this chapter, we present major firewalls concepts. What
are the terms you will hear in discussions of Internet firewalls? What
types of firewall architectures are used at sites today? What are the
components that can be put together to build these common firewall
architectures? In the remaining chapters of this book, we'll describe
these components and architectures in detail.</P
><div class="sect1"><h2 class="sect1"><a class="title" name="FIRE-04-S1-1">4.1 Some Firewall Definitions</A
></H2
><p class="para">You may be familiar with some of the firewall terms listed below, and
some may be new to you. Some may seem familiar, but they may be used in
a way that is slightly different from what you're accustomed to (though
we try to use terms that are as standard as possible). 
Unfortunately, there is no completely consistent terminology for
firewall architectures and components. Different people use terms in
different&nbsp;- or, worse still, conflicting&nbsp;- ways. Also, these same
terms sometimes have other meanings in other networking fields; the
definitions below are for a firewalls context.</P
><p class="para">These are very basic definitions; we describe these terms in
greater detail elsewhere.

<dl class="variablelist"><dt class="term"><em class="emphasis">Firewall</EM
></DT
><dd class="listitem"><p class="para">A component or set of components that
restricts access between a protected network and the Internet, or
between other sets of networks.</P
></DD
><dt class="term"><em class="emphasis">Host</EM
></DT
><dd class="listitem"><p class="para">A computer system attached to a network.</P
></DD
><dt class="term"><em class="emphasis">Bastion host</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-1640"></A
><a class="indexterm" name="AUTOID-1642"></A
>A computer system that must be
highly secured because it is vulnerable to attack, usually because it
is exposed to the Internet and is a main point of contact for users of
internal networks. It gets its name from the highly fortified
projections on the outer walls of medieval castles.[1]</P
><blockquote class="footnote"><p class="para">[1] Marcus Ranum, who is generally held responsible for the popularity of
this term in the firewalls professional community, says,
&quot;Bastions...overlook critical areas of defense, usually having
stronger walls, room for extra troops, and the occasional useful tub
of boiling hot oil for discouraging attackers.&quot;</P
></BLOCKQUOTE
></DD
><dt class="term"><em class="emphasis">Dual-homed host</EM
></DT
><dd class="listitem"><p class="para">A general-purpose computer system that has at least two network
interfaces (or homes)</P
></DD
><dt class="term"><em class="emphasis">Packet</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-1658"></A
>The fundamental unit of communication on the Internet.</P
></DD
><dt class="term"><em class="emphasis">Packet filtering</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-1665"></A
><a class="indexterm" name="AUTOID-1667"></A
>The action a device takes to selectively control the flow of data to
and from a network. Packet filters allow or block packets, usually
while routing them from one network to another (most often from the
Internet to an internal network, and vice versa). To accomplish packet
filtering, you set up a set of rules that specify what types of
packets (e.g., those to or from a particular <span class="acronym">IP</SPAN
>
address or port) are to be allowed and what types are to be
blocked. Packet filtering may occur in a router, in a bridge, or on an
individual host. It is sometimes known as
<em class="emphasis">screening</EM
>.[2]</P
><blockquote class="footnote"><p class="para">[2] Some networking literature (in particular, the <span class="acronym">BSD UNIX</SPAN
> release from Berkeley) uses the term &quot;packet
filtering&quot; to refer to something else entirely (selecting
certain packets off a network for analysis, as is done by the
<em class="emphasis">etherfind</EM
> or <em class="emphasis">tcpdump</EM
> programs).</P
></BLOCKQUOTE
></DD
><dt class="term"><em class="emphasis">Perimeter network</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-1682"></A
><a class="indexterm" name="AUTOID-1684"></A
><a class="indexterm" name="AUTOID-1687"></A
><a class="indexterm" name="AUTOID-1689"></A
>A network added between a
protected network and an external network, in order to provide an
additional layer of security. A perimeter network is sometimes called
a <em class="emphasis">DMZ</EM
>, which stands for <em class="emphasis">De-Militarized
Zone</EM
> (named after the zone separating North and South
Korea).</P
></DD
><dt class="term"><em class="emphasis">Proxy server</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-1698"></A
>A program that deals with external
servers on behalf of internal clients. Proxy clients talk to proxy
servers, which relay approved client requests on to real servers, and
relay answers back to clients.</P
></DD
></DL
></P
><p class="para">The next few sections briefly describe packet filtering and proxy
services, two major approaches used to build firewalls today.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-04-S2-2">4.1.1 Packet Filtering</A
></H3
><p class="para"><a class="indexterm" name="CH04PACKFILT"></A
>Packet filtering systems route packets betweeen internal and external
hosts, but they do it selectively. They allow or block certain types
of packets in a way that reflects a site's own security policy as
shown in <a class="xref" href="#FIRE-04-FIG-1" title="Using a screening router to do packet filtering">Figure 4.1</A
>. The type of router used in a
packet filtering firewall is known as a <em class="emphasis">screening
router</EM
>.<a class="indexterm" name="CH04SCREENROUTE"></A
></P
><h4 class="figure"><a class="title" name="FIRE-04-FIG-1">Figure 4.1: Using a screening router to do packet filtering</A
></H4
><img class="graphic" src="figs/fire0401.gif" alt="Figure 4.1"><p class="para">As we discuss in <a class="xref" href="ch06_01.htm" title="Packet Filtering">Chapter 6, <cite class="chapter">Packet Filtering</CITE
></A
>, every packet has a set
of headers containing certain information. The main information is:

<ul class="itemizedlist"><li class="listitem"><p class="para"><span class="acronym">IP</SPAN
> source address</P
></LI
><li class="listitem"><p class="para"><span class="acronym">IP</SPAN
> destination address</P
></LI
><li class="listitem"><p class="para">Protocol (whether the packet is a <span class="acronym">TCP</SPAN
>,
<span class="acronym">UDP</SPAN
>, or <span class="acronym">ICMP</SPAN
> packet)</P
></LI
><li class="listitem"><p class="para"><span class="acronym">TCP</SPAN
> or <span class="acronym">UDP</SPAN
> source port</P
></LI
><li class="listitem"><p class="para"><span class="acronym">TCP</SPAN
> or <span class="acronym">UDP</SPAN
> destination port</P
></LI
><li class="listitem"><p class="para"><span class="acronym">ICMP</SPAN
> message type</P
></LI
></UL
></P
><p class="para">In addition, the router knows things about the packet that aren't
reflected in the packet headers, such as:

<ul class="itemizedlist"><li class="listitem"><p class="para">The interface the packet arrives on</P
></LI
><li class="listitem"><p class="para">The interface the packet will go out on</P
></LI
></UL
></P
><p class="para">The fact that servers for particular Internet services reside at
certain port numbers lets the router block or allow certain types of
connections simply by specifying the appropriate port number (e.g.,
<span class="acronym">TCP</SPAN
> port 23 for Telnet connections) in the set of
rules specified for packet filtering. (<a class="xref" href="ch06_01.htm" title="Packet Filtering">Chapter 6</A
>
describes in detail how you construct these rules.)</P
><p class="para">Here are some examples of ways in which you might program a screening
router to selectively route packets to or from your site:

<ul class="itemizedlist"><li class="listitem"><p class="para">Block all incoming connections from systems outside
the internal network, except for incoming <span class="acronym">SMTP</SPAN
>
connections (so that you can receive email).</P
></LI
><li class="listitem"><p class="para">Block all connections to or from certain systems you distrust.</P
></LI
><li class="listitem"><p class="para">Allow email and <span class="acronym">FTP</SPAN
> services, but block dangerous
services like <span class="acronym">TFTP</SPAN
>, the X Window System,
<span class="acronym">RPC</SPAN
>, and the &quot;r&quot; services
(<em class="emphasis">rlogin</EM
>, <em class="emphasis">rsh</EM
>,
<em class="emphasis">rcp</EM
>, etc.).</P
></LI
></UL
></P
><p class="para">To understand how packet filtering works, let's look at the difference
between an ordinary router and a screening router.</P
><p class="para">An ordinary router simply looks at the destination address of each
packet and picks the best way it knows to send that packet towards that
destination. The decision about how to handle the packet is based
solely on its destination. There are two possibilities: the
router knows how to send the packet towards its destination, and it
does so; or the router does not know how to send the packet towards its
destination, and it returns the packet, via an ICMP &quot;destination
unreachable&quot; message, to its source.</P
><p class="para">A screening router, on the other hand, looks at packets more closely. 
In addition to determining whether or not it <em class="emphasis">can</EM
>
route a packet towards its destination, a screening router also
determines whether or not it <em class="emphasis">should</EM
>. 
&quot;Should&quot; or &quot;should not&quot; are determined by the
site's security policy, which the screening router has been configured
to enforce.</P
><p class="para">Although it is possible for only a screening router to sit between an
internal network and the Internet, as shown in <a class="xref" href="#FIRE-04-FIG-1" title="Using a screening router to do packet filtering">Figure 4.1</A
>, this places an enormous responsibility on the
screening router. Not only does it need to perform all routing and
routing decision-making, but it is the only protecting system; if its
security fails (or crumbles under attack), the internal network is
exposed. Furthermore, a straightforward screening router can't modify
services. A screening router can permit or deny a service, but it can't
protect individual operations within a service. If a desirable service
has insecure operations, or if the service is normally provided with an
insecure server, packet filtering alone can't protect it.</P
><p class="para">A number of other architectures have evolved to provide additional
security in packet filtering firewall implementations. Later in this
chapter, we show the way that additional routers, bastion hosts, and
perimeter networks may be added to the firewall implementations in the
screened host and screened subnet architectures.<a class="indexterm" name="AUTOID-1770"></A
><a class="indexterm" name="AUTOID-1771"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-04-S2-1">4.1.2 Proxy Services</A
></H3
><p class="para"><a class="indexterm" name="CH04PROXY"></A
><a class="indexterm" name="AUTOID-1777"></A
><a class="indexterm" name="AUTOID-1781"></A
>Proxy services are specialized application or server programs that run
on a firewall host: either a dual-homed host with an interface on the
internal network and one on the external network, or some other
bastion host that has access to the Internet and is accessible from
the internal machines. These programs take users' requests for
Internet services (such as <span class="acronym">FTP</SPAN
> and Telnet) and
forward them, as appropriate according to the site's security policy,
to the actual services. The proxies provide replacement
connections and act as gateways to the services. For this reason,
proxies are sometimes known as <em class="emphasis">application-level
gateways</EM
>.[3]</P
><blockquote class="footnote"><p class="para">[3] Firewall terminologies differ. Whereas we use the term <em class="emphasis">proxy
service</EM
> to encompass the entire proxy approach, other
authors refer to <em class="emphasis">application-level gateways</EM
> and
<em class="emphasis">circuit-level gateways</EM
>. Although there are small
differences between the meanings of these various terms, which we'll
explore in <a class="xref" href="ch07_01.htm" title="Proxy Systems">Chapter 7, <cite class="chapter">Proxy Systems</CITE
></A
>, in general our discussion of
proxies refers to the same type of technology other authors mean when
they refer to these gateway systems.</P
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-1794"></A
>Proxy services sit, more or less transparently, between a user on the
inside (on the internal network) and a service on the outside (on the
Internet).  Instead of talking to each other directly, each talks to a
proxy. Proxies handle all the communication between users and Internet
services behind the scenes.</P
><p class="para">Transparency is the major benefit of proxy services. It's essentially
smoke and mirrors. To the user, a proxy server presents the illusion
that the user is dealing directly with the real server. To the real
server, the proxy server presents the illusion that the real server is
dealing directly with a user on the proxy host (as opposed to the user's
real host).</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> Proxy services are effective only when they're used in conjunction with
a mechanism that restricts direct communications between the internal
and external hosts. Dual-homed hosts and packet filtering are two such
mechanisms. If internal hosts are able to communicate directly with
external hosts, there's no need for users to use proxy services, and so
(in general) they won't. Such a bypass probably isn't in accordance
with your security policy.</P
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-1800"></A
>How do proxy services work? Let's look at the simplest case, where we
add proxy services to a dual-homed host. (We'll describe these hosts
in some detail in &quot;Dual-Homed Host Architectures&quot; later in this chapter.)</P
><p class="para"><a class="indexterm" name="AUTOID-1805"></A
><a class="indexterm" name="AUTOID-1808"></A
>As <a class="xref" href="#FIRE-04-FIG-2" title="Using proxy services with a dual-homed host">Figure 4.2</A
> shows, a proxy service requires two
components: a proxy server and a proxy client. In this situation, the
<em class="emphasis">proxy server</EM
> runs on the dual-homed host. A
<em class="emphasis">proxy client</EM
> is a special version of a normal
client program (i.e., a Telnet or <span class="acronym">FTP</SPAN
> client) that
talks to the proxy server rather than to the &quot;real&quot; server
out on the Internet; in addition, if users are taught special
procedures to follow, normal client programs can often be
used as proxy clients.  The proxy server evaluates requests from the
proxy client, and decides which to approve and which to deny. If a
request is approved, the proxy server contacts the real server on
behalf of the client (thus the term &quot;proxy&quot;), and proceeds
to relay requests from the proxy client to the real server, and
responses from the real server to the proxy client.</P
><h4 class="figure"><a class="title" name="FIRE-04-FIG-2">Figure 4.2: Using proxy services with a dual-homed host</A
></H4
><img class="graphic" src="figs/fire0402.gif" alt="Figure 4.2"><p class="para">In some proxy systems, instead of installing custom client proxy
software, you'll use standard software, but set up custom user
procedures for using it. (We'll describe how this works in <a class="xref" href="ch07_01.htm" title="Proxy Systems">Chapter 7</A
>.)</P
><p class="para">A proxy service is a software solution, not a firewall architecture per
se. You can use proxy services in conjunction with any of the firewall
architectures described in the section called &quot;Firewall Architectures&quot;
below.</P
><p class="para">The proxy server doesn't always just forward users' requests on to the
real Internet services. The proxy server can control what users do,
because it can make decisions about the requests it processes.
Depending on your site's security policy, requests might be allowed or
refused. For example, the <span class="acronym">FTP</SPAN
> proxy might refuse to
let users export files, or it might allow users to import files only
from certain sites.  More sophisticated proxy services might allow
different capabilities to different hosts, rather than enforcing the
same restrictions on all hosts.</P
><p class="para">There is some excellent software available for
proxying. <span class="acronym">SOCKS</SPAN
> is a proxy construction toolkit,
designed to make it easy to convert existing client/server
applications into proxy versions of those same applications. The
Trusted Information Systems Internet Firewall Toolkit (<span class="acronym">TIS FWTK</SPAN
>) includes proxy servers for a number of common Internet
protocols, including Telnet, <span class="acronym">FTP</SPAN
>,
<span class="acronym">HTTP</SPAN
>, <em class="emphasis">rlogin</EM
>, X11, and others;
these proxy servers are designed to be used in conjunction with custom
user procedures. See the discussion of these packages in <a class="xref" href="ch07_01.htm" title="Proxy Systems">Chapter 7</A
>.</P
><p class="para">Many standard client and server programs, both commercial and freely
available, now come equipped with their own proxying capabilities, or
with support for generic proxy systems like <span class="acronym">SOCKS</SPAN
>.
These capabilities can be enabled at run time or compile time.<a class="indexterm" name="AUTOID-1832"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-04-S2-3">4.1.3 Using a Combination of Techniques and
Technologies</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-1836"></A
>The &quot;right solution&quot; to building a firewall is seldom a
single technique; it's usually a carefully crafted combination of
techniques to solve different problems. Which problems you need to
solve depend on what services you want to provide your users and what
level of risk you're willing to accept. Which techniques you use to
solve those problems depend on how much time, money, and expertise you
have available.</P
><p class="para">Some protocols (e.g., Telnet and <span class="acronym">SMTP</SPAN
>) can be more
effectively handled with packet filtering. Others (e.g.,
<span class="acronym">FTP</SPAN
>, Archie, Gopher, and <span class="acronym">WWW</SPAN
>)
are more effectively handled with proxies. (<a class="xref" href="ch08_01.htm" title="Configuring Internet Services">Chapter 8, <cite class="chapter">Configuring Internet Services</CITE
></A
>
describes how to handle specific services in a firewall environment.)
Most firewalls use a combination of proxying and packet
filtering.</P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="PART" href="part02.htm" title="II. Building Firewalls"><img src="../gifs/txtpreva.gif" alt="Previous: II. Building Firewalls" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Building Internet Firewalls"><img src="../gifs/txthome.gif" alt="Building Internet Firewalls" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch04_02.htm#FIRE-04-S3-4" title="4.2 Firewall Architectures"><img src="../gifs/txtnexta.gif" alt="Next: 4.2 Firewall Architectures" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">II. Building Firewalls</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_a.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">4.2 Firewall Architectures</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
