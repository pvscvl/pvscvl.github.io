<html><head>
<title>[Chapter 8] 8.9 Real-Time Conferencing Services</TITLE>
<meta name="DC.title" content="Building Internet Firewalls"><meta name="DC.creator" content="D. Brent Chapman &amp; Elizabeth D. Zwicky"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:25:08Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-124-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch08_01.htm" title="8. Configuring Internet Services"><link rel="prev" href="ch08_08.htm#FIRE-08-S3-55" title="8.8 Information Lookup Services"><link rel="next" href="ch08_10.htm#FIRE-08-S2-34" title="8.10 Domain Name System (DNS)"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Building Internet Firewalls" usemap="#srchmap" border="0"></H1
><map index.htmlname="srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Building Internet Firewalls"><area shape="RECT" coords="467,0,514,18" href="../search/fsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_08.htm#FIRE-08-S3-55" title="8.8 Information Lookup Services"><img src="../gifs/txtpreva.gif" alt="Previous: 8.8 Information Lookup Services" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 8<br>Configuring Internet Services</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_10.htm#FIRE-08-S2-34" title="8.10 Domain Name System (DNS)"><img src="../gifs/txtnexta.gif" alt="Next: 8.10 Domain Name System (DNS)" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="FIRE-08-S1-9">8.9 Real-Time Conferencing Services</A
></H2
><p class="para"><a class="indexterm" name="CH08CONFRTCS"></A
><a class="indexterm" name="CH08SERVINTRTC"></A
><a class="indexterm" name="CH08CSRT"></A
><a class="indexterm" name="AUTOID-12461"></A
>There are several services available on the Internet that allow people
to interact in real time on the Internet, including
<em class="emphasis">talk</EM
>, <span class="acronym">IRC</SPAN
>, and various
services provided over the <span class="acronym">MBONE</SPAN
>.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-29">8.9.1 talk</A
></H3
><p class="para"><a class="indexterm" name="CH08TALK"></A
><em class="emphasis">talk</EM
> is a text-based real-time two-person
conferencing system; it allows two people to establish a
&quot;chat&quot; session with each other. Each of their screens gets
split into two sections; what one person types appears in one section;
what the other person types appears in the other section.</P
><p class="para"><em class="emphasis">talk</EM
> is very convoluted in that it uses
<span class="acronym">UDP</SPAN
> to negotiate the connections between the two
sites and then uses <span class="acronym">TCP</SPAN
> to actually move the data
back and forth between the participants. <span class="acronym">UDP</SPAN
> is
used between the calling client and the answering server, and again
between the answering client and the calling server;
<span class="acronym">TCP</SPAN
> is then used between the two clients.</P
><p class="para">To further complicate matters, there are two incompatible versions of
the <em class="emphasis">talk</EM
> protocol, commonly referred to as either
<em class="emphasis">talk</EM
> and <em class="emphasis">ntalk</EM
> (for
&quot;new talk&quot;) or <em class="emphasis">otalk</EM
> (for &quot;old
talk&quot;) and <em class="emphasis">talk</EM
>, depending on who you
ask. The earlier version depended on bytes being in a certain order in
memory, and basically worked only between machines of the same
<span class="acronym">CPU</SPAN
> type. The later version fixes this problem, but
is incompatible with the earlier version.</P
><p class="para">The calling client contacts the answering server via
<span class="acronym">UDP</SPAN
> to announce the call. The answering server
tells the user being called that someone is requesting a
<em class="emphasis">talk</EM
> session and how he should respond if he 
wishes to accept the call. While waiting for the user to respond, the
calling client also contacts the calling server to say that it's
expecting an incoming call and to specify what <span class="acronym">TCP</SPAN
>
port it wishes to use for that call (somewhat like calling your
secretary to say that you're expecting a call back from someone, and
that it should be put through to the extension you're currently
at). When the answering user accepts, that user's client (the
answering client) contacts the calling server via
<span class="acronym">UDP</SPAN
> to find out what port the calling client is
waiting on; the answering client then contacts the calling client on
that <span class="acronym">TCP</SPAN
> port. <a class="xref" href="#FIRE-08-FIG-11" title="How talk works">Figure 8.11</A
>
shows how <em class="emphasis">talk</EM
> works.</P
><h4 class="figure"><a class="title" name="FIRE-08-FIG-11">Figure 8.11: How talk works</A
></H4
><img class="graphic" src="figs/fire0811.gif" alt="Figure 8.11"><p class="para">Because of the incompatible <em class="emphasis">talk</EM
> protocols,
<em class="emphasis">talk</EM
> fails relatively often even between sites
that do no packet filtering, or between machines of different types
within the same site. <em class="emphasis">talk</EM
> clients and servers
are generally provided only on <span class="acronym">UNIX</SPAN
> machines.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-61">8.9.1.1 Packet filtering characteristics of
talk</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-12505"></A
><em class="emphasis">talk</EM
> servers (which broker connections between
<em class="emphasis">talk</EM
> clients, and then get out of the way) use
either <span class="acronym">UDP</SPAN
> port 517 (for old versions of
<em class="emphasis">talk</EM
>) or <span class="acronym">UDP</SPAN
> port 518 (for
newer versions). <em class="emphasis">talk</EM
> clients use
<span class="acronym">UDP</SPAN
> ports above 1023 to interact with
<em class="emphasis">talk</EM
> servers. <em class="emphasis">talk</EM
> clients
also use <span class="acronym">TCP</SPAN
> ports above 1023 to interact with each
other. This means that, in order to allow <em class="emphasis">talk</EM
>
across your firewall, you'd have to allow <span class="acronym">TCP</SPAN
>
connections where both ends are using arbitrary ports above 1023;
this isn't safe because of vulnerabilities like X11 servers that use
ports above 1023.</P
><p class="para"></P
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Direc-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Pro-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">ACK</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">tion</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tocol</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Set</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Notes</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">517</P
><p class="para">518[30]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[31]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">External client contacting internal server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">517</P
><p class="para">518[30] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[31]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal server answering external client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">517</P
><p class="para">518
[30] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[31]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal client contacting external server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">517</P
><p class="para">518
[30] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[31]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">External server answering internal client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[32] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal client communicating with external client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[32] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">External client communicating with internal client</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[30] Old versions of <em class="emphasis">talk</EM
> use port 517; newer versions
use port 518.</P
><p class="para">[31] <span class="acronym">UDP</SPAN
> packets do not have ACK bits.</P
><p class="para">[32] <span class="acronym">ACK</SPAN
> is not set on the first packet of this type
(establishing connection) but will be set on the rest.</P
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-62">8.9.1.2 Proxying characteristics of talk</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-12683"></A
>There are no available proxies for <em class="emphasis">talk</EM
>. It would
theoretically be possible to write one. Because
<em class="emphasis">talk</EM
> involves internal and external clients
simultaneously, it would almost have to be a modified-procedure proxy
server. (No generic server would handle it, in any case, because it
involves both <span class="acronym">TCP</SPAN
> and <span class="acronym">UDP</SPAN
>.)
Given the considerable difficulty of writing a
<em class="emphasis">talk</EM
> proxy, and the extreme fragility of the
process, it's unlikely that one will become available any time soon.
It's more likely that <em class="emphasis">talk</EM
> will be abandoned
altogether for cross-Internet conversations, in favor of something
like <span class="acronym">IRC</SPAN
>, which we describe in the next section.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-63">8.9.1.3 Summary of talk
recommendations</A
></H4
><ul class="itemizedlist"><li class="listitem"><p class="para">It is impossible to safely allow <em class="emphasis">talk</EM
> through
filters, or to proxy it, so you can't allow <em class="emphasis">talk</EM
>
between the Internet and your internal machines. If, for some reason,
you absolutely must allow <em class="emphasis">talk</EM
>, you will need to
put a victim machine on your perimeter net that is untrusted and has
no confidential data, and allow users to log into it and run
<em class="emphasis">talk</EM
> from there.</P
></LI
></UL
><a class="indexterm" name="AUTOID-12703"></A
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-30">8.9.2 Internet Relay Chat
(<span class="acronym">IRC</SPAN
>)</A
></H3
><p class="para"><a class="indexterm" name="CH08IRC"></A
><a class="indexterm" name="CH08CONFIRC"></A
><a class="indexterm" name="AUTOID-12714"></A
><span class="acronym">IRC</SPAN
> is a multiuser text-based real-time
conferencing system. Users run <span class="acronym">IRC</SPAN
> client programs
to connect to <span class="acronym">IRC</SPAN
> servers. <span class="acronym">IRC</SPAN
>
servers are arranged in a spanning tree, and talk to each other to
pass messages to all of the clients. <a class="xref" href="#FIRE-08-FIG-12" title="IRC server tree">Figure 8.12</A
>
shows how the <span class="acronym">IRC</SPAN
> servers are connected. Clients
might connect to any of these servers.</P
><p class="para"><a class="indexterm" name="CH08SECIRC"></A
>Most of the security problems with <span class="acronym">IRC</SPAN
> are related
to who uses it and how, not to the protocol per se. As we mentioned in
<a class="xref" href="ch02_01.htm" title="Internet Services">Chapter 2</A
>, many clients allow servers far more
access to local resources (files, processes, programs, etc.) than they
should, and a malicious server can wreak havoc with a weak or poorly
configured client. Further, some of the frequent users of
<span class="acronym">IRC</SPAN
> have a nasty habit of persuading new users to
naively run commands which those users think will do neat things on
their systems, but which instead trash these systems.</P
><p class="para">Many well-intentioned <span class="acronym">IRC</SPAN
> users are simply naive
about security. For example, they think it's really neat to distribute
software by putting up a little server on their machine, and advising
people to &quot;telnet myhost myport | sh&quot; to have the
software installed for them, which allows external users to install
the software without interaction from the user, but would also let
them run any command whatsoever on the internal user's host as that
user. It's close to impossible to distinguish
hostile people from naive ones,
and users should be advised to never issue any command, in or out of
their <span class="acronym">IRC</SPAN
> client, just because somebody advised
them to over <span class="acronym">IRC</SPAN
>.</P
><p class="para">Although these problems are widespread on <span class="acronym">IRC</SPAN
>, IRC
is also a useful and popular way for people to talk to each
other. Text-based, multiuser, real-time communication can be handy; it
has many of the advantages of teleconferencing for a much lower price
tag.</P
><p class="para">You should be able to safely run an <span class="acronym">IRC</SPAN
> server in a
restricted (<em class="emphasis">chroot</EM
>'ed) 
environment on a bastion host, but it would be
somewhat bizarre to run a server without having any local clients that
could access it, and a server that could access the Internet would
probably not be safe for clients to talk to. You may want to run one
inside your firewall for private <span class="acronym">IRC</SPAN
> conferencing.</P
><p class="para"><a class="indexterm" name="AUTOID-12742"></A
><a class="indexterm" name="AUTOID-12744"></A
>Many <span class="acronym">IRC</SPAN
> clients support something called Direct
Client Connections (<span class="acronym">DCC</SPAN
>). <span class="acronym">DCC</SPAN
>
allows two <span class="acronym">IRC</SPAN
> clients to negotiate and establish a
direct <span class="acronym">TCP</SPAN
> connection between themselves, bypassing
all the servers except for the initial negotiation. <a class="xref" href="#FIRE-08-FIG-12" title="IRC server tree">Figure 8.12</A
> depicts the <span class="acronym">IRC</SPAN
> server
tree.</P
><h4 class="figure"><a class="title" name="FIRE-08-FIG-12">Figure 8.12: <span class="acronym">IRC</SPAN
> server tree</A
></H4
><img class="graphic" src="figs/fire0812.gif" alt="Figure 8.12"><a class="indexterm" name="AUTOID-12757"></A
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-64">8.9.2.1 Packet filtering characteristics of
<span class="acronym">IRC</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-12762"></A
><span class="acronym">IRC</SPAN
> is a <span class="acronym">TCP</SPAN
>-based
service. Servers generally listen for incoming connections (from both
clients and other servers) on port 6667, although some servers use
other port numbers. Clients (and servers contacting other servers) use
ports above 1023.</P
><p class="para">Clients use ports above 1023 to talk to other clients using
<span class="acronym">DCC</SPAN
>. To start, the calling client passes an
invitation to the called client through the normal
<span class="acronym">IRC</SPAN
> server channels. The invitation includes a
<span class="acronym">TCP</SPAN
> port number where the calling client is
listening for an incoming connection. The called client, if it chooses
to accept the invitation, opens a <span class="acronym">TCP</SPAN
> connection to
that port.</P
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Direc-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Pro-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">ACK</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">tion</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tocol</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Set</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Notes</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">6667</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[33]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">External client or server contacting internal server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">6667</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal server answering external client or server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">6667</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[33]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Internal client or server contacting external server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">6667</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">External server answering internal client or server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[33]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">DCC</SPAN
> connection requested by internal
client; external client answering 
invitation from internal client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">DCC</SPAN
> connection requested by internal client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[33]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">DCC</SPAN
> connection requested by external client; internal client answering invitation from external client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">DCC</SPAN
> connection requested by external client</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[33] <span class="acronym">ACK</SPAN
> is not set on the first packet of this type
(establishing connection) but will be set on the rest.</P
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-65">8.9.2.2 Proxying characteristics of
<span class="acronym">IRC</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-12961"></A
>Because of the spanning tree architecture, any <span class="acronym">IRC</SPAN
>
server serves as a proxy server. To configure <span class="acronym">IRC</SPAN
>
for proxying, simply put an <span class="acronym">IRC</SPAN
> server on the proxy
host and point your internal clients at it.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-66">8.9.2.3 Summary of <span class="acronym">IRC</SPAN
> recommendations</A
></H4
><ul class="itemizedlist"><li class="listitem"><p class="para">Although it's theoretically possible to proxy <span class="acronym">IRC</SPAN
>,
or to allow just <span class="acronym">IRC</SPAN
> through filters, it's probably
not a good idea, because of the weaknesses of the clients. The best
way to allow <span class="acronym">IRC</SPAN
> is to put an untrusted victim
machine with no confidential data on a perimeter
network and let users log into that machine to run
<span class="acronym">IRC</SPAN
>.</P
></LI
><li class="listitem"><p class="para">If you run an internal <span class="acronym">IRC</SPAN
> server, be sure it can't
contact or be contacted by external <span class="acronym">IRC</SPAN
> servers;
otherwise it will effectively proxy for your <span class="acronym">IRC</SPAN
>
clients and for attacks against them from the outside.</P
></LI
><li class="listitem"><p class="para"> If you do allow <span class="acronym">IRC</SPAN
> across your
firewall, you can't allow <span class="acronym">DCC</SPAN
> connections to be
requested by internal clients, because that would involve accepting
incoming <span class="acronym">TCP</SPAN
> connections from external clients to
any port above 1023 on the internal machines. You could allow internal
clients to establish <span class="acronym">DCC</SPAN
> connections requested by
external clients, however, if you're willing to let internal machines
talk to any <span class="acronym">TCP</SPAN
> port above 1023 on any external
machine. </P
></LI
></UL
><a class="indexterm" name="AUTOID-12990"></A
><a class="indexterm" name="AUTOID-12991"></A
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-31">8.9.3 The Multicast Backbone (<span class="acronym">MBONE</SPAN
>)</A
></H3
><p class="para"><a class="indexterm" name="CH08MBONE"></A
><a class="indexterm" name="CH08CONFMBONE"></A
><a class="indexterm" name="AUTOID-13002"></A
><a class="indexterm" name="AUTOID-13004"></A
><a class="indexterm" name="CH08M"></A
>Most network technologies provide a way for a sending station to address
a message to a particular receiving station: this is called
<em class="emphasis">unicasting</EM
>. Many network technologies also provide a way
for a sending station to address a message to all possible receiving
stations: this is called <em class="emphasis">broadcasting</EM
>. Some network
technologies also provide something in the middle, a way for a sending
station to address a message to a particular set of receiving stations,
without broadcasting the message to all stations: this is called
<em class="emphasis">multicasting</EM
>.</P
><p class="para">Multicasting is particularly useful when you're dealing with
high-bandwidth applications like audio and video conferencing. With
such applications, you may have a number of stations all receiving the
same stream of packets, and the stream may consume a significant
fraction of the available network bandwidth. If a given stream consumes
10% of your available network bandwidth (which is not uncommon), you
wouldn't want to unicast it to each interested host, because each of
these unicasts would consume another 10% of your bandwidth, limiting you
to 10 participating hosts, and that assumes that you did nothing else
with the network. You also wouldn't want to broadcast it to all hosts
unless all (or almost all) of your hosts were actually interested in the
stream, because it places a significant load on each host to process a
broadcast packet and then decide to ignore it.</P
><p class="para"><a class="indexterm" name="CH08IPM"></A
><a class="indexterm" name="AUTOID-13016"></A
><span class="acronym">IP</SPAN
> multicasting provides a way to send packets to
groups of <span class="acronym">IP</SPAN
> hosts. With <span class="acronym">IP</SPAN
>
multicasting, groups of hosts that wish to receive a particular type
of packet (e.g., a particular video stream) are assigned an
<span class="acronym">IP</SPAN
> multicast address they all share. An
<span class="acronym">IP</SPAN
> multicast address looks like a normal
<span class="acronym">IP</SPAN
> address in the range 224.0.0.0 through
239.255.255.255. <span class="acronym">IP</SPAN
> multicast addresses are only
used as destination addresses; they are never valid as source
addresses (multicast packets use the regular <span class="acronym">IP</SPAN
>
address of the sending host as their source address).</P
><p class="para">Multicast groups are somewhat like cable television channels. There
are a variety of channels (multicast groups) available, such as
<span class="acronym">HBO</SPAN
>, <span class="acronym">CNN</SPAN
>,
<span class="acronym">ESPN</SPAN
>, and <span class="acronym">MTV</SPAN
>, but most homes
(hosts) subscribe to only a few of the available channels. Some
multicast groups are permanent; that is, certain
addresses are reserved for certain uses, such as Internet Engineering
Task Force (<span class="acronym">IETF</SPAN
>) meetings, <span class="acronym">NASA</SPAN
>
select video feeds (whenever the space shuttle is in orbit), and so
on. Other multicast groups are transient: set up for a particular
purpose or event and then shut down when they are no longer needed, to
be reused for something else later on.</P
><p class="para">Multicasting is being used on the Internet today primarily for
real-time conferencing services, including video, audio, and
electronic whiteboard services. It's starting to be used for other
services as well, such as transmitting Usenet news
efficiently to a wide body of recipients.</P
><p class="para">Commercial products, such as routers and hosts, are just starting to
support multicasting. Some networking technologies such as 
Ethernet support multicast directly. You can send an Ethernet packet
of information to a magic Ethernet address on a given Ethernet
segment, and all hosts on that segment that are listening for that
Ethernet address will receive that packet. Other networking
technologies, e.g., point-to-point leased lines, don't support
multicast, so the effect has to be faked by turning a multicast packet
into a series of duplicate unicast packets, each addressed to one of
the multicast participants.</P
><p class="para"><a class="indexterm" name="CH08TUNNEL"></A
><a class="indexterm" name="AUTOID-13039"></A
><a class="indexterm" name="AUTOID-13041"></A
>Obviously, you want to limit the number of duplicate unicast packets
on these point-to-point leased lines, so a common approach to linking
two multicast-capable networks (such as Ethernets) over a unicast-only
network (such as a T1 leased line) is to create a
<em class="emphasis">tunnel</EM
> over the unicast network, with multicast
routers (often called <em class="emphasis">mrouters</EM
>) at either end of
the tunnel. These <em class="emphasis">mrouters</EM
> take multicast
<span class="acronym">IP</SPAN
> packets, encapsulate them into unicast
<span class="acronym">IP</SPAN
> packets, and send them (via regular
<span class="acronym">IP</SPAN
> unicast) through the tunnel to the
<em class="emphasis">mrouter</EM
> on the other end, which unencapsulates
them to turn them back into multicast <span class="acronym">IP</SPAN
>
packets. By creating a web of <em class="emphasis">mrouters</EM
> and
tunnels, you can create a virtual multicast network on top of a
unicast backbone.</P
><p class="para">The <span class="acronym">MBONE</SPAN
> is the ad hoc Multicast Backbone on the
Internet, and is just such a web of <em class="emphasis">mrouters</EM
> and
tunnels. Its participants are sites that are interested in using
<span class="acronym">IP</SPAN
> multicasting for a variety of services on the
Internet.</P
><p class="para"><a class="indexterm" name="AUTOID-13058"></A
><span class="acronym">IP</SPAN
> multicasting brings up several firewall
issues. If a site uses tunneling to take part in the
<span class="acronym">MBONE</SPAN
>, what do the packets for the tunnels look
like? What could be sent through the tunnels? If a site doesn't use
tunnels, but uses <span class="acronym">IP</SPAN
> multicasting directly, how
will the site's packet filtering system deal with it? Can
nonmulticast services (such as <span class="acronym">SMTP</SPAN
>,
<span class="acronym">NFS</SPAN
>, <span class="acronym">NIS/YP</SPAN
>, and so on) be
accessed by attackers via multicast, whether tunneled or not?</P
><p class="para"><span class="acronym">IP</SPAN
> multicast tunneling is currently done with
<span class="acronym">IP</SPAN
>-in-<span class="acronym">IP</SPAN
> encapsulation. That is,
a multicast <span class="acronym">IP</SPAN
> packet is encapsulated into a
regular <span class="acronym">IP</SPAN
> packet, in much the same way that a
<span class="acronym">TCP</SPAN
> or <span class="acronym">UDP</SPAN
> packet normally
is. Instead of the usual <span class="acronym">IP</SPAN
> packet containing a
<span class="acronym">UDP</SPAN
> packet, for example, you have an IP unicast
packet that contains an <span class="acronym">IP</SPAN
> multicast packet that,
in turn, contains a <span class="acronym">UDP</SPAN
> packet. Thus, if tunneled
multicast packets need to cross a packet filtering system, the system
needs to recognize <span class="acronym">IP</SPAN
>-in-<span class="acronym">IP</SPAN
>
packets, in much the same way that it recognizes
<span class="acronym">TCP</SPAN
>, <span class="acronym">UDP</SPAN
>, and
<span class="acronym">ICMP</SPAN
> packets. If your packet filtering system
doesn't recognize <span class="acronym">IP</SPAN
>-in-<span class="acronym">IP</SPAN
> by
name, but will allow you to specify protocol numbers instead, you need
to know that <span class="acronym">IP</SPAN
>-in-<span class="acronym">IP</SPAN
> is
protocol number 4 (for comparison, <span class="acronym">ICMP</SPAN
> is 1,
<span class="acronym">TCP</SPAN
> is 6, and <span class="acronym">UDP</SPAN
> is 17).</P
><p class="para"><span class="acronym">IP</SPAN
> multicast tunnels used to be done with
source-routed <span class="acronym">IP</SPAN
> packets, but this practice caused
a number of problems (not the least of which was upsetting folks who
had firewalls), and it is no longer recommended.</P
><p class="para">To prevent a multicast tunnel from being used as a back door into or
out of a network, the current publicly available
<em class="emphasis">mrouter</EM
> code will only accept multicast packets
through the tunnel; it won't accept unicast packets shoved through the
tunnel in an attempt to bypass your firewall. If you're using a
commercial multicast router, rather than the publicly available code
off the Internet, you should verify that it will behave in a similar
way.</P
><p class="para">If you have routers and a network topology that support multicast
directly, without tunnels, you still have to worry about how any
packet filtering system you use is going to cope with it. It shouldn't
be too difficult, though, because from a packet filtering point of
view, multicast packets just look like regular packets with somewhat
unusual destination addresses (in the range 224.0.0.0 through
239.255.255.255). Treat them just as you would anything else: block
them all by default and allow the ones you understand and want
to support. Keep in mind that each of these multicast addresses is
going to apply to multiple internal machines, and that if you're
accepting multicast packets from the outside world, then all of the
internal machines that are accepting those packets will have to be
protected against attack from the outside world&nbsp;- just as if you were
accepting any other packets directly from the outside world.</P
><p class="para">Even if your tunnel is restricted to only multicast packets, or if
you're using multicast directly without tunneling, there is still the
question of how your hosts will respond to multicast packets addressed
to regular ports, such as your <span class="acronym">NIS/YP</SPAN
> and
<span class="acronym">NFS</SPAN
> ports. Unfortunately, behavior varies from
operating system to operating system, and even from release to release
within the same operating system. If your operating system's code is
based on Release 3.3 or later of the &quot;<span class="acronym">IP</SPAN
>
Multicast Extensions for <span class="acronym">BSD</SPAN
>-Derived
<span class="acronym">UNIX</SPAN
> Systems&quot; from Xerox
<span class="acronym">PARC</SPAN
> and the University of Delaware, then your
system should be safe against these kinds of attacks. Unless you
installed the multicast extensions yourself, however, you could have a
very difficult time determining what your operating system's multicast
code is based on. (Your best bet is to ask your vendor, but don't be
surprised if it's difficult to find anybody who knows.)<a class="indexterm" name="AUTOID-13104"></A
><a class="indexterm" name="AUTOID-13105"></A
><a class="indexterm" name="AUTOID-13106"></A
><a class="indexterm" name="AUTOID-13107"></A
><a class="indexterm" name="AUTOID-13108"></A
><a class="indexterm" name="AUTOID-13109"></A
><a class="indexterm" name="AUTOID-13110"></A
><a class="indexterm" name="AUTOID-13111"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_08.htm#FIRE-08-S3-55" title="8.8 Information Lookup Services"><img src="../gifs/txtpreva.gif" alt="Previous: 8.8 Information Lookup Services" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Building Internet Firewalls"><img src="../gifs/txthome.gif" alt="Building Internet Firewalls" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_10.htm#FIRE-08-S2-34" title="8.10 Domain Name System (DNS)"><img src="../gifs/txtnexta.gif" alt="Next: 8.10 Domain Name System (DNS)" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">8.8 Information Lookup Services</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_a.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">8.10 Domain Name System (DNS)</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
