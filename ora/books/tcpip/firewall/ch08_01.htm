<html><head>
<title>[Chapter 8] Configuring Internet Services</TITLE>
<meta name="DC.title" content="Building Internet Firewalls"><meta name="DC.creator" content="D. Brent Chapman &amp; Elizabeth D. Zwicky"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:19:15Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-124-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="part02.htm" title="II. Building Firewalls"><link rel="prev" href="ch07_08.htm#FIRE-07-S2-18" title="7.8 What If You Can't Proxy?"><link rel="next" href="ch08_02.htm#FIRE-08-S3-15" title="8.2 File Transfer"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Building Internet Firewalls" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Building Internet Firewalls"><area shape="RECT" coords="467,0,514,18" href="../search/fsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_08.htm#FIRE-07-S2-18" title="7.8 What If You Can't Proxy?"><img src="../gifs/txtpreva.gif" alt="Previous: 7.8 What If You Can't Proxy?" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 8</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_02.htm#FIRE-08-S3-15" title="8.2 File Transfer"><img src="../gifs/txtnexta.gif" alt="Next: 8.2 File Transfer" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="CHAPTER"><h1 class="chapter"><a class="title" name="FIRE-08-CHP">8. Configuring Internet Services</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="SECT1" href="#FIRE-08-S1-1" title="8.1 Electronic Mail">Electronic Mail</A
><br><a class="SECT1" href="ch08_02.htm#FIRE-08-S3-15" title="8.2 File Transfer">File Transfer</A
><br><a class="SECT1" href="ch08_03.htm#FIRE-08-S2-8" title="8.3 Terminal Access (Telnet)">Terminal Access (Telnet)</A
><br><a class="SECT1" href="ch08_04.htm#FIRE-08-S2-11" title="8.4 Remote Command Execution">Remote Command Execution</A
><br><a class="SECT1" href="ch08_05.htm#FIRE-08-S2-14" title="8.5 Network News Transfer Protocol (NNTP)">Network News Transfer Protocol
(<span class="acronym">NNTP</SPAN
>)</A
><br><a class="SECT1" href="ch08_06.htm#FIRE-08-S2-20" title="8.6 World Wide Web (WWW) and HTTP">World Wide Web (<span class="acronym">WWW</SPAN
>) and <span class="acronym">HTTP</SPAN
></A
><br><a class="SECT1" href="ch08_07.htm#FIRE-08-S3-48" title="8.7 Other Information Services">Other Information Services</A
><br><a class="SECT1" href="ch08_08.htm#FIRE-08-S3-55" title="8.8 Information Lookup Services">Information Lookup Services</A
><br><a class="SECT1" href="ch08_09.htm#FIRE-08-S2-30" title="8.9 Real-Time Conferencing Services">Real-Time Conferencing Services</A
><br><a class="SECT1" href="ch08_10.htm#FIRE-08-S2-34" title="8.10 Domain Name System (DNS)">Domain Name System
(<span class="acronym">DNS</SPAN
>)</A
><br><a class="SECT1" href="ch08_11.htm#FIRE-08-S2-90" title="8.11 syslog">syslog</A
><br><a class="SECT1" href="ch08_12.htm#FIRE-08-S2-45" title="8.12 Network Management Services">Network Management Services</A
><br><a class="SECT1" href="ch08_13.htm#FIRE-08-S2-47" title="8.13 Network Time Protocol (NTP)">Network Time Protocol (<span class="acronym">NTP</SPAN
>)</A
><br><a class="SECT1" href="ch08_14.htm#FIRE-08-S2-53" title="8.14 Network File System (NFS)">Network File System
(<span class="acronym">NFS</SPAN
>)</A
><br><a class="SECT1" href="ch08_15.htm#FIRE-08-S2-55" title="8.15 Network Information Service/Yellow Pages (NIS/YP)">Network Information Service/Yellow
Pages (<span class="acronym">NIS/YP</SPAN
>)</A
><br><a class="SECT1" href="ch08_16.htm#FIRE-08-S2-57" title="8.16 X11 Window System">X11 Window System</A
><br><a class="SECT1" href="ch08_17.htm#FIRE-08-S2-62" title="8.17 Printing Protocols (lpr and lp)">Printing Protocols (lpr and lp)</A
><br><a class="SECT1" href="ch08_18.htm" title="8.18 Analyzing Other Protocols">Analyzing Other Protocols</A
></P
><p></P
></DIV
><p class="para"><a class="indexterm" name="CH08CONFINTSERV"></A
><a class="indexterm" name="CH08SERVINTCONF"></A
>This chapter describes the major Internet services: how they work, what
their packet filtering and proxying characteristics are, what their
security implications are with respect to firewalls, and how to make
them work with a firewall. The purpose of this chapter is to give you
the information that will help you decide which services to offer at
your site and to help you configure these services so they are as safe
and as functional as possible in your firewall environment.</P
><p class="para">This chapter is intended primarily as a reference; it's not necessarily
intended to be read in depth from start to finish, though you might
learn a lot of interesting stuff by skimming the whole thing.</P
><p class="para">This chapter assumes that you are familiar with what the various 
Internet services are
used for, and concentrates on explaining how to provide those services
through a firewall. For introductory information about what 
particular services are
used for, see <a class="xref" href="ch02_01.htm" title="Internet Services">Chapter 2, <cite class="chapter">Internet Services</CITE
></A
>.</P
><p class="para">Where we discuss the packet filtering characteristics of particular
services, we use the same abstract tabular form we used to show filtering
rules in <a class="xref" href="ch06_01.htm" title="Packet Filtering">Chapter 6, <cite class="chapter">Packet Filtering</CITE
></A
>. You'll need to translate
various abstractions like &quot;internal,&quot;
&quot;external,&quot; and so on to appropriate values for your
own configuration. See <a class="xref" href="ch06_01.htm" title="Packet Filtering">Chapter 6</A
> for 
an explanation of how you can translate abstract
rules to rules for particular products and
packages, as well as more information on packet filtering in general.</P
><p class="para">Where we discuss the proxy characteristics of particular services, we
rely on concepts and terminology discussed in <a class="xref" href="ch07_01.htm" title="Proxy Systems">Chapter 7, <cite class="chapter">Proxy Systems</CITE
></A
>.</P
><p class="para">Throughout this chapter, for each service, we'll show how its packets
flow through a firewall. The following figures
show the basic packet flow: when a service
runs directly (<a class="xref" href="#FIRE-08-FIG-1" title="A generic direct service">Figure 8.1</A
>) and when a proxy
service is used (<a class="xref" href="#FIRE-08-FIG-2" title=" A generic proxy service">Figure 8.2</A
>). The other figures in
this chapter show variations of these figures for individual services.
If there are no specific figures for a particular service, you can
assume that these generic figures are appropriate for that service.</P
><h4 class="figure"><a class="title" name="FIRE-08-FIG-1">Figure 8.1: A generic direct service</A
></H4
><img class="graphic" src="figs/fire0801.gif" alt="Figure 8.1"><h4 class="figure"><a class="title" name="FIRE-08-FIG-2">Figure 8.2:  A generic proxy service</A
></H4
><img class="graphic" src="figs/fire0802.gif" alt="Figure 8.2"><p class="para">You can find information on particular resources and tools (including
where to get them) in <a class="xref" href="appa_01.htm" title="Resources">Appendix A, <cite class="appendix">Resources</CITE
></A
> and <a class="xref" href="appb_01.htm" title="Tools">Appendix B, <cite class="appendix">Tools</CITE
></A
>.</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> <a class="indexterm" name="AUTOID-7736"></A
>We frequently characterize client port numbers as &quot;a random port
number above 1023.&quot; Some protocols specify this as a
requirement, and on others it is merely a convention (spread to other
platforms from <span class="acronym">UNIX</SPAN
>, where ports below 1024 cannot
be opened by regular users). Although it is theoretically allowable
for clients to use ports below 1024 on non-<span class="acronym">UNIX</SPAN
>
platforms, it is extraordinarily rare: rare enough that many
firewalls, including ones on major public sites that handle clients of
all types, rely on this distinction and report never having rejected a
connection because of it.</P
></BLOCKQUOTE
><div class="sect1"><h2 class="sect1"><a class="title" name="FIRE-08-S1-1">8.1 Electronic Mail</A
></H2
><p class="para"><a class="indexterm" name="CH08EMAILCONF"></A
><a class="indexterm" name="CH08CONFEMAIL"></A
>From a user's point of view, electronic mail is perhaps the most
fundamental Internet service. Unfortunately, it's also one of the most
vulnerable. Mail servers make extremely tempting targets, because they
accept arbitrary data from arbitrary external hosts.</P
><p class="para">A mail system has three parts, which may be implemented by
different programs or may be implemented by the same program, in any
combination. 

<ul class="itemizedlist"><li class="listitem"><p class="para">A server accepts mail from external hosts or sends it to external
hosts </P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7756"></A
>A delivery agent puts the mail in the correct mailbox on the local
host</P
></LI
><li class="listitem"><p class="para">A user agent lets the recipient read the mail and compose
outgoing mail</P
></LI
></UL
></P
><p class="para">Each of these parts is vulnerable for a different reason:

<ul class="itemizedlist"><li class="listitem"><p class="para">The server directly accepts commands (related to delivering mail)
from external hosts; for this reason, if the server isn't secure, it may
end up immediately giving an attacker all the access it has itself. </P
></LI
><li class="listitem"><p class="para">The delivery agent needs special permissions because it needs to
be able to write into every user's mailbox. Although the delivery agent
doesn't need to talk to the external world, if it can be subverted
somehow, the intruder obtains very broad access. </P
></LI
><li class="listitem"><p class="para">The user agent runs as one user, and it doesn't talk to the
external world, which limits its power and accessibility; however, it
can often run arbitrary other programs in response to the data received.</P
></LI
></UL
></P
><p class="para"><a class="indexterm" name="AUTOID-7769"></A
>Because it talks to the external world, the server is vulnerable to
attacks in the commands it gets from the outside world; these are called
<em class="emphasis">command channel attacks</EM
>. The delivery agent and the
user agent don't receive the commands directly, but they may be
vulnerable to dangers in the content of the mail message; these are<a class="indexterm" name="AUTOID-7772"></A
><a class="indexterm" name="AUTOID-7774"></A
><a class="indexterm" name="AUTOID-7777"></A
><a class="indexterm" name="AUTOID-7780"></A
>
called<em class="emphasis"> data-driven attacks</EM
>. In addition, any
program may be vulnerable to misuse by somebody who can control how it
is executed (what arguments are used, what user is running it, what its
data files are), through <em class="emphasis">command-line bugs</EM
>.</P
><p class="para"><a class="indexterm" name="AUTOID-7785"></A
><a class="indexterm" name="AUTOID-7788"></A
>The Morris worm used a command channel attack against
Sendmail; it issued a special
Sendmail debugging command that allowed it to
tell Sendmail to execute anything the intruder
liked.</P
><p class="para">Data-driven attacks can exploit the delivery agent, the user agent, or
the user. (The server generally pays no attention to the data.) For
example, on <span class="acronym">UNIX</SPAN
> machines, most versions of
Sendmail use <em class="emphasis">/bin/mail</EM
> as a
local delivery agent. <em class="emphasis">/bin/mail</EM
> is also a user
agent and therefore has extensions to allow it to execute arbitrary
commands. (If you have only one terminal, you're typing a mail
message, and you want to see the output of some other command, it's
very useful to be able to get your user agent to run the command for
you.) Unfortunately, these extensions are not always disabled
when <em class="emphasis">/bin/mail</EM
> is running as a delivery agent,
and the data in the mail message is sometimes capable of triggering
them, allowing an outsider to run arbitrary commands on your system
merely by sending appropriately formatted mail to you.</P
><p class="para"><a class="indexterm" name="AUTOID-7796"></A
>User agents may also be subverted even when they're acting as
designed, as user agents. Today's multimedia mail readers are
particularly subject to attacks of this kind, because they need to
execute other programs to &quot;display&quot; a message for you (for
example, a graphics program to display a picture or an audio program
to play an audio attachment), but older mail readers were vulnerable
as well. One Christmas, most of <span class="acronym">IBM</SPAN
>'s corporate
network was put out of commission by a data-driven attack. Users
received a message, usually from someone they knew and trusted, that
said simply &quot;run me&quot;. Because it appeared to be coming
from a friend, most people did run it; when they did, it displayed a
Christmas tree, and then resent itself to all of the entries in the
reader's address book (personal alias file). It propagated very fast,
and the network melted down under the force of trying to send millions
of copies.</P
><p class="para">Finally, even if the server, the delivery agent, and the user agent
are bug-free, some data-driven attacks work by subverting the user,
and getting the user to perform some action the attacker
wants. Sometimes that action involves running the program the attacker
sent in the mail. Sometimes it's something more direct; for example, it's
common for attackers to send mail to users that appears to come from
their system's managers and that directs them to change their password
to something specific. If the users do so, the attacker can now access
their account.</P
><p class="para">How well does a firewall protect against these different types of
attacks?

<dl class="variablelist"><dt class="term"><em class="emphasis">Command channel attacks</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7808"></A
><a class="indexterm" name="AUTOID-7811"></A
>A firewall can protect against command
channel attacks by restricting the number of machines to which
attackers can open command channels and by providing a secured server
on those machines.</P
></DD
><dt class="term"><em class="emphasis">Data-driven attacks</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7818"></A
><a class="indexterm" name="AUTOID-7820"></A
>There isn't much a firewall can do about
data-driven attacks; the data has to be allowed through, or you won't
actually be able to receive mail. In some cases it's possible to filter
out &quot;dangerous&quot; characters in the mail addresses if you can
somehow recognize them. Your best bet, though, is to run up-to-date
delivery and user agents and to educate your users. Doing so will
protect against most data-driven attacks. In any case, because
data-driven attacks tend to be complicated and difficult to get
information back from, they are relatively rare. </P
></DD
><dt class="term"><em class="emphasis">Command-line bugs</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7828"></A
>Command-line bugs are outside the scope of a
firewall, because they can be exploited only by someone who is already
able to execute commands on your system. One purpose of a firewall is
to keep attackers from getting that ability.</P
></DD
></DL
></P
><p class="para">The following sections describe the two protocols commonly used for
electronic mail: <span class="acronym">SMTP</SPAN
> and 
<span class="acronym">POP</SPAN
>, as well as the <span class="acronym">MIME</SPAN
> extension.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-1">8.1.1 Simple Mail Transfer Protocol
(<span class="acronym">SMTP</SPAN
>)</A
></H3
><p class="para"><a class="indexterm" name="CH08SMTP"></A
>On the Internet, electronic mail exchange between mail servers is
handled with <span class="acronym">SMTP</SPAN
>. A host's <span class="acronym">SMTP</SPAN
>
server accepts mail and examines the destination address to decide
whether to deliver the mail locally or to forward it on to some other
machine. If it decides to deliver the mail locally, it recodes the
mail headers and delivery address into the proper form for the local
delivery program, and it then hands the mail to that program. If it
decides to forward the mail to another machine, it modifies the
headers, and contacts that machine (usually via
<span class="acronym">SMTP</SPAN
>, but sometimes via <span class="acronym">UUCP</SPAN
> or
another protocol), and forwards the mail.</P
><p class="para"><span class="acronym">SMTP</SPAN
> is a store-and-forward system, and such
systems are well-suited to firewall applications, particularly those
using proxy services. In <a class="xref" href="ch07_01.htm" title="Proxy Systems">Chapter 7</A
>, <a class="xref" href="ch07_05.htm" title="Store-and-forward services (like SMTP) naturally support proxying">Figure 7.2</A
> shows how mail sent from an individual user's
workstation is directed initially to a gateway system before leaving
the user's own network. Mail entering a network goes to a gateway
system on that network before being distributed to individual users on
other hosts.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-1">8.1.1.1 <span class="acronym">SMTP</SPAN
> for
<span class="acronym">UNIX</SPAN
>: Sendmail</A
></H4
><p class="para"><a class="indexterm" name="CH08SM"></A
><a class="indexterm" name="CH08SECSM"></A
><a class="indexterm" name="AUTOID-7859"></A
>The mailer most commonly used on <span class="acronym">UNIX</SPAN
> systems is
Sendmail. Sendmail is very powerful, but it also has a long and
troubling history of major and minor security problems. Other mailers
are available, including smail 3, <span class="acronym">MMDF</SPAN
>, and
Z-Mail, but none of them appears to be particularly more secure than
a modern version of Sendmail.</P
><p class="para">Sendmail's security problems have been widely discussed, while the
problems of these other mailers have not. However, the lack of public
discussion about other mailers should not lead you to assume these
mailers are any more secure than Sendmail. While some of them are
intended to be more secure than Sendmail, there is nothing to
guarantee they are. Most of these alternative mailers are apparently
intended to address Sendmail's incredibly baroque configuration files
and its occasional failure to comply with standards, or to provide
features Sendmail doesn't have. Additional security is often an
afterthought, not a design feature. These mailers are simply not as
widely used as Sendmail, and therefore, they have fewer people&nbsp;- with
both good intentions and bad&nbsp;- who are examining them for security
problems. This fact, more than any inherent superiority, is probably
the reason for the apparently greater security of these alternative
mailers; it's not that the problems aren't there, it's just that not
as many people know what they are.</P
><p class="para">Sendmail is the devil that everybody knows; this is both an advantage
and a disadvantage. On the one hand, problems are going to be found in
Sendmail because that's where lots of people are looking for them
(because lots of people use Sendmail). On the other hand, what
problems are found are likely to be fixed very quickly (again, because
lots of people use Sendmail). Sendmail is very actively supported on
security issues.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-2">8.1.1.2 Why does Sendmail have security
problems?</A
></H4
><p class="para">One of the reasons Sendmail has security problems is that it's a
very complex program. It performs several different functions, and it
requires the collection of permissions necessary to perform
<em class="emphasis">all</EM
> of those functions. Sendmail needs root
privileges for a number of reasons; for example, these privileges
allow Sendmail to:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Listen on port 25 (a privileged port) for incoming
<span class="acronym">SMTP</SPAN
> connections.</P
></LI
><li class="listitem"><p class="para">Operate as a particular user to read <em class="emphasis">.forward</EM
>
files and <em class="emphasis">:include:</EM
> alias files owned by that user,
and to run programs specified by those files.</P
></LI
><li class="listitem"><p class="para">Execute certain kernel system calls that (in some versions of
<span class="acronym">UNIX</SPAN
>) are restricted to programs running as root,
for example, to determine the amount of free disk space available to accept
incoming messages.</P
></LI
><li class="listitem"><p class="para">Protect files in the mail queue (i.e., messages in transit) from
snooping by unprivileged users</P
></LI
></UL
><p class="para">These root permissions can be a liability, though, when Sendmail acts
as an <span class="acronym">SMTP</SPAN
> server; an attacker who manages to
exploit a bug over an <span class="acronym">SMTP</SPAN
> connection is now
talking to a process that is running as root. The process can do
essentially anything on the target machine at the attacker's
bidding. Sendmail tries to be careful to give up its privileges
whenever it doesn't really need them, but there have still been quite
a number of privilege-related bugs over the years.</P
><p class="para"><a class="indexterm" name="AUTOID-7888"></A
>On a bastion host, it should be possible to make Sendmail run
<em class="emphasis">setuid</EM
> to something other than root. You can use
an alternative <span class="acronym">SMTP</SPAN
> server (the
<em class="emphasis">smap</EM
> package, discussed below) for incoming
<span class="acronym">SMTP</SPAN
> connections, so that Sendmail doesn't need to
listen on port 25. You shouldn't have any users on the bastion host,
so you shouldn't need the ability to operate as particular users to
read protected <em class="emphasis">.forward</EM
> and
<em class="emphasis">:include:</EM
> files. There probably aren't any
privileged system calls on your system that are critical to Sendmail's
operation (though you may need to recompile Sendmail from source to
prevent it from attempting to use those calls). All you're left with
is the need to keep ownership of files in the mail queue consistent,
and to keep nonprivileged users (which the bastion host shouldn't
have anyway) from snooping on messages in transit. Creating a
<em class="emphasis">uid</EM
> just for Sendmail, and making that
<em class="emphasis">uid</EM
> the owner of the queue directory should solve
that problem.</P
><p class="para">Each of these tasks could probably be done in more secure ways, but
this would require a major redesign and reimplementation of
Sendmail, and nobody has yet stepped up to accept
this challenge: among other reasons, out of fear that doing so would
probably introduce new problems. Instead, we keep getting patch after
patch for problem after problem, so that &quot;the current
Sendmail patch&quot; has become something of a
running joke in the network security community.</P
><p class="para">Sendmail has exhibited all of the types of
general mailer vulnerabilities we discussed above. Patching has
eliminated or reduced most of them; for example, it used to be easy to
exploit command-line bugs in Sendmail as an
unprivileged user, but modern versions strictly limit the options
available to unprivileged users. Given the program's past history,
however, there are sure to be more problems yet to be
discovered. Also, patches for old problems have sometimes introduced
new problems.<a class="indexterm" name="AUTOID-7901"></A
><a class="indexterm" name="AUTOID-7902"></A
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-3">8.1.1.3 Improving <span class="acronym">SMTP</SPAN
>
security with smap and smapd</A
></H4
><p class="para">An important step a firewall can take to improve security is to
prevent attackers from speaking <span class="acronym">SMTP</SPAN
> directly to
Sendmail and, instead, to use a substitute
server. Fortunately, this is feasible. <span class="acronym">SMTP</SPAN
> stands
for &quot;Simple Mail Transport Protocol,&quot; and it really is
simple. There are only about a half-dozen or so commands in the
protocol that an <span class="acronym">SMTP</SPAN
> server needs to
implement in order to accept incoming mail.</P
><p class="para"><a class="indexterm" name="CH08SMAP"></A
><a class="indexterm" name="CH08TISFWTKSMAP"></A
>You should consider adopting the <em class="emphasis">smap</EM
> package
that is part of the <span class="acronym">TIS</SPAN
> <span class="acronym">FWTK</SPAN
> as
a &quot;wrapper&quot; for your <span class="acronym">SMTP</SPAN
> server (whether it is
Sendmail or something else). The package includes a pair of programs
called <em class="emphasis">smap</EM
> and <em class="emphasis">smapd</EM
>.</P
><p class="para"><em class="emphasis">smap</EM
> is a very short, simple program 
intended solely to handle incoming <span class="acronym">SMTP</SPAN
>
connections; unlike Sendmail, which contains
about 30,000 lines of code, <em class="emphasis">smap</EM
> contains only
about 700 lines. The relative simplicity of <em class="emphasis">smap</EM
> means that, unlike Sendmail, it can be
easily be examined and considered in its entirety for security
problems. Furthermore, it's designed with least privilege and
compartmentalization in mind. The <em class="emphasis">smap</EM
> program
runs without root privileges. It is started by
<em class="emphasis">inetd</EM
>, which takes care of binding it to port 25
before starting it, so that <em class="emphasis">smap</EM
> doesn't need to
run as root to do that. It runs <em class="emphasis">chroot</EM
>'d to a
particular queue directory, and thus can't access anything outside
that directory. All it does is accept incoming messages from the
Internet via <span class="acronym">SMTP</SPAN
>. It speaks the very minimum
necessary set of <span class="acronym">SMTP</SPAN
> commands, and it stores each
message it receives in a separate file in the queue directory.</P
><p class="para"><a class="indexterm" name="AUTOID-7934"></A
>The second program, <em class="emphasis">smapd</EM
>, comes along regularly
(typically once a minute) to process the files queued in this
directory, normally by handing them to Sendmail
for delivery.</P
><p class="para">The result of using this substitute <span class="acronym">SMTP</SPAN
> server is
that an attacker never has a direct <span class="acronym">SMTP</SPAN
> connection
to Sendmail or any other complex <span class="acronym">SMTP</SPAN
> server. Such
a system does not protect against data-driven security holes, but such
holes would be extremely hard for any firewall system to guard
against. Fortunately, data-driven holes in Sendmail seem to be very
rare anyway; there has only been one instance to date.[1]</P
><blockquote class="footnote"><p class="para">[1] This is covered in <span class="acronym">CERT</SPAN
> Advisory 93:16. For
information on obtaining <span class="acronym">CERT</SPAN
> Advisories, see <a class="xref" href="appa_01.htm" title="Resources">Appendix A</A
>.</P
></BLOCKQUOTE
><p class="para">You do give up certain capabilities by using the
<em class="emphasis">smap</EM
> package, because <em class="emphasis">smap</EM
>
quite intentionally handles only the minimum possible set of
<span class="acronym">SMTP</SPAN
> commands. In particular, you give up the
ability to do Extended <span class="acronym">SMTP</SPAN
>
(<span class="acronym">ESMTP</SPAN
>). <span class="acronym">ESMTP</SPAN
> supports a number
of enhancements to basic <span class="acronym">SMTP</SPAN
>, such as better
handling of <span class="acronym">MIME</SPAN
> messages (discussed below) and
messages containing eight-bit data. The basic <span class="acronym">SMTP</SPAN
>
service supports only seven-bit data, and requires that eight-bit data
be converted using something like <em class="emphasis">uuencode</EM
> before
being transmitted, which leaves the recipient with the problem of
unconverting the data. This isn't a big problem right now, because only a
few clients and servers currently support <span class="acronym">ESMTP</SPAN
> and
those that do have compatibility modes that let them talk regular
<span class="acronym">SMTP</SPAN
>. <span class="acronym">ESMTP</SPAN
> is becoming more and
more common, however, and this will become more of a problem as time
goes by. Of course, it's always possible that the
<em class="emphasis">smap</EM
> package will be updated to support
<span class="acronym">ESMTP</SPAN
> at some point, if it becomes a critical
issue. Like many other situations involving security, by using
<em class="emphasis">smap</EM
> you're trading off functionality for
security.<a class="indexterm" name="AUTOID-7963"></A
><a class="indexterm" name="AUTOID-7964"></A
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-4">8.1.1.4 Packet filtering characteristics of
<span class="acronym">SMTP</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-7969"></A
><span class="acronym">SMTP</SPAN
> is a <span class="acronym">TCP</SPAN
>-based
service. <span class="acronym">SMTP</SPAN
> receivers use port
25. <span class="acronym">SMTP</SPAN
> senders use a randomly selected port above
1023.</P
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Direc-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Pro-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">ACK</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">tion</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tocol</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Set</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Notes</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">25</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[2]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming mail, sender to recipient</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">25</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming mail, recipient to sender</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">25</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[2]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing mail, sender to recipient</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">25</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing mail, recipient to sender</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[2] <span class="acronym">ACK</SPAN
> is not set 
on the first packet of this type (establishing connection) but 
will be set on the rest.</P
></BLOCKQUOTE
><p class="para">Normally, you want to configure your packet filters to allow
incoming and outgoing <span class="acronym">SMTP</SPAN
> only between external
hosts and the bastion host, and between the bastion host and your
internal mail servers.</P
><p class="para">Do not allow external hosts to contact random internal hosts via
<span class="acronym">SMTP</SPAN
>. As we've discussed above, only specially
configured hosts can safely accept <span class="acronym">SMTP</SPAN
>
connections.</P
><p class="para"><a class="indexterm" name="AUTOID-8089"></A
>If you cannot filter on the <span class="acronym">ACK</SPAN
> bit, you cannot
safely allow outgoing <span class="acronym">SMTP</SPAN
> connections directly
from random internal hosts, as we demonstrate in the final example in
<a class="xref" href="ch06_01.htm" title="Packet Filtering">Chapter 6</A
>. If you can filter on the
<span class="acronym">ACK</SPAN
> bit, you allow internal hosts to send mail to
external hosts, but there isn't much advantage in doing so. Although
it shouldn't increase your vulnerability, it increases the likelihood
that you're going to send misformatted mail, because the mail
(mis)configurations of all your machines would be visible to the
external world, and the chances that all your internal machines do all
the right things with mail headers (particularly in adding fully
qualified domain names to addresses and &quot;Message-ID:&quot;
lines) are low. Sending outgoing mail via the bastion host allows the
bastion host the opportunity to clean up the headers before the mail
is loosed upon the world.</P
><p class="para"><a class="xref" href="#FIRE-08-FIG-3" title="Outbound SMTP">Figure 8.3</A
> (outbound
<span class="acronym">SMTP</SPAN
>) and <a class="xref" href="#FIRE-08-FIG-4" title="Inbound SMTP">Figure 8.4</A
> (inbound
<span class="acronym">SMTP</SPAN
>) show how packet filtering works with
<span class="acronym">SMTP</SPAN
>.</P
><h4 class="figure"><a class="title" name="FIRE-08-FIG-3">Figure 8.3: Outbound <span class="acronym">SMTP</SPAN
></A
></H4
><img class="graphic" src="figs/fire0803.gif" alt="Figure 8.3"><h4 class="figure"><a class="title" name="FIRE-08-FIG-4">Figure 8.4: Inbound <span class="acronym">SMTP</SPAN
></A
></H4
><img class="graphic" src="figs/fire0804.gif" alt="Figure 8.4"></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-5">8.1.1.5 Proxying characteristics of <span class="acronym">SMTP</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-8114"></A
>Because <span class="acronym">SMTP</SPAN
> is a store-and-forward protocol, it's
inherently suited to proxying. Because any <span class="acronym">SMTP</SPAN
>
server can be a proxy, it's rare to set up separate proxying for
it. Instead, most sites direct <span class="acronym">SMTP</SPAN
> connections to
a bastion host running a secure <span class="acronym">SMTP</SPAN
> server that
is the proxy.</P
><p class="para">Dedicated firewall products that provide proxying may proxy
<span class="acronym">SMTP</SPAN
> (they can't reasonably be expected to
run a full <span class="acronym">SMTP</SPAN
> server). This is straightforward to
configure, because <span class="acronym">SMTP</SPAN
> uses a single connection. In
this configuration, it's not unreasonable to continue to direct the
proxied <span class="acronym">SMTP</SPAN
> connections to a single secured
<span class="acronym">SMTP</SPAN
> server on a bastion host that acts as a
second proxy. Proxying protects you from unwanted connections, but not
from misuses of connections; you don't want to let external hosts
talk to a standard unsecured <span class="acronym">SMTP</SPAN
> server, even
through a proxy.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-6">8.1.1.6 Configuring <span class="acronym">SMTP</SPAN
> to
work with a firewall</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-8133"></A
><a class="indexterm" name="AUTOID-8136"></A
><a class="indexterm" name="AUTOID-8140"></A
>Because you want to  send all your mail through your bastion host, you
need to configure your mail system in a special way. Here are the
important steps to follow:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Use <span class="acronym">DNS</SPAN
> Mail Exchange (<span class="acronym">MX</SPAN
>)
records to specify that all your incoming mail should be directed to
your bastion host(s).[3] </P
><blockquote class="footnote"><p class="para">[3] For a detailed discussion of <span class="acronym">MX</SPAN
> records, how they
work, and how to use them, see the books
<em class="emphasis"><span class="acronym">TCP/IP</SPAN
> Network Administration</EM
>
by Craig Hunt (O'Reilly &amp; Associates, 1992) and
<em class="emphasis"><span class="acronym">DNS</SPAN
> and
<span class="acronym">BIND</SPAN
></EM
> by Paul Albitz and Cricket Liu
(O'Reilly &amp; Associates, 1992).</P
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-8159"></A
><a class="indexterm" name="AUTOID-8162"></A
>Configure the mailer on the bastion host to check the
destination address on mail it receives. If the mail is being sent to
an external host, the bastion host should process the mail as usual;
if the mail is to an internal host, the bastion host should simply
pass the mail to an internal mail server for processing, rather than
attempt to deliver the mail itself. By passing the incoming mail to a
single internal server for processing, the bastion host is relieved of
having to keep track of internal aliases and internal mail
configuration; this means you don't have to update the mailer
configuration on the bastion host nearly as often. If the bastion host
passes the incoming mail to a single internal server or small list of
internal servers, the filtering system can restrict
<span class="acronym">SMTP</SPAN
> connections from the bastion host to just that
host or hosts, reducing the number of internal systems that can be attacked
via <span class="acronym">SMTP</SPAN
> from the bastion host if the bastion host
itself is compromised. </P
></LI
><li class="listitem"><p class="para">Configure your internal systems to send all outgoing mail to the
bastion host.</P
></LI
></OL
><p class="para">You may also want to configure your mail system so that mail is sent
out with a central address, instead of with the name of an individual
host, as its return address. For example, you might want mail from
your users to appear as <em class="emphasis">person@bigcompany.com</EM
> not as
<em class="emphasis">person@littlemachine.bigcompany.com</EM
>. Because all of the
incoming mail (replies to the above addresses in outgoing mail) will
be going to the bastion host in any case, this doesn't remove any
necessary information. It helps to guarantee that mail will go to the
bastion host correctly, even if there are problems with the
<span class="acronym">MX</SPAN
> records for individual machines, and it gives
more consistent information to the recipients of the mail.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-7">8.1.1.7 Summary recommendations for
<span class="acronym">SMTP</SPAN
></A
></H4
><ul class="itemizedlist"><li class="listitem"><p class="para">Use the normal store-and-forward features of <span class="acronym">SMTP</SPAN
>
to send all incoming and outgoing mail through the bastion host.</P
></LI
><li class="listitem"><p class="para">Use packet filtering to restrict <span class="acronym">SMTP</SPAN
> connections
from external hosts to just the bastion host.</P
></LI
><li class="listitem"><p class="para">Use packet filtering to restrict <span class="acronym">SMTP</SPAN
> connections
from the bastion host to a specific internal server or set of servers.</P
></LI
><li class="listitem"><p class="para">Allow any internal system to send outgoing mail to the bastion host.</P
></LI
><li class="listitem"><p class="para">Use <em class="emphasis">smap</EM
> instead of Sendmail
as the <span class="acronym">SMTP</SPAN
> server on your bastion host and
probably on your internal mail server as well.</P
></LI
><li class="listitem"><p class="para">Keep up to date with patches on delivery agents
and user agents. </P
></LI
><li class="listitem"><p class="para">Educate your users concerning mail-based scams, such as instructions
to run particular programs or to change their passwords to some
specified string.</P
></LI
></UL
><a class="indexterm" name="AUTOID-8197"></A
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-2">8.1.2 Post Office Protocol
(<span class="acronym">POP</SPAN
>)</A
></H3
><p class="para"><a class="indexterm" name="CH08POP"></A
><span class="acronym">SMTP</SPAN
> is used to exchange mail between
servers. Normally, users access their mail as a file (directly, or
using <span class="acronym">NFS</SPAN
> or something similar) on the machine
where it is delivered; however, there are sometimes reasons to use a
separate protocol to distribute mail from a server to an individual
user. </P
><p class="para"><span class="acronym">POP</SPAN
> is a client-server protocol for handling user
electronic mailboxes. With <span class="acronym">POP</SPAN
>, a user's mailbox
(the actual file where that user's incoming email is held for his
later access) is kept on a server, rather than on the user's personal
machine. The server is probably available to accept incoming mail more
consistently than the user's personal machine is (particularly if the
user's &quot;personal machine&quot; is a portable that he carries
with him and that is only sometimes connected to the network). When
the user wants his email, he accesses his mailbox using a client
program (such as Eudora or Z-Mail) on his own machine using the
<span class="acronym">POP</SPAN
> protocol.</P
><p class="para"><a class="indexterm" name="AUTOID-8211"></A
>There are two major security issues involved in using
<span class="acronym">POP</SPAN
> across the Internet. First, be aware that
standard <span class="acronym">POP</SPAN
> clients and servers send the user's
<span class="acronym">POP</SPAN
> password over the Internet in the clear, so
that anyone snooping on the connection can capture and reuse it
later. In most cases, the <span class="acronym">POP</SPAN
> password is the same
as the user's login password, so that someone who snoops on it can get
all of the user's privileges&nbsp;- not just the user's electronic
mail. There are more secure variants of <span class="acronym">POP</SPAN
> that<a class="indexterm" name="AUTOID-8219"></A
><a class="indexterm" name="AUTOID-8222"></A
><a class="indexterm" name="AUTOID-8224"></A
>
support Kerberos (often called <span class="acronym">KPOP</SPAN
>) and
nonreusable passwords for authentication (often called
<span class="acronym">APOP</SPAN
>), but these secure variants are not widely
available or widely supported. You may have trouble finding a
combination of clients and servers that support these variants and
that works for your site.</P
><p class="para">Second, regardless of the authentication issues, be sure to also
consider the sensitivity of the email your users will be
accessing over the Internet via <span class="acronym">POP</SPAN
>. Whatever email
your users access will be visible to anyone snooping on their
<span class="acronym">POP</SPAN
> sessions; you need to think about how sensitive
email might be in your own environment. Many sites decide that,
regardless of the authentication issues, their users' internal email
is often too sensitive to risk being snooped on by someone monitoring
their <span class="acronym">POP</SPAN
> sessions. These sites decide to provide
alternative access methods, such as dial-ups, that aren't as
susceptible to snooping. If you provide your users with the ability to
reach your network on the inside of the firewall (for example, with
modems and <span class="acronym">PPP</SPAN
> or <span class="acronym">SLIP</SPAN
>), you can
give them <span class="acronym">POP</SPAN
> access while they're traveling
without allowing it across the Internet.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-8">8.1.2.1 Packet filtering characteristics of
<span class="acronym">POP</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-8239"></A
><span class="acronym">POP</SPAN
> is a <span class="acronym">TCP</SPAN
>-based
service. <span class="acronym">POP</SPAN
> servers for the current version of the
<span class="acronym">POP</SPAN
> protocol (which is known as
<span class="acronym">POP3</SPAN
> and is by far the most common version in use)
use port 110. Servers for the older <span class="acronym">POP2</SPAN
> protocol
use port 109. (<span class="acronym">POP1</SPAN
> was never in widespread use.)
<span class="acronym">POP</SPAN
> clients use ports above 1023.</P
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Direc-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Pro-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">ACK</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">tion</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tocol</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Set</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Notes</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">110</P
><p class="para">109[4]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[5]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming <span class="acronym">POP</SPAN
> connection, client to server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">110</P
><p class="para">109[4]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming <span class="acronym">POP</SPAN
> connection, server to client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">110</P
><p class="para">109[4]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[5]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing <span class="acronym">POP</SPAN
> connection, client to server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">110</P
><p class="para">109[4]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing <span class="acronym">POP</SPAN
> connection, server to client</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[4] Modern <span class="acronym">POP</SPAN
> (<span class="acronym">POP3</SPAN
>) servers use
port 110; older <span class="acronym">POP2</SPAN
> servers use port 109.</P
><p class="para">[5] <span class="acronym">ACK</SPAN
> is not set 
on the first packet of this type (establishing connection) but 
will be set on the rest.</P
></BLOCKQUOTE
><p class="para">An outgoing <span class="acronym">POP</SPAN
> connection would allow your users
to download their mail from other sites. This is no more dangerous
than allowing outgoing Telnet, and you will probably want to allow
such a <span class="acronym">POP</SPAN
> connection if there is any demand. On
the other hand, <span class="acronym">POP</SPAN
> over the Internet is rare
enough that there is unlikely to be anyone interested in outgoing
<span class="acronym">POP</SPAN
> at your site, and there is no point in its use.</P
><p class="para">Incoming <span class="acronym">POP</SPAN
> connections are those that allow
people at other sites to read mail delivered for them at your site. As
discussed in the previous section, you probably don't want to allow
incoming <span class="acronym">POP</SPAN
>. If you do, you should certainly limit
<span class="acronym">POP</SPAN
> connections to a <span class="acronym">POP</SPAN
> server
running on a single host. That will limit the number of vulnerable
accounts and the amount of information that's being passed across the
Internet. Although there are no known vulnerabilities in
<span class="acronym">POP</SPAN
> servers, if any are found, you should patch
them on just one host, without worrying about all your internal
hosts. Because <span class="acronym">POP</SPAN
> requires user accounts, you
don't want to run it on your normal bastion host. Although you can
prevent users from logging in on <span class="acronym">POP</SPAN
> accounts, they
represent a maintenance hassle.</P
><p class="para"><a class="xref" href="#FIRE-08-FIG-5" title="POP via packet filtering">Figure 8.5</A
> shows how <span class="acronym">POP</SPAN
> works
with a firewall.</P
><h4 class="figure"><a class="title" name="FIRE-08-FIG-5">Figure 8.5: <span class="acronym">POP</SPAN
> via packet filtering</A
></H4
><img class="graphic" src="figs/fire0805.gif" alt="Figure 8.5"></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-9">8.1.2.2 Proxying characteristics of
<span class="acronym">POP</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-8397"></A
><span class="acronym">POP</SPAN
> is straightforward to proxy, because it uses a
single connection. Precompiled proxy-enabled <span class="acronym">POP</SPAN
>
clients (those that work with <span class="acronym">SOCKS</SPAN
>, for example)
are not widely available. This is mostly because, although
<span class="acronym">POP</SPAN
> is used extensively within
<span class="acronym">LAN</SPAN
>s, <span class="acronym">POP</SPAN
> across the Internet is
rare. <span class="acronym">UNIX</SPAN
> <span class="acronym">POP</SPAN
> clients are
available in source form and trivial to adapt for modified-client
proxying systems. It is generally more difficult to locate the source
for personal-computer implementations but no more difficult to modify
them.</P
><p class="para">There is no simple way to do modified-procedure proxying for
connections between internal clients and external servers, or external
clients and internal servers, unless all your clients are
connecting to the same server. If that's the case, then you could run
a generic <span class="acronym">TCP</SPAN
> proxy program (such as the
<em class="emphasis">plug-gw</EM
> program from the <span class="acronym">TIS FWTK</SPAN
>) on the <span class="acronym">POP3</SPAN
> port on your bastion
host, configured to relay all connections to the single
<span class="acronym">POP</SPAN
> server; you would then configure your clients
to access the &quot;<span class="acronym">POP</SPAN
> server&quot; (really the
proxy program) on the bastion host.</P
><p class="para"><a class="indexterm" name="AUTOID-8417"></A
>If you do need to provide access to multiple <span class="acronym">POP</SPAN
>
servers and can ensure that all client connections from a given
<span class="acronym">IP</SPAN
> address or domain should be directed to a
particular server, you could set up a more complex configuration with
the <em class="emphasis">plug-gw</EM
> program to direct connections to the
appropriate server based on where the connection request is coming
from. If multiple users on the same client machine or machines need to
access different <span class="acronym">POP</SPAN
> servers across the firewall,
however, there's no simple way to do it with the code that's currently
available. It is possible to write a custom <span class="acronym">POP</SPAN
>
proxy server to run on the bastion host that authenticated the user,
decided which server that user needed to talk to, opened a connection
and authenticated the user to that server, and then sat back and
played the traditional proxy server &quot;pass-through&quot; role;
it would be difficult to make this work with nonreusable passwords,
though.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-10">8.1.2.3 Summary recommendations for
<span class="acronym">POP</SPAN
></A
></H4
><ul class="itemizedlist"><li class="listitem"><p class="para">Do not allow your users to transfer your site's mail over the Internet
via <span class="acronym">POP</SPAN
>, unless you can do so without revealing
reusable passwords, and unless either you aren't concerned about the
sensitivity of the mail itself or you have an encrypted channel to
transfer it over.</P
></LI
><li class="listitem"><p class="para">If you have users who wish to transfer mail from other sites via
<span class="acronym">POP</SPAN
>, allow it via packet filtering, perhaps
restricted to connections from specific sites or to specific hosts on
your end.</P
></LI
><li class="listitem"><p class="para">Proxying would be an effective solution for some
<span class="acronym">POP</SPAN
> problems, but you might need to do at least
minor code modifications.</P
></LI
></UL
><a class="indexterm" name="AUTOID-8438"></A
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-3">8.1.3 Multipurpose Internet Mail Extensions
(<span class="acronym">MIME</SPAN
>)</A
></H3
><p class="para"><a class="indexterm" name="CH08MIME"></A
><a class="indexterm" name="AUTOID-8445"></A
><span class="acronym">MIME</SPAN
> is a set of extensions to the basic Internet
electronic mail message format supporting things like:

<ul class="itemizedlist"><li class="listitem"><p class="para">Non-<span class="acronym">ASCII</SPAN
> character sets</P
></LI
><li class="listitem"><p class="para">Nontext data such as pictures and audio segments</P
></LI
><li class="listitem"><p class="para">So-called
&quot;rich text&quot; messages (messages containing formatted text,
with different fonts and so on, rather than simple single-font
unformatted text)</P
></LI
><li class="listitem"><p class="para">Multipart messages (messages containing
multiple pieces, each piece in its own format).</P
></LI
></UL
></P
><p class="para"><span class="acronym">MIME</SPAN
> support is mostly a client issue; to mail
servers and transport systems, <span class="acronym">MIME</SPAN
> messages are
generally just another message. The question is whether
or not a given client can generate outgoing <span class="acronym">MIME</SPAN
>
messages, and whether or not it can recognize and cope with incoming
<span class="acronym">MIME</SPAN
> messages.</P
><p class="para">The <span class="acronym">MIME</SPAN
> standards define certain basic data types,
such as plain text, formatted text, standard audio, and so
on. <span class="acronym">MIME</SPAN
> is designed to be extensible, so that
new data types can be added as necessary.
<span class="acronym">MIME</SPAN
>-capable mail clients generally understand
certain data types (often only multipart messages and plain text),
and rely on other programs to handle other data types (for example,
graphics programs to display images, and sound programs to play audio
clips). The clients generally have a list of external programs to run
for particular types of data; this list can be extended or
modified by the user.</P
><p class="para"><a class="indexterm" name="AUTOID-8469"></A
><a class="indexterm" name="AUTOID-8472"></A
>Ironically, the biggest use of <span class="acronym">MIME</SPAN
> hasn't been in
mail systems, but in World Wide Web browsers. Most mail systems have
little or no <span class="acronym">MIME</SPAN
> support, but
<span class="acronym">MIME</SPAN
> is a key service upon which the World Wide Web
is built. Every <span class="acronym">WWW</SPAN
> server uses
<span class="acronym">MIME</SPAN
> to describe the format of every
<span class="acronym">WWW</SPAN
> page it hands to a client; every
<span class="acronym">WWW</SPAN
> client uses <span class="acronym">MIME</SPAN
> to
determine how to display or otherwise process the data it receives.</P
><p class="para">Because <span class="acronym">MIME</SPAN
> is used more extensively for
<span class="acronym">WWW</SPAN
> support than for electronic mail, we discuss it
below in the section on <span class="acronym">WWW</SPAN
>, even though it is
theoretically email-related. If you do have email clients that support
<span class="acronym">MIME</SPAN
>, they will be subject to the same
vulnerabilities discussed in &quot;What can a
malicious server do to your clients?&quot; in the section on the
World Wide Web later in this chapter.</P
><p class="para">One difference between <span class="acronym">MIME</SPAN
> support in email
clients and <span class="acronym">WWW</SPAN
> clients is how data is
obtained. With a <span class="acronym">WWW</SPAN
> client, the user chooses what
data to access; with email, the user accesses whatever anybody sends
them. In theory, email clients are more vulnerable, because you can't
control what other people send you by email. In practice,
however, the difference isn't that important, because it's fairly easy
to lure a <span class="acronym">WWW</SPAN
> user into accessing whatever you want
them to access. Either way, you need to carefully control what data
types your clients understand and how they process that data. See the
full discussion of this issue in the <span class="acronym">WWW</SPAN
> section.<a class="indexterm" name="AUTOID-8494"></A
><a class="indexterm" name="AUTOID-8495"></A
><a class="indexterm" name="AUTOID-8496"></A
></P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_08.htm#FIRE-07-S2-18" title="7.8 What If You Can't Proxy?"><img src="../gifs/txtpreva.gif" alt="Previous: 7.8 What If You Can't Proxy?" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Building Internet Firewalls"><img src="../gifs/txthome.gif" alt="Building Internet Firewalls" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_02.htm#FIRE-08-S3-15" title="8.2 File Transfer"><img src="../gifs/txtnexta.gif" alt="Next: 8.2 File Transfer" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.8 What If You Can't Proxy?</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_a.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">8.2 File Transfer</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
