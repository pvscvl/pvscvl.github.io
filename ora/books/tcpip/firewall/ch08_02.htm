<html><head>
<title>[Chapter 8] 8.2 File Transfer</TITLE>
<meta name="DC.title" content="Building Internet Firewalls"><meta name="DC.creator" content="D. Brent Chapman &amp; Elizabeth D. Zwicky"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:21:13Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-124-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch08_01.htm" title="8. Configuring Internet Services"><link rel="prev" href="ch08_01.htm" title="8.1 Electronic Mail"><link rel="next" href="ch08_03.htm#FIRE-08-S2-8" title="8.3 Terminal Access (Telnet)"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Building Internet Firewalls" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Building Internet Firewalls"><area shape="RECT" coords="467,0,514,18" href="../search/fsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_01.htm" title="8.1 Electronic Mail"><img src="../gifs/txtpreva.gif" alt="Previous: 8.1 Electronic Mail" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 8<br>Configuring Internet Services</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_03.htm#FIRE-08-S2-8" title="8.3 Terminal Access (Telnet)"><img src="../gifs/txtnexta.gif" alt="Next: 8.3 Terminal Access (Telnet)" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="FIRE-08-S1-2">8.2 File Transfer</A
></H2
><p class="para"><a class="indexterm" name="CH08FILETRANS"></A
><a class="indexterm" name="AUTOID-8503"></A
><span class="acronym">FTP</SPAN
> is the de facto standard for file transfer on
the Internet. In addition, there are some specialized protocols used
for applications where <span class="acronym">FTP</SPAN
> is not suitable.
<span class="acronym">TFTP</SPAN
> is used by dedicated devices to transfer
configuration files. <span class="acronym">FSP</SPAN
> is a
<span class="acronym">UDP</SPAN
>-based protocol used when
<span class="acronym">TCP</SPAN
>-based connections won't work or aren't
allowed. <span class="acronym">UUCP</SPAN
> is used for batch transfers,
particularly across phone lines.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-4">8.2.1 File Transfer Protocol
(<span class="acronym">FTP</SPAN
>)</A
></H3
><p class="para"><a class="indexterm" name="CH08CONFFTP"></A
><a class="indexterm" name="CH08FTPCONF"></A
><span class="acronym">FTP</SPAN
> is used to transfer files from one machine to
another. You can use <span class="acronym">FTP</SPAN
> to transfer any type of
file, including executable binaries, graphics images,
<span class="acronym">ASCII</SPAN
> text, PostScript, sound and video files, and
more. There are two types of <span class="acronym">FTP</SPAN
> access: user
<span class="acronym">FTP</SPAN
> and anonymous <span class="acronym">FTP</SPAN
>. User
<span class="acronym">FTP</SPAN
> requires an account on the server and lets 
users access any files they could access if they were logged
in. Anonymous <span class="acronym">FTP</SPAN
> is for people who don't have an
account and is used to provide access to specific files to the world
at large.</P
><p class="para"><a class="indexterm" name="AUTOID-8532"></A
>Anonymous <span class="acronym">FTP</SPAN
> is by far the most common use of
<span class="acronym">FTP</SPAN
> on the Internet. Anonymous
<span class="acronym">FTP</SPAN
> servers are the standard mechanism for
distributing programs, information, and other files that sites wish to
make available to the Internet at large. If a site provides an
anonymous <span class="acronym">FTP</SPAN
> server, anyone on the Internet can
initiate an <span class="acronym">FTP</SPAN
> connection to the site, tell the
<span class="acronym">FTP</SPAN
> server that their login name is
&quot;anonymous&quot;, and access whatever files the server's
owners have chosen to make available in a restricted area.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-11">8.2.1.1 Packet filtering characteristics of
<span class="acronym">FTP</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="CH08PACKFILTFTP"></A
><span class="acronym">FTP</SPAN
> uses two separate <span class="acronym">TCP</SPAN
>
connections: one to carry commands and results between the client and
the server (commonly called the <em class="emphasis">command
channel</EM
>), and the other to carry any actual files
and directory listings transferred (the <em class="emphasis">data
channel</EM
>). On the server end, the command channel
uses well-known port 21, and the data channel normally uses well-known
port 20. The client uses ports above 1023 for both the command and
data channels.</P
><p class="para">To start an <span class="acronym">FTP</SPAN
> session, a client first allocates
two <span class="acronym">TCP</SPAN
> ports for itself, each of them with a port
number above 1024. It uses the first to open the command channel
connection to the server and then issues <span class="acronym">FTP</SPAN
>'s
<span class="acronym">PORT</SPAN
> command to tell the server the number of the
second port, which the client wants to use for the data channel. The
server then opens the data channel connection. This data channel
connection is backwards from most protocols, which open connections
from the client to the server. This backwards open complicates things
for sites that are attempting to do &quot;start-of-connection&quot;
packet filtering to ensure that all <span class="acronym">TCP</SPAN
> connections
are initiated from the inside, because external <span class="acronym">FTP</SPAN
>
servers will attempt to initiate data connections to internal clients,
in response to command connections opened from those internal
clients. Furthermore, these connections will be going to ports known
to be in an unsafe range. <a class="xref" href="#FIRE-08-FIG-6" title="A normal-mode FTP connection">Figure 8.6</A
> shows this
kind of <span class="acronym">FTP</SPAN
> connection.</P
><h4 class="figure"><a class="title" name="FIRE-08-FIG-6">Figure 8.6: A normal-mode <span class="acronym">FTP</SPAN
> connection</A
></H4
><img class="graphic" src="figs/fire0806.gif" alt="Figure 8.6"><p class="para"><a class="indexterm" name="CH08PASV"></A
><a class="indexterm" name="CH08FTPPASV"></A
>Most <span class="acronym">FTP</SPAN
> servers (particularly those used at major
anonymous <span class="acronym">FTP</SPAN
> sites on the Internet) and many
<span class="acronym">FTP</SPAN
> clients support an alternative mode that allows
the client to open both the command and the data channels to the
server. This mode is called &quot;passive mode&quot; or &quot;PASV
mode&quot; (after the <span class="acronym">FTP</SPAN
> command the client
sends to the server to initiate this mode). If both your
<span class="acronym">FTP</SPAN
> client and the <span class="acronym">FTP</SPAN
> server
you're trying to connect to support passive mode, you can use it
instead of the regular mode. This way, you can avoid 
start-of-connection filtering problems, because 
all connections will be
opened from the inside, by the client.</P
><p class="para">To use passive mode, an <span class="acronym">FTP</SPAN
> client allocates two
<span class="acronym">TCP</SPAN
> ports for its own use, and uses the first port
to contact the <span class="acronym">FTP</SPAN
> server, just as when using
normal mode. However, instead of issuing the <span class="acronym">PORT</SPAN
>
command to tell the server the client's second port, the client issues
the <span class="acronym">PASV</SPAN
> command. This causes the server to
allocate a second port of its own for the data channel (for
architectural reasons, servers use random ports above 1023 for this,
not port 20 as in normal mode; you couldn't have two servers on the
same machine simultaneously listening for incoming
<span class="acronym">PASV</SPAN
>-mode data connections on port 20), and tell
the client the number of that port. The client then opens the data
connection from its port to the data port the server has just told it
about. <a class="xref" href="#FIRE-08-FIG-7" title="A passive-mode FTP connection">Figure 8.7</A
> shows a passive-mode
<span class="acronym">FTP</SPAN
> connection.</P
><h4 class="figure"><a class="title" name="FIRE-08-FIG-7">Figure 8.7: A passive-mode <span class="acronym">FTP</SPAN
> connection</A
></H4
><img class="graphic" src="figs/fire0807.gif" alt="Figure 8.7"><p class="para">Not all <span class="acronym">FTP</SPAN
> clients support passive mode. If a
given client does support passive mode, it will usually mention this
as a feature in the documentation or description. Some clients support
both normal and passive modes and provide the user some way to specify
which mode to use. If you're having trouble finding passive-mode<a class="indexterm" name="AUTOID-8592"></A
><a class="indexterm" name="AUTOID-8595"></A
>
clients, it's useful to know that the built-in <span class="acronym">FTP</SPAN
>
clients in many <span class="acronym">WWW</SPAN
> browsers (Netscape Navigator,
for example) use passive mode. Chances are, your users will want to
have these browsers anyway for <span class="acronym">WWW</SPAN
> access, and you
can show them how to use the browsers as <span class="acronym">FTP</SPAN
>
clients as well.</P
><p class="para">Because passive mode has only recently become popular, many times
even servers that support passive mode have problems with it. You may
find that combinations of servers and clients that work well with
normal-mode transfers hang periodically when you do passive-mode
transfers.</P
><p class="para">If your <span class="acronym">FTP</SPAN
> client (or one of the
<span class="acronym">FTP</SPAN
> servers you wish to communicate with) does not
support passive mode, and you still want to allow
<span class="acronym">FTP</SPAN
> via packet filtering (rather than via proxy),
you'll have to put a special-case exception in your packet filtering
rules to allow the server to open the data channel back in to the
client. If you do so, you will still be vulnerable to attackers
launching a connection from port 20 on the attacker's end (nominally
the <span class="acronym">FTP</SPAN
> data channel, but you have no way to
guarantee that on a machine you don't control) to a port above 1023 on
your end (such as an X server, for example). Therefore, you should
restrict this special-case exception as much as possible, e.g., by
tying it to the address of the particular client or server that
doesn't support passive mode. (Even an exception for a single server
makes you vulnerable to forged connections from that server).</P
><p class="para"><a class="indexterm" name="AUTOID-8610"></A
>Some dynamic packet filtering implementations (such as FireWall-1 from
CheckPoint Software) monitor the commands sent over the
<span class="acronym">FTP</SPAN
> command channel and notice the
<span class="acronym">PORT</SPAN
> command the client sends to the server;
This command
tells the server on which port the client is listening for the server
to open the data channel. These implementations also put in place a
temporary (time-limited) exception in the packet filtering rules to
allow the server to open the data channel back to the client.</P
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Direc-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Pro-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">ACK</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">tion</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tocol</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Set</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Notes</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">21</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[6]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming <span class="acronym">FTP</SPAN
> request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">21</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Response to incoming request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">20</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[6]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Data channel creation for incoming <span class="acronym">FTP</SPAN
> request, normal mode</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">20</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Data channel responses for incoming <span class="acronym">FTP</SPAN
> request, normal mode</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[6]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Data channel creation for incoming <span class="acronym">FTP</SPAN
> request, passive mode</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Data channel responses for incoming <span class="acronym">FTP</SPAN
> request, passive mode</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">21</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[6]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing <span class="acronym">FTP</SPAN
> request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">21</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Response to outgoing request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">20</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[6]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Data channel creation for outgoing <span class="acronym">FTP</SPAN
> request, normal mode</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">20</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Data channel responses for outgoing <span class="acronym">FTP</SPAN
> request, normal mode</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[6]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Data channel creation for outgoing <span class="acronym">FTP</SPAN
> request, passive mode</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Data channel responses for outgoing <span class="acronym">FTP</SPAN
> request, passive mode</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[6] <span class="acronym">ACK</SPAN
> is not 
set on the first packet of this type (establishing connection)
but will be set on the rest.</P
></BLOCKQUOTE
><a class="indexterm" name="AUTOID-8879"></A
><a class="indexterm" name="AUTOID-8880"></A
><a class="indexterm" name="AUTOID-8881"></A
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-99">8.2.1.2 Proxying characteristics of
<span class="acronym">FTP</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-8886"></A
>Because of the problems with passive mode, and because of
complications introduced in name service (the &quot;double-reverse
lookups&quot; discussed in the &quot;Domain Name Service
(<span class="acronym">DNS</SPAN
>)&quot; section below), proxying is a
particularly attractive solution for outbound
<span class="acronym">FTP</SPAN
>. Using a normal-mode proxied client allows you
to talk reliably to external servers without having to allow incoming
<span class="acronym">TCP</SPAN
> connections for the data channel to any host
except the bastion host doing the proxying. For this reason, you may
choose to proxy <span class="acronym">FTP</SPAN
> even if you allow most other
protocols directly through the firewall via packet filtering. Both
modified-client and modified-procedure proxies are available for
<span class="acronym">FTP</SPAN
>.</P
><p class="para">The <span class="acronym">SOCKS</SPAN
> package includes an
<span class="acronym">FTP</SPAN
> client for <span class="acronym">UNIX</SPAN
> that has
been modified to use <span class="acronym">SOCKS</SPAN
>. Because of the multiple
simultaneous <span class="acronym">TCP</SPAN
> connections involved in
<span class="acronym">FTP</SPAN
>, modifying other <span class="acronym">FTP</SPAN
> clients
yourself requires some work (more than modifying clients for
straightforward single-connection protocols like
<span class="acronym">SMTP</SPAN
> and <span class="acronym">POP</SPAN
>).</P
><p class="para"><a class="indexterm" name="AUTOID-8906"></A
>The <span class="acronym">TIS FWTK</SPAN
> provides a proxy
<span class="acronym">FTP</SPAN
> server that operates with modified
clients or modified user procedures. It provides additional logging,
operation denial, and user authentication features, giving you finer
control than you can achieve with packet filters or
<span class="acronym">SOCKS</SPAN
> proxying.</P
><p class="para">If you want to use modified clients with the <span class="acronym">TIS</SPAN
>
<span class="acronym">FWTK</SPAN
> <span class="acronym">FTP</SPAN
> proxy server, you will
need to do all of the modification yourself; they do not provide a
modified client or even a client library. Using modified clients with
the <span class="acronym">TIS FWTK</SPAN
> <span class="acronym">FTP</SPAN
>
proxy server will also prevent you from running a standard
<span class="acronym">FTP</SPAN
> server on the machine you're using as the proxy
server. Some versions of the <span class="acronym">FWTK</SPAN
> have had an
<span class="acronym">FTP</SPAN
> server that could act as a proxy server
and a regular <span class="acronym">FTP</SPAN
> server, but there have been some
problems with it, and it's not clear that it will continue to be
included with newer releases of the toolkit.</P
><p class="para">Some <span class="acronym">FTP</SPAN
> clients are not sufficiently flexible to
be used with modified user procedures involving the
<span class="acronym">TIS FWTK</SPAN
> <span class="acronym">FTP</SPAN
>
proxy server. The custom procedure users have to follow involve
opening an <span class="acronym">FTP</SPAN
> connection to the machine where the
proxy server is running, and then logging into the
<span class="acronym">FTP</SPAN
> proxy server as
<em class="emphasis">anonymous@host.some.net</EM
>, specifying
the name of the host they really want to connect to as part of
the login. Some <span class="acronym">FTP</SPAN
> clients have
&quot;anonymous&quot; simply hardcoded in, or limit the length of
the login field to something too short to contain
&quot;anonymous@&quot; plus a reasonably long hostname.</P
><p class="para">Any commercial proxying packages will almost certainly support
outbound <span class="acronym">FTP</SPAN
> proxying, because
<span class="acronym">FTP</SPAN
> is such a commonly used protocol on the
Internet.</P
><p class="para">Many sites use both proxy and packet filtering solutions for
<span class="acronym">FTP</SPAN
>. You can sometimes reduce the number of
modified clients you need by using proxying to support normal-mode
connections, and packet filtering to support passive-mode
connections. You can also use a combined solution for added security
by using a proxy <span class="acronym">FTP</SPAN
> server that uses passive mode
to make external connections, regardless of the mode it uses to talk
to the internal hosts; this converts all connections that cross the
firewall to passive mode and allows you to tighten the packet filters
that protect the host doing the proxying. On the other hand, it keeps
you from using servers that don't support passive mode.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-12">8.2.1.3 Providing anonymous
<span class="acronym">FTP</SPAN
> service</A
></H4
><p class="para"><a class="indexterm" name="CH08ANON"></A
>With anonymous <span class="acronym">FTP</SPAN
>, a user logs in to the
<span class="acronym">FTP</SPAN
> server as &quot;anonymous&quot;. The user is
then asked for a password and is expected to enter his or her full
email address in response. At most sites, this request is not
enforced, however, and users can enter whatever they want, as long as
it looks like an email address; even if the information is entered,
it's usually just logged, not verified in any way beyond a superficial
plausibility check (i.e., does it contain an at (@)
sign?). Many standard <span class="acronym">FTP</SPAN
> servers, like the
ones shipped with most versions of <span class="acronym">UNIX</SPAN
>, don't even
log the information.</P
><p class="para">If you are providing anonymous <span class="acronym">FTP</SPAN
> service, the
challenge is to ensure that the anonymous <span class="acronym">FTP</SPAN
>
server makes available only the information that
you want made available and that it doesn't give an outsider access
to other, supposedly private, information on the machine.</P
><p class="para">In setting up anonymous <span class="acronym">FTP</SPAN
>, one precaution you can
take is to limit what other information is available on the machine
that's providing anonymous <span class="acronym">FTP</SPAN
> service. In this
way, even if attackers get &quot;outside&quot; the anonymous
<span class="acronym">FTP</SPAN
> area on the machine, there is nothing of
interest to them elsewhere on the machine (or reachable from the
machine via <span class="acronym">NFS</SPAN
> or some other mechanism).</P
><p class="para"><a class="indexterm" name="AUTOID-8956"></A
>Many <span class="acronym">FTP</SPAN
> servers perform a
<em class="emphasis">chroot</EM
> to the anonymous <span class="acronym">FTP</SPAN
>
area before the <span class="acronym">FTP</SPAN
> server starts processing
commands from an anonymous user. To support both anonymous and user
<span class="acronym">FTP</SPAN
>, however, <span class="acronym">FTP</SPAN
> servers need
access to all files. This means that <em class="emphasis">chroot</EM
>,
which is normally regarded as extremely safe, doesn't guarantee as
much for an <span class="acronym">FTP</SPAN
> server, because the server is not
always running in the <em class="emphasis">chroot</EM
>'d environment.</P
><p class="para"><a class="indexterm" name="AUTOID-8968"></A
>To deal with this problem, you can modify
<em class="emphasis">inetd</EM
>'s configuration so that instead of
starting the <span class="acronym">FTP</SPAN
> 
server directly, it <em class="emphasis">chroot</EM
>s (using
something like the <em class="emphasis">chrootuid</EM
> program described in
<a class="xref" href="appb_01.htm" title="Tools">Appendix B</A
>) and then starts the
<span class="acronym">FTP</SPAN
> server. Normally, <span class="acronym">FTP</SPAN
> runs
with limited access only for anonymous users, and nonanonymous users
have their normal access permissions. Doing the 
<em class="emphasis">chroot </EM
> before starting
up the <span class="acronym">FTP</SPAN
> server means that the nonanonymous
users will also be limited; if you don't have any nonanonymous users
of your <span class="acronym">FTP</SPAN
> server (and you probably shouldn't),
this is irrelevant.</P
><p class="para">The details of setting up an anonymous <span class="acronym">FTP</SPAN
> system
vary depending on the operating system and the particular
<span class="acronym">FTP</SPAN
> daemon code in use. Start with the instructions
(if any) in the manual pages for your <span class="acronym">FTP</SPAN
> daemon;
this should get you through most of the vendor-specific steps. Then,
once you've performed all the steps there, obtain and follow
<span class="acronym">CERT</SPAN
> Advisory 93:10 (for information on obtaining
<span class="acronym">CERT</SPAN
> advisories, see <a class="xref" href="appa_01.htm" title="Resources">Appendix A</A
>),
which addresses setting up anonymous <span class="acronym">FTP</SPAN
> servers to
close the holes left by most of the vendor instructions.[7]</P
><blockquote class="footnote"><p class="para">[7] Many vendors ship instructions containing critical problems, ranging from
security holes to missing steps that disable parts of
<span class="acronym">FTP</SPAN
>'s functionality.)</P
></BLOCKQUOTE
><p class="para">Unfortunately, one of the most common ways that anonymous users get
access to files they shouldn't be able to see is that an internal user
innocently puts the files up for anonymous <span class="acronym">FTP</SPAN
>, on
the assumption that this is somehow safe. Usually, the internal user
is relying on security through obscurity; he assumes that nobody will
notice the files. This does not work well. People do notice,
especially if the names of the new files are meaningful. At popular
<span class="acronym">FTP</SPAN
> sites, curious people poke around randomly, and
they notice new files almost immediately and may transfer them out of
pure curiosity. On less-visited <span class="acronym">FTP</SPAN
> sites, files
may remain unnoticed until an Archie server indexes them. Unless you
have explicitly arranged to have your <span class="acronym">FTP</SPAN
> site
skipped, you should assume that it is being indexed; Archie is quite
talented at finding sites.</P
><p class="para">It's best to avoid putting files up for anonymous
<span class="acronym">FTP</SPAN
> if you don't want the entire world to read
them. Use other methods of file transfer if possible. If not, you may
want to use a modified <span class="acronym">FTP</SPAN
> server, like the
<em class="emphasis">wuarchive</EM
> server, which allows semianonymous access
that requires an anonymous user to provide an additional password to
get access to certain directories. You can also put up files in
directories that have execute permission but not read
permission. Doing so will let people who know the names transfer the
files, but won't let people look to see what files exist.</P
><p class="para">Whatever method you choose, be sure that everybody at your site who
can put files in the anonymous <span class="acronym">FTP</SPAN
> directories
knows not to put confidential files where they're world-readable. An
easy way to do this is to prevent your internal users from writing to
the anonymous <span class="acronym">FTP</SPAN
> directories and to require them
to ask a system administrator to make a file available.<a class="indexterm" name="AUTOID-9004"></A
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-13">8.2.1.4 Using the wuarchive
<span class="acronym">FTP</SPAN
> daemon</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-9009"></A
><a class="indexterm" name="AUTOID-9011"></A
><a class="indexterm" name="AUTOID-9014"></A
>Many Internet sites&nbsp;- both major and minor&nbsp;- that provide anonymous
<span class="acronym">FTP</SPAN
> run the <em class="emphasis">wuarchive</EM
> version of the
<span class="acronym">UNIX</SPAN
> <span class="acronym">FTP</SPAN
> server, developed at
Washington University (the &quot;wu&quot; in the name) in
St. Louis. This server provides a number of features that are
especially useful for anonymous <span class="acronym">FTP</SPAN
> servers. These
include the following features and many others:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Better and more complete logging. It can log uploads, downloads, or
every command sent to it; it can also keep track of the number of
accesses by user classes (e.g., by anonymous users).</P
></LI
><li class="listitem"><p class="para">Per-directory message files; these are shown to a user
when he visits that directory to provide relevant information about
the directory's contents (for example,&quot;This version is now
obsolete&quot;).</P
></LI
><li class="listitem"><p class="para">The ability to define classes of users; based on the account they
log in to the server with, and/or the host from which they access, you
can determine what files they have access to and when they can log in.</P
></LI
><li class="listitem"><p class="para">Restrictions on certain classes of users. 
For example, <em class="emphasis">wuarchive</EM
> can
limit the number of simultaneous anonymous users who are accessing the
server; the limit can vary by time of day and day of the week. By
using these restrictions, you control the load generated by the
<span class="acronym">FTP</SPAN
> server.</P
></LI
><li class="listitem"><p class="para">The ability to compress, tar, and otherwise manipulate files
automatically as they are transferred.</P
></LI
><li class="listitem"><p class="para">Nonanonymous <em class="emphasis">chroot</EM
>'ed 
access, for users who need only limited
access to your machines. This allows you to give a specific account
access to files that are not accessible to &quot;anonymous&quot;
without giving them the ability to look around at everything on your
disks.</P
></LI
></UL
><p class="para">For information about obtaining the <em class="emphasis">wuarchive</EM
> 
<span class="acronym">FTP</SPAN
>
daemon, see <a class="xref" href="appb_01.htm" title="Tools">Appendix B</A
>. Be sure that you are
installing the genuine, most recent version. This program has in the
past been distributed by attackers with added trap doors, and older
versions may have security problems that have since been fixed.</P
><p class="para">Be aware
that one cost of the additional power and complexity offered by
<em class="emphasis">wuarchive</EM
> is a bigger
potential for security problems. The bigger and more complex a program
is, the more likely it is to contain bugs. If the program is
security-critical (as the <span class="acronym">FTP</SPAN
> server is), many of
those bugs are likely to have security impacts. Some features of the
<em class="emphasis">wuarchive</EM
> server 
may also interact badly with some clients (in
particular, some clients do not deal well with the displayed messages
and hang). There are workarounds available, but if a significant
percentage of your users have these clients, you may want to avoid
<em class="emphasis">wuarchive</EM
>.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-14">8.2.1.5 Using the <span class="acronym">TIS FWTK FTP</SPAN
> daemon</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-9051"></A
>Instead of using the <em class="emphasis">wuarchive</EM
> version of the
<span class="acronym">FTP</SPAN
> server, you might consider using the
<span class="acronym">FTP</SPAN
> server from the
<span class="acronym">TIS</SPAN
> Internet Firewall Toolkit. The <span class="acronym">TIS FWTK FTP</SPAN
> daemon has an emphasis different from that of the
<em class="emphasis">wuarchive</EM
> daemon. 
The <em class="emphasis">wuarchive</EM
> version adds code
in order to add features that support anonymous
<span class="acronym">FTP</SPAN
>. The <span class="acronym">TIS FWTK</SPAN
> version, by
contrast, concentrates on simplifying the server and making it more
secure, stripping it down to the bare minimum capabilities necessary
to provide anonymous <span class="acronym">FTP</SPAN
> service. However, the
maintainers of the <span class="acronym">FWTK</SPAN
> have been considering
removing it from the <span class="acronym">FWTK</SPAN
> release, because despite
all the work they've done on it, they're still not convinced that it's
as secure as they'd like it to be (though it is almost certainly more
secure than any alternative). It's possible that it will have been
removed from the release by the time you read this.</P
><p class="para">You'll have to decide for yourself whether you really need the
enhanced features provided by the <em class="emphasis">wuarchive</EM
>
server (and are willing to accept the potential security implications
of those features), or whether you'd rather have the enhanced security
provided by the <span class="acronym">TIS FWTK</SPAN
> server (assuming it's
still available), at a cost of fewer features. Many users are
accustomed to using <em class="emphasis">wuarchive</EM
>
<span class="acronym">FTP</SPAN
> and have come to depend on its features; it is
probably not reasonable to attempt to run a major anonymous
<span class="acronym">FTP</SPAN
> site with the <span class="acronym">TIS FWTK</SPAN
>
server. For a site that provides only occasional anonymous
<span class="acronym">FTP</SPAN
>, however, the <span class="acronym">FWTK</SPAN
> server is
probably a more secure and reliable option.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-15">8.2.1.6 Be careful of writable
directories in the anonymous <span class="acronym">FTP</SPAN
> area</A
></H4
><p class="para"><a class="indexterm" name="CH08ANONWRIT"></A
><a class="indexterm" name="CH08WRIT"></A
><a class="indexterm" name="CH08INC"></A
>Regardless of which <span class="acronym">FTP</SPAN
> daemon you use, you'll have
to confront a particularly troublesome issue raised by anonymous
<span class="acronym">FTP</SPAN
> servers: writable directories in the anonymous
<span class="acronym">FTP</SPAN
> area. Sites frequently provide writable space
in this area, so that outsiders can upload files to them as well as
download files from them; for example, a software company's customers
might be asked to upload crash dump files (which are too big to
conveniently send through email) so the company can do a crash
analysis on them.</P
><p class="para">Writable areas can be very useful, but they have a dark side. Such
writable directories <em class="emphasis">will</EM
> (notice that we didn't
say <em class="emphasis">may</EM
>) be found and used by &quot;the
underground&quot; on the Internet as storage space and distribution
areas for illicit material; generally this means pirated software
packages and pornographic image files.</P
><p class="para">The folks who do this are amazingly well organized and hard to track
down. They have their own communication mechanisms for telling each
other about new sites&nbsp;- places they've found to store their
stuff&nbsp;- without revealing who they are. When they find a new site, they
typically create a hidden subdirectory in which to store their files
and images. They give the subdirectory an innocuous name such as
&quot;.. &quot; (that's &quot;dot dot space space&quot;). When
casually looking around an anonymous <span class="acronym">FTP</SPAN
> area, you
probably won't notice a name like this. It's particularly easy to miss
because file and directory names beginning with &quot;.&quot; are
ignored by the <span class="acronym">UNIX</SPAN
><em class="emphasis"> ls</EM
>
command, unless you give the command a special argument or run it as
root.</P
><p class="para">On some sites in which intruders play this game, you can see a barter
economy in operation. Someone leaves a note saying they're seeking a
certain package or file, and listing what they have to offer in
exchange. A short time later, someone else comes along, uploads the
requested files, and leaves another note telling the original poster
what they want in return.</P
><p class="para">What's wrong with this misuse of your anonymous <span class="acronym">FTP</SPAN
>
areas? There are several problems:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">It consumes your resources, such as disk space and network bandwidth
(particularly on your Internet connection), and it interferes with the
legitimate use of those resources: it's a denial of service attack.</P
></LI
><li class="listitem"><p class="para">It potentially exposes your site to legal action for assisting (even
unwittingly) in software piracy, or perhaps sexual harassment, or even
sexual exploitation of minors. Even if 
such actions are unlikely to succeed, your 
attorneys will probably tell you that they'd rather
avoid the issue and not have to fight the battle in the first place.</P
></LI
><li class="listitem"><p class="para">Even if no legal actions are undertaken, such an incident could
generate significant negative publicity and embarrassment for your
site or organization. Once your name has been linked to software
piracy or child pornography in any way, you are in bad trouble
regardless of how innocent your involvement was.</P
></LI
></UL
><p class="para">How can you protect your anonymous <span class="acronym">FTP</SPAN
> areas from
such misuse? The first question to ask yourself is this: do you really
need to provide writable space in your anonymous
<span class="acronym">FTP</SPAN
> area? Often there are other acceptable ways
(electronic mail, for example) for folks to send files to you. If you
decide that you must provide writable space in your anonymous
<span class="acronym">FTP</SPAN
> area, there are a number of ways to limit your
vulnerability, as we describe below.</P
>Making your incoming directory
write-only<p class="para"><a class="indexterm" name="AUTOID-9113"></A
>The most obvious approach, if you're using a <span class="acronym">UNIX</SPAN
>
machine as your bastion host, is to make your &quot;incoming&quot;
directory write-only (directory permissions 773 or 733&nbsp;- that is,
&quot;rwxrwx-wx&quot; or &quot;rwx-wx-wx&quot;). Make sure that
the directory is owned by some user other than &quot;ftp&quot; (or
whatever your anonymous <span class="acronym">FTP</SPAN
> server runs as when
doing anonymous <span class="acronym">FTP</SPAN
>). If the mode is 773 instead of
733, then also make sure that the group of the directory is something
other than the default group of the &quot;ftp&quot; login.</P
><p class="para">The problem with this approach is that all you're doing is keeping
people from being able to see what's in the top-level directory. They
can still see what's in subdirectories, and they can still access
files and directories they create in the top-level directory if they
communicate exact filenames among themselves. (Unfortunately, they
can, via their mailing lists and other communications channels.)<a class="indexterm" name="AUTOID-9120"></A
></P
>Disabling the creation of directories
and certain files<p class="para"><a class="indexterm" name="AUTOID-9124"></A
>Another approach is to disable the creation of
directories and files with funny names (for example, files that begin
with &quot;.&quot;) in your anonymous <span class="acronym">FTP</SPAN
>
server. Depending on your server, you may be able to do this with a
configuration file (for example, the <em class="emphasis">wuarchive</EM
> 
server lets you
restrict anonymous users from deleting, overwriting, or creating
certain types of files), or you may have to modify the server source
code. (This is a nontrivial modification, which requires a reasonably
competent C programmer.)</P
><p class="para">This approach doesn't keep people from uploading stuff to the writable
directory you provide; it simply makes it more difficult for them to
hide that stuff so that it escapes your notice. If you do this, you
will still need to look at the writable area every day (and look at
the content of files, not just the names) to be sure everything is
something that belongs there.</P
>Uploading by prearrangement<p class="para"><a class="indexterm" name="AUTOID-9132"></A
><a class="indexterm" name="AUTOID-9135"></A
>Another approach is used frequently by sites that want people to be able
to upload files, but only by prearrangement. These sites take
a page from the underground's own book by creating hidden writable
subdirectories that you can only access if you know they're there. The
attackers can't see them; they're unaware that there's a
&quot;there&quot; there for their
wares.</P
><p class="para">Here's what you do, assuming you're using a <span class="acronym">UNIX</SPAN
>
system for your <span class="acronym">FTP</SPAN
> server:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Make an &quot;incoming&quot; directory. </P
></LI
><li class="listitem"><p class="para">Make a subdirectory there with a &quot;secret&quot; name, chosen in
much the same way you'd choose a password&nbsp;- that is, something
unguessable.</P
></LI
><li class="listitem"><p class="para">Make the subdirectory with the secret name be writable.</P
></LI
><li class="listitem"><p class="para">&#13;Make the parent directory (the incoming directory) mode execute-only
(mode 111&nbsp;- that is,
<code class="literal">--x--x--x</CODE
>).&#13;</P
></LI
></OL
><p class="para">For example:</P
><blockquote class="screen"><pre class="screen">unix# cd ~ftp/pub
unix# mkdir incoming
unix# cd incoming
unix# mkdir b2b_Free
unix# chmod a+w b2b_Free # or &quot;chmod 0777 b2b_Free&quot;
unix# cd ..
unix# chmod a=x incoming # or &quot;chmod 0111 incoming&quot;</PRE
></BLOCKQUOTE
><p class="para">Users can now upload files to the writable directory only if they know
(presumably because you've told them) its secret, password-like name.
You can create as many of these secret subdirectories as necessary,
and you can change or delete them as often as necessary. If your site
creates a top-level index of your <span class="acronym">FTP</SPAN
> area (such as
a file containing the output of &quot;ls -lR ~ftp&quot;), you need to make sure
that the hidden directories don't appear in the index. The easiest way
to do that is to run the indexing command as the &quot;ftp&quot; user, so that
it has the same permissions that someone using anonymous
<span class="acronym">FTP</SPAN
> would have.</P
><p class="para">Beware that some <span class="acronym">FTP</SPAN
> clients with graphical user
interfaces will only let a user access a directory that the
<span class="acronym">FTP</SPAN
> client can see; they don't provide a way for
the user to jump blindly to a directory that doesn't
appear in a directory listing. Such clients won't work with this
scheme because, by design, the client can't see the names of the
subdirectories containing the actual data. This is not usually a
problem for people coming in from <span class="acronym">UNIX</SPAN
> machines,
and there are publicly available clients for most platforms that do
not have this problem, so you may be able to work around this
limitation.</P
>Removing the files<p class="para"><a class="indexterm" name="AUTOID-9162"></A
><a class="indexterm" name="AUTOID-9165"></A
>There is one other approach you might take, particularly if you find
that your anonymous <span class="acronym">FTP</SPAN
> area is already being
abused and you're curious to see what people are uploading
there. Basically, you run a short shell script once a minute as a
<em class="emphasis">cron</EM
> job that moves files from the writable
incoming directory to another directory outside the
anonymous <span class="acronym">FTP</SPAN
> area. This will ensure that the
intruders won't be able to see what's been uploaded. You may need to
rename files when you move them to avoid overwriting files with the
same name. Because the files aren't there to look at, it's easy for
people to unintentionally create name conflicts (particularly if
they're sending you crash dumps, which probably all start out having
the same name).</P
><p class="para">Make sure that the new directory is on the same filesystem, so the
operating system doesn't have to copy the data. Because of the way
that the <span class="acronym">UNIX</SPAN
> filesystem works, this approach works
even if the file is still being written when the &quot;move&quot;
takes place, as long as the directory you're moving it to is on the
same filesystem as the original directory (&quot;moving&quot; a file
in such a case doesn't actually move the data; it merely renames the
file).</P
><p class="para">This doesn't avoid denial of service attacks; people can still fill up
your disk space. In fact, they may retry downloads multiple times
(because the files keep mysteriously disappearing) and unintentionally
fill up your disks.<a class="indexterm" name="AUTOID-9174"></A
><a class="indexterm" name="AUTOID-9175"></A
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-16">8.2.1.7 Summary of recommendations for
<span class="acronym">FTP</SPAN
></A
></H4
><ul class="itemizedlist"><li class="listitem"><p class="para">If you have <span class="acronym">FTP</SPAN
> clients that properly support
passive mode, then allow internal hosts to contact external
<span class="acronym">FTP</SPAN
> servers via packet filtering. This is only safe
if you can filter on the <span class="acronym">TCP ACK</SPAN
> bit, so that you
can allow only outgoing <span class="acronym">TCP</SPAN
>
connections from ports above 1023 to ports above 1023.</P
></LI
><li class="listitem"><p class="para">If you have <span class="acronym">FTP</SPAN
> clients that don't support passive
mode, then use an <span class="acronym">FTP</SPAN
> proxy server such as the one
in the <span class="acronym">TIS</SPAN
> Internet Firewall Toolkit.</P
></LI
><li class="listitem"><p class="para">Consider providing <span class="acronym">FTP</SPAN
> access via both packet
filtering and proxies, supporting passive mode via packet filtering
and normal mode via proxies.</P
></LI
><li class="listitem"><p class="para">If you want to allow incoming <span class="acronym">FTP</SPAN
>, use packet
filters to allow incoming <span class="acronym">FTP</SPAN
> only to your bastion
host.</P
></LI
><li class="listitem"><p class="para">If you allow incoming <span class="acronym">FTP</SPAN
> (anonymous or user), use
an up-to-date <span class="acronym">FTP</SPAN
> server.</P
></LI
><li class="listitem"><p class="para">If you allow anonymous <span class="acronym">FTP</SPAN
> users to write files,
protect the writable area so it can't be used to transfer files
between third parties.</P
></LI
><li class="listitem"><p class="para">Be careful about who within your organization can put up files for
anonymous <span class="acronym">FTP</SPAN
>, and make sure they understand what
they're doing.</P
></LI
><li class="listitem"><p class="para">If you want to allow nonanonymous <span class="acronym">FTP</SPAN
>, see <a class="xref" href="ch10_01.htm" title="Authentication and Inbound Services">Chapter 10, <cite class="chapter">Authentication and Inbound
Services</CITE
></A
> for a discussion of the password and
authentication issues involved.  </P
></LI
></UL
></DIV
><a class="indexterm" name="AUTOID-9212"></A
><a class="indexterm" name="AUTOID-9213"></A
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-5">8.2.2 Trivial File Transfer Protocol
(<span class="acronym">TFTP</SPAN
>)</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-9218"></A
><a class="indexterm" name="CH08TFTP"></A
><a class="indexterm" name="CH08CONFTFTP"></A
><span class="acronym">TFTP</SPAN
> is a simplified file transfer protocol; it is
simpler than <span class="acronym">FTP</SPAN
>, and is designed to be implemented
in <span class="acronym">ROM</SPAN
> for booting diskless systems like X
terminals, diskless workstations, and routers. There is no
authentication with <span class="acronym">TFTP</SPAN
>; a <span class="acronym">TFTP</SPAN
>
client simply connects to the server and asks for a file, without
saying who the file is for. If the file is one that the server can
access, the server gives the client the file. For this reason, you
need to be very careful about what your <span class="acronym">TFTP</SPAN
> server
(if you have one) can access, and what clients can access the server.</P
><p class="para">Generally, there's no reason at all to allow <span class="acronym">TFTP</SPAN
>
across your firewall, even if you use it internally. You do not want
to boot diskless systems across the Internet, and people do not
transfer files with <span class="acronym">TFTP</SPAN
>.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-17">8.2.2.1 Packet filtering characteristics of
<span class="acronym">TFTP</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-9239"></A
><span class="acronym">TFTP</SPAN
> is a <span class="acronym">UDP</SPAN
>-based
protocol. Servers listen on port 69 for the initial client-to-server packet to establish the TFTP session, then use a port above 1023 for all further packets during that session. Clients use ports above 1023.</P
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Direc-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Pro-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">ACK</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">tion</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tocol</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Set</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Notes</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">69</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[8]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming <span class="acronym">TFTP</SPAN
> request (first packet from client)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[8]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Response to incoming request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">UDP</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[8]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Subsequent packets from client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">69</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[8]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing <span class="acronym">TFTP</SPAN
> request (first packet from client)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[8]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Response to outgoing request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">UDP</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[8]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Subsequent packets from client</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[8] <span class="acronym">UDP</SPAN
> packets 
do not have <span class="acronym">ACK</SPAN
> bits.</P
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-18">8.2.2.2 Proxying characteristics of
<span class="acronym">TFTP</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-9396"></A
><span class="acronym">TFTP</SPAN
> does not lend itself well to proxying.
Because 
<span class="acronym">TFTP</SPAN
> clients are often implemented in hardware,
with no users involved, neither modified clients nor modified user
procedures are generally implementable. A transparent proxy could
easily support <span class="acronym">TFTP</SPAN
>, providing the same extremely
minimal amount of security achievable if you allow
<span class="acronym">TFTP</SPAN
> through packet filters.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-19">8.2.2.3 Summary of <span class="acronym">TFTP</SPAN
>
recommendations</A
></H4
><ul class="itemizedlist"><li class="listitem"><p class="para">Do not allow <span class="acronym">TFTP</SPAN
> across your firewall.</P
></LI
></UL
></DIV
><a class="indexterm" name="AUTOID-9411"></A
><a class="indexterm" name="AUTOID-9412"></A
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-6">8.2.3 File Service Protocol (<span class="acronym">FSP</SPAN
>)</A
></H3
><p class="para"><a class="indexterm" name="CH08FSP"></A
><a class="indexterm" name="CH08CONFFSP"></A
><span class="acronym">FSP</SPAN
> is a file transfer protocol that was designed
to circumvent <span class="acronym">FTP</SPAN
> restrictions. Very few sites
provide supported <span class="acronym">FSP</SPAN
> service; most
<span class="acronym">FSP</SPAN
> servers are set up by users or attackers,
without the knowledge or consent of a machine's managers. <span class="acronym">FSP</SPAN
> activity is often a clue that attackers have
compromised a site; attackers often use <span class="acronym">FSP</SPAN
> to move
their files from site to site. <span class="acronym">FSP</SPAN
> activity can be
difficult to detect, however, because, as we discuss below, there are no
standard port numbers that <span class="acronym">FSP</SPAN
> clients and servers
use.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-20">8.2.3.1 Packet filtering characteristics of
<span class="acronym">FSP</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-9435"></A
><span class="acronym">FSP</SPAN
> is intentionally difficult to suppress with
packet filtering. Filtering out all <span class="acronym">UDP</SPAN
> services
except those you need, and restricting those to specific hosts, will
pretty well get rid of it except on the hosts you're allowing other
<span class="acronym">UDP</SPAN
> services to. If you want to allow FSP, that's
extremely simple; allowing <span class="acronym">UDP</SPAN
> packets to and from
a host, at any port number, will allow it to be an
<span class="acronym">FSP</SPAN
> server and/or client.</P
><p class="para"><span class="acronym">FSP</SPAN
> is a <span class="acronym">UDP</SPAN
>-based
protocol. There is no &quot;standard&quot; port number that the
server runs on; anyone running a server chooses the port that server
will use. If they have root access, they often choose port 21, the
<span class="acronym">UDP</SPAN
> equivalent of the <span class="acronym">TCP</SPAN
> port
used by <span class="acronym">FTP</SPAN
>; if they don't have root access, they
have to use a port above 1023, and there's no predicting what it will
be. Clients generally use ports above 1023.</P
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Direc-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Pro-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">ACK</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">tion</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tocol</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Set</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Notes</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023[9] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[9] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[10]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming <span class="acronym">FSP</SPAN
> request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[9] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023[9] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[10] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Response to incoming request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023[9] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[9] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[10] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing <span class="acronym">FSP</SPAN
> request</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">UDP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[9] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023[9] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[10] </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Response to outgoing request</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[9] <span class="acronym">FSP</SPAN
> does not have standard port numbers, although
people running <span class="acronym">FSP</SPAN
> servers often put them on port
21 if they have root access (paralleling <span class="acronym">FTP</SPAN
>
servers, which use <span class="acronym">TCP</SPAN
> port 21). Clients usually
use ports above 1023, but not always.</P
><p class="para">[10] <span class="acronym">UDP</SPAN
> packets do not 
have <span class="acronym">ACK</SPAN
> bits.</P
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-21">8.2.3.2 Proxying characteristics of
<span class="acronym">FSP</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-9578"></A
>Using generic proxies to proxy a <span class="acronym">UDP</SPAN
>-based
application with no standard port number is as difficult as trying to
suppress it with packet filters. No standard proxy package supports
<span class="acronym">FSP</SPAN
>. A dedicated <span class="acronym">FSP</SPAN
> proxy would
be possible to write.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-22">8.2.3.3 Summary of <span class="acronym">FSP</SPAN
> recommendations</A
></H4
><ul class="itemizedlist"><li class="listitem"><p class="para">Do not allow <span class="acronym">FSP</SPAN
> across your firewall. Block all
<span class="acronym">UDP</SPAN
> except for specific services you wish to
intentionally allow, such as <span class="acronym">DNS</SPAN
>.</P
></LI
></UL
><a class="indexterm" name="AUTOID-9594"></A
><a class="indexterm" name="AUTOID-9595"></A
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-08-S2-7">8.2.4 <span class="acronym">UNIX</SPAN
>-to-<span class="acronym">UNIX</SPAN
>
Copy Protocol (<span class="acronym">UUCP</SPAN
>)</A
></H3
><p class="para"><a class="indexterm" name="CH08UUCP"></A
><a class="indexterm" name="CH08CONFUUCP"></A
><a class="indexterm" name="AUTOID-9608"></A
><span class="acronym">UUCP</SPAN
> was designed for transferring files, including
electronic mail and news, between <span class="acronym">UNIX</SPAN
> machines; it
is the original <span class="acronym">UNIX</SPAN
> networking
system. <span class="acronym">UUCP</SPAN
> is primarily used as a dial-up
protocol (as the sole protocol over a modem connection), but some
sites, particularly those with intermittent dial-up Internet service,
use <span class="acronym">UUCP</SPAN
> over <span class="acronym">TCP</SPAN
> to transfer
mail and news from their service provider. <span class="acronym">UUCP</SPAN
>
allows the service provider to collect and hold all of the site's mail
and news; when the site brings up its Internet connection and contacts
the service provider using <span class="acronym">UUCP</SPAN
>, the service
provider transfers all of the accumulated mail and news at once.</P
><p class="para"><span class="acronym">UUCP</SPAN
> over <span class="acronym">TCP</SPAN
> is also used by
some sites that have much faster permanent Internet connections (56
Kb/s lines, for example) to transfer Usenet news,
because <span class="acronym">UUCP</SPAN
> over <span class="acronym">TCP</SPAN
> is more
bandwidth-efficient than <span class="acronym">NNTP</SPAN
> for this purpose. (It
has recently become difficult or impossible to keep up with the news
in every group over a 56 Kb/s line using NNTP, for example; there
isn't enough bandwidth. As the volume of Usenet news continues to
grow, this problem is going to get worse.)</P
><p class="para">One of the nice features of <span class="acronym">UUCP</SPAN
> is that, once a
connection between two sites is established, that connection is used
to transfer all the pending data between the two sites, regardless of
which site initiated the connection. This means that you could allow
only outgoing <span class="acronym">UUCP</SPAN
> connections, and poll your
service provider on a regular basis (hourly, for example) to both
send your outgoing messages and collect your incoming messages.</P
><p class="para">Most sites do not use <span class="acronym">UUCP</SPAN
> in any form any more. If
you don't have any special needs, you can simply not allow it across
your firewall.</P
><p class="para">Because <span class="acronym">UUCP</SPAN
> uses reusable passwords, someone who
snoops on one of your <span class="acronym">UUCP</SPAN
> sessions will later be
able to connect to your service provider and impersonate you, or connect
to you and impersonate your service provider. The passwords are also
generally stored unencrypted in the configuration files on the calling
machine, so it may be possible to do this without even snooping on a
connection first. You may be able to defend against this with various
mechanisms that depend on what version of <span class="acronym">UUCP</SPAN
> you
and your service provider are using.[11]</P
><blockquote class="footnote"><p class="para">[11] For a more detailed discussion, see the book <cite class="citetitle">Managing <span class="acronym">UUCP</SPAN
>
and Usenet</CITE
> by Tim O'Reilly and Grace Todino (O'Reilly
&amp; Associates, 1992).</P
></BLOCKQUOTE
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-23">8.2.4.1 Packet filtering characteristics of
<span class="acronym">UUCP</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-9643"></A
><span class="acronym">UUCP</SPAN
> over <span class="acronym">TCP</SPAN
> is obviously a
 <span class="acronym">TCP</SPAN
>-based service. Servers use port 540. Clients
 use ports above 1023.</P
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Direc-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Pro-</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Source</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Dest.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">ACK</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">tion</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Addr.</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">tocol</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Port</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Set</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Notes</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">540</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[12]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming <span class="acronym">UUCP</SPAN
> connection, client to server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">540</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Incoming <span class="acronym">UUCP</SPAN
> connection, server to client</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Out</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">540</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">[12]</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing <span class="acronym">UUCP</SPAN
> connection, client to server</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">In</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Ext</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Int</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><span class="acronym">TCP</SPAN
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">540</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">&gt;1023</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Outgoing <span class="acronym">UUCP</SPAN
> connection, server to client</P
></TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[12] <span class="acronym">ACK</SPAN
> is not set 
on the first packet of this type (establishing connection) but 
will be set on the rest.</P
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-24">8.2.4.2 Proxying characteristics of <span class="acronym">UUCP</SPAN
></A
></H4
><p class="para"><a class="indexterm" name="AUTOID-9764"></A
><span class="acronym">UUCP</SPAN
> is a store-and-forward protocol, and as such
is not used with general-purpose proxies; instead, it's configured to
effectively do its own proxying. It is a straightforward
single-connection protocol used with a small number of clients, and
thus is well-suited to both modified-client and modified-procedure
proxying. On the other hand, it is rare for people to want to proxy
it, so there are no widely available proxies specifically written for
it. Generic proxy servers, such as the <em class="emphasis">plug-gw</EM
>
program in the <span class="acronym">TIS FWTK</SPAN
>, should work if you can
decide which real server to connect to based on which client the
connection request is coming from (in other words, if all connections
are to the same server, or if a given client host always connects to
the same server).</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-08-S3-25">8.2.4.3 Summary of <span class="acronym">UUCP</SPAN
> recommendations</A
></H4
><ul class="itemizedlist"><li class="listitem"><p class="para">You probably do not need to allow <span class="acronym">UUCP</SPAN
> over
<span class="acronym">TCP</SPAN
> at your site. If you do wish to use it, use
packet filters to limit access to a bastion host.</P
></LI
></UL
><a class="indexterm" name="AUTOID-9779"></A
><a class="indexterm" name="AUTOID-9780"></A
></DIV
></DIV
><a class="indexterm" name="AUTOID-9781"></A
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_01.htm" title="8.1 Electronic Mail"><img src="../gifs/txtpreva.gif" alt="Previous: 8.1 Electronic Mail" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Building Internet Firewalls"><img src="../gifs/txthome.gif" alt="Building Internet Firewalls" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_03.htm#FIRE-08-S2-8" title="8.3 Terminal Access (Telnet)"><img src="../gifs/txtnexta.gif" alt="Next: 8.3 Terminal Access (Telnet)" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">8.1 Electronic Mail</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_a.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">8.3 Terminal Access (Telnet)</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
