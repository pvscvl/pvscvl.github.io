<html><head>
<title>[Chapter 7] 7.4 Using Proxying with Internet Services</TITLE>
<meta name="DC.title" content="Building Internet Firewalls"><meta name="DC.creator" content="D. Brent Chapman &amp; Elizabeth D. Zwicky"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:18:55Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-124-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_01.htm" title="7. Proxy Systems"><link rel="prev" href="ch07_03.htm#FIRE-07-S2-6" title="7.3 Proxy Server Terminology "><link rel="next" href="ch07_05.htm" title="7.5 Proxying Without a Proxy Server"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Building Internet Firewalls" usemap="#srchmap" border="0"></H1
><map name="srchmap"index.html><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Building Internet Firewalls"><area shape="RECT" coords="467,0,514,18" href="../search/fsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_03.htm#FIRE-07-S2-6" title="7.3 Proxy Server Terminology "><img src="../gifs/txtpreva.gif" alt="Previous: 7.3 Proxy Server Terminology " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 7<br>Proxy Systems</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch07_05.htm" title="7.5 Proxying Without a Proxy Server"><img src="../gifs/txtnexta.gif" alt="Next: 7.5 Proxying Without a Proxy Server" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="FIRE-07-S1-4">7.4 Using Proxying with Internet
Services</A
></H2
><p class="para"><a class="indexterm" name="CH07PSINT"></A
><a class="indexterm" name="CH07SERVINTPROX"></A
>Because proxying interferes with communications between a client and a
server, it has to be adapted separately to each service. Some things
that are easy to do normally become much more difficult when a proxy
is involved.</P
><p class="para">The ideal service for proxying makes a <span class="acronym">TCP</SPAN
>
connection in one direction; has only secure commands; has some piece
of variable-length, user-specified data that's passed to the server;
and is being used from an internal client to an external server. The
following sections look at these ideal situations, and some that
aren't so ideal.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-07-S2-8">7.4.1 <span class="acronym">TCP</SPAN
> Versus Other
Protocols</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-7316"></A
>Because <span class="acronym">TCP</SPAN
> is a connection-oriented protocol, you
only go through the overhead of setting up the proxy once, and then
you continue to use that connection. <span class="acronym">UDP</SPAN
> has no
concept of connections; every packet is a separate transaction
requiring a separate decision from the proxy
server. <span class="acronym">TCP</SPAN
> is therefore easier to proxy (although
the <span class="acronym">UDP</SPAN
> Packet Relayer package is a generic
<span class="acronym">UDP</SPAN
> proxy server). <span class="acronym">ICMP</SPAN
> is so
low-level, it's almost impossible to proxy.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-07-S2-9">7.4.2 Unidirectional Versus Multidirectional
Connections</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-7328"></A
><a class="indexterm" name="AUTOID-7331"></A
><a class="indexterm" name="AUTOID-7333"></A
>It's easy for a proxy server to intercept the initial connection from
a client to a server. It's harder for it to intercept a return
connection. Either both ends of the conversation have to be aware of
the existence of the proxy server, or the server needs to be able to
interpret and modify the protcol to make certain the return connection
is made correctly. For example, normal-mode <span class="acronym">FTP</SPAN
>
requires the proxy server to intercept the <span class="acronym">PORT</SPAN
>
command the client sends to the server, open a connection from the
proxy to the client at that port, and send a different
<span class="acronym">PORT</SPAN
> command (for a port on the proxy) to the real
server. It's not enough for the proxy server to simply read the
<span class="acronym">PORT</SPAN
> command on the way past, because that port may
already be in use. Similar problems are going to arise in any protocol
requiring a return connection.</P
><p class="para">Anything more complex than an outbound connection and a return is even
worse. The <em class="emphasis">talk </EM
>service is an example; see the
discussion in <a class="xref" href="ch08_01.htm" title="Configuring Internet Services">Chapter 8</A
> for an example of a service
with a tangled web of connections that's almost impossible to
proxy. (It doesn't help any that <em class="emphasis">talk</EM
> is partly
<span class="acronym">UDP</SPAN
>-based, but even if it were all
<span class="acronym">TCP</SPAN
>, it would still be a proxy-writer's nightmare.)</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-07-S2-10">7.4.3 Protocol Security</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-7348"></A
><a class="indexterm" name="AUTOID-7351"></A
><a class="indexterm" name="AUTOID-7354"></A
>For some services, proxying may be technically easy, but pointless
from a security point of view. If a protocol is inherently unsafe,
proxying it without doing anything else will not make it any
safer. For example, X11 is mildly tricky to proxy, for reasons
discussed at length in <a class="xref" href="ch08_01.htm" title="Configuring Internet Services">Chapter 8</A
>, but the real
reason it's not widely proxied through firewalls has nothing to do
with technical issues (proxy X servers are not uncommon as ways to
extend X capabilities). The real reason is that X provides a number of
highly insecure abilities to a client, and a proxy system for a
firewall needs to catch unsafe operations and at least offer the user
the ability to prevent them. This is reasonably possible with X (and
the <span class="acronym">TIS FWTK</SPAN
> provides a proxy called  
<em class="emphasis">x-gw</EM
> that does this), but it 
requires more application
knowledge than would be necessary for a safer protocol.</P
><p class="para">If it's difficult to distinguish between safe and unsafe operations in a
protocol or impossible to use the service at all if unsafe operations
are prevented, proxying may not be a viable solution. In that case,
there may be no good solution, and you may be reduced to using a victim
host, as discussed in <a class="xref" href="ch05_01.htm" title="Bastion Hosts">Chapter 5, <cite class="chapter">Bastion Hosts</CITE
></A
>. 
Some people consider <span class="acronym">HTTP</SPAN
> to be such a protocol 
(because it may end up transferring programs
that are executed transparently by the client).</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-07-S2-11">7.4.4 User-Specified Data </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-7366"></A
>If you're going to use modified-procedure proxying, you need a
modifiable part of the procedure. Programs like <span class="acronym">FTP</SPAN
>
and <span class="acronym">HTTP</SPAN
> clients in which the client passes a nice
long user-specified string to the server, are
perfect. (<span class="acronym">FTP</SPAN
> clients pass a user name to the
server; <span class="acronym">HTTP</SPAN
> clients pass a
<span class="acronym">URL</SPAN
>.) A program like <em class="emphasis">ping</EM
> in
which the client passes absolutely no data to the server is
fundamentally impossible to proxy using an unmodified client.[1] </P
><blockquote class="footnote"><p class="para">[1] People have been known to claim that forcing users to log into a
bastion host to use <em class="emphasis">ping</EM
> is an extreme version of
modified-procedure proxying. It's clearly a modified procedure, but
the &quot;proxy&quot; part is hard to detect.</P
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-07-S2-12">7.4.5 Internal Versus External Clients</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-7381"></A
><a class="indexterm" name="AUTOID-7384"></A
><a class="indexterm" name="AUTOID-7387"></A
><a class="indexterm" name="AUTOID-7390"></A
>Most proxy servers are designed for situations in which the client is
on the inside and the server on the outside, of the firewall. This is
because most proxy servers require some cooperation at the client's
end, and the modifiable clients and the trainable users are probably
both inside the firewall. Proxying for external clients works only in
a few situations:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Using modified procedures to provide inbound services for your own
users. (See <a class="xref" href="ch10_01.htm" title="Authentication and Inbound Services">Chapter 10, <cite class="chapter">Authentication and Inbound
Services</CITE
></A
> for more information about
this situation.)</P
></LI
><li class="listitem"><p class="para">Using something like <em class="emphasis">plug-gw</EM
> to redirect
connections from the proxy server to an internal machine. A program of
this kind will support any number of clients, as long as they all want
to connect to the same internal server.</P
></LI
><li class="listitem"><p class="para">Providing a special service for which you distribute clients.
If you write your own Internet service, you can easily design the
clients to include proxy support.</P
></LI
></UL
><a class="indexterm" name="AUTOID-7402"></A
><a class="indexterm" name="AUTOID-7403"></A
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_03.htm#FIRE-07-S2-6" title="7.3 Proxy Server Terminology "><img src="../gifs/txtpreva.gif" alt="Previous: 7.3 Proxy Server Terminology " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Building Internet Firewalls"><img src="../gifs/txthome.gif" alt="Building Internet Firewalls" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch07_05.htm" title="7.5 Proxying Without a Proxy Server"><img src="../gifs/txtnexta.gif" alt="Next: 7.5 Proxying Without a Proxy Server" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.3 Proxy Server Terminology </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_a.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.5 Proxying Without a Proxy Server</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
