<html><head>
<title>[Appendix C] C.5 Internet Layer</TITLE>
<meta name="DC.title" content="Building Internet Firewalls"><meta name="DC.creator" content="D. Brent Chapman &amp; Elizabeth D. Zwicky"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T00:30:50Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-124-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="appc_01.htm" title="C. TCP/IP Fundamentals"><link rel="prev" href="appc_04.htm" title="C.4 Network Access Layer"><link rel="next" href="appc_06.htm#FIRE-C-S2-7" title="C.6 Transport Layer"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Building Internet Firewalls" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Building Internet Firewalls"><area shape="RECT" coords="467,0,514,18" href="../search/fsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="appc_04.htm" title="C.4 Network Access Layer"><img src="../gifs/txtpreva.gif" alt="Previous: C.4 Network Access Layer" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Appendix C<br><span class="acronym">TCP/IP</SPAN
> Fundamentals</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="appc_06.htm#FIRE-C-S2-7" title="C.6 Transport Layer"><img src="../gifs/txtnexta.gif" alt="Next: C.6 Transport Layer" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="FIRE-C-S1-5">C.5 Internet Layer</A
></H2
><p class="para"><a class="indexterm" name="CILAY"></A
>The layer above the Network Access Layer in the protocol hierarchy is
the Internet Layer. The Internet Protocol, <span class="acronym">RFC</SPAN
>
791, is the heart of <span class="acronym">TCP/IP</SPAN
> and the most important
protocol in the Internet Layer. <span class="acronym">IP</SPAN
> provides the
basic packet delivery service on which <span class="acronym">TCP/IP</SPAN
>
networks are built. All protocols, in the layers above
<span class="acronym">IP</SPAN
> (<span class="acronym">TCP</SPAN
>, <span class="acronym">UPD</SPAN
>)
and below it (Ethernet, <span class="acronym">FDDI</SPAN
>,
<span class="acronym">ATM</SPAN
>, etc.) use <span class="acronym">IP</SPAN
> to deliver
data. All <span class="acronym">TCP/IP</SPAN
> data flows through
<span class="acronym">IP</SPAN
>, incoming and outgoing, regardless of its final
destination.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-C-S2-4">C.5.1 Internet Protocol</A
></H3
><p class="para"><a class="indexterm" name="CIP"></A
><span class="acronym">IP</SPAN
> is the building block of the Internet. Its
functions include:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Defining the datagram, which is the basic unit of transmission in the
Internet</P
></LI
><li class="listitem"><p class="para">Defining the Internet addressing scheme</P
></LI
><li class="listitem"><p class="para">Moving data between the Network Access Layer and the Host-to-Host
Transport Layer</P
></LI
><li class="listitem"><p class="para">Routing datagrams to remote hosts</P
></LI
><li class="listitem"><p class="para">Performing fragmentation and reassembly of datagrams</P
></LI
></UL
><p class="para">But before describing these functions in more detail, let's look at
some of <span class="acronym">IP</SPAN
>'s characteristics. First,
<span class="acronym">IP</SPAN
> is a <em class="emphasis">connectionless
protocol</EM
>. This means that <span class="acronym">IP</SPAN
> does not
exchange control information (called a <em class="emphasis">handshake</EM
>)
to establish an end-to-end connection before transmitting data. In
contrast, a <em class="emphasis">connection-oriented protocol</EM
>
exchanges control information with the remote system to verify that it
is ready to receive data before sending it. When the handshaking is
successful, the systems are said to have established a
<em class="emphasis">connection</EM
>. <span class="acronym">IP</SPAN
> relies on
protocols in other layers to establish the connection if they require
connection-oriented service.</P
><p class="para"><span class="acronym">IP</SPAN
> also relies on protocols in the other layers to
provide error detection and error recovery. The Internet Protocol is
sometimes called an <em class="emphasis">unreliable protocol </EM
>because
it contains no error detection and recovery code. This is not to say
that the <span class="acronym">IP</SPAN
> protocol cannot be relied
on&nbsp;- quite the contrary. <span class="acronym">IP</SPAN
> can be relied upon
to accurately deliver your data to the connected network, but it
doesn't check whether the data was correctly received. Protocols in
other layers of the <span class="acronym">TCP/IP</SPAN
> architecture provide
this checking when it is required.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-C-S3-1">C.5.1.1 The datagram</A
></H4
><p class="para"><a class="indexterm" name="CDATA"></A
>The <span class="acronym">TCP/IP</SPAN
> protocols were built to transmit data
over the <span class="acronym">ARPANET</SPAN
>, which was a <em class="emphasis">packet
switching network</EM
>. A <em class="emphasis">packet</EM
> is a block
of data that carries with it the information necessary to deliver
it&nbsp;- in a manner similar to a postal letter, which has an address
written on its envelope. A packet switching network uses the
addressing information in the packets to switch packets from one
physical network to another, moving them toward their final
destination. Each packet travels the network independently of any
other packet.</P
><p class="para">The <em class="emphasis">datagram</EM
> is the packet format defined by
<span class="acronym">IP</SPAN
>. <a class="xref" href="#FIRE-C-FIG-4" title="IP datagram format">Figure 13.8</A
> is a pictorial
representation of an <span class="acronym">IP</SPAN
> datagram. The first five or
six 32-bit words of the datagram are control information called the
<em class="emphasis">header</EM
>. By default, the header is five words
long; the sixth word is optional. Because the header's length is
variable, it includes a field called Internet Header Length
(<span class="acronym">IHL</SPAN
>) that indicates the header's length in words.
The header contains all the information necessary to deliver the
packet.</P
><div class="sidebar"><h4 class="sidebar"><a class="title" name="AUTOID-23690">A Note About Terminology</A
></H4
><p class="para">This adapted appendix is very precise in its definitions and usage
of terms such as <em class="emphasis">packet</EM
> and
<em class="emphasis">datagram</EM
>. Throughout the rest of this book, we
tend to be more relaxed about the terminology, and simply use the term
&quot;packet&quot; regardless of what layer of the protocol stack
we're discussing.</P
></DIV
><h4 class="figure"><a class="title" name="FIRE-C-FIG-4">Figure 13.8: <span class="acronym">IP</SPAN
> datagram format</A
></H4
><img class="graphic" src="figs/firec04.gif" alt="Figure 13.8"><p class="para"><span class="acronym">IP</SPAN
> delivers the datagram by checking the
<em class="emphasis">Destination Address</EM
> in word 5 of the header. The
Destination Address is a standard 32-bit <span class="acronym">IP</SPAN
> address
that identifies the destination network and the specific host on that
network. (The format of <span class="acronym">IP</SPAN
> addresses is explained
later in this appendix.) If the Destination Address is the address of
a host on the directly attached network, the packet is delivered
directly to the destination. If the Destination Address is not on the
local network, the packet is passed to a gateway for<a class="indexterm" name="AUTOID-23704"></A
>
delivery. <em class="emphasis">Gateways</EM
> are devices that switch
packets between the different physical networks. Deciding which
gateway to use is called
<em class="emphasis">routing</EM
>. <span class="acronym">IP</SPAN
> makes the routing
decision for each individual packet.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-C-S3-2">C.5.1.2 Routing datagrams</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-23712"></A
>Internet gateways are commonly (and perhaps more accurately) referred
to as <em class="emphasis">IP routers</EM
> because they use
<span class="acronym">IP</SPAN
> to route packets between networks. In traditional
<span class="acronym">TCP/IP</SPAN
> jargon, there are only two types of network
devices: <em class="emphasis">gateways </EM
>and
<em class="emphasis">hosts</EM
>. Gateways forward packets between networks
and hosts don't. However, if a host is connected to more than one<a class="indexterm" name="AUTOID-23720"></A
>
network (called a <em class="emphasis">multi-homed host</EM
>), it can
forward packets between the networks. When a multi-homed host forwards
packets, it acts like any other gateway and is considered to be a
gateway. Current data communications terminology sometimes makes a
distinction between gateways and routers,[2] but we'll use the terms gateway and <span class="acronym">IP</SPAN
>
router interchangeably.</P
><blockquote class="footnote"><p class="para">[2] In current terminology, a gateway moves data between different
protocols and a router moves data between different networks. So a
system that moves mail between <span class="acronym">TCP/IP</SPAN
> and
<span class="acronym">OSI</SPAN
> is a gateway, but a traditional
<span class="acronym">IP</SPAN
> gateway is a router.</P
></BLOCKQUOTE
><p class="para"><a class="xref" href="#FIRE-C-FIG-5" title="Routing through gateways">Figure 13.9</A
> shows the use of gateways to forward
packets. The hosts (or <em class="emphasis">end systems</EM
>) process
packets through all four protocol layers, while the gateways (or
<em class="emphasis">intermediate systems</EM
>) process the packets only up
to the Internet Layer where the routing decisions are made.</P
><h4 class="figure"><a class="title" name="FIRE-C-FIG-5">Figure 13.9: Routing through gateways</A
></H4
><img class="graphic" src="figs/firec05.gif" alt="Figure 13.9"><p class="para">Systems can only deliver packets to other devices attached to the same
physical network. Packets from A1, destined for host C1, are forwarded
through gateways G1 and G2. Host A1 first delivers the packet to
gateway G1, with which it shares network A. Gateway G1 delivers the
packet to G2, over network B. Gateway G2 then delivers the packet
directly to host C1, because they are both attached to network C. Host
A1 has no knowledge of any gateways beyond gateway G1. It sends
packets destined for both networks C and B to that local gateway, and
then relies on that gateway to properly forward the packets along the
path to their destinations. Likewise, host C1 would send its packets
to G2, in order to reach a host on network A, as well as any host on
network B.</P
><p class="para"><a class="xref" href="#FIRE-C-FIG-6" title="Networks, gateways, and hosts">Figure 13.10</A
> shows another view of routing. This
figure emphasizes that the underlying physical networks a
datagram travels through may be different and even incompatible. Host
A1 on the token ring network routes the datagram through gateway G1,
to reach host C1 on the Ethernet. Gateway G1 forwards the data through
the X.25 network to gateway G2, for delivery to C1. The datagram
traverses three physically different networks, but eventually arrives
intact at C1.</P
><h4 class="figure"><a class="title" name="FIRE-C-FIG-6">Figure 13.10: Networks, gateways, and hosts</A
></H4
><img class="graphic" src="figs/firec06.gif" alt="Figure 13.10"></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-C-S3-3">C.5.1.3 Fragmenting datagrams</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-23745"></A
><a class="indexterm" name="AUTOID-23748"></A
>As a datagram is routed through different networks, it may be
necessary for the <span class="acronym">IP</SPAN
> module in a gateway to divide
the datagram into smaller pieces. A datagram received from one network
may be too large to be transmitted in a single packet on a different
network. This condition only occurs when a gateway interconnects
dissimilar physical networks.</P
><p class="para"><a class="indexterm" name="AUTOID-23752"></A
><a class="indexterm" name="AUTOID-23754"></A
>Each type of network has a <em class="emphasis">maximum transmission unit
(<span class="acronym">MTU</SPAN
>)</EM
>, which is the largest packet it
can transfer. If the datagram received from one network is longer than
the other network's <span class="acronym">MTU</SPAN
>, it is necessary to divide
the datagram into smaller fragments for transmission. This process is
called <em class="emphasis">fragmentation</EM
>. Think of a train delivering
a load of steel. Each railway car can carry more steel than the trucks
that will take it along the highway; so each railway car is unloaded
onto many different trucks. In the same way that a railroad is
physically different from a highway, an Ethernet is physically
different from an X.25 network; <span class="acronym">IP</SPAN
> must break an
Ethernet's relatively large packets into smaller packets before it can
transmit them over an X.25 network.</P
><p class="para">The format of each fragment is the same as the format of any normal
datagram. Header word 2 contains information that identifies each
datagram fragment and provides information about how to reassemble
the fragments back into the original datagram. The Identification
field identifies what datagram the fragment belongs to, and the
Fragmentation Offset field tells what piece of the datagram this
fragment is. The Flags field has a More Fragments bit that tells
<span class="acronym">IP</SPAN
> if it has assembled all of the datagram
fragments.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="FIRE-C-S3-4">C.5.1.4 Passing datagrams to the transport
layer</A
></H4
><p class="para">When <span class="acronym">IP</SPAN
> receives a datagram that is addressed to
the local host, it must pass the data portion of the datagram to the
correct Transport Layer protocol. This is done by using the
<em class="emphasis">Protocol Number</EM
> from word 3 of the datagram
header. Each Transport Layer protocol has a unique protocol number
that identifies it to IP. Protocol numbers are discussed later in this
appendix.</P
><a class="indexterm" name="AUTOID-23768"></A
><a class="indexterm" name="AUTOID-23769"></A
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="FIRE-C-S2-5">C.5.2 Internet Control Message
Protocol</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-23773"></A
>An integral part of <span class="acronym">IP</SPAN
> is the Internet Control
Message Protocol (<span class="acronym">ICMP</SPAN
>) defined in
<span class="acronym">RFC</SPAN
> 792. This protocol is closely associated with the Internet
Layer and uses the <span class="acronym">IP</SPAN
> datagram delivery facility to
send its messages. <span class="acronym">ICMP</SPAN
> sends messages that perform
the following control, error reporting, and informational functions
for <span class="acronym">TCP/IP</SPAN
>:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">Flow control</EM
></DT
><dd class="listitem"><p class="para">When datagrams arrive too fast for processing, the destination host or
an intermediate gateway sends an <span class="acronym">ICMP</SPAN
> Source Quench
Message back to the sender. This tells the source to temporarily stop
sending datagrams.</P
></DD
><dt class="term"><em class="emphasis">Detecting unreachable destinations</EM
></DT
><dd class="listitem"><p class="para">When a destination is unreachable, the system detecting the problem
sends a Destination Unreachable Message to the datagram's source. If
the unreachable destination is a network or host, the message is sent
by an intermediate gateway. But if the destination is an unreachable
port, the destination host sends the message. (We discuss ports later
in this appendix.)</P
></DD
><dt class="term"><em class="emphasis">Redirecting routes</EM
></DT
><dd class="listitem"><p class="para">A gateway sends the <span class="acronym">ICMP</SPAN
>
Redirect Message to tell a host to use another gateway, presumably
because the other gateway is a better choice. This message can only
be used when the source host is on the same network as both
gateways. To better understand this, refer to <a class="xref" href="#FIRE-C-FIG-6" title="Networks, gateways, and hosts">Figure 13.10</A
>. If a host on the X.25 network sent a datagram
to G1, it would be possible for G1 to redirect that host to G2 because
the host, G1, and G2 are all attached to the same network. On the
other hand, if a host on the token ring network sent a datagram to G1,
the host could not be redirected to use G2. This is because G2 is not
attached to the token ring.</P
></DD
><dt class="term"><em class="emphasis">Checking remote hosts</EM
></DT
><dd class="listitem"><p class="para">A host can send the <span class="acronym">ICMP</SPAN
> Echo Message to see if a
remote system's <span class="acronym">IP</SPAN
> is up and operational. When a
system receives an echo message, it sends the same packet back to the
source host. The <span class="acronym">UNIX</SPAN
> <em class="emphasis">ping</EM
>
command uses this message.</P
></DD
></DL
></DIV
><a class="indexterm" name="AUTOID-23809"></A
><a class="indexterm" name="AUTOID-23810"></A
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="appc_04.htm" title="C.4 Network Access Layer"><img src="../gifs/txtpreva.gif" alt="Previous: C.4 Network Access Layer" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Building Internet Firewalls"><img src="../gifs/txthome.gif" alt="Building Internet Firewalls" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="appc_06.htm#FIRE-C-S2-7" title="C.6 Transport Layer"><img src="../gifs/txtnexta.gif" alt="Next: C.6 Transport Layer" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">C.4 Network Access Layer</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_a.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">C.6 Transport Layer</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
