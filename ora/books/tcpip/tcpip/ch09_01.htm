<html><head>
<title>[Chapter 9] Configuring Network Servers </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:37:05Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="index.htm" title="TCP/IP Network Administration"><link rel="prev" href="ch08_05.htm" title="8.5 Summary "><link rel="next" href="ch09_02.htm#TCP2-CH-9-SECT-2.1" title="9.2 Line Printer Daemon "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_05.htm" title="8.5 Summary "><img src="../gifs/txtpreva.gif" alt="Previous: 8.5 Summary " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 9</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_02.htm#TCP2-CH-9-SECT-2.1" title="9.2 Line Printer Daemon "><img src="../gifs/txtnexta.gif" alt="Next: 9.2 Line Printer Daemon " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="CHAPTER"><h1 class="chapter"><a class="title" name="TCP2-CH-9">9. Configuring Network Servers </A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="SECT1" href="#TCP2-CH-9-SECT-1" title="9.1 The Network File System ">The Network File System </A
><br><a class="SECT1" href="ch09_02.htm#TCP2-CH-9-SECT-2.1" title="9.2 Line Printer Daemon ">Line Printer Daemon </A
><br><a class="SECT1" href="ch09_03.htm#TCP2-CH-9-SECT-3.0.1" title="9.3 Network Information Service ">Network Information Service </A
><br><a class="SECT1" href="ch09_04.htm" title="9.4 A BOOTP Server ">A BOOTP Server </A
><br><a class="SECT1" href="ch09_05.htm#TCP2-CH-9-SECT-5.1" title="9.5 DHCP ">DHCP </A
><br><a class="SECT1" href="ch09_06.htm#TCP2-CH-9-SECT-6.1" title="9.6 Managing Distributed Servers ">Managing Distributed Servers </A
><br><a class="SECT1" href="ch09_07.htm#TCP2-CH-9-SECT-7.2" title="9.7 Mail Servers ">Mail Servers </A
><br><a class="SECT1" href="ch09_08.htm" title="9.8 Summary ">Summary </A
></P
><p></P
></DIV
><p class="para">Now our attention turns to configuring network servers.<a class="indexterm" name="AUTOID-10248"></A
>
As with name service, these servers are not strictly required for the
network to operate, but they provide services that are central to the
network's purpose.</P
><p class="para">There are many network services&nbsp;- many more than can be covered in this
chapter. We concentrate on servers that provide &quot;computer-to-computer&quot;<a class="indexterm" name="AUTOID-10253"></A
>
services.
[1]
The services covered in this chapter are:</P
><blockquote class="footnote"><p class="para">[1] Notably absent is <b class="emphasis.bold">sendmail</B
>. It requires so much
discussion, it has its own chapter (<a class="xref" href="ch10_01.htm" title="sendmail ">Chapter 10, <cite class="chapter">sendmail </CITE
></A
>)!</P
></BLOCKQUOTE
><ul class="itemizedlist"><li class="listitem"><p class="para">The Network File System (NFS)</P
></LI
><li class="listitem"><p class="para">The Line Printer Daemon (LPD)</P
></LI
><li class="listitem"><p class="para">The Network Information Service (NIS)</P
></LI
><li class="listitem"><p class="para">The Bootstrap Protocol (BOOTP)</P
></LI
><li class="listitem"><p class="para">Dynamic Host Configuration Protocol (DHCP)</P
></LI
><li class="listitem"><p class="para">The Post Office Protocol (POP)</P
></LI
></UL
><p class="para">We begin with NFS, which is the server that provides file sharing on
UNIX networks.</P
><div class="sect1"><h2 class="sect1"><a class="title" name="TCP2-CH-9-SECT-1">9.1 The Network File System </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-9-IX-NETWORK-FILE-SYSTEM-NFS"></A
>The Network File System (NFS) allows directories and files to be shared
across a network. It was originally developed by Sun Microsystems, but
is now supported by virtually all UNIX implementations and many
non-UNIX operating systems. Through NFS, users and programs can access
files located on remote systems <a class="indexterm" name="AUTOID-10279"></A
>
as if they were local files. In a
perfect NFS environment, the user neither knows nor cares where files
are actually stored.</P
><p class="para">NFS has several benefits:<a class="indexterm" name="AUTOID-10284"></A
></P
><ul class="itemizedlist"><li class="listitem"><p class="para">It reduces local disk storage requirements because a network can
store a single copy of a directory,
while the directory continues to be fully accessible to everyone on
the network.</P
></LI
><li class="listitem"><p class="para">NFS simplifies central support tasks&nbsp;- files can be updated
centrally, yet available throughout the network.</P
></LI
><li class="listitem"><p class="para">NFS allows users to use familiar UNIX commands <a class="indexterm" name="AUTOID-10294"></A
>
to manipulate remote files instead of learning new commands. There is
no need to use <b class="emphasis.bold">ftp</B
> or <b class="emphasis.bold">rcp</B
> to copy a file between hosts on
the network; <b class="emphasis.bold">cp</B
> works fine.<a class="indexterm" name="AUTOID-10300"></A
></P
></LI
></UL
><p class="para">There are two sides to NFS&nbsp;- a client side and a server side. The
client is the system that uses the remote directories as if they were
part of its local filesystem. The server is the system that makes the
directories available for use. Attaching a remote directory to the
local filesystem (a client function) is called <em class="emphasis">mounting</EM
> a
directory.<a class="indexterm" name="AUTOID-10304"></A
>
Offering a directory for remote access (a server function)
is called <em class="emphasis">sharing</EM
><a class="indexterm" name="AUTOID-10308"></A
>
a directory.
[2]
Frequently, a system runs both the client and the server NFS software.
In this section we'll look at how to configure a system to share and
mount directories using NFS.</P
><blockquote class="footnote"><p class="para">[2] An older term for this function is <em class="emphasis">exporting</EM
>. Many systems still
refer to file sharing as exporting.</P
></BLOCKQUOTE
><p class="para">If you're responsible for an NFS server for a large site, you should
take care in planning and implementing the NFS environment. The
discussion in this chapter tells how NFS is configured to run on a
client and a server, but you may want more details to design an
optimal NFS environment.  For a comprehensive treatment, see
<em class="emphasis">Managing NFS and NIS</EM
>, by Hal Stern (O'Reilly &amp; Associates).</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-9-SECT-1.1">9.1.1 NFS Daemons </A
></H3
><p class="para">The Network File System is run by several daemons, some 
performing client functions and some performing server functions.
Before we discuss the NFS configuration, let's look at the function of
the daemons that run NFS:</P
><dl class="variablelist"><dt class="term"><b class="emphasis.bold">nfsd</B
> [<code class="replaceable"><i>nservers</I
></CODE
>]</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-10326"></A
>The NFS daemon, <b class="emphasis.bold">nfsd</B
>, runs on NFS servers. This daemon services
the client's NFS requests. The <code class="replaceable"><i>nservers</I
></CODE
> option<a class="indexterm" name="AUTOID-10330"></A
>
is available on Solaris systems. It specifies how many daemons should
be started.</P
></DD
><dt class="term"><b class="emphasis.bold">mountd</B
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-10337"></A
>The NFS mount daemon, <b class="emphasis.bold">mountd</B
>, processes the clients' mount
requests. NFS servers run the mount daemon.</P
></DD
><dt class="term"><b class="emphasis.bold">lockd</B
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-10346"></A
>The lock daemon, <b class="emphasis.bold">lockd</B
>, handles file lock requests. Both<a class="indexterm" name="AUTOID-10349"></A
>
clients and servers run the lock daemon. Clients request file locks,
and servers grant them.</P
></DD
><dt class="term"><b class="emphasis.bold">statd</B
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-10357"></A
>The network status monitor daemon, <b class="emphasis.bold">statd</B
>, is required by
<b class="emphasis.bold">lockd</B
> to provide monitoring services. In particular, it
allows locks to be reset properly after a crash.<a class="indexterm" name="AUTOID-10361"></A
>
Both clients and servers run <b class="emphasis.bold">statd</B
>.</P
></DD
></DL
><p class="para">The daemons necessary to run NFS are started from boot scripts. On a<a class="indexterm" name="AUTOID-10366"></A
>
Solaris system, two scripts located in the <em class="emphasis">/etc/init.d</EM
><a class="indexterm" name="AUTOID-10370"></A
><a class="indexterm" name="AUTOID-10372"></A
>
directory, <em class="emphasis">nfs.client</EM
> and <em class="emphasis">nfs.server</EM
>, handle this job.
The <em class="emphasis">nfs.client</EM
> script<a class="indexterm" name="AUTOID-10378"></A
>
starts the <b class="emphasis.bold">statd</B
> and <b class="emphasis.bold">lockd</B
> programs.
[3]
NFS server systems run those two daemons, plus the NFS server daemon,
<b class="emphasis.bold">nfsd</B
>, and the mount server daemon, <b class="emphasis.bold">mountd</B
>. On Solaris
systems, the <em class="emphasis">nfs.server</EM
> script<a class="indexterm" name="AUTOID-10388"></A
>
starts <b class="emphasis.bold">mountd</B
> and 16 copies of <b class="emphasis.bold">nfsd</B
>.</P
><blockquote class="footnote"><p class="para">[3] On your system, the prefix &quot;rpc.&quot; may be used on the daemon names. For
example, the Slackware Linux system uses the filename <em class="emphasis">rpc.nfsd</EM
>
for the NFS daemon. Check your system's documentation.</P
></BLOCKQUOTE
><p class="para">Each system has its own technique for starting these daemons.  If some
of the daemons aren't starting, make sure your startup scripts are
correct.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-9-SECT-1.2">9.1.2 Sharing Filesystems </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-9-IX-SHARING-FILESYSTEMS"></A
>The first step in configuring a server is deciding which filesystems
will be shared, and what restrictions will be placed on them.  Only
filesystems that provide a benefit to the client should be
shared. Before you share a filesystem, think about what purpose it
will serve. Some common reasons for sharing filesystems are:<a class="indexterm" name="AUTOID-10399"></A
></P
><ul class="itemizedlist"><li class="listitem"><p class="para">To provide disk space to diskless clients</P
></LI
><li class="listitem"><p class="para">To prevent unnecessary duplication of the same data on multiple
systems</P
></LI
><li class="listitem"><p class="para">To provide centrally supported programs and data</P
></LI
><li class="listitem"><p class="para">To share data among users in a group</P
></LI
></UL
><p class="para">Once you've selected the filesystems you'll share, you must configuring
them for sharing using the appropriate commands for your system. In the
following sections we emphasize the way this is done on Solaris systems.
It is very different on Linux systems. Check your system's
documentation to find out exactly how it implements NFS file sharing.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-9-SECT-1.2.1">9.1.2.1 The share command </A
></H4
><p class="para"><a class="indexterm" name="AUTOID-10416"></A
>On Solaris systems, directories are shared using the <b class="emphasis.bold">share</B
> command.<a class="indexterm" name="AUTOID-10420"></A
></P
><p class="para">A simplified syntax for the <b class="emphasis.bold">share</B
> command is:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="userinput"><b>share -F nfs </B
></CODE
>[<code class="userinput"><b>-o </B
></CODE
><code class="replaceable"><i>options</I
></CODE
>] <code class="replaceable"><i>pathname</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">where <code class="replaceable"><i>pathname</I
></CODE
> is the path of the directory the server is
offering to share with its clients, and <code class="replaceable"><i>options</I
></CODE
> are the access
controls for that directory. The commonly used options are:</P
><dl class="variablelist"><dt class="term"><b class="emphasis.bold">rw</B
></DT
><dd class="listitem"><p class="para">The <b class="emphasis.bold">rw</B
> option grants read and write access to the shared<a class="indexterm" name="AUTOID-10440"></A
>
filesystem.  It can be specified in the form
<b class="emphasis.bold">rw=</B
><em class="emphasis">host</EM
><b class="emphasis.bold">:</B
><em class="emphasis">host...</EM
> to identify the individual hosts that
are granted this access. When used in this way, only the hosts
identified in the list are given access to the filesystem. If the
colon-separated list of hostnames is not provided with the <b class="emphasis.bold">rw</B
>
option, all hosts are given read/write access to the filesystem. In
fact, if no options are specified at all, the <b class="emphasis.bold">share</B
> command
defaults to giving all clients read/write access. This default is
acceptable if your systems are on an isolated network, but if they are
on a connected network, this could open up a security hole. It is the<a class="indexterm" name="AUTOID-10449"></A
>
best practice to restrict access to those hosts that you really trust.</P
></DD
><dt class="term"><b class="emphasis.bold">ro</B
></DT
><dd class="listitem"><p class="para">This option limits access to read-only.<a class="indexterm" name="AUTOID-10457"></A
>
It also can be specified with a colon-separated host list, e.g.,
<b class="emphasis.bold">ro=</B
><em class="emphasis">host</EM
><b class="emphasis.bold">:</B
><em class="emphasis">host...</EM
>.  When the host list is included, only
the hosts on the list have access and that access is limited to
read-only.</P
></DD
><dt class="term"><b class="emphasis.bold">root=</B
><code class="replaceable"><i>host</I
></CODE
></DT
><dd class="listitem"><p class="para">This option allows the <em class="emphasis">root</EM
> user on the specified host to have<a class="indexterm" name="AUTOID-10471"></A
>
root access to the shared filesystem. Normally, the root user on a
remote system is mapped to the userid <em class="emphasis">nobody</EM
><a class="indexterm" name="AUTOID-10474"></A
>
and given only normal user privileges. Granting root access is a big
security risk.</P
></DD
></DL
><p class="para">The <b class="emphasis.bold">rw</B
> and <b class="emphasis.bold">ro</B
> options can be combined to grant different<a class="indexterm" name="AUTOID-10479"></A
>
levels of access to different clients. For example:</P
><p class="para"><blockquote class="screen"><pre class="screen">share -F nfs -o rw=almond:pecan ro  /usr/man
share -F nfs -o rw=peanut:almond:pecan:walnut  /export/home/research</PRE
></BLOCKQUOTE
></P
><p class="para">The first <b class="emphasis.bold">share</B
> command grants read and write access to
<em class="emphasis">almond</EM
> and <em class="emphasis">peanut</EM
> and read-only access to all other
clients. On the other hand, the second <b class="emphasis.bold">share</B
> command grants
read/write access to <em class="emphasis">peanut</EM
>, <em class="emphasis">almond</EM
>, <em class="emphasis">pecan</EM
>, and
<em class="emphasis">walnut</EM
>, and no access of any kind to any other client.</P
><p class="para">The <b class="emphasis.bold">share</B
> command does not survive a boot. Put the <b class="emphasis.bold">share</B
>
commands in the <em class="emphasis">/etc/dfs/dfstab</EM
> file<a class="indexterm" name="AUTOID-10497"></A
><a class="indexterm" name="AUTOID-10500"></A
>
to make sure that the filesystems continue to be offered to your
clients even if the system reboots.  Here is a sample <em class="emphasis">dfstab</EM
>
file containing our two <b class="emphasis.bold">share</B
> commands:</P
><p class="para"><blockquote class="screen"><pre class="screen">% cat /etc/dfs/dfstab
#   place share(1M) commands here for automatic execution
#   on entering init state 3.
#
#   share [-F fstype] [ -o options] [-d &quot;&lt;text&gt;&quot;] &lt;pathname&gt; [resource]
#   .e.g,
#   share  -F nfs  -o rw=engineering  -d &quot;home dirs&quot;  /export/home2
share -F nfs -o rw=almond:pecan ro  /usr/man
share -F nfs -o rw=peanut:almond:pecan:walnut  /export/home/research</PRE
></BLOCKQUOTE
></P
><p class="para">The <b class="emphasis.bold">share</B
> command, the <em class="emphasis">dfstab</EM
> file, and even the
terminology &quot;share&quot; are Solaris-specific. Most UNIX systems say that
they are exporting files, instead of sharing files, when they are
offering files to NFS clients. Furthermore, they do not use the
<b class="emphasis.bold">share</B
> command or the <em class="emphasis">dfstab</EM
> file; instead, they offer
filesystems through the <em class="emphasis">/etc/exports</EM
> file. Linux is an example
of such a system.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-9-SECT-1.2.2">9.1.2.2 The /etc/exports file </A
></H4
><p class="para"><a class="indexterm" name="AUTOID-10515"></A
>The <em class="emphasis">/etc/exports</EM
> file is the NFS server configuration file for<a class="indexterm" name="AUTOID-10519"></A
>
Linux systems. It controls which files and directories are shared
(exported), which hosts can access them, and what kinds of access are
allowed. A sample <em class="emphasis">/etc/exports</EM
> file might contain these
entries:</P
><p class="para"><blockquote class="screen"><pre class="screen">/usr/man        almond(rw) pecan(rw)  (ro)
/usr/local      (ro)
/home/research  peanut(rw) almond(rw) pecan(rw) walnut(rw)</PRE
></BLOCKQUOTE
></P
><p class="para">This sample file says that:</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><em class="emphasis">/usr/man</EM
> can be mounted by any client, but it can be written
to only by <em class="emphasis">almond</EM
> and <em class="emphasis">pecan</EM
>. Other clients have read-only access. </P
></LI
><li class="listitem"><p class="para"><em class="emphasis">/usr/local</EM
> can be mounted by any client, with read-only
access.</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">/home/research</EM
> can be mounted only by the hosts <em class="emphasis">peanut</EM
>,
<em class="emphasis">almond</EM
>, <em class="emphasis">pecan</EM
>, and <em class="emphasis">walnut</EM
>. These four
hosts have read-write access.</P
></LI
></UL
><p class="para">The options used in each of the entries in the <em class="emphasis">/etc/exports</EM
> file
determine what kinds of access are allowed. The information derived
from the sample file is based on the options specified on each line in
the file. The general format of the entries is as follows:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="replaceable"><i>directory</I
></CODE
> [<code class="replaceable"><i>host</I
></CODE
>(<code class="replaceable"><i>option</I
></CODE
>)]...</PRE
></BLOCKQUOTE
></P
><p class="para"><code class="replaceable"><i>directory</I
></CODE
> names the directory or file that is available for
export. The <code class="replaceable"><i>host</I
></CODE
> is the name of the client granted access to the
exported directory while the <code class="replaceable"><i>option</I
></CODE
> specifies the type of access
being granted. The options used in the sample file are:</P
><dl class="variablelist"><dt class="term"><b class="emphasis.bold">ro</B
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-10559"></A
>Read-only prevents NFS clients from writing to this directory. Attempts
by clients to write to a read-only directory fail with the message:
&quot;Read-only filesystem&quot; or &quot;Permission denied.&quot; If <b class="emphasis.bold">ro</B
> is specified
without a client hostname, all clients are granted read-only access.</P
></DD
><dt class="term"><b class="emphasis.bold">rw</B
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-10568"></A
>Read-write permits clients to read and write to this directory.
When specified without hostname, as simply <b class="emphasis.bold">(rw)</B
>, all clients are
granted read-write access. If a hostname is specified, only the named
host is given read-write permission.<a class="indexterm" name="AUTOID-10572"></A
></P
></DD
></DL
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-9-SECT-1.3">9.1.3 Mounting Remote Filesystems </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-9-IX-MOUNTING-REMOTE-FILESYSTEMS"></A
>You need some basic information before you can decide which NFS
directories to mount on your system. You need to know which servers are
connected to your network, and which directories are available from
those servers. A directory cannot be mounted<a class="indexterm" name="AUTOID-10579"></A
>
unless it is first exported by a server.</P
><p class="para">Your network administrator is a good source for this information. The
administrator can tell you what systems are providing NFS service, what
directories they are exporting, and what these directories contain. If
you are the administrator of an NFS server, you should develop this
type of information for your users. See <a class="xref" href="ch04_01.htm" title="Getting Started ">Chapter 4, <cite class="chapter">Getting Started </CITE
></A
>.</P
><p class="para"><a class="indexterm" name="AUTOID-10585"></A
>On Solaris systems you can also obtain information about the shared
directories directly from the servers by using the <b class="emphasis.bold">showmount</B
><a class="indexterm" name="AUTOID-10590"></A
>
command. The NFS servers are usually the same centrally supported
systems that provide other services such as mail and domain name
service.  Select a likely server and query it with the command
<b class="emphasis.bold">showmount -e </B
><em class="emphasis">hostname</EM
>. In response to this command, the
server lists the directories that it exports and the conditions
applied to their export. </P
><p class="para">For example, a <b class="emphasis.bold">showmount -e</B
> query to
<em class="emphasis">filbert</EM
> produces the following output:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>showmount -e filbert</B
></CODE
>
export list for filbert:
/usr/man           (everyone)
/home/research     peanut,almond,walnut,pecan
/usr/local         (everyone)</PRE
></BLOCKQUOTE
></P
><p class="para">The export list shows the NFS directories exported by <em class="emphasis">filbert</EM
>, as
well as who is allowed to access those directories. From this list,
<em class="emphasis">peanut</EM
>'s administrator may decide to mount any of the directories
offered by <em class="emphasis">filbert</EM
>. Our imaginary
administrator decides to:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Mount <em class="emphasis">/usr/man</EM
> from <em class="emphasis">filbert</EM
> instead of maintaining the
<b class="emphasis.bold">man</B
> pages locally.</P
></LI
><li class="listitem"><p class="para">Mount <em class="emphasis">/home/research</EM
> to more easily share files with other
systems in the research group.</P
></LI
><li class="listitem"><p class="para">Mount the centrally maintained programs in <em class="emphasis">/usr/local</EM
>.</P
></LI
></OL
><p class="para"><a class="indexterm" name="AUTOID-10617"></A
>
These selections represent some of the most common motivations for
mounting NFS directories. These are to:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Save disk space</P
></LI
><li class="listitem"><p class="para">Share files with other systems</P
></LI
><li class="listitem"><p class="para">Maintain common files centrally</P
></LI
></UL
><p class="para">The amount to which you use NFS is a personal choice. Some people prefer the
greater personal control you get from keeping files locally, while
others prefer the convenience offered by NFS. Your site may have
guidelines for how NFS should be used, which directories should be
mounted, and which files should be centrally maintained. Check with your
network administrator if you're unsure about how NFS is used at your
site.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-9-SECT-1.3.1">9.1.3.1 The mount command </A
></H4
><p class="para"><a class="indexterm" name="TCP2-CH-9-IX-MOUNT-COMMAND"></A
>A client must mount a shared directory before using it. &quot;Mounting&quot;
the directory attaches it to the client's filesystem hierarchy.
Only directories offered by the servers can be mounted, but any part of
the offered directory, such as a subdirectory or a file, can be mounted.</P
><p class="para">NFS directories are mounted using the <b class="emphasis.bold">mount</B
> command. The general
structure of the <b class="emphasis.bold">mount</B
> command is:</P
><p class="para"><blockquote class="screen"><pre class="screen">mount <code class="replaceable"><i>hostname</I
></CODE
>:<code class="replaceable"><i>remote-directory local-directory</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="replaceable"><i>hostname</I
></CODE
> identifies an NFS server, and the
<code class="replaceable"><i>remote-directory</I
></CODE
> identifies all or part of a directory offered
by that server. The <b class="emphasis.bold">mount</B
> command attaches that remote directory
to the client's filesystem using the directory name provided for
<code class="replaceable"><i>local-directory</I
></CODE
>. The client's local directory, called the mount<a class="indexterm" name="AUTOID-10647"></A
>
point, must be created before <b class="emphasis.bold">mount</B
> is executed. Once the mount
is completed, files located in the remote directory can be accessed
through the local directory exactly as if they were local files.</P
><p class="para">For example, assume that <em class="emphasis">filbert.nuts.com</EM
> is an NFS server and that
it shares the files shown in the section above. Further assume that the
administrator of <em class="emphasis">peanut</EM
> wants to access the <em class="emphasis">/home/research</EM
>
directory. The administrator simply creates a local <em class="emphasis">/home/research</EM
>
directory, and mounts the remote <em class="emphasis">/home/research</EM
> directory offered
by <em class="emphasis">filbert</EM
> on this newly created mount point.</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>mkdir /home/research</B
></CODE
>
# <code class="userinput"><b>mount filbert:/home/research /home/research</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Once a remote directory is mounted, it stays attached to the local file
system until it is explicitly dismounted or the local system reboots.
To dismount a directory, use the <b class="emphasis.bold">umount</B
> command. <a class="indexterm" name="AUTOID-10664"></A
>
On the <b class="emphasis.bold">umount</B
> command line, specify either the local or remote
name of the directory that is to be dismounted. For example, the
administrator of <em class="emphasis">peanut</EM
> can dismount the remote
<em class="emphasis">filbert:/home/research</EM
> filesystem from the local
<em class="emphasis">/home/research</EM
> mount point, with either:</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>umount /home/research</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">or:</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>umount filbert:/home/research</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Booting also dismounts NFS directories. Because systems frequently<a class="indexterm" name="AUTOID-10678"></A
>
wish to mount the same filesystems every time they boot, UNIX provides
a system for automatically remounting after a boot.<a class="indexterm" name="AUTOID-10680"></A
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-9-SECT-1.3.2">9.1.3.2 The vfstab and fstab files </A
></H4
><p class="para"><a class="indexterm" name="TCP2-CH-9-IX-REMOUNTING-FILESYSTEMS-AFTER-SYSTEM-REBOOT"></A
>UNIX systems use the information provided in a special table to
remount all types of filesystems, including NFS directories, after a
system reboot. The table is a critical part of providing users
consistent access to software and files, so care should be taken
whenever it is modified. Two different files with two different
formats are used for this purpose by the different flavors of UNIX.<a class="indexterm" name="AUTOID-10686"></A
><a class="indexterm" name="AUTOID-10689"></A
>
Linux and BSD systems use the <em class="emphasis">/etc/fstab</EM
> file and Solaris, our<a class="indexterm" name="AUTOID-10693"></A
><a class="indexterm" name="AUTOID-10696"></A
><a class="indexterm" name="AUTOID-10698"></A
>
System V example, uses the <em class="emphasis">/etc/vfstab</EM
> file.</P
><p class="para">The format of the NFS entries in the Solaris <em class="emphasis">vfstab</EM
> file is:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="replaceable"><i>filesystem</I
></CODE
>  <b class="emphasis.bold">-</B
> <code class="replaceable"><i>mountpoint</I
></CODE
>  <code class="userinput"><b>nfs  -  yes</B
></CODE
>  <code class="replaceable"><i>options</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The various fields in the entry must appear in the order shown above
and they must be separated by whitespace. The items in bold (both
dashes and the words <code class="userinput"><b>nfs</B
></CODE
> and <code class="userinput"><b>yes</B
></CODE
>) are keywords that must
appear exactly as shown above. <code class="replaceable"><i>filesystem</I
></CODE
> is the name of the
directory offered by the server. <code class="replaceable"><i>mountpoint</I
></CODE
> is the pathname of
the local mount point, and <em class="emphasis">options</EM
> are the mount options
discussed below. A sample NFS <em class="emphasis">vfstab</EM
> entry is:</P
><p class="para"><blockquote class="screen"><pre class="screen">filbert:/home/research  -  /home/research  nfs  -  yes  rw,soft</PRE
></BLOCKQUOTE
></P
><p class="para">This entry mounts the NFS filesystem <em class="emphasis">filbert:/home/research</EM
> on
the local mount point <em class="emphasis">/home/research</EM
>. The filesystem is mounted
with the <b class="emphasis.bold">rw</B
> and <b class="emphasis.bold">soft</B
> options set. The mount options
available on Solaris systems are:</P
><dl class="variablelist"><dt class="term"><b class="emphasis.bold">rw</B
></DT
><dd class="listitem"><p class="para">If permitted, mount the filesystem read/write. If the filesystem is
restricted by the server to read-only, a warning is issued and the
filesystem is mounted read-only.</P
></DD
><dt class="term"><b class="emphasis.bold">ro</B
></DT
><dd class="listitem"><p class="para">Mount the filesystem read-only.</P
></DD
><dt class="term"><b class="emphasis.bold">remount</B
></DT
><dd class="listitem"><p class="para">If the filesystem is already mounted read-only, remount the filesystem
as read/write.</P
></DD
><dt class="term"><b class="emphasis.bold">soft</B
></DT
><dd class="listitem"><p class="para">If the server fails to respond, return an error and don't retry the request.</P
></DD
><dt class="term"><b class="emphasis.bold">hard</B
></DT
><dd class="listitem"><p class="para">If the server fails to respond, retry until it does respond. This is the default.</P
></DD
><dt class="term"><b class="emphasis.bold">bg</B
></DT
><dd class="listitem"><p class="para">Do the retries in background mode.</P
></DD
><dt class="term"><b class="emphasis.bold">fg</B
></DT
><dd class="listitem"><p class="para">Do the retries in foreground mode.</P
></DD
><dt class="term"><b class="emphasis.bold">intr</B
></DT
><dd class="listitem"><p class="para">Allow a keyboard interrupt<a class="indexterm" name="AUTOID-10766"></A
>
to kill a process that is hung waiting for the server to
respond. Hard-mounted filesystems can become hung because the client
retries forever, even if the server is down. This is a default.</P
></DD
><dt class="term"><b class="emphasis.bold">nointr</B
></DT
><dd class="listitem"><p class="para">Don't allow keyboard interrupts. In general, this is a bad idea.</P
></DD
><dt class="term"><b class="emphasis.bold">nosuid</B
></DT
><dd class="listitem"><p class="para">Do not allow an executable stored on the mounted filesystem to run<a class="indexterm" name="AUTOID-10778"></A
>
<b class="emphasis.bold">setuid</B
>. This improves security but may limit utility.</P
></DD
></DL
><p class="para">On the Solaris system, the NFS filesystems defined in the <em class="emphasis">vfstab</EM
>
file are mounted by a <b class="emphasis.bold">mountall</B
> command located in a startup file.
On the Linux system, the startup file contains a <b class="emphasis.bold">mount</B
> command with
the <b class="emphasis.bold">-a</B
> flag set, which causes Linux to mount all filesystems
listed in <em class="emphasis">fstab</EM
>. The format of NFS entries in the <em class="emphasis">/etc/fstab</EM
>
file is:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="replaceable"><i>filesystem  mountpoint</I
></CODE
>  <code class="userinput"><b>nfs</B
></CODE
>  <code class="replaceable"><i>options</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The fields must appear in the order shown and must be separated by
whitespace. The keyword <b class="emphasis.bold">nfs</B
> is required for NFS filesystems.
<code class="replaceable"><i>filesystem</I
></CODE
> is the name of the directory being mounted.
<code class="replaceable"><i>mountpoint</I
></CODE
> is the pathname of the local mount point. <code class="replaceable"><i>options</I
></CODE
>
are any of the Linux mount options listed in 
<a class="xref" href="#TCP2-CH-9-TAB-0" title="Linux Mount Options">Table 9.1</A
></P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-9-TAB-0">Table 9.1: Linux Mount Options</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Option</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Purpose</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">async</B
></TD
><td class="entry" rowspan="1" colspan="1">Use asynchronous file I/O.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">auto</B
></TD
><td class="entry" rowspan="1" colspan="1">Mount when <b class="emphasis.bold">-a</B
> option is used.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">dev</B
></TD
><td class="entry" rowspan="1" colspan="1">Allow character and block special devices on the filesystem.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">exec</B
></TD
><td class="entry" rowspan="1" colspan="1">Permit execution of files from the filesystem.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">noauto</B
></TD
><td class="entry" rowspan="1" colspan="1">Don't mount with the <b class="emphasis.bold">-a</B
> option.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">nodev</B
></TD
><td class="entry" rowspan="1" colspan="1">Don't allow character and block special devices on the filesystem.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">noexec</B
></TD
><td class="entry" rowspan="1" colspan="1">Don't allow execution of files from the filesystem.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">nosuid</B
></TD
><td class="entry" rowspan="1" colspan="1">Don't allow programs stored on the filesystem to run <b class="emphasis.bold">setuid</B
> or <b class="emphasis.bold">setgid</B
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">nouser</B
></TD
><td class="entry" rowspan="1" colspan="1">Only root can mount the filesystem.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">remount</B
></TD
><td class="entry" rowspan="1" colspan="1">Remount a mounted filesystem with new options.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">ro</B
></TD
><td class="entry" rowspan="1" colspan="1">Mount the filesystem read-only.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">rw</B
></TD
><td class="entry" rowspan="1" colspan="1">Mount the filesystem read-write.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">suid</B
></TD
><td class="entry" rowspan="1" colspan="1">Allow programs to run <b class="emphasis.bold">setuid</B
> or <b class="emphasis.bold">setgid</B
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">sync</B
></TD
><td class="entry" rowspan="1" colspan="1">Use synchronous filesystem I/O.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">user</B
></TD
><td class="entry" rowspan="1" colspan="1">Permit ordinary users to mount the filesystem.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">soft</B
></TD
><td class="entry" rowspan="1" colspan="1">Allow the access to time out if the server doesn't respond.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">timeo=</B
><em class="emphasis">time</EM
></TD
><td class="entry" rowspan="1" colspan="1">The length of <em class="emphasis">time</EM
> before an access times out. Must be used with <b class="emphasis.bold">soft</B
>.</TD
></TR
></TBODY
></TABLE
><p class="para">A <b class="emphasis.bold">grep</B
> of <em class="emphasis">fstab</EM
> shows sample NFS entries.
[4]</P
><blockquote class="footnote"><p class="para">[4] <b class="emphasis.bold">grep</B
> is used because the <em class="emphasis">fstab</EM
> file contains other
information not related to NFS.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>grep nfs /etc/fstab</B
></CODE
>
filbert:/usr/spool/mail   /usr/spool/mail   nfs rw     0 0
filbert:/usr/man          /usr/man          nfs rw     0 0
filbert:/home/research    /home/research    nfs rw     0 0</PRE
></BLOCKQUOTE
></P
><p class="para">The <b class="emphasis.bold">grep</B
> shows that there are three NFS filesystems contained in
the <em class="emphasis">/etc/fstab</EM
> file. The <b class="emphasis.bold">mount -a</B
> command in the boot
script remounts these three directories every time the system boots.</P
><p class="para">The <em class="emphasis">vfstab</EM
> and <em class="emphasis">fstab</EM
> files are the most common methods used
for mounting filesystems at boot time. There is another technique that
automatically mounts NFS filesystems, but only when they are actually
needed. It is called <em class="emphasis">automounter</EM
>.<a class="indexterm" name="AUTOID-10902"></A
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-9-SECT-1.4">9.1.4 NFS Automounter </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-9-IX-AUTOMOUNT"></A
>Automounter is a feature available in some NFS implementations.
The best example of automounter is the implementation that comes with
Solaris, which is the implementation we use in this section.</P
><p class="para">The automounter configuration files are called <em class="emphasis">maps</EM
>. Three basic<a class="indexterm" name="AUTOID-10910"></A
>
map types are used to define the automounter filesystem (autofs).</P
><p class="para">These map types<a class="indexterm" name="AUTOID-10914"></A
>
are:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">Master map</EM
></DT
><dd class="listitem"><p class="para">The configuration file read by <b class="emphasis.bold">automount</B
>. It lists
all of the other maps that are used to define the autofs filesystem.</P
></DD
><dt class="term"><em class="emphasis">Direct map</EM
></DT
><dd class="listitem"><p class="para">A configuration file that lists the mount points, pathnames, and
options of filesystems that are to be mounted by the automounter
daemon (<b class="emphasis.bold">automountd</B
>).&#13;</P
></DD
><dt class="term"><em class="emphasis">Indirect map</EM
></DT
><dd class="listitem"><p class="para">A configuration file that contains pathnames and &quot;relative&quot; mount
points. The mount points are relative to a directory path declared in
the master map. How indirect maps are used will become clear in the
examples.</P
></DD
></DL
><p class="para">On Solaris systems the automounter daemon (<b class="emphasis.bold">automountd</B
>) and the<a class="indexterm" name="AUTOID-10937"></A
><a class="indexterm" name="AUTOID-10939"></A
>
<b class="emphasis.bold">automount</B
> command are started by the <em class="emphasis">/etc/init.d/autofs</EM
><a class="indexterm" name="AUTOID-10944"></A
><a class="indexterm" name="AUTOID-10948"></A
>
script. The script is run with the <b class="emphasis.bold">start</B
> option to start
automounter, i.e., <b class="emphasis.bold">autofs start</B
>. It is run with the <b class="emphasis.bold">stop</B
>
option to shut down automounter. <b class="emphasis.bold">automount</B
> and <b class="emphasis.bold">automountd</B
>
are two distinct, separate programs. <b class="emphasis.bold">automountd</B
> runs as a daemon
and dynamically mounts filesystems when they are
needed. <b class="emphasis.bold">automount</B
> processes the <em class="emphasis">auto_master</EM
> file to determine
the filesystems that can be dynamically mounted.</P
><p class="para">To use automounter, first configure the <em class="emphasis">/etc/auto_master</EM
> file.<a class="indexterm" name="AUTOID-10960"></A
><a class="indexterm" name="AUTOID-10963"></A
>
Entries in the <em class="emphasis">auto_master</EM
> file have this format:</P
><p class="para"><blockquote class="screen"><pre class="screen">mount-point     map-name        options</PRE
></BLOCKQUOTE
></P
><p class="para">The Solaris system comes with a default <em class="emphasis">auto_master</EM
> file
preconfigured. Customize the file for your configuration.  Comment out
the <code class="literal">+auto_master</CODE
> entry. It is only used if you run NIS+ and
your servers offer a centrally maintained <em class="emphasis">auto_master map</EM
>.  Also
ignore the <code class="literal">/xfn</CODE
> entry. It does not apply to systems that use
DNS. Add an entry for your direct map. In the example it is called
<code class="literal">auto_direct</CODE
>. Here is <em class="emphasis">/etc/auto_master</EM
> after our
modifications:</P
><p class="para"><blockquote class="screen"><pre class="screen"># Master map for automounter
#
#+auto_master
#/xfn           -xfn
/net            -hosts          -nosuid
/home           auto_home
/-              auto_direct</PRE
></BLOCKQUOTE
></P
><p class="para">All lines that begin with a sharp sign (#) are comments, including the<a class="indexterm" name="AUTOID-10978"></A
><a class="indexterm" name="AUTOID-10980"></A
><a class="indexterm" name="AUTOID-10982"></A
><a class="indexterm" name="AUTOID-10984"></A
>
<code class="literal">+auto_master</CODE
> and <code class="literal">/xfn</CODE
> lines we commented out. The
first real entry in the file specifies that the shared filesystems
offered by every NFS server listed in the <em class="emphasis">/etc/hosts</EM
> file are
automatically mounted under the <em class="emphasis">/net</EM
> directory. A sub-directory
is created for each server under <em class="emphasis">/net</EM
> using the server's
hostname. For example: assume that <em class="emphasis">filbert</EM
> is listed in the
<em class="emphasis">hosts</EM
> file and that it exports the <em class="emphasis">/usr/local</EM
>
directory. This <code class="literal">auto_master</CODE
> entry automatically makes that
remote directory available on the local host as
<em class="emphasis">/net/filbert/usr/local</EM
>.</P
><p class="para">The second entry automatically mounts the home directories listed in the<a class="indexterm" name="AUTOID-10997"></A
><a class="indexterm" name="AUTOID-11000"></A
>
<em class="emphasis">/etc/auto_home</EM
> map under the <em class="emphasis">/home</EM
> directory. A default
<em class="emphasis">/etc/auto_home</EM
> file is provided with the Solaris system. Comment
out the <code class="literal">+auto_home</CODE
> entry found in the default file. It is used
only if you run NIS+ and your servers offer a centrally maintained
<em class="emphasis">auto_home</EM
> map.

Add entries for individual user home directories or for
all home directories from specific servers. Here is a modified
<em class="emphasis">auto_home</EM
> map:</P
><p class="para"><blockquote class="screen"><pre class="screen"># Home directory map for automounter
#
#+auto_home
craig           almond:/export/home/craig
*               pecan:/export/home/&amp;</PRE
></BLOCKQUOTE
></P
><p class="para">The first entry mounts the <em class="emphasis">/export/home/craig</EM
> filesystem shared
by <em class="emphasis">almond</EM
> on the local mount point <em class="emphasis">/home/craig</EM
>. The
<em class="emphasis">auto_home</EM
> map is an indirect map, so the mount point specified in the
map (<code class="literal">craig</CODE
>) is relative to the <em class="emphasis">/home</EM
> mount point defined
in the <em class="emphasis">auto_master</EM
> map. The second entry mounts every home directory
found in the <em class="emphasis">/export/home</EM
> filesystem offered by <em class="emphasis">pecan</EM
> to a
&quot;like-named&quot; mount point on the local host. For example: assume that
<em class="emphasis">pecan</EM
> has two home directories, <em class="emphasis">/export/home/daniel</EM
> and
<em class="emphasis">/export/home/kristin</EM
>. Automounter makes them both available on
the local host as <em class="emphasis">/home/daniel</EM
> and <em class="emphasis">/home/kristin</EM
>. The
asterisk (*) and the ampersand (&amp;) are wildcard characters used
specifically for this purpose in autofs maps.</P
><p class="para">That's it for the <em class="emphasis">auto_home</EM
> map.  Refer back to
the <em class="emphasis">auto_master</EM
> map. The third and final entry in
the <em class="emphasis">/etc/auto_master</EM
> file is:</P
><p class="para"><blockquote class="screen"><pre class="screen">/-              auto_direct</PRE
></BLOCKQUOTE
></P
><p class="para">We added this entry for our direct map. The special mount point
<code class="literal">/-</CODE
> means that the map name refers to a direct map. Therefore
the real mount points are found in the direct map file. We named our
direct map file <em class="emphasis">/etc/auto_direct</EM
>. There is no default direct map
file. You must create it from scratch. The file we created is:<a class="indexterm" name="AUTOID-11034"></A
><a class="indexterm" name="AUTOID-11037"></A
></P
><p class="para"><blockquote class="screen"><pre class="screen"># Direct map for automounter
#
/home/research  -rw       filbert:/home/research
/usr/man        -ro,soft  pecan,almond,filbert:/usr/share/man</PRE
></BLOCKQUOTE
></P
><p class="para">The format of entries in a direct map file is:</P
><p class="para"><blockquote class="screen"><pre class="screen">mount-point     options   remote filesystem</PRE
></BLOCKQUOTE
></P
><p class="para">Our sample file contains two typical entries. The first entry mounts the
remote filesystem <em class="emphasis">/home/research</EM
> offered by the server <em class="emphasis">filbert</EM
>
on the local mount point <em class="emphasis">/home/research</EM
>. It is mounted read-write.
The second entry mounts the <b class="emphasis.bold">man</B
> pages read-only with a &quot;soft&quot;
timeout.
[5]
Note that three servers are specified for the <b class="emphasis.bold">man</B
> pages in a 
comma-separated list. If a server is unavailable or fails to respond within
the soft timeout period, the client asks the next server in the list.
This is one of the nice features of automounter.</P
><blockquote class="footnote"><p class="para">[5] See the description of NFS mount options earlier in this chapter.</P
></BLOCKQUOTE
><p class="para">Automounter has four key features: the -hosts map, wildcarding,
automounting, and multiple servers. The -hosts map makes every
exported filesystem from every server listed in the <em class="emphasis">/etc/hosts</EM
><a class="indexterm" name="AUTOID-11054"></A
><a class="indexterm" name="AUTOID-11057"></A
>
file available to the local user. The wildcard characters make it very
easy to mount every directory from a remote server to a like-named
directory on the local system. Automounting goes hand-in-glove with
these two features because only the filesystems that are actually used
are mounted.  While -hosts and wildcards make a very large number of
filesystems available to the local host, automounting limits the
filesystems that are actually mounted to those that are needed. The
last feature, multiple servers,<a class="indexterm" name="AUTOID-11059"></A
>
improves the reliability of NFS by removing the dependence on a single
server.<a class="indexterm" name="AUTOID-11062"></A
><a class="indexterm" name="AUTOID-11063"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-9-SECT-1.5">9.1.5 NFS Authentication Server </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-9-IX-AUTHENTICATION-SERVER"></A
><a class="indexterm" name="TCP2-CH-9-IX-PC-NFS-AUTHENTICATION-AND-PRINT-SERVER-PCNFSD"></A
>The <em class="emphasis">PC NFS Authentication and Print Server</EM
> (<b class="emphasis.bold">pcnfsd</B
>) is needed
to support non-UNIX clients on an NFS network. The print services of this
daemon are covered in the next section. The authentication services
are the services needed by NFS.</P
><p class="para">The reason NFS needs an authentication server for some clients springs
from the difference between <em class="emphasis">trusted host</EM
> security<a class="indexterm" name="AUTOID-11076"></A
>
and <em class="emphasis">password authenticated</EM
> security.<a class="indexterm" name="AUTOID-11080"></A
>
Trusted host security is discussed in <a class="xref" href="ch12_01.htm" title="Network Security ">Chapter 12, <cite class="chapter">Network Security </CITE
></A
>. Essentially, it
works this way: we trust that a remote host has already authenticated
its users, and we grant those users equivalent access to our local
host. This is more or less how NFS treats its clients. The Solaris<a class="indexterm" name="AUTOID-11083"></A
>
<b class="emphasis.bold">share</B
> command grants NFS access to hosts.  A user is allowed to
access files through NFS using standard UNIX <em class="emphasis">user</EM
>, <em class="emphasis">group</EM
>,
and <em class="emphasis">world</EM
> file permissions based on the <em class="emphasis">userid</EM
> (UID) and
<em class="emphasis">groupid</EM
> (GID) provided by the trusted host. Remember, unless a
<b class="emphasis.bold">share</B
> command option is used to restrict access, all hosts are
trusted to access the shared filesystem.</P
><p class="para">The trusted host model does not work for non-UNIX clients for a couple
of reasons. First, some systems do not perform local user
authentication; for example, anyone who sits at the keyboard of a DOS
PC has complete access to the system. Second, some systems do not
employ user or group IDs and do not have any values that can be mapped
to the UNIX user or group file permissions. At best, an<a class="indexterm" name="AUTOID-11093"></A
>
unauthenticated user can be granted world<a class="indexterm" name="AUTOID-11095"></A
>
permissions.
[6]
We need a server that authenticates usernames and passwords and assigns
UIDs and GIDs to the authenticated users. That's what the PC NFS
authentication server does.</P
><blockquote class="footnote"><p class="para">[6] Users who have not been authenticated are assigned the user ID
<em class="emphasis">nobody</EM
> and given world permissions.</P
></BLOCKQUOTE
><p class="para">The authentication server can run on any system on the network.  It is
not necessary to run it on the NFS server, but that is the most common
configuration.  The PC NFS authentication server is not included in
the software of all UNIX systems. It is included with our Linux system
but not with our Solaris system. If it doesn't come with your UNIX
system, don't worry; the source code for <b class="emphasis.bold">pcnfsd</B
> is available
from many anonymous FTP servers on the Internet. Download the source
code. Compile the software with <b class="emphasis.bold">make</B
>.
[7]
If <b class="emphasis.bold">pcnfsd</B
> compiles without errors, copy the daemon into a system
directory such as <em class="emphasis">/usr/etc</EM
>. Then add code to start <b class="emphasis.bold">pcnfsd</B
>
from a boot script. On a Slackware Linux system, simply uncomment the
lines in the <em class="emphasis">/etc/rc.d/rc.inet2</EM
> file that start <b class="emphasis.bold">rpc.nfsd</B
>.</P
><blockquote class="footnote"><p class="para">[7] See <em class="emphasis">Networking Personal Computers with TCP/IP</EM
> by Craig Hunt
(O'Reilly &amp; Associates) for a full example of downloading, compiling,
and installing <b class="emphasis.bold">pcnfsd</B
>.</P
></BLOCKQUOTE
><p class="para">Normally starting a daemon from <b class="emphasis.bold">inetd</B
> is an alternative to
starting it from a boot script. However, Sun cautions against starting
<b class="emphasis.bold">pcnfsd</B
> from <b class="emphasis.bold">inetd</B
> because the slow startup of this daemon
can cause time-out errors.</P
><p class="para">Once the <b class="emphasis.bold">pcnfsd</B
> daemon is installed and running, the server
authenticates usernames and passwords for its clients. Here's
how. When the user asks to mount a remote filesystem, the client
software prompts him for a username and password. It sends them to the
authentication server. The server validates them against its<a class="indexterm" name="AUTOID-11118"></A
><a class="indexterm" name="AUTOID-11121"></A
>
<em class="emphasis">/etc/passwd</EM
> file.  A user that can successfully login to the
server is consider to be a valid NFS user. The server sends the client
the UID and GID that are assigned to the user in the <em class="emphasis">passwd</EM
>
file. The client uses them for NFS access.</P
><p class="para">The authentication server must have an entry in the <em class="emphasis">/etc/passwd</EM
>
file for every user who needs NFS access. It is common for a large
UNIX server, such as the mail server that has an account for every mail
user, to be used as the authentication server.<a class="indexterm" name="AUTOID-11127"></A
></P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-9-SECT-1.5.1">9.1.5.1 NFS print services </A
></H4
><p class="para"><a class="indexterm" name="AUTOID-11131"></A
>NFS-based print services are easy to understand and simple to
configure.  The NFS server exports a printer spool directory to its
clients, and the clients copy print files into that
directory. <b class="emphasis.bold">pcnfsd</B
> sends files deposited in the directory to
printers accessible to the server.  Any printer defined by the server
can be used.</P
><p class="para">To add NFS print service to an NFS server, first install <b class="emphasis.bold">pcnfsd</B
>.
Next, make a print spool directory<a class="indexterm" name="AUTOID-11136"></A
>
on the server for the print clients. Add the spool directory to the
shared filesystems in the <em class="emphasis">/etc/dfs/dfstab</EM
> file or<a class="indexterm" name="AUTOID-11139"></A
><a class="indexterm" name="AUTOID-11142"></A
><a class="indexterm" name="AUTOID-11144"></A
><a class="indexterm" name="AUTOID-11147"></A
>
<em class="emphasis">/etc/exports</EM
> file, as appropriate for your system.</P
><p class="para">Finally tell <b class="emphasis.bold">pcnfsd</B
> what directory to use for spooling print
jobs.  Use the <em class="emphasis">spool</EM
> command in the <em class="emphasis">/etc/pcnfsd.conf</EM
><a class="indexterm" name="AUTOID-11154"></A
><a class="indexterm" name="AUTOID-11157"></A
>
configuration file to define the directory name on most systems. On
others, for example our Linux system, define the directory on the
<b class="emphasis.bold">pcnfsd</B
> command line. See the <b class="emphasis.bold">pcnfsd</B
> manpage for details.</P
><p class="para">Finished! Running <b class="emphasis.bold">pcnfsd</B
> and exporting the printer spool
directory are all that is required to configure an NFS print server,
assuming that the printers are already properly configured. Check the
printers by logging directly into the print server and issuing an
<b class="emphasis.bold">lpr</B
> command for each printer you wish to test. See the following
section on <b class="emphasis.bold">lpr</B
> and <b class="emphasis.bold">lpd</B
> if a printer is not properly
configured.<a class="indexterm" name="AUTOID-11166"></A
><a class="indexterm" name="AUTOID-11167"></A
></P
></DIV
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_05.htm" title="8.5 Summary "><img src="../gifs/txtpreva.gif" alt="Previous: 8.5 Summary " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_02.htm#TCP2-CH-9-SECT-2.1" title="9.2 Line Printer Daemon "><img src="../gifs/txtnexta.gif" alt="Next: 9.2 Line Printer Daemon " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">8.5 Summary </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">9.2 Line Printer Daemon </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
