<html><head>
<title>[Chapter 9] 9.5 DHCP </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:38:00Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch09_01.htm" title="9. Configuring Network Servers "><link rel="prev" href="ch09_04.htm" title="9.4 A BOOTP Server "><link rel="next" href="ch09_06.htm#TCP2-CH-9-SECT-6.1" title="9.6 Managing Distributed Servers "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_04.htm" title="9.4 A BOOTP Server "><img src="../gifs/txtpreva.gif" alt="Previous: 9.4 A BOOTP Server " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 9<br>Configuring Network Servers </FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_06.htm#TCP2-CH-9-SECT-6.1" title="9.6 Managing Distributed Servers "><img src="../gifs/txtnexta.gif" alt="Next: 9.6 Managing Distributed Servers " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-9-SECT-5">9.5 DHCP </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-9-IX-DYNAMIC-HOST-CONFIGURATION-PROTOCOL-DHCP-BENEFITS-OF"></A
>Dynamic Host Configuration Protocol provides three important features:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">Backward compatibility with Bootstrap Protocol (BOOTP)</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-12323"></A
>A DHCP server can support BOOTP clients. Properly configured, a DHCP
server can support all of your clients.</P
></DD
><dt class="term"><em class="emphasis">Full configurations</EM
></DT
><dd class="listitem"><p class="para">A DHCP server provides a complete set of
TCP/IP configuration parameters. (See <a class="xref" href="appd_01.htm" title="A dhcpd Reference">Appendix D, <cite class="appendix">A dhcpd Reference</CITE
></A
>, for a full list.)
The network administrator can handle the entire configuration for her
users.</P
></DD
><dt class="term"><em class="emphasis">Dynamic address assignments</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-12337"></A
>A DHCP server can provide permanent addresses manually, permanent
addresses automatically, and temporary addresses dynamically. The
network administrator can tailor the type of address to the needs of
the network and the client system.</P
></DD
></DL
><p class="para">In this section we configure a DHCP server that supports BOOTP clients,
performs dynamic address allocation, and provides a wide range of
configuration parameters for its clients.</P
><p class="para">Several implementations of DHCP are available for UNIX systems.
Some are commercial packages and some run on a specific version of
UNIX. We use the Internet Software Consortium (ISC) Dynamic Host<a class="indexterm" name="AUTOID-12343"></A
><a class="indexterm" name="AUTOID-12345"></A
>
Configuration Protocol Daemon (<b class="emphasis.bold">dhcpd</B
>). It is freely available
over the Internet and runs on a wide variety of UNIX systems, including
both our Linux and Solaris sample systems. (See <a class="xref" href="appd_01.htm" title="A dhcpd Reference">Appendix D</A
> for
information on downloading and compiling <b class="emphasis.bold">dhcpd</B
>.) If you use
different DHCP server software, it will have different configuration
commands, but it probably performs the same basic functions.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-9-SECT-5.1">9.5.1 dhcpd.conf </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-9-IX-DYNAMIC-HOST-CONFIGURATION-PROTOCOL-DHCP-DAEMON-DHCPD"></A
><a class="indexterm" name="TCP2-CH-9-IX-ETC-DHCPD-CONF-FILE"></A
><a class="indexterm" name="AUTOID-12359"></A
><a class="indexterm" name="TCP2-CH-9-IX-DHCPD-CONF-FILE"></A
><b class="emphasis.bold">dhcpd</B
> reads its configuration from the <em class="emphasis">/etc/dhcpd.conf</EM
>
file. The configuration file contains the instructions that tell the
server what subnets and hosts it services, and what configuration
information it should provide them. <em class="emphasis">dhcpd.conf</EM
> is an ASCII text
file that I find more readable than the <em class="emphasis">bootptab</EM
> file. The
easiest way to learn about the <em class="emphasis">dhcpd.conf</EM
> file is to look at a
sample.</P
><p class="para"><blockquote class="screen"><pre class="screen"># Define global values that apply to all systems.

default-lease-time 86400;
max-lease-time 604800;
get-lease-hostnames true;
option subnet-mask 255.255.255.0;
option domain &quot;nuts.com&quot;;
option domain-name-servers 172.16.12.1, 172.16.3.5;
option lpr-servers 172.16.12.1;
option interface-mtu 1500;

# Identify the subnet served, the options related
# to the subnet, and the range of addresses that
# are available for dynamic allocation.

subnet 172.16.3.0 netmask 255.255.255.0 {
    option routers 172.16.3.25;
    option broadcast-address 172.16.3.255;
    range 172.16.3.50 172.16.3.250;
}

subnet 172.16.12.0 netmask 255.255.255.0 {
    option routers 172.16.12.1;
    option broadcast-address 172.16.12.255;
    range 172.16.12.64 172.16.12.192;
    range 172.16.12.200 172.16.12.250;
}

# Identify each BOOTP client with a host statement

group {
    use-host-decl-names true;
    host acorn {
        hardware ethernet 00:80:c7:aa:a8:04;
        fixed-address 172.16.3.4;
    }
    host peanut {
        hardware ethernet 08:80:20:01:59:c3;
        fixed-address 172.16.12.2;
    }
    host hickory {
        hardware ethernet 00:00:c0:a1:5e:10;
        fixed-address 172.16.3.16;
    }
}</PRE
></BLOCKQUOTE
></P
><p class="para">This sample configuration file is similar to the example used above
for <em class="emphasis">bootptab</EM
>. It defines a server that is connecting to, and
serving, two separate subnets. It assigns IP addresses dynamically to
the DHCP clients on each subnet and supports a few BOOTP clients. All
of the lines that begin with a sharp sign (#) are comments. The first
real configuration line defines a parameter for the server.</P
><p class="para">We begin the <em class="emphasis">dhcpd.conf</EM
> file with a set of parameters and options
that apply to all of the subnets and clients served. The first three
lines are parameters, which provide direction to the server. All three
of the sample parameters define some aspect of how <b class="emphasis.bold">dhcpd</B
> should
handle dynamic address assignments.</P
><dl class="variablelist"><dt class="term"><em class="emphasis">default-lease-time</EM
></DT
><dd class="listitem"><p class="para">Tells the server how many seconds long a default address lease should
be. The client can request that the address be leased for a specific
period of time. If it does, it is assigned the address for that period
of time, given some restrictions.  Frequently, clients do not request a
specific lifetime for an address lease.<a class="indexterm" name="AUTOID-12381"></A
>
When that happens, the
default-lease-time is used. In the example, the default lease is set
to one day (86400 seconds).</P
></DD
><dt class="term"><em class="emphasis">max-lease-time</EM
></DT
><dd class="listitem"><p class="para">Sets the upper limit for how long an address can be leased. Regardless
of the length of time requested by the client, this is the longest
address lease that <b class="emphasis.bold">dhcpd</B
> will grant.  The life of the lease is
specified in seconds. In the example, it is one week.</P
></DD
><dt class="term"><em class="emphasis">get-lease-hostname</EM
></DT
><dd class="listitem"><p class="para">Directs <b class="emphasis.bold">dhcpd</B
> to provide a hostname to each client that is
assigned a dynamic address. Further, the hostname is to be obtained
from DNS. This parameter is a Boolean.<a class="indexterm" name="AUTOID-12396"></A
>
If it is set to false, which is
the default, the client receives an address but no hostname. Looking
up the hostname for every possible dynamic address adds substantial
time to the startup.  Set this to &quot;false&quot;. Only set this to true if
the server handles a very small number of dynamic addresses.</P
></DD
></DL
><p class="para">We will use a few more parameters in this configuration. All of the
parameters are documented in <a class="xref" href="appd_01.htm" title="A dhcpd Reference">Appendix D</A
>.</P
><p class="para">The next four lines are options. The options all start with the
keyword <code class="literal">option</CODE
>. The keyword is followed by the name of the
option and the value assigned to the option. Options define
configuration values that are used by the client.</P
><p class="para">The meaning of the sample options is easy to deduce. The option names
are very descriptive. We are providing the clients with the subnet
mask, domain name, domain server addresses, and print server address.
These values parallel those in the <em class="emphasis">bootptab</EM
> example shown earlier
in this chapter.</P
><p class="para">DHCP, however, can do more than BOOTP. For sake of illustration we also
define the maximum transmission unit (MTU). The sample <code class="literal">interface-mtu</CODE
>
option tells the client that the MTU is 1500 bytes. In this case the
option is not needed because 1500 bytes is the default for Ethernet.
However, it illustrates the point that DHCP can provide a very complete
set of configuration information.</P
><p class="para"><a class="indexterm" name="AUTOID-12408"></A
>The subnet statements define the networks that <b class="emphasis.bold">dhcpd</B
> will serve.
The identity of each network is determined from the address and the
address mask, both of which are required by the subnet statement.
<b class="emphasis.bold">dhcpd</B
> provides configuration services only to clients that are
attached to one of these networks. There must be a subnet statement
for every subnet to which the server physically connects&nbsp;- even if some
subnets do not contain any clients. <b class="emphasis.bold">dhcpd</B
> requires the subnet
information to complete its startup.</P
><p class="para">The options and parameters defined in a subnet statement apply only to
the subnet and its clients. The meaning of the sample options is
clear. They tell the clients what router to use and what broadcast
address to use. The <b class="emphasis.bold">range</B
> parameter is more interesting, as it goes to
the heart of one of DHCP's key features.</P
><p class="para"><a class="indexterm" name="AUTOID-12417"></A
>The <b class="emphasis.bold">range</B
> parameter defines the scope of addresses that are available
for dynamic address allocation. It always occurs in association with a
subnet statement, and the range of addresses must fall within the
address space of the subnet. The scope of the <b class="emphasis.bold">range</B
> parameter is
defined by the two addresses it contains. The first address is the
lowest address that can be automatically assigned and the second
address is the highest address that can be assigned. The first <b class="emphasis.bold">range</B
>
parameter in the example identifies a contiguous group of addresses
from 172.16.12.50 to 172.16.12.250 that are available for dynamic
assignment. Notice that the second subnet statement has two <b class="emphasis.bold">range</B
>
parameters. This creates two separate groups of dynamic addresses.
The reason for this might be that some addresses were already manually
assigned before the DHCP server was installed. Regardless of the
reason, the point is that we define a noncontiguous dynamic address
space with multiple <code class="literal">range</CODE
> statements.</P
><p class="para">If a <b class="emphasis.bold">range</B
> parameter is defined in a subnet statement, any DHCP client
on the subnet that requests an address is granted one as long as
addresses are available. If a <b class="emphasis.bold">range</B
> parameter is not defined, dynamic
addressing is not enabled.</P
><p class="para">To provide automatic address assignment for BOOTP clients, add the
dynamic-bootp argument to the <b class="emphasis.bold">range</B
> parameter. For example:</P
><p class="para"><blockquote class="screen"><pre class="screen">range dynamic-bootp 172.16.8.10 172.16.8.50;</PRE
></BLOCKQUOTE
></P
><p class="para">By default, BOOTP clients are assigned permanent addresses.
It is possible to override this default behavior with either<a class="indexterm" name="AUTOID-12432"></A
>
the <b class="emphasis.bold">dynamic-bootp-lease-cutoff</B
> or the <b class="emphasis.bold">dynamic-bootp-lease-length</B
><a class="indexterm" name="AUTOID-12436"></A
>
parameter. However, BOOTP clients do not understand address leases
and they do not know that they should renew an address. Therefore the
<b class="emphasis.bold">dynamic-bootp-lease-cutoff</B
> and the <b class="emphasis.bold">dynamic-bootp-lease-length</B
> 
parameters are only used in special circumstances. If you're 
interested in these parameters, see <a class="xref" href="appd_01.htm" title="A dhcpd Reference">Appendix D</A
>.</P
><p class="para">Each BOOTP client should have an associated host statement that is used
to assign the client configuration parameters and options. It can be
used to manually assign the client a permanent, fixed address. The
sample configuration file ends with three host statements: one for
<em class="emphasis">acorn</EM
>, one for <em class="emphasis">peanut</EM
>, and one for <em class="emphasis">hickory</EM
>. Each host
statement contains a hardware parameter that defines the type of
network hardware (<code class="literal">ethernet</CODE
>) and the physical network address
(e.g., <code class="literal">08:80:20:01:59:c3</CODE
>) used by the client. The hardware
parameter is required in host statements for BOOTP clients. The
Ethernet address is used by <b class="emphasis.bold">dhcpd</B
> to identify the BOOTP client.
DHCP clients can also have associated host statements. For DHCP
clients, the hardware parameter is optional because a DHCP client can be
identified by the <b class="emphasis.bold">dhcp-client-identifier</B
> option. However, it is
simpler for a DHCP client connected via Ethernet to be identified by
its Ethernet address.<a class="indexterm" name="AUTOID-12449"></A
></P
><p class="para">A wide variety of parameters and options can be defined in the host
statement. For example, adding to each host statement an option
similar to the following one assigns each client a hostname:</P
><p class="para"><blockquote class="screen"><pre class="screen">option host-name acorn;</PRE
></BLOCKQUOTE
></P
><p class="para">It is often easier, however, to define options and parameters at a
higher level. Global options<a class="indexterm" name="AUTOID-12457"></A
>
apply to all systems. Subnet options apply to every client on the
subnet, but the options defined inside of a <b class="emphasis.bold">host</B
> statement only
apply to a single host. The <b class="emphasis.bold">host-name</B
> option shown above would
need to be repeated with a different hostname in every host
statement. An easier way to define a parameter or option for a group
of hosts is to use a <b class="emphasis.bold">group</B
> statement.</P
><p class="para"><a class="indexterm" name="AUTOID-12464"></A
>A <b class="emphasis.bold">group</B
> statement groups together any other statements. The sole
purpose of the <b class="emphasis.bold">group</B
> statement is to apply parameters and options to
all members of the group. That is exactly what we do in the example.
The <b class="emphasis.bold">group</B
> statement in the sample configuration groups all of the host
statements together. The <b class="emphasis.bold">use-host-decl-names</B
> parameter in the <b class="emphasis.bold">group</B
>
statement applies to every host in the group. This particular
parameter tells <b class="emphasis.bold">dhcpd</B
> to assign each client the hostname that is
declared on the host statement associated with that client, which makes
the hostname option unnecessary for this configuration.</P
><p class="para">Given the sample <em class="emphasis">dhcpd.conf</EM
> file shown earlier, when <b class="emphasis.bold">dhcpd</B
><a class="indexterm" name="AUTOID-12475"></A
>
receives a BOOTREQUEST packet from a client with the Ethernet address
08:80:20:01:59:c3, it sends that client:&#13;</P
><ul class="itemizedlist"><li class="listitem"><p class="para">The address 172.16.12.2</P
></LI
><li class="listitem"><p class="para">The hostname <em class="emphasis">peanut</EM
></P
></LI
><li class="listitem"><p class="para">The default router address 172.16.12.1</P
></LI
><li class="listitem"><p class="para">The broadcast address 172.16.12.255</P
></LI
><li class="listitem"><p class="para">The subnet mask 255.255.255.0</P
></LI
><li class="listitem"><p class="para">The domain name <em class="emphasis">nuts.com</EM
></P
></LI
><li class="listitem"><p class="para">The domain name server addresses 172.16.12.1 and 172.16.3.5</P
></LI
><li class="listitem"><p class="para">The print server address 172.16.12.1</P
></LI
><li class="listitem"><p class="para">The MTU for an Ethernet interface</P
></LI
></UL
><p class="para">The client receives all global values, all subnet values and all host
values that are appropriate. Clearly DHCP can provide a complete
configuration.</P
><p class="para">Your DHCP configuration, though larger in the number of systems
supported, probably is simpler than the example. Some commands appear
in the sample primarily for the purpose of illustration. The biggest
difference is that most sites do not serve more than one subnet with a
single configuration server. Servers are normally placed on each
subnet. This reduces the burden on the server, particularly the burden
that can be caused by a network-wide power outage.<a class="indexterm" name="AUTOID-12500"></A
>
It eliminates the need to move boot packets through routers. Also, the
fact that addresses are assigned at the subnet level makes placing the
system that does that assignment at the subnet level seem somehow more
logical. In the next section we look at how to keep distributed
servers updated.<a class="indexterm" name="AUTOID-12502"></A
><a class="indexterm" name="AUTOID-12503"></A
><a class="indexterm" name="AUTOID-12504"></A
><a class="indexterm" name="AUTOID-12505"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_04.htm" title="9.4 A BOOTP Server "><img src="../gifs/txtpreva.gif" alt="Previous: 9.4 A BOOTP Server " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_06.htm#TCP2-CH-9-SECT-6.1" title="9.6 Managing Distributed Servers "><img src="../gifs/txtnexta.gif" alt="Next: 9.6 Managing Distributed Servers " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">9.4 A BOOTP Server </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">9.6 Managing Distributed Servers </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
