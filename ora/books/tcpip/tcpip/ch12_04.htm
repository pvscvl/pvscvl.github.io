<html><head>
<title>[Chapter 12] 12.4 Security Monitoring </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:41:49Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch12_01.htm" title="12. Network Security "><link rel="prev" href="ch12_03.htm#TCP2-CH-12-SECT-3.1" title="12.3 Application Security "><link rel="next" href="ch12_05.htm" title="12.5 Access Control "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch12_03.htm#TCP2-CH-12-SECT-3.1" title="12.3 Application Security "><img src="../gifs/txtpreva.gif" alt="Previous: 12.3 Application Security " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 12<br>Network Security </FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch12_05.htm" title="12.5 Access Control "><img src="../gifs/txtnexta.gif" alt="Next: 12.5 Access Control " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-12-SECT-4">12.4 Security Monitoring </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-12-IX-SECURITY-MONITORING"></A
>A key element of effective network security is security monitoring.
Good security is an ongoing process, and following the security guidelines discussed above is just the beginning. You
must also monitor the systems to detect unauthorized user activity, and
to locate and close security holes. Over time a system will
change&nbsp;- active accounts become inactive; file permissions are changed.
You need to detect and fix these problems as they arise.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-12-SECT-4.1">12.4.1 Know Your System </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-12-IX-NETWORK-ADMINISTRATION-DEVELOPING-A-LQFEEL-RQ-FOR"></A
>Network security is monitored by examining the files and logs of
individual systems on the network. To detect unusual activity on a<a class="indexterm" name="AUTOID-17839"></A
>
system, you must know what activity is normal. What processes are
normally running? Who is usually logged in? Who commonly logs in
after hours? You need to know this, and more, about your system in
order to develop a &quot;feel&quot; for how things should be. Some common UNIX
commands&nbsp;- <b class="emphasis.bold">ps</B
> and <b class="emphasis.bold">who</B
>&nbsp;- can help you learn
what normal activity is for your system.</P
><p class="para"><a class="indexterm" name="AUTOID-17845"></A
>The <b class="emphasis.bold">ps</B
> command displays the status of currently running processes.
Run <b class="emphasis.bold">ps</B
> regularly to gain a clear picture of what processes run on
the system at different times of the day, and who runs them. The Linux
<b class="emphasis.bold">ps -au</B
> command and the <b class="emphasis.bold">ps -ef</B
> Solaris command display
the user and the command that initiated each process. This should be
sufficient information to learn who runs what, and when they run it.
If you notice something unusual, investigate it. Make sure you understand
how your system is being used.</P
><p class="para"><a class="indexterm" name="AUTOID-17852"></A
>The <b class="emphasis.bold">who</B
> command provides information about who is currently
logged into your system. It displays who is logged in, what device
they are using, when they logged in and, if applicable, what remote
host they logged in from. (The <b class="emphasis.bold">w</B
> command, a variation of
<b class="emphasis.bold">who</B
> available on some systems, also displays the currently active
process started by each user.)   The <b class="emphasis.bold">who</B
> command helps you learn
who is usually logged in, as well as what remote hosts
they normally log in from. Investigate any
variations from the norm.</P
><p class="para">If any of these routine checks gives you reason to suspect a security
problem, examine the system for unusual or modified files, for files that
you know should be there but aren't, and for unusual login activity.
This close examination of the system can also be made using everyday
UNIX commands. Not every command or file we discuss will be available
on every system. But every system will have some tools that help you
keep a close eye on how your system is being used.<a class="indexterm" name="AUTOID-17859"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-12-SECT-4.2">12.4.2 Looking for Trouble </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-12-IX-TROUBLE-LOOKING-FOR"></A
>Intruders often leave behind files or shell scripts to help them re-enter
the system or gain root access. Use the <b class="emphasis.bold">ls -a | grep '^\.'</B
>
command to check for files with names that begin with a dot (<em class="emphasis">.</EM
>).
Intruders particularly favor names such as <em class="emphasis">.mail</EM
>, <em class="emphasis">.xx</EM
>,
<em class="emphasis">...</EM
> (dot, dot, dot),
<em class="emphasis">.. </EM
> (dot, dot, space), or
<em class="emphasis">..^G</EM
> (dot, dot, control-G).</P
><p class="para">If any files with names like these are found, suspect a break-in.
(Remember that one directory named <code class="literal">.</CODE
> and one directory
named <code class="literal">..</CODE
> are in every directory except the root directory.)
Examine the contents of any suspicious files and follow your normal
incident-reporting procedures.</P
><p class="para">You should also examine certain key files if you suspect a security
problem:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">/etc/inetd.conf</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-17882"></A
><a class="indexterm" name="AUTOID-17884"></A
>Check the names of the programs started from
the <em class="emphasis">/etc/inetd.conf</EM
> file. In particular, make sure that it does
not start any shell programs (e.g., <em class="emphasis">/bin/csh</EM
>). Also check the
programs that are started by <b class="emphasis.bold">inetd</B
> to make sure the programs have
not been modified. <em class="emphasis">/etc/inetd.conf</EM
> should not be
world-writable.</P
></DD
><dt class="term"><em class="emphasis">r command security files</EM
></DT
><dd class="listitem"><p class="para">Check <em class="emphasis">/etc/hosts.equiv</EM
>,<a class="indexterm" name="AUTOID-17898"></A
><a class="indexterm" name="AUTOID-17900"></A
><a class="indexterm" name="AUTOID-17904"></A
><a class="indexterm" name="AUTOID-17906"></A
>
<em class="emphasis">/etc/hosts.lpd</EM
>, and the <em class="emphasis">.rhosts</EM
> file<a class="indexterm" name="AUTOID-17912"></A
>
in each user's home
directory to make sure they have not been improperly modified. In
particular, look
for any plus-sign (+) entries, and any entries for hosts outside of
your local trusted network. These files should not be world-writable.</P
></DD
><dt class="term"><em class="emphasis">/etc/passwd</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-17920"></A
><a class="indexterm" name="AUTOID-17923"></A
>Make sure that the <em class="emphasis">/etc/passwd</EM
> file has not
been modified. Look for new usernames, and changes to the UID or GID
of any account. <em class="emphasis">/etc/passwd</EM
> should not be
world-writable.</P
></DD
><dt class="term"><em class="emphasis">Files run by</EM
> <b class="emphasis.bold">cron</B
> <em class="emphasis">or</EM
> <b class="emphasis.bold">at</B
></DT
><dd class="listitem"><p class="para">Check all of the files run by<a class="indexterm" name="AUTOID-17937"></A
>
<b class="emphasis.bold">cron</B
> or <b class="emphasis.bold">at</B
>,<a class="indexterm" name="AUTOID-17941"></A
>
looking for new files or unexplained changes.
Sometimes intruders use procedures run by <b class="emphasis.bold">cron</B
> or <b class="emphasis.bold">at</B
> to
re-admit
themselves to the system, even after they have been kicked off.</P
></DD
><dt class="term"><em class="emphasis">Executable files</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-17950"></A
>Check all executable files, binaries, and shell
files to make sure they have not been modified by the intruder. The
master checklist, mentioned in the previous section, is helpful
for this. Executable files should not be world-writable.</P
></DD
></DL
><p class="para">If you find or even suspect a problem, follow
your reporting procedure and let people know<a class="indexterm" name="AUTOID-17953"></A
>
about the problem. This
is particularly important if you are connected to a local area network.

A problem on your system could spread to other systems on the network.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-12-SECT-4.2.1">12.4.2.1 Checking files </A
></H4
><p class="para"><a class="indexterm" name="AUTOID-17960"></A
><a class="indexterm" name="AUTOID-17963"></A
>The <b class="emphasis.bold">find</B
> command is a powerful tool for detecting potential
filesystem security problems because it can search the entire
filesystem for files based on file permissions. Intruders often leave
behind setuid programs to grant themselves root access.
The following command searches for these files, recursively, starting
from the root directory:</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>find / -user root -perm -4000 -print</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">This <b class="emphasis.bold">find</B
> command starts searching at the root (/) for files
owned by the user root (<b class="emphasis.bold">-user root</B
>) that have the setuid permission
bit set (<b class="emphasis.bold">-perm -4000</B
>). All matches found are displayed at the
terminal (<b class="emphasis.bold">-print</B
>). If any filenames are displayed by <b class="emphasis.bold">find</B
>, closely 
examine the
individual files to make sure that these
permissions are correct. As a general rule, shell scripts should not
have setuid permission.</P
><p class="para">You can use the <b class="emphasis.bold">find</B
> command to check for other problems that
might open security holes for intruders. The other common problems
that <b class="emphasis.bold">find</B
> checks for are world-writable files (<b class="emphasis.bold">-perm -2</B
>),
setgid files (<b class="emphasis.bold">-perm -2000</B
>), and unowned files (<b class="emphasis.bold">-nouser -o
-nogroup</B
>). World-writable and setgid files should be checked to
make sure that these permissions are appropriate. As a general rule,
files with names beginning with a dot (<code class="literal">.</CODE
>) should not be
world-writable, and setgid permission, like setuid,<a class="indexterm" name="AUTOID-17982"></A
>
should be avoided
for shell scripts.<a class="indexterm" name="AUTOID-17984"></A
></P
><p class="para">The process of scanning the filesystem can be automated with the<a class="indexterm" name="AUTOID-17987"></A
>
Tripwire program. Tripwire is available from Purdue University at
<a class="systemitem.url" href="../../../WebStripper/protected.html#link=ftp://coast.cs.purdue.edu/pub/tools/unix/Tripwire">ftp://coast.cs.purdue.edu/pub/tools/unix/Tripwire</A
>. This package not
only scans the filesystem for problems, it computes digital signatures
to ensure that if any files are changed, the changes will be detected.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-12-SECT-4.2.2">12.4.2.2 Checking login activity </A
></H4
><p class="para"><a class="indexterm" name="TCP2-CH-12-IX-LOGIN-ACTIVITY-IN-SECURITY-CHECKS-SECURITY"></A
>Strange login activity, at odd times of the day or from unfamiliar
locations, can indicate attempts by intruders to gain access to your
system. We have already used the <b class="emphasis.bold">who</B
> command to check who is
currently logged into the system. To check who has logged into the
system in the past, use the <b class="emphasis.bold">last</B
> command.<a class="indexterm" name="AUTOID-17997"></A
></P
><p class="para">The <b class="emphasis.bold">last</B
> command displays the contents of the<a class="indexterm" name="AUTOID-18001"></A
>
<em class="emphasis">wtmp</EM
>
file.
[6]
It is useful for learning normal login patterns and detecting
abnormal login activity. The <em class="emphasis">wtmp</EM
> file keeps a
historical record of who logged into the system, when they logged in,
what remote site they logged in from, and when they logged out.</P
><blockquote class="footnote"><p class="para">[6] This file is frequently stored in <em class="emphasis">/usr/adm</EM
> or <em class="emphasis">/etc</EM
>.</P
></BLOCKQUOTE
><p class="para"><a class="xref" href="#TCP2-CH-12-FIG-1" title="Last command output">Figure 12.2</A
>
shows a single line of <b class="emphasis.bold">last</B
> command output. The
figure highlights the fields that show the user who logged in, the
device, the remote location from which the login originated (if
applicable), the day, the date, the time logged in, the time
logged out (if applicable),
and the elapsed time.</P
><h4 class="figure"><a class="title" name="TCP2-CH-12-FIG-1">Figure 12.2: Last command output</A
></H4
><img class="graphic" src="figs/tcp2_1202.gif" alt="Figure 12.2"><p class="para">Simply typing <b class="emphasis.bold">last</B
> produces a large amount of output because
every login stored in <em class="emphasis">wtmp</EM
> is displayed. To limit the
output, specify a username or tty device on the command
line. This limits the display to entries for the specified username
or terminal. It is also useful to use <b class="emphasis.bold">grep</B
> to search
<b class="emphasis.bold">last</B
>'s output for certain
conditions. For example,
the command below checks for logins that occur on
Saturday or Sunday:&#13;</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>last | grep 'S[au]' | more</B
></CODE
>
craig     console                   Sun Dec 15 10:33   still logged in
reboot    ~                         Sat Dec 14 18:12
shutdown  ~                         Sat Dec 14 18:14
craig     ttyp3    modems.nuts.com  Sat Dec 14 17:11 - 17:43  (00:32)
craig     ttyp2    172.16.12.24     Sun Dec  8 21:47 - 21:52  (00:05)
	.
	.
--More--</PRE
></BLOCKQUOTE
></P
><p class="para">The next example searches for root logins not originating from
the console. If you didn't know who made the two logins reported in
this example, be suspicious:&#13;</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>last root | grep -v console</B
></CODE
>
root      ttyp3    peanut.nuts.com   Tue Oct 29 13:12 - down   (00:03)
root      ftp      almond.nuts.com   Tue Sep 10 16:37 - 16:38  (00:00)</PRE
></BLOCKQUOTE
></P
><p class="para">While the <b class="emphasis.bold">last</B
> command is a major source of information about
previous login activity, it is not the only source. On some systems,
the <em class="emphasis">messages</EM
> file records logins to the root account
and failed logins.
[7]
Failed logins and root logins at odd times or from
odd places are suspicious. The following <b class="emphasis.bold">grep</B
> command checks
<em class="emphasis">/usr/adm/messages</EM
><a class="indexterm" name="AUTOID-18036"></A
><a class="indexterm" name="AUTOID-18039"></A
>
for root login activity on a Linux system:</P
><blockquote class="footnote"><p class="para">[7] Some systems, such as Solaris, don't log <b class="emphasis.bold">su</B
> activity and root
logins in the <em class="emphasis">messages</EM
> file.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>grep -i login /usr/adm/messages</B
></CODE
>
Nov 23 10:39:10 peanut login: ROOT LOGIN ON tty1
Nov 23 11:11:50 peanut login: 2 LOGIN FAILURES ON tty1, craig
Nov 23 11:25:11 peanut login: 2 LOGIN FAILURES ON tty1, root
Nov 23 11:25:16 peanut login: ROOT LOGIN ON tty1
Nov 23 11:28:15 peanut login: ROOT LOGIN ON tty1
Nov 24 22:31:40 peanut login: 2 LOGIN FAILURES ON tty1, craig
Nov 27 19:47:52 peanut login: 2 LOGIN FAILURES ON tty1, craig
Nov 29 11:10:36 peanut login: 2 LOGIN FAILURES ON tty1, craig
Dec  1 19:41:50 peanut login: 2 LOGIN FAILURES ON tty1, craig
Dec  9 22:05:27 peanut login: ROOT LOGIN ON tty1</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-18045"></A
>Report any security problems that you detect, or even suspect. Don't
be embarrassed to report a problem because it might turn out to be a
false alarm. Don't keep quiet because you might get &quot;blamed&quot; for the
security breach. Your silence will only help the intruder.<a class="indexterm" name="AUTOID-18049"></A
><a class="indexterm" name="AUTOID-18050"></A
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-12-SECT-4.3">12.4.3 Automated Monitoring </A
></H3
><p class="para">Manually monitoring your system is time-consuming and prone to
errors and omissions. Fortunately, several automated monitoring tools are<a class="indexterm" name="AUTOID-18054"></A
>
available. The Web site <a class="systemitem.sitename" href="../../../../../../../ciac.llnl.gov/ciac/ToolsUnixSysMon.html">http://ciac.llnl.gov/ciac/ToolsUnixSysMon.html</A
> lists many of
them. Tripwire (mentioned earlier), Tiger, COPS, and SATAN are all
popular monitoring tools. COPS and SATAN are described below.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-12-SECT-4.3.1">12.4.3.1 COPS </A
></H4
><p class="para"><a class="indexterm" name="TCP2-CH-12-IX-COPS-COMPUTER-ORACLE-PASSWORD-AND-SECURITY-PROGRAMS"></A
>COPS (Computer Oracle Password and Security) is a collection of programs
that automate many of the computer monitoring procedures discussed in
the previous sections. As with any monitoring system, COPS detects
potential problems; it does not correct them. COPS does not replace
personal monitoring by the system administrator, but it does provide
additional tools to help the administrator perform monitoring tasks.</P
><p class="para">The tools in the COPS package check:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Permissions for files, directories, and devices</P
></LI
><li class="listitem"><p class="para">Contents of <em class="emphasis">/etc/passwd</EM
> and <em class="emphasis">/etc/group</EM
> files</P
></LI
><li class="listitem"><p class="para">Contents of <em class="emphasis">/etc/hosts.equiv</EM
> and <em class="emphasis">~/.rhosts</EM
> files</P
></LI
><li class="listitem"><p class="para">Changes in SUID status</P
></LI
></UL
><p class="para">After completing these checks, COPS mails a report of the results to
the system administrator.</P
><p class="para">COPS can be obtained at <a class="systemitem.url" href="../../../WebStripper/protected.html#link=ftp://coast.cs.purdue.edu/pub/tools/unix">ftp://coast.cs.purdue.edu/pub/tools/unix</A
>.
The <b class="emphasis.bold">tar</B
> file contains the source code and instructions for
building COPS. Once COPS is built, edit the COPS shell file so that
the variable SECURE points<a class="indexterm" name="AUTOID-18081"></A
>
to the directory that contains the COPS
programs, and  the variable<a class="indexterm" name="AUTOID-18083"></A
>
SECURE_USERS contains the email address of
the person who should receive the COPS report. By default, the report
is not mailed to anyone; it is written to a file. To force the report
to be mailed to the SECURE_USERS, edit the COPS shell script by changing
the MMAIL variable to MMAIL=YES.</P
><p class="para">The great advantage of COPS is that it is simple. COPS removes the
hassles from security monitoring, making it more likely that these tasks
will be performed. To run COPS, simply enter:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>cops</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para"><b class="emphasis.bold">cops</B
> uses the system's hostname to create a directory within
the directory defined by the SECURE variable. It writes the security
report in this new directory in a file named after the current date.
The format of the report's filename is <em class="emphasis">year</EM
>_<em class="emphasis">month</EM
>_<em class="emphasis">day</EM
>.
For example, on <em class="emphasis">peanut</EM
> the home directory for the COPS
programs is <em class="emphasis">/usr/local/cops</EM
>. If the current date is January
24, 1997, running the <b class="emphasis.bold">cops</B
> program creates the directory
<em class="emphasis">/usr/local/cops/peanut</EM
> and writes the report into that directory
with the file name <em class="emphasis">1997_Jan_24</EM
>. Here's a sample report:</P
><p class="para"><blockquote class="screen"><pre class="screen">peanut:/usr/local/cops/peanut&gt; cat 1997_Jan_24
ATTENTION:
Security Report for Fri Jan 24 16:21:21 EST 1997
from host peanut

**** root.chk ****
**** dev.chk ****
Warning! NFS file system /home/craig exported with no restrictions!
**** is_able.chk ****
Warning! /usr/spool/uucp is _World_ writable!
Warning! /etc/securetty is _World_ readable!
**** rc.chk ****
**** cron.chk ****
**** group.chk ****
**** home.chk ****
Warning! User uucp's home directory /var/spool/uucppublic is mode 01777!
Warning! User nobody's home directory /dev/null is not a directory!
         (mode 020666)
Warning! User guest's home directory /dev/null is not a directory!
         (mode 020666)
**** passwd.chk ****
Warning! Password file, line 15, uid &gt; 8 chars
         postmaster:*:14:12:postmaster:/var/spool/mail:/bin/bash
**** user.chk ****
**** misc.chk ****
**** ftp.chk ****
ftp-Warning! Incorrect permissions on &quot;ls&quot; in /home/ftp/bin!
ftp-Warning! Incorrect permissions on &quot;passwd&quot; in /home/ftp/etc!
ftp-Warning! Incorrect permissions on &quot;group&quot; in /home/ftp/etc!
**** pass.chk ****
**** kuang ****
**** bug.chk****</PRE
></BLOCKQUOTE
></P
><p class="para">Look at each line in the report you receive. Some lines might indicate
real problems, such as the first warning line in our sample report that
indicates <em class="emphasis">/home/craig</EM
> is exported via NFS without proper access
control. Other lines might indicate conditions that are not problems for
your system. In our example, we decide to leave <em class="emphasis">/etc/securetty</EM
>
with world-read permission. Read the file <em class="emphasis">docs/warnings</EM
><a class="indexterm" name="AUTOID-18105"></A
>
for an
explanation of each warning message. Evaluate each line of the report
and correct anything that needs correcting. Rerun COPS and examine the
new report. It should report only the problems that you are willing
to accept.</P
><p class="para">Once you're satisfied with your system's security, schedule COPS to run
at regular intervals. New problems can be introduced into your
system over time. It's better to have the COPS discover the problem
than to have the &quot;robbers&quot; discover it!<a class="indexterm" name="AUTOID-18108"></A
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-12-SECT-4.3.2">12.4.3.2 SATAN </A
></H4
><p class="para"><a class="indexterm" name="TCP2-CH-12-IX-SECURITY-ADMINISTRATORS-TOOL-FOR-ANALYZING-NETWORKS-SATAN"></A
>Another tool for testing the security of your system is the <em class="emphasis">Security
Administrator's Tool for Analyzing Networks</EM
> (SATAN). SATAN's
introduction was met by near hysteria in the popular press, largely
because of the tool's name. Despite its name, SATAN is just another
security tool.</P
><p class="para">SATAN does have some unique features. While COPS is intended for use
on an individual system, SATAN is designed to test entire networks
of systems. This is both a feature and a problem. If you are the
administrator of your network, running SATAN allows you to check all
of the systems on the network from one central system. If, however,
you are responsible for only one system and you use SATAN to probe
the other systems on your network, you will irritate all of the other
system administrators on the network who will view the SATAN probes as
attempted break-ins. Use SATAN only to test systems on your own
network that you have officially recognized authority over.</P
><p class="para">Another feature of SATAN is that it uses your system's Web browser as
the interface for viewing the security reports it generates. This is
helpful if you have a large network of systems. The browser's ability
to link together related documents allows SATAN to organize various
hierarchies of security information. Use the browser to search for the
most critical errors, the most troublesome subnets, or the most
vulnerable hosts. The screenshot in 
<a class="xref" href="#TCP2-CH-12-FIG-2" title="SATAN interface">Figure 12.3</A
>
shows a display of
hosts listed in sequence from the one with the most security errors to
the one with the least. Clicking on a hostname provides a specific
report of the errors on that host.</P
><h4 class="figure"><a class="title" name="TCP2-CH-12-FIG-2">Figure 12.3: SATAN interface</A
></H4
><img class="graphic" src="figs/tcp2_1203.gif" alt="Figure 12.3"><p class="para">The information in 
<a class="xref" href="#TCP2-CH-12-FIG-2" title="SATAN interface">Figure 12.3</A
>
comes from the <em class="emphasis">foo.org</EM
> database<a class="indexterm" name="AUTOID-18124"></A
>
provided in the SATAN documentation set. Download the binary file
<em class="emphasis">satan.doc.tar.Z</EM
> from <a class="systemitem.url" href="../../../WebStripper/protected.html#link=ftp://ftp.win.tue.nl/pub/security/unix">ftp://ftp.win.tue.nl/pub/security/unix</A
>.
Uncompress and untar the file and follow the simple instructions in the
README file to build the documentation system. You can then play with SATAN
without the danger of accidentally probing any of the systems on your
network. If you like what you see, you can download the full product
from the same location by getting the binary file <em class="emphasis">satan.tar.Z</EM
>.<a class="indexterm" name="AUTOID-18129"></A
></P
><p class="para">For many sites, well-informed users and administrators, good password
security, and good system monitoring provide adequate network
security. But for some security-conscious sites, more may be desired.
That &quot;more&quot; is usually some technique for limiting access between
systems connected to the network, or for limiting access to the data
the network carries. In the remainder of this chapter we look at
various security techniques that limit access.<a class="indexterm" name="AUTOID-18131"></A
></P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch12_03.htm#TCP2-CH-12-SECT-3.1" title="12.3 Application Security "><img src="../gifs/txtpreva.gif" alt="Previous: 12.3 Application Security " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch12_05.htm" title="12.5 Access Control "><img src="../gifs/txtnexta.gif" alt="Next: 12.5 Access Control " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">12.3 Application Security </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">12.5 Access Control </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
