<html><head>
<title>[Chapter 11] 11.7 Analyzing Protocol Problems </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:41:17Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch11_01.htm" title="11. Troubleshooting TCP/IP "><link rel="prev" href="ch11_06.htm" title="11.6 Checking Name Service "><link rel="next" href="ch11_08.htm" title="11.8 Protocol Case Study "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch11_06.htm" title="11.6 Checking Name Service "><img src="../gifs/txtpreva.gif" alt="Previous: 11.6 Checking Name Service " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 11<br>Troubleshooting TCP/IP </FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch11_08.htm" title="11.8 Protocol Case Study "><img src="../gifs/txtnexta.gif" alt="Next: 11.8 Protocol Case Study " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-11-SECT-7">11.7 Analyzing Protocol Problems </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-11-IX-PROTOCOL-PROBLEMS-TROUBLESHOOTING"></A
><a class="indexterm" name="TCP2-CH-11-IX-TROUBLESHOOTING-PROTOCOL-PROBLEMS"></A
>Problems caused by bad TCP/IP configurations are much more common than
problems caused by bad TCP/IP protocol implementations. Most of the
problems you encounter will succumb to analysis using the simple tools
we have already discussed. But on occasion, you may need to analyze
the protocol interaction between two systems. In the worst case, you
may need to analyze the packets in the data stream bit by bit.<a class="indexterm" name="AUTOID-16430"></A
>
Protocol analyzers help you do this.</P
><p class="para"><a class="indexterm" name="TCP2-CH-11-IX-SNOOP"></A
><b class="emphasis.bold">snoop</B
> is the tool we'll use. It is provided with the Solaris
operating system.
[11]
Although we use <b class="emphasis.bold">snoop</B
> in all of our examples, the concepts
introduced in this section should be applicable to the analyzer that
you use, because most protocol analyzers function in basically the same
way. Protocol analyzers allow you to select, or filter, the packets
you want to examine, and to examine those packets byte by byte. We'll
discuss both of these functions.</P
><blockquote class="footnote"><p class="para">[11] If you don't use Solaris, try <b class="emphasis.bold">tcpdump</B
>. It is available via
anonymous FTP on the Internet and is similar to <b class="emphasis.bold">snoop</B
>.</P
></BLOCKQUOTE
><p class="para">Protocol analyzers watch all the packets on the network. Therefore,
you only need <em class="emphasis">one</EM
> system that runs analyzer software on the
affected part of the network. One Solaris system with <b class="emphasis.bold">snoop</B
> can<a class="indexterm" name="AUTOID-16445"></A
>
monitor the network traffic and tell you what the other hosts are (or
aren't) doing. This, of course, assumes a shared media network. If
you use an Ethernet switch, only the traffic on an individual segment
can be seen. Some switches provide a monitor port. For others you may
need to take your monitor to the location of the problem.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-11-SECT-7.1">11.7.1 Packet Filters </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-11-IX-PACKET-FILTERS"></A
><b class="emphasis.bold">snoop</B
> reads all the packets on an Ethernet. It does this by<a class="indexterm" name="AUTOID-16455"></A
>
placing the Ethernet interface into <em class="emphasis">promiscuous mode</EM
>.
Normally, an Ethernet interface only passes packets up to the higher
layer protocols that are destined for the local host. In promiscuous
mode, all packets are accepted and passed to the higher layer. This
allows <b class="emphasis.bold">snoop</B
> to view all packets and to select packets for
analysis, based on a filter you define. Filters can be defined to
capture packets from, or to, specific hosts, protocols, and ports, or
combinations of all these.
As an example, let's look at a very simple <b class="emphasis.bold">snoop</B
> filter. The
following <b class="emphasis.bold">snoop</B
> command displays all packets sent between the
hosts <em class="emphasis">almond</EM
> and <em class="emphasis">peanut</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>snoop host almond and host peanut</B
></CODE
>
Using device /dev/le (promiscuous mode)
peanut.nuts.com -&gt; almond.nuts.com ICMP Echo request
almond.nuts.com -&gt; peanut.nuts.com ICMP Echo reply
peanut.nuts.com -&gt; almond.nuts.com RLOGIN C port=1023
almond.nuts.com -&gt; peanut.nuts.com RLOGIN R port=1023
<code class="userinput"><b>^C</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The filter &quot;host almond and host peanut&quot; selects only those packets
that are from <em class="emphasis">peanut</EM
> to <em class="emphasis">almond</EM
>, or from <em class="emphasis">almond</EM
> to<a class="indexterm" name="AUTOID-16471"></A
>
<em class="emphasis">peanut</EM
>. The filter is constructed from a set of primitives, and
associated hostnames, protocol names, and port numbers. The
primitives can be modified and combined with the operators <b class="emphasis.bold">and</B
>,
<b class="emphasis.bold">or</B
>, and <b class="emphasis.bold">not</B
>. The filter may be omitted; this causes
<b class="emphasis.bold">snoop</B
> to display all packets from the network.</P
><p class="para"><a class="indexterm" name="AUTOID-16481"></A
><a class="xref" href="#TCP2-CH-11-TAB-1" title="Expression Primitives">Table 11.2</A
>
shows the primitives used to build <b class="emphasis.bold">snoop</B
> filters.
There are a few additional primitives and some variations that perform
the same functions, but these are the essential primitive. See the
<b class="emphasis.bold">snoop</B
> manpage for additional details.</P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-11-TAB-1">Table 11.2: Expression Primitives</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Primitive</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Matches Packets</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">dst host | <b class="emphasis.bold">net </B
>| <b class="emphasis.bold">port </B
><code class="replaceable"><i>destination</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">To <code class="replaceable"><i>destination</I
></CODE
> host, net, or port</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">src host | <b class="emphasis.bold">net </B
>| <b class="emphasis.bold">port </B
><code class="replaceable"><i>source</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">From <code class="replaceable"><i>source</I
></CODE
> host, net, or port</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">host <code class="replaceable"><i>destination</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">To or from <code class="replaceable"><i>destination</I
></CODE
> host</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">net <code class="replaceable"><i>destination</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">To or from <code class="replaceable"><i>destination</I
></CODE
> network</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">port <code class="replaceable"><i>destination</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">To or from <code class="replaceable"><i>destination</I
></CODE
> port</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ether <code class="replaceable"><i>address</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">To or from Ethernet <code class="replaceable"><i>address</I
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="replaceable"><i>protocol</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Of <code class="replaceable"><i>protocol</I
></CODE
> type (<b class="emphasis.bold">icmp</B
>, <b class="emphasis.bold">udp</B
>, or <b class="emphasis.bold">tcp</B
>)</TD
></TR
></TBODY
></TABLE
><p class="para">Using these primitives with the operators <b class="emphasis.bold">and</B
> and <b class="emphasis.bold">or</B
>,
complex filters can be constructed. However, filters are usually
simple. Capturing the traffic between two hosts is probably the most
common filter. You may further limit the data captured to a specific
protocol, but often you're not sure which protocol will reveal the
problem. Just because the user sees the problem in <b class="emphasis.bold">ftp</B
> or
<b class="emphasis.bold">telnet</B
> does not mean that is where the problem actually occurs.
Analysis must often start by capturing all packets, and can only be
narrowed after test evidence points to some specific problem.<a class="indexterm" name="AUTOID-16543"></A
></P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-11-SECT-7.1.1">11.7.1.1 Modifying analyzer output </A
></H4
><p class="para">The example in the previous section shows that <b class="emphasis.bold">snoop</B
> displays a
single line of summary information for each packet received. All lines
show the source and destination addresses, and the protocol being used
(ICMP and RLOGIN in the example). The lines that summarize the ICMP
packets identify the packet types (Echo request and Echo reply in the
example). The lines that summarize the application protocol packets
display the source port and the first 20 characters of the packet
data.</P
><p class="para">This summary information is sufficient to gain insight into how packets
flow between two hosts and into potential problems. However,
troubleshooting protocol problems requires more detailed information
about each packet. <b class="emphasis.bold">snoop</B
> has options that give you control over
what information is displayed.
To display the data contained in a packet, use the <b class="emphasis.bold">-x</B
> option.
It causes the entire contents of the packet to be dumped in hex and
ASCII. In most cases, you don't need to see the entire packet;
usually, the headers are sufficient to troubleshoot a protocol
problem. The <b class="emphasis.bold">-v</B
> option displays the headers in a well-formatted
and very detailed manner. Because of the large number of lines
displayed for each packet, only use <b class="emphasis.bold">-v</B
> when you need it.</P
><p class="para">The following example shows an ICMP Echo Request packet displayed with
the <b class="emphasis.bold">-v</B
> option. The same type of packet was summarized in the
first line of the previous example.</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>snoop -v host almond and host macadamia</B
></CODE
>
Using device /dev/le (promiscuous mode)
ETHER:  ----- Ether Header -----
ETHER:  
ETHER:  Packet 3 arrived at 16:56:57.90
ETHER:  Packet size = 98 bytes
ETHER:  Destination = 8:0:20:22:fd:51, Sun
ETHER:  Source      = 0:0:c0:9a:d0:db, Western Digital
ETHER:  Ethertype = 0800 (IP)
ETHER:  
IP:   ----- IP Header -----
IP:   
IP:   Version = 4
IP:   Header length = 20 bytes
IP:   Type of service = 0x00
IP:         xxx. .... = 0 (precedence)
IP:         ...0 .... = normal delay
IP:         .... 0... = normal throughput
IP:         .... .0.. = normal reliability
IP:   Total length = 84 bytes
IP:   Identification = 3049
IP:   Flags = 0x0
IP:         .0.. .... = may fragment
IP:         ..0. .... = last fragment
IP:   Fragment offset = 0 bytes
IP:   Time to live = 64 seconds/hops
IP:   Protocol = 1 (ICMP)
IP:   Header checksum = fde0
IP:   Source address = 172.16.55.106, macadamia.nuts.com
IP:   Destination address = 172.16.12.1, almond.nuts.com
IP:   No options
IP:   
ICMP:  ----- ICMP Header -----
ICMP:  
ICMP:  Type = 8 (Echo request)
ICMP:  Code = 0
ICMP:  Checksum = ac54
ICMP:</PRE
></BLOCKQUOTE
></P
><p class="para">The detailed formatting done by <b class="emphasis.bold">snoop</B
> maps the bytes received
from the network to the header structure. Look at the description of
the various header fields in <a class="xref" href="ch01_01.htm" title="Overview of TCP/IP">Chapter 1</A
>, and <a class="xref" href="appf_01.htm" title="Selected TCP/IP Headers">Appendix F, <cite class="appendix">Selected TCP/IP Headers</CITE
></A
>, for more
information.<a class="indexterm" name="AUTOID-16562"></A
></P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch11_06.htm" title="11.6 Checking Name Service "><img src="../gifs/txtpreva.gif" alt="Previous: 11.6 Checking Name Service " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch11_08.htm" title="11.8 Protocol Case Study "><img src="../gifs/txtnexta.gif" alt="Next: 11.8 Protocol Case Study " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">11.6 Checking Name Service </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">11.8 Protocol Case Study </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
