<html><head>
<title>[Chapter 10] 10.5 sendmail Configuration </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:38:55Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" title="10. sendmail "><link rel="prev" href="ch10_04.htm#TCP2-CH-10-SECT-4.1.1" title="10.4 The sendmail.cf File "><link rel="next" href="ch10_06.htm#TCP2-CH-10-SECT-6.2.1" title="10.6 Rewriting the Mail Address "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_04.htm#TCP2-CH-10-SECT-4.1.1" title="10.4 The sendmail.cf File "><img src="../gifs/txtpreva.gif" alt="Previous: 10.4 The sendmail.cf File " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 10<br>sendmail </FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_06.htm#TCP2-CH-10-SECT-6.2.1" title="10.6 Rewriting the Mail Address "><img src="../gifs/txtnexta.gif" alt="Next: 10.6 Rewriting the Mail Address " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-10-SECT-5">10.5 sendmail Configuration </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CONFIGURING"></A
>Every time sendmail starts up, it reads <em class="emphasis">sendmail.cf</EM
>. For
this reason, the syntax of the <em class="emphasis">sendmail.cf</EM
> commands is designed
to be easy for sendmail to parse&nbsp;- not necessarily easy for humans
to read. As a consequence, sendmail commands are very terse,
even by UNIX standards.</P
><p class="para">The configuration command is not separated from its variable or value
by any spaces. This &quot;run together&quot; format makes the commands hard to
read. 
<a class="xref" href="#TCP2-CH-10-FIG-1" title="A sendmail.cf configuration command">Figure 10.2</A
>
illustrates the format of a command. In the figure,
a <b class="emphasis.bold">define macro</B
> command assigns the value <em class="emphasis">nuts.com</EM
> to the macro
D.</P
><h4 class="figure"><a class="title" name="TCP2-CH-10-FIG-1">Figure 10.2: A sendmail.cf configuration command</A
></H4
><img class="graphic" src="figs/tcp2_1002.gif" alt="Figure 10.2"><p class="para">Starting with version 8 of sendmail, variable names are no longer
restricted to a single character. Long variable names, enclosed in<a class="indexterm" name="AUTOID-13365"></A
><a class="indexterm" name="AUTOID-13368"></A
><a class="indexterm" name="AUTOID-13371"></A
>
braces, are now acceptable. For example, the define macro shown in
<a class="xref" href="#TCP2-CH-10-FIG-1" title="A sendmail.cf configuration command">Figure 10.2</A
>
could be written:</P
><p class="para"><blockquote class="screen"><pre class="screen">D{Domain}nuts.com</PRE
></BLOCKQUOTE
></P
><p class="para">However, a quick check of the <em class="emphasis">sendmail.cf</EM
> delivered with my
Linux system shows that not a single long variable name was used.
The traditional, short variable names are still the most common.<a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CF-FILE-COMMANDS-LISTED"></A
>
This terse syntax can be very hard to decipher, but it helps to
remember that the first character on the line is always the command.
From this single character you can determine what the command is and
therefore its structure. 
<a class="xref" href="#TCP2-CH-10-TAB-0" title="sendmail Configuration Commands">Table 10.1</A
>
lists the <em class="emphasis">sendmail.cf</EM
>
commands and their syntax.</P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-10-TAB-0">Table 10.1: sendmail Configuration Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Syntax</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Meaning</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Version Level</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">V</B
><code class="replaceable"><i>level</I
></CODE
>[<b class="emphasis.bold">/</B
><code class="replaceable"><i>vendor</I
></CODE
>]</TD
><td class="entry" rowspan="1" colspan="1">Specify version level.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Define Macro</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">D</B
><code class="replaceable"><i>xvalue</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Set macro <code class="replaceable"><i>x</I
></CODE
> to <code class="replaceable"><i>value</I
></CODE
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Define Class</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">C</B
><code class="replaceable"><i>cword1</I
></CODE
>[<code class="replaceable"><i> word2</I
></CODE
>]...</TD
><td class="entry" rowspan="1" colspan="1">Set class <code class="replaceable"><i>c</I
></CODE
> to <code class="replaceable"><i>word1 word2...</I
></CODE
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Define Class</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">F</B
><code class="replaceable"><i>cfile</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Load class <code class="replaceable"><i>c</I
></CODE
> from <code class="replaceable"><i>file</I
></CODE
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Set Option</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">O</B
><code class="replaceable"><i>option</I
></CODE
><b class="emphasis.bold">=</B
><code class="replaceable"><i>value</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Set <code class="replaceable"><i>option</I
></CODE
> to <code class="replaceable"><i>value</I
></CODE
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Trusted Users</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">T</B
><code class="replaceable"><i>user1</I
></CODE
>[<code class="replaceable"><i> user2...</I
></CODE
>]</TD
><td class="entry" rowspan="1" colspan="1">Trusted users are <code class="replaceable"><i>user1</I
></CODE
> <code class="replaceable"><i>user2...</I
></CODE
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Set Precedence</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">P</B
><code class="replaceable"><i>name</I
></CODE
>=<code class="replaceable"><i>number</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Set <code class="replaceable"><i>name</I
></CODE
> to precedence <code class="replaceable"><i>number</I
></CODE
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Define Mailer</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">M</B
><code class="replaceable"><i>name</I
></CODE
>, {<code class="replaceable"><i>field=value</I
></CODE
>}</TD
><td class="entry" rowspan="1" colspan="1">Define mailer <code class="replaceable"><i>name</I
></CODE
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Define Header</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">H</B
>[<b class="emphasis.bold">?</B
><code class="replaceable"><i>mflag</I
></CODE
><b class="emphasis.bold">?</B
>]<code class="replaceable"><i>name</I
></CODE
><b class="emphasis.bold">:</B
><code class="replaceable"><i>format</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Set header format.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Set Ruleset</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">S</B
><code class="replaceable"><i>n</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Start ruleset number <code class="replaceable"><i>n</I
></CODE
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Define Rule</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">R</B
><code class="replaceable"><i>lhs rhs comment</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Rewrite <code class="replaceable"><i>lhs</I
></CODE
> patterns to <code class="replaceable"><i>rhs</I
></CODE
> format.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Key File</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">K</B
><code class="replaceable"><i>name type</I
></CODE
> [<code class="replaceable"><i>argument</I
></CODE
>]</TD
><td class="entry" rowspan="1" colspan="1">Define database <code class="replaceable"><i>name</I
></CODE
>.</TD
></TR
></TBODY
></TABLE
><p class="para">The following sections describe each configuration command
in more detail.<a class="indexterm" name="AUTOID-13497"></A
></P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-10-SECT-5.1">10.5.1 The Version Level Command </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CF-FILE-VERSION-LEVEL-COMMAND-V"></A
>The version level command is an optional command not found in all
<em class="emphasis">sendmail.cf</EM
> files. You don't add a <b class="emphasis.bold">V</B
> command to the
<em class="emphasis">sendmail.cf</EM
> file or change one if it is already there. The
<b class="emphasis.bold">V</B
> command is inserted into the configuration file when it is first
built from <b class="emphasis.bold">m4</B
> macros or by the vendor.</P
><p class="para">The <code class="replaceable"><i>level</I
></CODE
> number on the <b class="emphasis.bold">V</B
> command line indicates the
version level of the configuration syntax. V1 is the oldest
configuration syntax and V7 is the version supported by
sendmail V8.8.5. Every level in between adds some feature extensions.
The <code class="replaceable"><i>vendor</I
></CODE
> part of the <b class="emphasis.bold">V</B
> command identifies if any vendor
specific syntax<a class="indexterm" name="AUTOID-13514"></A
>
is supported. The default <code class="replaceable"><i>vendor</I
></CODE
> value for the
sendmail distribution is &quot;Berkeley&quot;.</P
><p class="para">The <b class="emphasis.bold">V</B
> command tells the sendmail executable the level of
syntax and commands required to support this configuration. If the
sendmail program cannot support the requested commands and syntax,
it displays the following error message:</P
><p class="para"><blockquote class="screen"><pre class="screen"># /usr/lib/sendmail -Ctest.cf
test.cf: line 63: Bad V line: Only V1/sun syntax is supported in
     this release</PRE
></BLOCKQUOTE
></P
><p class="para">The error message shown above indicates that this sendmail
program supports level 1 configuration files with Sun syntax
extensions.
[12]
The example was produced on a Solaris 2.5.1 running the sendmail
program that came with the operating system. In the example we
attempted to read a <em class="emphasis">sendmail.cf</EM
> that was created by the <b class="emphasis.bold">m4</B
>
macros that came with sendmail 8.8.5. The syntax and functions needed
by the <em class="emphasis">sendmail.cf</EM
> file are not available in the sendmail
program. To use this configuration file, we would have to compile a
newer version of the sendmail program. See <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
> for an
example of compiling sendmail.</P
><blockquote class="footnote"><p class="para">[12] See Table 10-4 for Sun-specific syntax.</P
></BLOCKQUOTE
><p class="para">You will never change the values on a <b class="emphasis.bold">V</B
> command. You might,
however, need to customize some <b class="emphasis.bold">D</B
> commands.<a class="indexterm" name="AUTOID-13531"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-10-SECT-5.2">10.5.2 The Define Macro Command </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CF-FILE-DEFINE-MACRO-COMMAND-D"></A
>The define macro command (<b class="emphasis.bold">D</B
>) defines a macro and stores a value
in it. Once the macro is defined, it is used to provide the stored
value to other <em class="emphasis">sendmail.cf</EM
> commands and directly to
sendmail itself. This allows sendmail configurations to be
shared by many systems, simply by modifying a few system-specific
macros.</P
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-INTERNAL-MACROS-LISTED"></A
>A macro name can be any single ASCII character or, as of sendmail V8,
a word enclosed in curly braces.<a class="indexterm" name="AUTOID-13544"></A
><a class="indexterm" name="AUTOID-13547"></A
><a class="indexterm" name="AUTOID-13550"></A
>
User-created macros use uppercase
letters as names. sendmail's own internal macros use lowercase
letters and special characters as names. This does not mean that you
won't be called upon to define a value for a macro with a lowercase name.
A few of these internal macros are sometimes defined in
the <em class="emphasis">sendmail.cf</EM
> file. 
<a class="xref" href="#TCP2-CH-10-TAB-1" title="sendmail's Internal Macros">Table 10.2</A
>
provides a complete list of
sendmail's internal macros.</P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-10-TAB-1">Table 10.2: sendmail's Internal Macros</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Name</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">a</TD
><td class="entry" rowspan="1" colspan="1">Origination date in RFC 822 format</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">b</TD
><td class="entry" rowspan="1" colspan="1">Current date in RFC 822 format</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">c</TD
><td class="entry" rowspan="1" colspan="1">Hop count</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">d</TD
><td class="entry" rowspan="1" colspan="1">Date in UNIX (ctime) format</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">e</TD
><td class="entry" rowspan="1" colspan="1">SMTP entry message</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">f</TD
><td class="entry" rowspan="1" colspan="1">Sender \(lqfrom\(rq address</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">g</TD
><td class="entry" rowspan="1" colspan="1">Sender address relative to the recipient</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">h</TD
><td class="entry" rowspan="1" colspan="1">Recipient host</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">i</TD
><td class="entry" rowspan="1" colspan="1">Queue id</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">j</TD
><td class="entry" rowspan="1" colspan="1">Fully qualified domain name (host plus domain)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">k</TD
><td class="entry" rowspan="1" colspan="1">UUCP node name</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">l</TD
><td class="entry" rowspan="1" colspan="1">Format of the UNIX from line</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">m</TD
><td class="entry" rowspan="1" colspan="1">Name of this domain (domain only)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">n</TD
><td class="entry" rowspan="1" colspan="1">Name of the daemon (for error messages)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">o</TD
><td class="entry" rowspan="1" colspan="1">Set of &quot;operators&quot; in 
addresses[13]</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">p</TD
><td class="entry" rowspan="1" colspan="1">Sendmail's pid</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">q</TD
><td class="entry" rowspan="1" colspan="1">Default format of sender address[13]</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">r</TD
><td class="entry" rowspan="1" colspan="1">Protocol used</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">s</TD
><td class="entry" rowspan="1" colspan="1">Sender's hostname</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">t</TD
><td class="entry" rowspan="1" colspan="1">Numeric representation of the current time</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">u</TD
><td class="entry" rowspan="1" colspan="1">Recipient user</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">v</TD
><td class="entry" rowspan="1" colspan="1">Version number of sendmail</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">w</TD
><td class="entry" rowspan="1" colspan="1">Hostname of this site (host only)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">x</TD
><td class="entry" rowspan="1" colspan="1">Full name of the sender</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">z</TD
><td class="entry" rowspan="1" colspan="1">Home directory of the recipient</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">-</TD
><td class="entry" rowspan="1" colspan="1">Validated sender address</TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[13] Obsolete in sendmail V8.</P
></BLOCKQUOTE
><p class="para">To retrieve the value stored in a macro, reference it as <b class="emphasis.bold">$</B
><em class="emphasis">x</EM
>,
where <em class="emphasis">x</EM
> is the macro name. Macros are expanded when
the <em class="emphasis">sendmail.cf</EM
> file is read. A special syntax, <b class="emphasis.bold">$&amp;</B
><em class="emphasis">x</EM
>,
is used to expand macros when they are referenced. The <b class="emphasis.bold">$&amp;</B
><em class="emphasis">x</EM
>
syntax is only used with certain internal macros that change at runtime.<a class="indexterm" name="AUTOID-13653"></A
></P
><p class="para">The code below defines the macros R, M, and Q. After this code executes,
$R returns <em class="emphasis">almond</EM
>, <b class="emphasis.bold">$M</B
> returns <em class="emphasis">nuts.com</EM
>, and <b class="emphasis.bold">$Q</B
> returns
<em class="emphasis">almond.nuts.com</EM
>. This sample code defines Q as containing the
value of R (<b class="emphasis.bold">$R</B
>), plus a literal dot, plus the value of M (<b class="emphasis.bold">$M</B
>).</P
><p class="para"><blockquote class="screen"><pre class="screen">DRalmond
DMnuts.com
DQ$R.$M</PRE
></BLOCKQUOTE
></P
><p class="para">If you customize your <em class="emphasis">sendmail.cf</EM
> file, it will probably be
necessary to modify some macro definitions. The macros that
usually require modification define site-specific
information, such as hostnames and domain names.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-10-SECT-5.2.1">10.5.2.1 Conditionals </A
></H4
><p class="para"><a class="indexterm" name="AUTOID-13669"></A
>A macro definition can contain a conditional. Here's a conditional:</P
><p class="para"><blockquote class="screen"><pre class="screen">DX$g$?x ($x)$.</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">D</CODE
> is the define macro command; <code class="literal">X</CODE
> is the macro
being defined; and <code class="literal">$g</CODE
> says to use the value stored in macro
<code class="literal">g</CODE
>. But what does &quot;<code class="literal">$?x ($x)$.</CODE
>&quot; mean? The construct
<code class="literal">$?x</CODE
> is a conditional. It tests whether macro <code class="literal">x</CODE
> has a value
set. If the macro has been set, the text following the conditional is
interpreted. The <code class="literal">$</CODE
>. construct ends the conditional.</P
><p class="para">Given this, the assignment of macro X is interpreted as follows: X is
assigned the value of g; and if x is set, it is also assigned a literal
blank, a literal left parenthesis, the value of x, and a literal right 
parenthesis.&#13;</P
><p class="para">So if g contains <em class="emphasis">chunt@nuts.com</EM
> and x contains
<em class="emphasis">Craig Hunt</EM
>, X will contain:</P
><p class="para"><blockquote class="screen"><pre class="screen">chunt@nuts.com (Craig Hunt)</PRE
></BLOCKQUOTE
></P
><p class="para">The conditional can be used with an &quot;else&quot; construct, which is
<code class="literal">$|</CODE
>.  The full syntax of the conditional is:<a class="indexterm" name="AUTOID-13690"></A
></P
><p class="para"><blockquote class="screen"><pre class="screen"><b class="emphasis.bold">$?</B
><code class="replaceable"><i>x text1 </I
></CODE
><b class="emphasis.bold">$|</B
><code class="replaceable"><i> text2 </I
></CODE
><b class="emphasis.bold">$.</B
></PRE
></BLOCKQUOTE
></P
><p class="para">This is interpreted as:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">if (<code class="literal">$?</CODE
>) <code class="replaceable"><i>x</I
></CODE
> is set;</P
></LI
><li class="listitem"><p class="para">use <code class="replaceable"><i>text1</I
></CODE
>;</P
></LI
><li class="listitem"><p class="para">else (<code class="literal">$|</CODE
>);</P
></LI
><li class="listitem"><p class="para">use <code class="replaceable"><i>text2</I
></CODE
>;</P
></LI
><li class="listitem"><p class="para">end if (<code class="literal">$.</CODE
>).</P
></LI
></UL
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-10-SECT-5.3">10.5.3 The Define Class Command </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CF-FILE-DEFINE-CLASS-COMMAND-C-AND-F"></A
>Two commands, <b class="emphasis.bold">C</B
> and <b class="emphasis.bold">F</B
>, define sendmail classes. A class
is similar to an array of values. Classes are used for anything with
multiple values that are handled in the same way, such as multiple names
for the local host or a list of <b class="emphasis.bold">uucp</B
> hostnames. Classes allow
sendmail to compare against a list of values, instead of against
a single value. Special pattern matching symbols<a class="indexterm" name="AUTOID-13725"></A
>
are used with classes.
The <b class="emphasis.bold">$=</B
> symbol matches any value in a class, and the <b class="emphasis.bold">$~</B
> symbol
matches any value not in a class. (More on pattern matching later.)</P
><p class="para">Like macros, classes usually have single-character names, and
user-created classes use uppercase letters for names. Class values can
be defined on a single line, on multiple lines, or loaded from a file.
For example, class w is used to define all of the hostnames by which the
local host is known. To assign class w the values <em class="emphasis">goober</EM
> and
<em class="emphasis">pea</EM
>, you can enter the values on a single line:</P
><p class="para"><blockquote class="screen"><pre class="screen">Cwgoober pea</PRE
></BLOCKQUOTE
></P
><p class="para">Or you can enter the values on multiple lines:</P
><p class="para"><blockquote class="screen"><pre class="screen">Cwgoober
Cwpea</PRE
></BLOCKQUOTE
></P
><p class="para">You can also use the <b class="emphasis.bold">F</B
> command to load the class values from a
file. The  <b class="emphasis.bold">F</B
> command reads a file and stores the words found
there in a class variable. For example, to define class w and
assign it all of the strings found in <em class="emphasis">/etc/sendmail.cw</EM
>, use:</P
><p class="para"><blockquote class="screen"><pre class="screen">Fw/etc/sendmail.cw</PRE
></BLOCKQUOTE
></P
><p class="para">You may need to modify a few class definitions when creating your
<em class="emphasis">sendmail.cf</EM
> file. Frequently information relating to <b class="emphasis.bold">uucp</B
>,
to alias hostnames, and to special domains for mail routing is defined
in class statements. If your system has a <b class="emphasis.bold">uucp</B
> connection as<a class="indexterm" name="AUTOID-13748"></A
>
well as a TCP/IP connection, pay particular attention to the class
definitions. But in any case, check the class definitions carefully and
make sure they apply to your configuration.</P
><p class="para">Here we <b class="emphasis.bold">grep</B
> the Linux sample configuration file for lines beginning
with <b class="emphasis.bold">C</B
> or <b class="emphasis.bold">F</B
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>grep '^[CF]' linux.smtp.cf</B
></CODE
>
Cwlocalhost
CP.
CO @ % 
C..
CE root</PRE
></BLOCKQUOTE
></P
><p class="para"></P
><p class="para">This <b class="emphasis.bold">grep</B
> shows that <em class="emphasis">linux.smtp.cf</EM
> defines classes w, P,
O, ., and E. w contains the host's alias hostnames. P holds pseudo-domains 
used for mail routing. O stores operators that cannot be part of
a valid username. The class . (dot) is primarily of interest because
it shows that variable names do not have to be alphabetic characters.
E lists the usernames that should always be associated with the local
host's fully qualified domain name, even if simplified email addresses<a class="indexterm" name="AUTOID-13762"></A
>
are being used for all other users. (More on simplified addresses later.)
In our sample file, the variables are all assigned default values.</P
><p class="para">Remember that your system will be different. The uppercase letters used
for some of these class names mean that they are user-created classes.
These same class names may be used for other purposes on your system,
and are only presented here as an example. Carefully read the comments
in your <em class="emphasis">sendmail.cf</EM
> file for guidance as to how classes and macros
are used in your configuration.</P
><p class="para">The class names that are lowercase letters or special characters
are reserved for internal sendmail use. All internal classes
defined in sendmail versions after 8.8 are shown in <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
>.
Most of these can be ignored. Only class w, which defines all of the
hostnames the system will accept as its own, is commonly modified in
the <em class="emphasis">sendmail.cf</EM
> file.<a class="indexterm" name="AUTOID-13771"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-10-SECT-5.4">10.5.4 The Set Option Command </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CF-FILE-SET-OPTION-COMMAND-O"></A
>The set option commands (<b class="emphasis.bold">O</B
>) command is used to define the
sendmail environment. Use the <b class="emphasis.bold">O</B
> command to set values
appropriate for your installation. The value assigned to an option is
a string, an integer, a Boolean, or a time interval, as appropriate
for the individual option. All options define values used directly
by sendmail.</P
><p class="para">There are no user-created options. The meaning of each sendmail
option is defined within sendmail itself. <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
> lists the
meaning and use of each option, and there are plenty of them.</P
><p class="para">A few sample options from the <em class="emphasis">linux.smtp.cf</EM
> file are shown below.
The <b class="emphasis.bold">AliasFile</B
> option<a class="indexterm" name="AUTOID-13785"></A
>
defines the name of the sendmail <em class="emphasis">aliases</EM
>
file as <em class="emphasis">/etc/aliases</EM
>. If you want to put the <em class="emphasis">aliases</EM
> file
elsewhere, change this option. The <b class="emphasis.bold">TempFileMode</B
> option<a class="indexterm" name="AUTOID-13791"></A
>
defines the
default file mode as 0600 for temporary files created by sendmail<a class="indexterm" name="AUTOID-13793"></A
><a class="indexterm" name="AUTOID-13795"></A
>
in <em class="emphasis">/var/spool/mqueue</EM
>. The <b class="emphasis.bold">Timeout.queuereturn</B
> option<a class="indexterm" name="AUTOID-13799"></A
>
sets the
timeout interval for undeliverable mail, here set to five days (5d).
These options show the kind of general configuration parameters set by
the <b class="emphasis.bold">option</B
> command.</P
><p class="para"><blockquote class="screen"><pre class="screen"># location of alias file
O AliasFile=/etc/aliases
# temporary file mode
O TempFileMode=0600
# default timeout interval
O Timeout.queuereturn=5d</PRE
></BLOCKQUOTE
></P
><p class="para">The syntax of the option command shown in this example and in 
<a class="xref" href="#TCP2-CH-10-TAB-0" title="sendmail Configuration Commands">Table 10.1</A
>
was introduced in sendmail version 8.7.5. Prior to that the
option command used a syntax more like the other sendmail
commands.  The old syntax is: <b class="emphasis.bold">O</B
><em class="emphasis">ovalue</EM
>, where <b class="emphasis.bold">O</B
> is the
command, <em class="emphasis">o</EM
> is the single character option name, and <em class="emphasis">value</EM
>
is the value assigned to the option. The options shown in the previous
discussion, if written in the old syntax, would be:</P
><p class="para"><blockquote class="screen"><pre class="screen"># location of alias file
OA/etc/aliases
# temporary file mode
OF0600
# default timeout interval
OT5d</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
> contains a full listing of the old options as well as the new
options.</P
><p class="para">Most of the options defined in a sample file don't require modification.
People change options settings because they want to change the
sendmail environment, not because they have to. The options in
your configuration file are almost certainly correct for your system.<a class="indexterm" name="AUTOID-13816"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-10-SECT-5.5">10.5.5 Defining Trusted Users </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-13820"></A
>The <b class="emphasis.bold">T</B
> command defines a list of users who are trusted to override
the sender address using the mailer <b class="emphasis.bold">-f</B
> flag.
[14]
Normally the trusted users are defined as <em class="emphasis">root</EM
>, <em class="emphasis">uucp</EM
>, and
<em class="emphasis">daemon</EM
>. Trusted users can be specified as a list of usernames
on a single command line, or on multiple command lines. The users must
be valid usernames from the <em class="emphasis">/etc/passwd</EM
> file.&#13;</P
><blockquote class="footnote"><p class="para">[14] Mailer flags are listed in <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
>.</P
></BLOCKQUOTE
><p class="para">The most commonly defined trusted users are:</P
><p class="para"><blockquote class="screen"><pre class="screen">Troot
Tdaemon
Tuucp</PRE
></BLOCKQUOTE
></P
><p class="para">Most sites do not need to modify this list.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-10-SECT-5.6">10.5.6 Defining Mail Precedence </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CF-FILE-DEFINE-MAIL-PRECEDENCE-COMMAND-P"></A
><a class="indexterm" name="AUTOID-13842"></A
>Precedence is one of the factors used by sendmail to assign<a class="indexterm" name="AUTOID-13844"></A
><a class="indexterm" name="AUTOID-13846"></A
>
priority to messages entering its queue. The <b class="emphasis.bold">P</B
> command defines
the message precedence values available to sendmail users. The
higher the precedence number, the greater the precedence of the
message. The default precedence of a message is 0. Negative
precedence numbers indicate especially low-priority mail.
Error messages are not generated for
mail with a negative precedence number, 
making low priorities attractive for mass mailings.
Some commonly used precedence values are:</P
><p class="para"><blockquote class="screen"><pre class="screen">Pfirst-class=0
Pspecial-delivery=100
Plist=-30
Pbulk=-60
Pjunk=-100</PRE
></BLOCKQUOTE
></P
><p class="para">To specify the precedence he desires, a user adds a Precedence
header to his message. He uses the text name from the <b class="emphasis.bold">P</B
>
command in the Precedence header to set the specific
precedence of the message. Given the precedence definitions
shown above, a user who wanted to avoid receiving error messages for a
large mailing could select a message precedence of -60 by including the
following header line in his mail:</P
><p class="para"><blockquote class="screen"><pre class="screen">Precedence: bulk</PRE
></BLOCKQUOTE
></P
><p class="para">The five precedence values shown above are probably more than you'll
ever need.<a class="indexterm" name="AUTOID-13857"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-10-SECT-5.7">10.5.7 Defining Mail Headers </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-13861"></A
>The <b class="emphasis.bold">H</B
> command defines the format of header lines that sendmail
inserts into messages. The  format of the header command is the <b class="emphasis.bold">H</B
>
command, optional header flags enclosed in question marks, a header name,
a colon, and a header template. The header template is a combination of
literals and macros that are included in the header line. Macros in the
header template are expanded before the header is inserted in a message.
The same conditional syntax used in macro definitions can be used in
header templates, and it functions in exactly the same way: it allows
you to test whether a macro is set and to use another value if it is not set.</P
><p class="para">The header flags often arouse more
questions than they merit. The function of the flags is very simple.
The header flags control whether or not the header is inserted into
mail bound for a specific mailer. If no flags are specified, the
header is used for all mailers. If a flag is specified, the header is
used only for a mailer that has the same flag set in the mailer's
definition. (Mailer flags are listed in <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
>.) Header flags
only control header <em class="emphasis">insertion</EM
>. If a header is received in the
input, it is passed to the output, regardless of the flag settings.</P
><p class="para">Some sample header definitions from the <em class="emphasis">linux.smtp.cf</EM
> sample file are:</P
><p class="para"><blockquote class="screen"><pre class="screen">H?P?Return-Path: $g
H?D?Date: $a
H?F?From: $?x$x &lt;$g&gt;$|$g$.
H?x?Full-Name: $x
HSubject:
H?M?Message-Id: &lt;$t.$i@$j&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">The headers provided in your system's <em class="emphasis">sendmail.cf</EM
> are sufficient
for most installations. It's unlikely you'll ever need to change them.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-10-SECT-5.8">10.5.8 Defining Mailers </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CF-FILE-DEFINE-MAILERS-COMMAND-M"></A
>The <b class="emphasis.bold">M</B
> commands define the mail delivery programs used by
sendmail. The syntax of the command is:</P
><p class="para"><blockquote class="screen"><pre class="screen"><b class="emphasis.bold">M</B
><code class="replaceable"><i>name</I
></CODE
>, {<code class="replaceable"><i>field=value</I
></CODE
>}</PRE
></BLOCKQUOTE
></P
><p class="para"><code class="replaceable"><i>name</I
></CODE
> is an arbitrary name used internally by sendmail
to refer to this mailer. The name doesn't matter as long as it is used
consistently within the <em class="emphasis">sendmail.cf</EM
> file to refer to this
mailer. For example, the mailer used to deliver SMTP mail within the
local domain might be called <em class="emphasis">smtp</EM
> on one system, and it might be
called <em class="emphasis">ether</EM
> on another system. The function of both mailers is
the same, only the names are different.</P
><p class="para">There are a few exceptions to this freedom of choice. The mailer that
delivers local mail to users on the same machine must be called<a class="indexterm" name="AUTOID-13893"></A
>
<em class="emphasis">local</EM
>, and a mailer named <em class="emphasis">local</EM
> must be defined in the
<em class="emphasis">sendmail.cf</EM
> file. Three other special mailer names are:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">prog</EM
></DT
><dd class="listitem"><p class="para">Delivers mail to programs.</P
></DD
><dt class="term"><em class="emphasis">*file*</EM
></DT
><dd class="listitem"><p class="para">Sends mail to files.</P
></DD
><dt class="term"><em class="emphasis">*include*</EM
></DT
><dd class="listitem"><p class="para">Directs mail to <code class="literal">:include:</CODE
> lists.</P
></DD
></DL
><p class="para">Of these, only the <em class="emphasis">prog</EM
> mailer must be defined in the
<em class="emphasis">sendmail.cf</EM
> file. The other two are defined internally by
sendmail.</P
><p class="para">The mailer name is followed by a comma-separated list of
<em class="emphasis">field=value</EM
> pairs that define the characteristics of the mailer.
<a class="xref" href="#TCP2-CH-10-TAB-2" title="Mailer Definition Fields">Table 10.3</A
>
shows the single character <em class="emphasis">field</EM
> identifiers and the
contents of the <em class="emphasis">value</EM
> field associated with each of them.
Most mailers don't require all of these fields.<a class="indexterm" name="AUTOID-13924"></A
></P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-10-TAB-2">Table 10.3: Mailer Definition Fields</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Field</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Meaning</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Contents</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Example</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">P</TD
><td class="entry" rowspan="1" colspan="1">Path</TD
><td class="entry" rowspan="1" colspan="1">Path of the mailer</TD
><td class="entry" rowspan="1" colspan="1">P=/bin/mail</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">F</TD
><td class="entry" rowspan="1" colspan="1">Flags</TD
><td class="entry" rowspan="1" colspan="1">sendmail flags for this mailer</TD
><td class="entry" rowspan="1" colspan="1">F=lsDFMe</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">S</TD
><td class="entry" rowspan="1" colspan="1">Sender</TD
><td class="entry" rowspan="1" colspan="1">Rulesets for sender addresses</TD
><td class="entry" rowspan="1" colspan="1">S=10</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">R</TD
><td class="entry" rowspan="1" colspan="1">Recipient</TD
><td class="entry" rowspan="1" colspan="1">Rulesets for recipient addresses</TD
><td class="entry" rowspan="1" colspan="1">R=20</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">A</TD
><td class="entry" rowspan="1" colspan="1">Argv</TD
><td class="entry" rowspan="1" colspan="1">The mailer's argument vector</TD
><td class="entry" rowspan="1" colspan="1">A=sh -c $u</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">E</TD
><td class="entry" rowspan="1" colspan="1">Eol</TD
><td class="entry" rowspan="1" colspan="1">End-of-line string for the mailer</TD
><td class="entry" rowspan="1" colspan="1">E=\r\n</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">M</TD
><td class="entry" rowspan="1" colspan="1">Maxsize</TD
><td class="entry" rowspan="1" colspan="1">Maximum message length</TD
><td class="entry" rowspan="1" colspan="1">M=100000</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">L</TD
><td class="entry" rowspan="1" colspan="1">Linelimit</TD
><td class="entry" rowspan="1" colspan="1">Maximum line length</TD
><td class="entry" rowspan="1" colspan="1">L=990</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">D</TD
><td class="entry" rowspan="1" colspan="1">Directory</TD
><td class="entry" rowspan="1" colspan="1"><em class="emphasis">prog</EM
> mailer's execution directory</TD
><td class="entry" rowspan="1" colspan="1">D=$z:/</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">U</TD
><td class="entry" rowspan="1" colspan="1">Userid</TD
><td class="entry" rowspan="1" colspan="1">User and group ID used to run mailer</TD
><td class="entry" rowspan="1" colspan="1">U=uucp:wheel</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">N</TD
><td class="entry" rowspan="1" colspan="1">Nice</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">nice</B
> value used to run mailer</TD
><td class="entry" rowspan="1" colspan="1">N=10</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">C</TD
><td class="entry" rowspan="1" colspan="1">Charset</TD
><td class="entry" rowspan="1" colspan="1">Content-type for 8-bit MIME characters</TD
><td class="entry" rowspan="1" colspan="1">C=iso8859-1</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">T</TD
><td class="entry" rowspan="1" colspan="1">Type</TD
><td class="entry" rowspan="1" colspan="1">Type information for MIME errors</TD
><td class="entry" rowspan="1" colspan="1">T=dns/rfc822/smtp</TD
></TR
></TBODY
></TABLE
><p class="para">The Path (P) fields contain either the path to the mail delivery program
or the literal string [IPC].  Mailer definitions that specify P=[IPC]
use sendmail to deliver mail via SMTP.
[15]
The path to a mail delivery program varies from system to system 
depending on where the systems store the programs. Make sure you know 
where the programs are stored before you modify the Path field. If
you use a sample configuration from another computer, such as the
samples we use in this chapter, make sure that the mailer paths are
valid for your system.</P
><blockquote class="footnote"><p class="para">[15] Sun systems use [TCP] as well as [IPC].</P
></BLOCKQUOTE
><p class="para">The Flags (F) field contains the sendmail flags used for this
mailer. These are the mailer flags referenced earlier in this chapter
under &quot;Defining Mail Headers,&quot; but mailer flags do more than
just control header insertion. There are a large number of
flags. <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
> describes all of them and their functions.</P
><p class="para">The Sender (S) and the Recipient (R) fields identify the rulesets used
to rewrite the sender and recipient addresses for this mailer. Each
ruleset is identified by its number. We'll have more to say about
rulesets later in this chapter, and we will refer to the S and R values
when troubleshooting the sendmail configuration.</P
><p class="para">The Argv (A) field defines the argument vector passed to the mailer.
It contains, among other things, macro expansions that provide the
recipient username (which is

<b class="emphasis.bold">$u</B
>),
[16]
the recipient hostname (<b class="emphasis.bold">$h</B
>), and the sender's from address 
(<b class="emphasis.bold">$f</B
>). These macros are expanded before the
argument vector is passed to the mailer.</P
><blockquote class="footnote"><p class="para">[16] In the <em class="emphasis">prog</EM
> mailer definition, <b class="emphasis.bold">$u</B
> actually passes a program name
in the argument vector.</P
></BLOCKQUOTE
><p class="para">The End-of-line (E) field defines the characters used to mark the end
of a line. A carriage return and a line feed (CRLF) is the default for
SMTP mailers.</P
><p class="para">Maxsize (M) defines, in bytes, the longest message
that this mailer will handle. This field is used most frequently in
definitions of UUCP mailers.<a class="indexterm" name="AUTOID-14020"></A
></P
><p class="para">Linelimit (L) defines, in bytes, the maximum length of a line that can
be contained in a message handled by this mailer. This mailer field
was introduced in sendmail V8. Previous versions of sendmail
limited lines to 80 characters because this was the limit for SMTP mail
before MIME mail was introduced.</P
><p class="para">The Directory (D) field specifies the working directory for the
<em class="emphasis">prog</EM
> mailer. More than one directory can be specified for
the directory field by separating the directory paths with colons.
The example in 
<a class="xref" href="#TCP2-CH-10-TAB-2" title="Mailer Definition Fields">Table 10.3</A
>
tells <em class="emphasis">prog</EM
> to use the recipient's home
directory, which is the value returned by the internal macro <b class="emphasis.bold">$z</B
>. If that
directory is not available, it should use the root (/) directory.</P
><p class="para">Specify the default user and the group ID used to execute the mailer with
the Userid (U) field. The example <b class="emphasis.bold">U=uucp:wheel</B
> says that the mailer
should be run under the user ID <em class="emphasis">uucp</EM
> and the group ID <em class="emphasis">wheel</EM
>.
If no value is specified for the Userid field, the value defined by the
<b class="emphasis.bold">DefaultUser</B
> option is used.</P
><p class="para">Use Nice (N) to change the <b class="emphasis.bold">nice</B
> value for the execution of the
mailer. This allows you to change the scheduling priority of the mailer.
This is rarely used. If you're interested, see the <b class="emphasis.bold">nice</B
> manpage
for appropriate values.</P
><p class="para">The last two fields are used only for MIME mail.<a class="indexterm" name="AUTOID-14037"></A
>
Charset (C) defines
the character set used in the Content-type header when an 8-bit message
is converted to MIME. If Charset is not defined, the value defined in
the <b class="emphasis.bold">DefaultCharset</B
> option is used. If that option is not defined,
<em class="emphasis">unknown-8bit</EM
> is used as the default value.</P
><p class="para">The Type (T) field defines the type information used in MIME error
messages. MIME-type information defines the mailer transfer agent
type, the mail address type, and the error code type. The default is
<em class="emphasis">dns/rfc822/smtp</EM
>.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-10-SECT-5.8.1">10.5.8.1 Some common mailer definitions </A
></H4
><p class="para"><a class="indexterm" name="AUTOID-14047"></A
>The following mailer definitions are from <em class="emphasis">linux.smtp.cf</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">Mlocal,	P=/usr/bin/procmail, F=lsDFMAw5:/|@ShP, S=10/30, R=20/40,
	T=DNS/RFC822/X-Unix, A=procmail -a $h -d $u
Mprog,	P=/bin/sh, F=lsDFMoeu, S=10/30, R=20/40, D=$z:/,
	T=X-Unix, A=sh -c $u
Msmtp,	P=[IPC], F=mDFMuX, S=11/31, R=21, E=\r\n, L=990,
	T=DNS/RFC822/SMTP, A=IPC $h
Mesmtp,	P=[IPC], F=mDFMuXa, S=11/31, R=21, E=\r\n, L=990,
	T=DNS/RFC822/SMTP, A=IPC $h
Msmtp8,	P=[IPC], F=mDFMuX8, S=11/31, R=21, E=\r\n, L=990,
	T=DNS/RFC822/SMTP, A=IPC $h
Mrelay,	P=[IPC], F=mDFMuXa8, S=11/31, R=61, E=\r\n, L=2040,
	T=DNS/RFC822/SMTP, A=IPC $h</PRE
></BLOCKQUOTE
></P
><p class="para">This example contains the following mailer definitions:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">A definition for local mail delivery, always called <em class="emphasis">local</EM
>.
This definition is required by sendmail.</P
></LI
><li class="listitem"><p class="para">A definition for delivering mail to programs, always called <em class="emphasis">prog</EM
>.
This definition is found in most configurations.</P
></LI
><li class="listitem"><p class="para">A definition for TCP/IP mail delivery, here called
<em class="emphasis">smtp</EM
>.</P
></LI
><li class="listitem"><p class="para">A definition for an Extended SMTP mailer, here called <em class="emphasis">esmtp</EM
>.</P
></LI
><li class="listitem"><p class="para">A definition for an SMTP mailer that handles unencoded 8-bit data,
here called <em class="emphasis">smtp8</EM
>.</P
></LI
><li class="listitem"><p class="para">A definition for a mailer that relays TCP/IP mail through an external
mail relay host, here called <em class="emphasis">relay</EM
>.</P
></LI
></UL
><p class="para">A close examination of the fields in one of these mailer entries, for
example the entry for the <em class="emphasis">smtp</EM
> mailer, shows the following:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">Msmtp</EM
></DT
><dd class="listitem"><p class="para">A mailer, arbitrarily named <em class="emphasis">smtp</EM
>, is being defined.</P
></DD
><dt class="term"><em class="emphasis">P=[IPC]</EM
></DT
><dd class="listitem"><p class="para">The path to the program used for this mailer is [IPC], which means deliver
of this mail is handled internally by sendmail.</P
></DD
><dt class="term"><em class="emphasis">F=mDFMuX</EM
></DT
><dd class="listitem"><p class="para">The sendmail flags for this mailer say that this mailer can send
to multiple recipients at once; that Date, From, and Message-Id headers
are needed; that uppercase should be preserved in hostnames and user
names; and that lines beginning with a dot have an extra dot prepended.
Refer to <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
> for more details.</P
></DD
><dt class="term"><em class="emphasis">S=11/31</EM
></DT
><dd class="listitem"><p class="para">The sender address in the mail &quot;envelope&quot; is processed through ruleset
11 and the sender address in the message is processed through ruleset 31.
More on this later.</P
></DD
><dt class="term"><em class="emphasis">R=21</EM
></DT
><dd class="listitem"><p class="para">All recipient addresses are processed through ruleset 21.</P
></DD
><dt class="term"><em class="emphasis">E=\r\n</EM
></DT
><dd class="listitem"><p class="para">Lines are terminated with a carriage return and a line feed. </P
></DD
><dt class="term"><em class="emphasis">L=990</EM
></DT
><dd class="listitem"><p class="para">This mailer will handle lines up to 990 bytes long.</P
></DD
><dt class="term"><em class="emphasis">T=DNS/RFC822/SMTP</EM
></DT
><dd class="listitem"><p class="para">The MIME-type information for this mailer says that DNS is used for
hostnames, RFC 822 email addresses are used, and SMTP error codes
are used.</P
></DD
><dt class="term"><em class="emphasis">A=IPC $h</EM
></DT
><dd class="listitem"><p class="para">The meaning of each option in an argument vector is exactly as defined
on the manpage for the command; see the <em class="emphasis">local</EM
> mailer as
an example. In the case of the <em class="emphasis">smtp</EM
> mailer, however, the argument
refers to an internal <em class="emphasis">sendmail</EM
> process. The macro <b class="emphasis.bold">$h</B
> is expanded
to provide the recipient host (<b class="emphasis.bold">$h</B
>) address.</P
></DD
></DL
><p class="para">Despite this long discussion, don't worry about mailer definitions.
The sample configuration file that comes with your operating system
contains the correct mailer definitions to run sendmail in a TCP/IP
network environment. You shouldn't need to modify any mailer definitions.<a class="indexterm" name="AUTOID-14130"></A
><a class="indexterm" name="AUTOID-14131"></A
></P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_04.htm#TCP2-CH-10-SECT-4.1.1" title="10.4 The sendmail.cf File "><img src="../gifs/txtpreva.gif" alt="Previous: 10.4 The sendmail.cf File " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_06.htm#TCP2-CH-10-SECT-6.2.1" title="10.6 Rewriting the Mail Address "><img src="../gifs/txtnexta.gif" alt="Next: 10.6 Rewriting the Mail Address " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.4 The sendmail.cf File </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.6 Rewriting the Mail Address </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
