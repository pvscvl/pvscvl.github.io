<html><head>
<title>[Chapter 10] 10.4 The sendmail.cf File </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:38:37Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" title="10. sendmail "><link rel="prev" href="ch10_03.htm" title="10.3 sendmail Aliases "><link rel="next" href="ch10_05.htm" title="10.5 sendmail Configuration "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_03.htm" title="10.3 sendmail Aliases "><img src="../gifs/txtpreva.gif" alt="Previous: 10.3 sendmail Aliases " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 10<br>sendmail </FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_05.htm" title="10.5 sendmail Configuration "><img src="../gifs/txtnexta.gif" alt="Next: 10.5 sendmail Configuration " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-10-SECT-4">10.4 The sendmail.cf File </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CF-FILE"></A
>The sendmail configuration file is <em class="emphasis">sendmail.cf</EM
>.
[5]
It contains most of the sendmail configuration, including the
information required to route mail between the user mail programs and
the mail delivery programs. The <em class="emphasis">sendmail.cf</EM
> file has three main
functions:</P
><blockquote class="footnote"><p class="para">[5] The default location for the configuration file is the <em class="emphasis">/etc</EM
>
directory, but it is often placed in other directories, such as
<em class="emphasis">/etc/mail</EM
> and <em class="emphasis">/usr/lib</EM
>.</P
></BLOCKQUOTE
><ul class="itemizedlist"><li class="listitem"><p class="para">It defines the sendmail environment.</P
></LI
><li class="listitem"><p class="para">It rewrites addresses into the appropriate syntax for the receiving
mailer.</P
></LI
><li class="listitem"><p class="para">It maps addresses into the instructions necessary to deliver the mail.</P
></LI
></UL
><p class="para">Several commands are necessary to perform all of these functions.
Macro definitions and option commands define the environment. Rewrite
rules rewrite email addresses. Mailer definitions define the
instructions necessary to deliver the mail. The terse syntax of these
commands makes most system administrators reluctant to read a
<em class="emphasis">sendmail.cf</EM
> file, let alone write one! Fortunately, you can avoid
writing your own <em class="emphasis">sendmail.cf</EM
> file, and we'll show you how.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-10-SECT-4.1">10.4.1 Locating a Sample sendmail.cf File </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CF-FILE-SAMPLE-OF-LOCATING"></A
>There is rarely any good reason to write a <em class="emphasis">sendmail.cf</EM
> file
from scratch. Locate an existing file with a configuration similar to
your system's and modify it. That's how you configure sendmail,
and that's what we discuss in this section.</P
><p class="para">Sample configuration files are delivered with most systems' software.
Some system administrators use the configuration file that comes with
the system and make small modifications to it to handle site-specific
configuration requirements. We cover this approach to sendmail
configuration later in this chapter.</P
><p class="para">Other system administrators prefer to use the latest version of
sendmail. They download the <em class="emphasis">sendmail.tar</EM
> file<a class="indexterm" name="AUTOID-13096"></A
>
and use the
<b class="emphasis.bold">m4</B
> source files it contains to build a <em class="emphasis">sendmail.cf</EM
> file.
The samples that come with your system are adequate only if you also
use the sendmail executable that comes with your system. If you
update sendmail, use the <b class="emphasis.bold">m4</B
> source files that are compatible
with the updated version of sendmail.</P
><p class="para">The <b class="emphasis.bold">tar</B
> file can be downloaded via anonymous <b class="emphasis.bold">ftp</B
> from
<em class="emphasis">ftp.sendmail.org</EM
>.
[6]
Login and change to the <em class="emphasis">pub/sendmail</EM
> directory. This displays
a list of the available versions of sendmail. See <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
>, for an
example of downloading and installing the sendmail distribution.</P
><blockquote class="footnote"><p class="para">[6] Even if your UNIX system comes with its own version of sendmail,
obtain the <b class="emphasis.bold">tar</B
> file for the useful documentation it contains,
e.g., the <em class="emphasis">Sendmail Installation and Operation Guide</EM
>, by Eric
Allman.</P
></BLOCKQUOTE
><p class="para">The sendmail <em class="emphasis">cf/cf</EM
><a class="indexterm" name="AUTOID-13113"></A
>
directory contains several sample configuration
files. Several of these are generic files preconfigured for different
operating systems. The <em class="emphasis">cf/cf</EM
> directory on my system contains
generic configurations for BSD, Solaris, SunOS, HP Unix, Ultrix, OSF1,
and Next Step. The directory also contains a few prototype files
designed to be easily modified and used for other operating systems.
We will modify the <em class="emphasis">tcpproto.mc</EM
> file, which is for systems that
have direct TCP/IP network connections and no direct UUCP connections,
to run on our Linux system.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-10-SECT-4.1.1">10.4.1.1 Building a sendmail.cf with m4 macros </A
></H4
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-M4-MACROS"></A
>The prototype files that come with the sendmail <b class="emphasis.bold">tar</B
> are not &quot;ready
to run.&quot;  They must be edited and then processed by the <b class="emphasis.bold">m4</B
> macro
processor to produce the actual configuration files. For example,
the <em class="emphasis">tcpproto.mc</EM
> file contains the following macros:</P
><p class="para"><blockquote class="screen"><pre class="screen">divert(0)dnl
VERSIONID(`@(#)tcpproto.mc	8.5 (Berkeley) 3/23/96')
OSTYPE(unknown)
FEATURE(nouucp)
MAILER(local)
MAILER(smtp)</PRE
></BLOCKQUOTE
></P
><p class="para">These macros are not sendmail commands; they are input for
the <b class="emphasis.bold">m4</B
> macro processor. The few lines shown above are the
important lines in the <em class="emphasis">tcpproto.mc</EM
> file. They are preceded
by a section of comments, not shown here, that is discarded by <b class="emphasis.bold">m4</B
>
because it follows a <b class="emphasis.bold">divert(-1) command</B
>, which diverts the output to the
&quot;bit bucket.&quot;  This section of the file begins with a divert(0) command
that means these commands should be processed and that the results should
be directed to standard output.
[7]</P
><blockquote class="footnote"><p class="para">[7] The <b class="emphasis.bold">dnl</B
> option is used to prevent excessive blank lines from appearing
in the output file. It affects the appearance, but not the function,
of the output file. <b class="emphasis.bold">dnl</B
> can appear at the end of any macro command.</P
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-13137"></A
>The VERSIONID macro is used for version control. Usually the value passed
in the macro call is a version number in RCS (Release Control System)<a class="indexterm" name="AUTOID-13139"></A
><a class="indexterm" name="AUTOID-13141"></A
>
or SCCS (Source Code Control System) format. This macro is optional
and we just ignore it.</P
><p class="para"><a class="indexterm" name="AUTOID-13144"></A
>The OSTYPE macro defines operating system-specific information for the
<em class="emphasis">sendmail.cf</EM
> file. The <em class="emphasis">cf/ostype</EM
> directory<a class="indexterm" name="AUTOID-13148"></A
>
contains more
than 30 pre-defined operating system macro files. The OSTYPE macro is
required and the value passed in the OSTYPE macro call must match the
name of one of the files in the directory. Examples of values are: 
<code class="literal">bsd4.4</CODE
>, <code class="literal">solaris2</CODE
>, and <code class="literal">linux</CODE
>.</P
><p class="para"><a class="indexterm" name="AUTOID-13154"></A
>The FEATURE macro defines optional features to be included in the
<em class="emphasis">sendmail.cf</EM
> file. The <em class="emphasis">nouucp</EM
> feature in the sample shown above
says that no special UUCP address processing is to be included in
the output file. Recall that in the previous section we identified
<em class="emphasis">tcpproto.mc</EM
> as the prototype file for systems that have no UUCP
connections. Another prototype file would have different FEATURE values.</P
><p class="para">The prototype file ends with the mailer macros. These must be the
last macros in the input file. The sample shown above specifies the
local mailer macro, which adds the local mailer and the prog mailer
to the output, and the smtp mailer macro, which adds mailers for SMTP,
Extended SMTP, 8-bit SMTP and relayed mail. All of these mailers
are described later in this chapter.</P
><p class="para">To create a sample <em class="emphasis">sendmail.cf</EM
> for a Linux system from the
<em class="emphasis">tcpproto.mc</EM
> prototype file, copy the prototype
file to a work file. Edit the work file by changing the OSTYPE line
from <code class="literal">unknown</CODE
> to <code class="literal">linux</CODE
> to specify the correct operating
system. In the example we use <b class="emphasis.bold">sed</B
> to change <code class="literal">unknown</CODE
> to
<code class="literal">linux</CODE
>. We store the result in a file we call <em class="emphasis">linux.mc</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen"># sed 's/unknown/linux/' &lt; tcpproto.mc &gt; linux.mc</PRE
></BLOCKQUOTE
></P
><p class="para">Then enter the <b class="emphasis.bold">m4</B
> command:</P
><p class="para"><blockquote class="screen"><pre class="screen"># m4 ../m4/cf.m4 linux.mc &gt; sendmail.cf</PRE
></BLOCKQUOTE
></P
><p class="para">The <em class="emphasis">sendmail.cf</EM
> file output by the <b class="emphasis.bold">m4</B
> command is in the
correct format to be read by the sendmail program.
[8]
In fact, the output file produced above is almost identical to the
sample <em class="emphasis">linux.smtp.cf</EM
> configuration file delivered with Linux.</P
><blockquote class="footnote"><p class="para">[8] New syntax and functions in the latest version of the <em class="emphasis">sendmail.cf</EM
>
file may not be supported by older versions of the sendmail
program.</P
></BLOCKQUOTE
><p class="para">OSTYPE is not the only thing in the macro file that can be modified to
create a custom configuration. There are a large number of configuration
options, all of which are explained in <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
>. As an example we
modify a few options to create a custom configuration that converts
<em class="emphasis">user@host</EM
> email addresses originating from our computer
into <em class="emphasis">firstname.lastname@domain</EM
>. To do this, we create two new
configuration files: a macro file with specific values for the domain
that we name <em class="emphasis">nuts.com.m4</EM
> and a modified macro control file,
<em class="emphasis">linux.mc</EM
>, that calls the new <em class="emphasis">nuts.com.m4</EM
> file.</P
><p class="para">We create the new macro file <em class="emphasis">nuts.com.m4</EM
> and place it in the
<em class="emphasis">cf/domain</EM
> directory. The new file contains the
following:</P
><p class="para"><blockquote class="screen"><pre class="screen">MASQUERADE_AS(nuts.com)
FEATURE(masquerade_envelope)
FEATURE(genericstable)</PRE
></BLOCKQUOTE
></P
><p class="para">These lines say that we want to hide the real hostname and display the
name <em class="emphasis">nuts.com</EM
> in its place in outbound email addresses. Also,
we want to do this on &quot;envelope&quot; addresses as well as message header
addresses. The last line says that we will use the generic address
conversion database, which converts login usernames to any value we
wish. We must build the database by creating a text file with the data
we want and processing that file through the <b class="emphasis.bold">makemap</B
> command that<a class="indexterm" name="AUTOID-13197"></A
>
comes with sendmail V8.</P
><p class="para">The format of the
database can be very simple:</P
><p class="para"><blockquote class="screen"><pre class="screen">dan Dan.Scribner@nuts.com
tyler Tyler.McCafferty@nuts.com
pat Pat.Stover@nuts.com
willy Bill.Wright@nuts.com
craig Craig.Hunt@nuts.com</PRE
></BLOCKQUOTE
></P
><p class="para">Each line in the file has two fields: the first field is the key, which
is the login name, and the second field is an email address
containing the user's real first and
last names separated by a dot. Fields are separated by spaces. Using
this database, a query for <code class="literal">dan</CODE
> will return the value 
<code class="literal">Dan.Scribner@nuts.com</CODE
>.
A small database such as this one can be easily built by hand. On a
system with a large number of existing user accounts, you may want to
automate this process by extracting the user's login name, and first
and last names from the <em class="emphasis">/etc/passwd</EM
> file.<a class="indexterm" name="AUTOID-13206"></A
><a class="indexterm" name="AUTOID-13208"></A
>
The gcos field of the
<em class="emphasis">/etc/passwd</EM
> file often contains the user's real name.
[9]
Once the data is in a text file convert it to a database with the
<b class="emphasis.bold">makemap</B
> command. The <b class="emphasis.bold">makemap</B
> command is included in
the sendmail V8 <b class="emphasis.bold">tar</B
> file. It requires the ndbm library.
The syntax of the <b class="emphasis.bold">makemap</B
> command is:</P
><blockquote class="footnote"><p class="para">[9] See <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
> for a sample script that builds the realnames database
from <em class="emphasis">/etc/passwd</EM
>.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen"><b class="emphasis.bold">makemap</B
> <code class="replaceable"><i>type name</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para"><b class="emphasis.bold">makemap</B
> reads the standard input and writes the database out to a
file it creates using the value provided by <code class="replaceable"><i>name</I
></CODE
> as the filename.
The <code class="replaceable"><i>type</I
></CODE
> field identifies the database type. The most commonly
supported database types for sendmail V8 are dbm, btree, and hash.
[10]
All of these types can be made with the <b class="emphasis.bold">makemap</B
> command.</P
><blockquote class="footnote"><p class="para">[10] On Sun OS and Solaris systems, NIS maps and NIS+ tables are built with
standard commands that come with those operating systems. The syntax
for using those maps within sendmail is different (see Table
10-4). <em class="emphasis">Networking Personal Computers with TCP/IP</EM
>, by Craig Hunt
(O'Reilly &amp; Associates) provides an example of using a NIS map
inside of sendmail.</P
></BLOCKQUOTE
><p class="para">Assume that the data shown above has been put in a file named
<em class="emphasis">realnames</EM
>. The following command
converts that file to a database:</P
><p class="para"><blockquote class="screen"><pre class="screen"># makemap hash genericstable &lt; realnames</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="emphasis.bold">makemap</B
> reads the text file and produces a database file called
<em class="emphasis">genericstable</EM
>. The database maps login names to real names, e.g.,
the key <code class="literal">willy</CODE
> returns the value <code class="literal">Bill.Wright@nuts.com</CODE
>.</P
><p class="para">Now that we have created the database, we create a new sendmail
configuration file to use it. All of the <b class="emphasis.bold">m4</B
> macros related to
using the database are in the <em class="emphasis">nuts.com.m4</EM
> file. We need to include
that file in the configuration. To do that, add a <code class="literal">DOMAIN(nuts.com)</CODE
>
line to the macro control file (<em class="emphasis">linux.mc</EM
>)<a class="indexterm" name="AUTOID-13246"></A
>
and then process the
<em class="emphasis">linux.mc</EM
> through <b class="emphasis.bold">m4</B
>. The following <b class="emphasis.bold">grep</B
> command shows
what the macros in the file look like after the change:</P
><p class="para"><blockquote class="screen"><pre class="screen"># grep '^[A-Z]' linux.mc
VERSIONID(`@(#)tcpproto.mc	8.5 (Berkeley) 3/23/96')
OSTYPE(linux)
DOMAIN(nuts.com)
FEATURE(nouucp)
MAILER(local)
MAILER(smtp)
# m4 ../m4/cf.m4 linux.mc &gt; sendmail.cf</PRE
></BLOCKQUOTE
></P
><p class="para">Use the prototype <em class="emphasis">mc</EM
> files as the starting point of your
configuration if you install sendmail from the <b class="emphasis.bold">tar</B
> file.
To use the latest version of sendmail you must build a compatible
<em class="emphasis">sendmail.cf</EM
> file using the <b class="emphasis.bold">m4</B
> macros. Don't attempt to
use an old <em class="emphasis">sendmail.cf</EM
> file with a new version of sendmail.
You'll just cause yourself grief. As you can see from the sample above,
<b class="emphasis.bold">m4</B
> configuration files are very short and can be constructed from
only a few macros. Use <b class="emphasis.bold">m4</B
> to build a fresh configuration every time
you upgrade sendmail.</P
><p class="para">Conversely, you should not use a <em class="emphasis">sendmail.cf</EM
> file created from the
prototype files found in the sendmail distribution with an old version
of sendmail. Features in these files require that you run a
compatible version of sendmail, which means it is necessary to
recompile sendmail to use the new configuration file.
[11]
This is not something every system administrator will choose to do,
because some systems don't have the correct libraries; others don't
even have a C compiler! If you choose not to recompile sendmail, you
can use the sample <em class="emphasis">sendmail.cf</EM
> file provided with your system
as a starting point. However, if you have major changes planned for
your configuration, it is probably easier to recompile sendmail
and build a new configuration with <b class="emphasis.bold">m4</B
> than it is to make major
changes directly to the <em class="emphasis">sendmail.cf</EM
>.<a class="indexterm" name="AUTOID-13269"></A
></P
><blockquote class="footnote"><p class="para">[11] See <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
> for information about compiling sendmail.</P
></BLOCKQUOTE
><p class="para">In the next part of this chapter, we use one of the sample
<em class="emphasis">sendmail.cf</EM
> files provided with Linux. The specific file we
start with is <em class="emphasis">linux.smtp.cf</EM
> found in the <em class="emphasis">/usr/src/sendmail</EM
>
directory on the Slackware 96 version of Linux. All of the things
that we discuss in the remainder of the chapter apply equally well to
<em class="emphasis">sendmail.cf</EM
> files that are produced by <b class="emphasis.bold">m4</B
>. The structure of
a <em class="emphasis">sendmail.cf</EM
> file, the commands that it contains, and the tools
used to debug it are universal.<a class="indexterm" name="AUTOID-13277"></A
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-10-SECT-4.2">10.4.2 General sendmail.cf Structure </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CF-FILE-STRUCTURE-OF"></A
>Many <em class="emphasis">sendmail.cf</EM
> files have more or less the same structure
because most are descendants of a few original files. Therefore,
the files provided with your system probably are similar to the ones
used in our examples. Some systems use a different structure, but the
functions of the sections described here will be found somewhere in most
<em class="emphasis">sendmail.cf</EM
> files.</P
><p class="para">The Linux file, <em class="emphasis">linux.smtp.cf</EM
>,<a class="indexterm" name="AUTOID-13288"></A
>
is our example of
<em class="emphasis">sendmail.cf</EM
> file structure. The section labels from the sample
file are used here to provide an overview of the <em class="emphasis">sendmail.cf</EM
>
structure. These sections will be described in greater detail when we
modify a sample configuration. The sections are:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">Local Information</EM
></DT
><dd class="listitem"><p class="para">Defines the information that is specific to the individual host.
In the <em class="emphasis">linux.smtp.cf</EM
> file, Local Information defines the host
name, the names of any mail relay hosts, and the mail domain. It also
contains the name that sendmail uses to identify itself when it
returns error messages, the message that sendmail displays during
an SMTP login, and the version number of the <em class="emphasis">sendmail.cf</EM
> file.
(Increase the version number each time you modify the configuration.)
This section is usually customized during configuration.</P
></DD
><dt class="term"><em class="emphasis">Options</EM
></DT
><dd class="listitem"><p class="para">Defines the sendmail options. This section usually
requires no modifications.</P
></DD
><dt class="term"><em class="emphasis">Message Precedence</EM
></DT
><dd class="listitem"><p class="para">Defines the various message precedence values used by
sendmail. This section is not modified.</P
></DD
><dt class="term"><em class="emphasis">Trusted Users</EM
></DT
><dd class="listitem"><p class="para">Defines the users who are trusted to override the sender
address when they are sending mail. This section is not modified.
Adding users to this list is a potential security problem.</P
></DD
><dt class="term"><em class="emphasis">Format of Headers</EM
></DT
><dd class="listitem"><p class="para">Defines the format of the headers that sendmail
inserts into mail. This section is not modified.</P
></DD
><dt class="term"><em class="emphasis">Rewriting Rules</EM
></DT
><dd class="listitem"><p class="para">Defines the rules used to rewrite mail addresses. Rewriting Rules
contains the general rules called by sendmail or other rewrite
rules. This section is not modified during the initial sendmail
configuration. Rewrite rules are usually only modified to correct a
problem or to add a new service.</P
></DD
><dt class="term"><em class="emphasis">Mailers</EM
></DT
><dd class="listitem"><p class="para">Defines the instructions used by sendmail to invoke the mail
delivery programs. The specific rewrite rules associated with each
individual mailer are also defined in this section. The mailer
definitions are usually not modified. However, the rewrite rules
associated with the mailers are sometimes modified to correct a problem
or to add a new service.</P
></DD
></DL
><p class="para">The section labels in the sample file delivered with your system are
probably different from these. However, the structure of your sample
file is probably similar to the structure discussed above in these
ways:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">The information that is customized for each host is probably at the
beginning of the file.</P
></LI
><li class="listitem"><p class="para">Similar types of commands, e.g., option commands, header commands, etc.,
are usually grouped together.</P
></LI
><li class="listitem"><p class="para">The bulk of the file consists of rewrite rules.</P
></LI
><li class="listitem"><p class="para">The last part of the file probably contains mailer definitions
intermixed with the rewrite rules that are associated with the
individual mailers.</P
></LI
></UL
><p class="para">Look at the comments in<a class="indexterm" name="AUTOID-13341"></A
>
your <em class="emphasis">sendmail.cf</EM
> file. Sometimes these
comments provide valuable insight into the file structure and
the things that are necessary to configure a system.<a class="indexterm" name="AUTOID-13345"></A
></P
><p class="para">It's important to realize how little of <em class="emphasis">sendmail.cf</EM
> needs to be
modified for a typical system. If you pick the right sample file to
work from, you may only need to modify a few lines in the first section.
From this perspective, sendmail configuration appears to be a
trivial task. So why are system administrators intimidated by it? 
In large part it is because of the
difficult syntax of the <em class="emphasis">sendmail.cf</EM
> configuration language.</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_03.htm" title="10.3 sendmail Aliases "><img src="../gifs/txtpreva.gif" alt="Previous: 10.3 sendmail Aliases " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_05.htm" title="10.5 sendmail Configuration "><img src="../gifs/txtnexta.gif" alt="Next: 10.5 sendmail Configuration " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.3 sendmail Aliases </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.5 sendmail Configuration </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
