<html><head>
<title>[Chapter 3] 3.4 Mail Services</TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:31:45Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_01.htm" title="3. Network Services"><link rel="prev" href="ch03_03.htm#TCP2-CH-3-SECT-3.1" title="3.3 Domain Name Service"><link rel="next" href="ch03_05.htm#TCP2-CH-3-SECT-5.1" title="3.5 Configuration Servers"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch03_03.htm#TCP2-CH-3-SECT-3.1" title="3.3 Domain Name Service"><img src="../gifs/txtpreva.gif" alt="Previous: 3.3 Domain Name Service" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 3<br>Network Services</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch03_05.htm#TCP2-CH-3-SECT-5.1" title="3.5 Configuration Servers"><img src="../gifs/txtnexta.gif" alt="Next: 3.5 Configuration Servers" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-3-SECT-4">3.4 Mail Services</A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-3-IX-MAIL-SERVERS"></A
>Users consider electronic mail the most important network service because
they use it for interpersonal communications. Some applications are
newer and fancier. Other applications consume more network bandwidth.
Others are more important for the continued operation of the network. But
email is the application people use to communicate with each other.
It isn't very fancy, but it's vital.</P
><p class="para">TCP/IP provides a reliable, flexible email system built on a few basic
protocols. These are: <em class="emphasis">Simple Mail Transfer Protocol</EM
> (SMTP),
<em class="emphasis">Post Office Protocol</EM
> (POP), and <em class="emphasis">Multipurpose Internet Mail
Extensions</EM
> (MIME). There are other TCP/IP mail
protocols. <em class="emphasis">Interactive Mail Access Protocol</EM
>, defined in RFC
1176, is an interesting protocol designed to supplant POP. It provides
remote text searches and message parsing features not found in POP. We
will touch only briefly on IMAP.  It and other protocols have some
very interesting features, but they are not yet widely
implemented.</P
><p class="para">Our coverage concentrates on the three protocols you are
most likely to use building your network: SMTP, POP, and MIME. We
start with SMTP, the foundation of all TCP/IP email systems.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-3-SECT-4.1">3.4.1 Simple Mail Transfer Protocol</A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-3-IX-SIMPLE-MAIL-TRANSFER-PROTOCOL-SMTP"></A
>SMTP is the TCP/IP mail delivery protocol. It moves mail across the
Internet and across your local network. SMTP is defined in RFC 821,
<em class="emphasis">A Simple Mail Transfer Protocol</EM
>. It runs over the reliable,
connection-oriented service provided by <em class="emphasis">Transmission Control
Protocol</EM
> (TCP), and it uses well-known port number 25.
[7]
<a class="xref" href="#TCP2-CH-3-TAB-0" title="SMTP Commands">Table 3.1</A
>
lists some of the simple, human-readable commands used by SMTP.<a class="indexterm" name="AUTOID-2906"></A
></P
><blockquote class="footnote"><p class="para">[7] Most standard TCP/IP applications are assigned a well-known port in
the <em class="emphasis">Assigned Numbers RFC</EM
>, so that remote systems know how to
connect the service.</P
></BLOCKQUOTE
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-3-TAB-0">Table 3.1: SMTP Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Syntax</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Hello</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">HELO</B
> &lt;<code class="replaceable"><i>sending-host</I
></CODE
><b class="emphasis.bold">&gt;</B
></TD
><td class="entry" rowspan="1" colspan="1">Identify sending SMTP</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">From</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">MAIL FROM:&lt;</B
><code class="replaceable"><i>from-address</I
></CODE
><b class="emphasis.bold">&gt;</B
></TD
><td class="entry" rowspan="1" colspan="1">Sender address</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Recipient</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">RCPT TO:&lt;</B
><code class="replaceable"><i>to-address</I
></CODE
><b class="emphasis.bold">&gt;</B
></TD
><td class="entry" rowspan="1" colspan="1">Recipient address</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Data</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">DATA</B
></TD
><td class="entry" rowspan="1" colspan="1">Begin a message</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Reset</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">RSET</B
></TD
><td class="entry" rowspan="1" colspan="1">Abort a message</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Verify</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">VRFY &lt;</B
><code class="replaceable"><i>string</I
></CODE
><b class="emphasis.bold">&gt;</B
></TD
><td class="entry" rowspan="1" colspan="1">Verify a username</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Expand</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">EXPN &lt;</B
><code class="replaceable"><i>string</I
></CODE
><b class="emphasis.bold">&gt;</B
></TD
><td class="entry" rowspan="1" colspan="1">Expand a mailing list</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Help</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">HELP </B
>[<code class="replaceable"><i>string</I
></CODE
>]</TD
><td class="entry" rowspan="1" colspan="1">Request online help</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Quit</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">QUIT</B
></TD
><td class="entry" rowspan="1" colspan="1">End the SMTP session</TD
></TR
></TBODY
></TABLE
><p class="para">SMTP is such a simple protocol you can literally do it yourself.
<b class="emphasis.bold">telnet</B
> to port 25 on a remote host and type mail in from the
command line using the SMTP commands. This technique is sometimes used
to test a remote system's SMTP server, but we use it here to
illustrate how mail is delivered between systems. The example below
shows mail manually input from Daniel on <em class="emphasis">peanut.nuts.com </EM
> to
Tyler on <em class="emphasis">almond.nuts.com</EM
>.</P
><p class="para"><blockquote class="screen"><pre class="screen">% <b class="emphasis.bold">telnet almond.nuts.com 25</B
>
Trying 172.16.12.1 ...
Connected to almond.nuts.com.
Escape character is '^]'.
220 almond Sendmail 4.1/1.41 ready at Tue, 29 Mar 94 17:21:26 EST
<b class="emphasis.bold">helo peanut.nuts.com</B
>
250 almond Hello peanut.nuts.com, pleased to meet you
<b class="emphasis.bold">mail from:&lt;daniel@peanut.nuts.com&gt;</B
>
250 &lt;daniel@peanut.nuts.com&gt;... Sender ok
<b class="emphasis.bold">rcpt to:&lt;tyler@almond.nuts.com&gt;</B
>
250 &lt;tyler@almond.nuts.com&gt;... Recipient ok
<b class="emphasis.bold">data</B
>
354 Enter mail, end with &quot;.&quot; on a line by itself
<b class="emphasis.bold">Hi Tyler!
.</B
>
250 Mail accepted
<b class="emphasis.bold">quit</B
>
221 almond delivering mail
Connection closed by foreign host.</PRE
></BLOCKQUOTE
></P
><p class="para">The user input is shown in bold type. All of the other lines are
output from the system. This example shows how simple it is. A TCP
connection is opened. The sending system identifies itself. The
<em class="emphasis">From</EM
> address and the <em class="emphasis">To</EM
> address are provided. The message
transmission begins with the <b class="emphasis.bold">DATA</B
> command<a class="indexterm" name="AUTOID-2991"></A
>
and ends with a line<a class="indexterm" name="AUTOID-2993"></A
>
that contains only a period (.). The session terminates with a QUIT
command. Very simple, and very few commands are used.</P
><p class="para">There are other commands (<b class="emphasis.bold">SEND</B
>, <b class="emphasis.bold">SOML</B
>, <b class="emphasis.bold">SAML</B
>, and <b class="emphasis.bold">TURN</B
>)
defined in RFC
821 that are optional and not widely implemented. Even some of the
commands that are implemented are not commonly used. The commands
<b class="emphasis.bold">HELP</B
>, <b class="emphasis.bold">VRFY</B
>, and <b class="emphasis.bold">EXPN</B
>
are designed more for interactive use than for
the normal machine-to-machine interaction used by SMTP. The following
excerpt from a SMTP session shows how these odd commands work.</P
><p class="para"><blockquote class="screen"><pre class="screen"><b class="emphasis.bold">HELP</B
>
214-Commands:
214-    HELO    MAIL    RCPT    DATA    RSET
214-    NOOP    QUIT    HELP    VRFY    EXPN
214-For more info use &quot;HELP &lt;topic&gt;&quot;.
214-For local information contact postmaster at this site.
214 End of HELP info
<b class="emphasis.bold">HELP RSET</B
>
214-RSET
214-    Resets the system.
214 End of HELP info
<b class="emphasis.bold">VRFY &lt;jane&gt;</B
>
250 &lt;jane@brazil.nuts.com&gt;
<b class="emphasis.bold">VRFY &lt;mac&gt;</B
>
250 Kathy McCafferty &lt;&lt;mac&gt;&gt;
<b class="emphasis.bold">EXPN &lt;admin&gt;</B
>
250-&lt;sara@pecan.nuts.com&gt;
250 David Craig &lt;&lt;david&gt;&gt;
250-&lt;tyler@nuts.com&gt;</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-3012"></A
>The <b class="emphasis.bold">HELP</B
> command prints out a summary of the commands implemented on
the system. The <b class="emphasis.bold">HELP RSET</B
> command specifically requests information
about the <b class="emphasis.bold">RSET</B
> command. Frankly, this help system isn't very helpful!</P
><p class="para">The <b class="emphasis.bold">VRFY</B
> and <b class="emphasis.bold">EXPN</B
>
commands are more useful, but are often disabled for
security reasons because they provide user account information that
might be exploited by network intruders. The <b class="emphasis.bold">EXPN &lt;admin&gt;</B
><a class="indexterm" name="AUTOID-3022"></A
>
command asks for a listing of the email addresses in the mailing list
<em class="emphasis">admin</EM
>, and that is what the system provides. The <b class="emphasis.bold">VRFY</B
> command<a class="indexterm" name="AUTOID-3027"></A
>
asks for information about an individual instead of a mailing list. In
the case of the  <b class="emphasis.bold">VRFY &lt;mac&gt;</B
> command, <em class="emphasis">mac</EM
> is a local user
account and the user's account information is returned.
In the case of <b class="emphasis.bold">VRFY &lt;jane&gt;</B
>, <em class="emphasis">jane</EM
> is an alias in the<a class="indexterm" name="AUTOID-3033"></A
><a class="indexterm" name="AUTOID-3036"></A
>
<em class="emphasis">/etc/aliases</EM
> file. The value returned is the email address for
<em class="emphasis">jane</EM
> found in that file. The three commands in this example are
interesting, but rarely used. SMTP depends on the other commands to
get the real work done.</P
><p class="para">SMTP provides direct end-to-end mail delivery. This is unusual. Most
mail systems use <em class="emphasis">store and forward</EM
> protocols<a class="indexterm" name="AUTOID-3042"></A
>
like UUCP<a class="indexterm" name="AUTOID-3044"></A
>
and X.400<a class="indexterm" name="AUTOID-3046"></A
>
that move mail toward its destination one hop at a time, storing the
complete message at each hop and then forwarding it on to the next
system. The message proceeds in this manner until final delivery is
made.
<a class="xref" href="#TCP2-CH-3-FIG-2" title="Mail delivery systems">Figure 3.3</A
>
illustrates both store and forward
and direct delivery mail systems. The UUCP address clearly shows the
path that the mail takes to its destination, while the SMTP mail<a class="indexterm" name="AUTOID-3049"></A
><a class="indexterm" name="AUTOID-3052"></A
>
address implies direct delivery.
[8]</P
><blockquote class="footnote"><p class="para">[8] The address doesn't have anything to do with whether or not a system
is store and forward or direct delivery. It just happens that UUCP
provides an address that helps to illustrate this point.</P
></BLOCKQUOTE
><h4 class="figure"><a class="title" name="TCP2-CH-3-FIG-2">Figure 3.3: Mail delivery systems</A
></H4
><img class="graphic" src="figs/tcp2_0303.gif" alt="Figure 3.3"><p class="para"><a class="indexterm" name="AUTOID-3060"></A
>Direct delivery allows SMTP to deliver mail without relying on
intermediate hosts. If the delivery fails, the local system knows it
right away. It can inform the user that sent the mail or queue the
mail for later delivery without reliance on remote systems. The
disadvantage of direct delivery is that it requires both systems to be
fully capable of handling mail. Some systems cannot handle mail,
particularly small systems such as PCs or mobile systems such as
laptops.  These systems are usually shut down at the end of the day
and are frequently offline. Mail directed from a remote host fails
with a &quot;cannot connect&quot; error<a class="indexterm" name="AUTOID-3062"></A
>
when the local system is turned off or offline.  To handle these
cases, features in the DNS system are used to route the message to a
mail server in lieu of direct delivery. The mail is then moved from
the server to the client system when the client is back online. The
protocol most TCP/IP networks use for this task is POP.<a class="indexterm" name="AUTOID-3064"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-3-SECT-4.2">3.4.2 Post Office Protocol</A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-3-IX-POST-OFFICE-PROTOCOL-POP"></A
>There are two versions of POP in widespread use: POP2 and POP3. POP2 is
defined in RFC 937 and POP3 is defined in RFC 1725. POP2 uses port
109 and POP3 uses port 110. These are incompatible protocols that use
different commands, but they perform the same basic functions. The POP
protocols verify the user's login name and password, and move the user's
mail from the server to the user's local mail reader.</P
><p class="para">A sample POP2 session clearly illustrates how a POP protocol works.
POP2 is a simple request/response protocol, and just as with SMTP, you
can type POP2 commands directly into its well-known port (109) and observe
their effect. Here's an example with the user input shown in bold type:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <b class="emphasis.bold">telnet almond.nuts.com 109</B
>
Trying 172.16.12.1 ...
Connected to almond.nuts.com.
Escape character is '^]'.
+ POP2 almond POP2 Server at Wed 30-Mar-94 3:48PM-EST
<b class="emphasis.bold">HELO hunt WatsWatt</B
>
#3  ...(From folder 'NEWMAIL')
<b class="emphasis.bold">READ</B
>
=496
<b class="emphasis.bold">RETR</B
>
<em class="emphasis">{The full text of message 1}</EM
>
<b class="emphasis.bold">ACKD</B
>
=929
<b class="emphasis.bold">RETR</B
>
<em class="emphasis">{The full text of message 2}</EM
>
<b class="emphasis.bold">ACKD</B
>
=624
<b class="emphasis.bold">RETR</B
>
<em class="emphasis">{The full text of message 3}</EM
>
<b class="emphasis.bold">ACKD</B
>
=0
<b class="emphasis.bold">QUIT</B
>
+OK POP2 Server exiting (0 NEWMAIL messages left)
Connection closed by foreign host.</PRE
></BLOCKQUOTE
></P
><p class="para">The <b class="emphasis.bold">HELO</B
> command<a class="indexterm" name="AUTOID-3088"></A
>
provides the username and password for the account of the mailbox that
is being retrieved. (This is the same username and password used to
log into the mail server.) In response to the <b class="emphasis.bold">HELO</B
> command the server
sends a count of the number of messages in the mailbox, three (#3) in
our example. The <b class="emphasis.bold">READ</B
> command<a class="indexterm" name="AUTOID-3092"></A
>
begins reading the mail. <b class="emphasis.bold">RETR</B
><a class="indexterm" name="AUTOID-3095"></A
>
retrieves the full text of the current message. <b class="emphasis.bold">ACKD</B
><a class="indexterm" name="AUTOID-3098"></A
>
acknowledges receipt of the message and deletes it from the server.
After each acknowledgment the server sends a count of the number of
bytes in the new message. If the byte count is zero (=0) it indicates
that there are no more messages to be retrieved and the client ends
the session with the <b class="emphasis.bold">QUIT</B
> command. Simple!<a class="indexterm" name="AUTOID-3101"></A
>
<a class="xref" href="#TCP2-CH-3-TAB-1" title="POP2 Commands">Table 3.2</A
>
lists the full set of POP2 commands.</P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-3-TAB-1">Table 3.2: POP2 Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Syntax</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Hello</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">HELO </B
><code class="replaceable"><i>user password</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Identify user account</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Folder</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">FOLD </B
><code class="replaceable"><i>mail-folder</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Select mail folder</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Read</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">READ </B
>[<code class="replaceable"><i>n</I
></CODE
>]</TD
><td class="entry" rowspan="1" colspan="1">Read mail, optionally start with message <code class="replaceable"><i>n</I
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Retrieve</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">RETR</B
></TD
><td class="entry" rowspan="1" colspan="1">Retrieve message</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Save</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">ACKS</B
></TD
><td class="entry" rowspan="1" colspan="1">Acknowledge and save</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Delete</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">ACKD</B
></TD
><td class="entry" rowspan="1" colspan="1">Acknowledge and delete</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Failed</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">NACK</B
></TD
><td class="entry" rowspan="1" colspan="1">Negative acknowledgement</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Quit</TD
><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">QUIT</B
></TD
><td class="entry" rowspan="1" colspan="1">End the POP2 session</TD
></TR
></TBODY
></TABLE
><p class="para"><a class="indexterm" name="AUTOID-3159"></A
>The commands for POP3 are completely different from the commands used
for POP2. 
<a class="xref" href="#TCP2-CH-3-TAB-2" title="POP3 Commands">Table 3.3</A
>
shows the set of POP3 commands defined in RFC 1725.</P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-3-TAB-2">Table 3.3: POP3 Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">USER </B
><code class="replaceable"><i>username</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">The user's account name</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">PASS </B
><code class="replaceable"><i>password</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">The user's password</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">STAT</B
></TD
><td class="entry" rowspan="1" colspan="1">Display the number of unread messages/bytes</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">RETR </B
><code class="replaceable"><i>n</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Retrieve message number <code class="replaceable"><i>n</I
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">DELE </B
><code class="replaceable"><i>n</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Delete message number <code class="replaceable"><i>n</I
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">LAST</B
></TD
><td class="entry" rowspan="1" colspan="1">Display the number of the last message accessed</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">LIST</B
> [<code class="replaceable"><i>n</I
></CODE
>]</TD
><td class="entry" rowspan="1" colspan="1">Display the size of message <code class="replaceable"><i>n</I
></CODE
> or of all messages</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">RSET</B
></TD
><td class="entry" rowspan="1" colspan="1">Undelete all messages; reset message number to 1</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">TOP </B
><code class="replaceable"><i>n l</I
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Print the headers and <code class="replaceable"><i>l</I
></CODE
> lines of message <code class="replaceable"><i>n</I
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">NOOP</B
></TD
><td class="entry" rowspan="1" colspan="1">Do nothing</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">QUIT</B
></TD
><td class="entry" rowspan="1" colspan="1">End the POP3 session</TD
></TR
></TBODY
></TABLE
><p class="para">Despite the fact that these commands are different from those used by
POP2, they can be used to perform similar functions. In the POP2
example we logged into the server and read and deleted three mail
messages. Here's a similar session using POP3:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <b class="emphasis.bold">telnet almond 110</B
>
Trying 172.16.12.1 ...
Connected to almond.nuts.com.
Escape character is '^]'.
+OK almond POP3 Server Process 3.3(1) at Mon 15-May-95 4:48PM-EDT
<b class="emphasis.bold">user hunt</B
>
+OK User name (hunt) ok. Password, please.
<b class="emphasis.bold">pass Watts?Watt?</B
>
+OK 3 messages in folder NEWMAIL (V3.3 Rev B04)
<b class="emphasis.bold">stat</B
>
+OK 3 459
<b class="emphasis.bold">retr 1</B
>
+OK 146 octets
  <i class="lineannotation">The full text of message 1</I
>
<b class="emphasis.bold">dele 1</B
>
+OK message # 1 deleted
<b class="emphasis.bold">retr 2</B
>
+OK 155 octets
  <i class="lineannotation">The full text of message 2</I
>
<b class="emphasis.bold">dele 2</B
>
+OK message # 2 deleted
<b class="emphasis.bold">retr 3</B
>
+OK 158 octets
  <i class="lineannotation">The full text of message 3</I
>
<b class="emphasis.bold">dele 3</B
>
+OK message # 3 deleted
<b class="emphasis.bold">quit</B
>
+OK POP3 almond Server exiting (0 NEWMAIL messages left)
Connection closed by foreign host.</PRE
></BLOCKQUOTE
></P
><p class="para">Naturally you don't really type these commands in yourself, but
experiencing hands-on interaction with SMTP and POP gives you a clearer
understanding of what these programs do and why they are needed.<a class="indexterm" name="AUTOID-3244"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-3-SECT-4.3">3.4.3 Multipurpose Internet Mail Extensions</A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-3-IX-MULTIPURPOSE-INTERNET-MAIL-EXTENSIONS-MIME"></A
>The last email protocol on our quick tour is MIME.
[9]
As its name implies, <em class="emphasis">Multipurpose Internet Mail Extensions</EM
> is an
extension of the existing TCP/IP mail system, not a replacement for
it. MIME is more concerned with what the mail system delivers then it
is with the mechanics of delivery. It doesn't attempt to replace SMTP
or TCP; it extends the definition of what constitutes &quot;mail.&quot;</P
><blockquote class="footnote"><p class="para">[9] MIME is also an integral part of the Web and HTTP.</P
></BLOCKQUOTE
><p class="para">The structure of the mail message carried by SMTP is defined in RFC
822, <em class="emphasis">Standard for the Format of ARPA Internet Text Messages</EM
>.<a class="indexterm" name="AUTOID-3255"></A
>
RFC 822 defines a set of mail headers that are so widely accepted they
are used by many mail systems that do not use SMTP. This is a great
benefit to email because it provides a common ground for mail
translation and delivery through gateways to different mail networks.
MIME extends RFC 822 into two areas not covered by the original RFC:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Support for various data types. The mail system defined by RFC 821 and
RFC 822 transfers only 7-bit ASCII data. This is suitable for
carrying text data composed of US ASCII characters, but it does not
support several languages that have richer character sets and it does
not support binary data transfer.</P
></LI
><li class="listitem"><p class="para">Support for complex message bodies. RFC 822 does not provide a
detailed description of the body of an electronic message. It
concentrates on the mail headers.</P
></LI
></UL
><p class="para">&#13;MIME addresses these two weaknesses by defining encoding techniques
for carrying various forms of data, and by defining a structure for
the message body that allows multiple objects<a class="indexterm" name="AUTOID-3263"></A
>
to be carried in a single message. The RFC 1521, <em class="emphasis">MIME (Multipurpose
Internet Mail Extensions) Part One: Mechanisms for Specifying and
Describing the Format of Internet Message Bodies</EM
>, defines two
headers that give structure to the mail message body and allow it to
carry various forms of data.  These are the <em class="emphasis">Content-Type</EM
> header
and the <em class="emphasis">Content-Transfer-Encoding</EM
> header.</P
><p class="para"><a class="indexterm" name="TCP2-CH-3-IX-CONTENT-TYPE-HEADERS"></A
><a class="indexterm" name="TCP2-CH-3-IX-HEADERS"></A
>As the name implies, the Content-Type header defines the type of data
being carried in the message. The header has a Subtype field that
refines the definition. Many subtypes have been defined since the
original RFC was released. A current list of MIME types<a class="indexterm" name="AUTOID-3274"></A
>
can be obtained from the Internet.
[10]
The original RFC defines seven initial content types<a class="indexterm" name="AUTOID-3281"></A
>
and a few subtypes:<a class="indexterm" name="AUTOID-3283"></A
></P
><blockquote class="footnote"><p class="para">[10] Go to <a class="systemitem.url" href="../../../WebStripper/protected.html#link=ftp://ftp.isi.edu/in-notes/iana/assignments/media-types">ftp://ftp.isi.edu/in-notes/iana/assignments/media-types</A
> and
retrieve the file <em class="emphasis">media-types</EM
>.</P
></BLOCKQUOTE
><dl class="variablelist"><dt class="term"><em class="emphasis">text</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3291"></A
>Text data. RFC 1521 defines text subtypes <em class="emphasis">plain</EM
><a class="indexterm" name="AUTOID-3294"></A
>
and <em class="emphasis">richtext</EM
>.<a class="indexterm" name="AUTOID-3297"></A
>
Several subtypes have since been added, including <em class="emphasis">enriched</EM
><a class="indexterm" name="AUTOID-3300"></A
>
and <em class="emphasis">html</EM
>.<a class="indexterm" name="AUTOID-3303"></A
></P
></DD
><dt class="term"><em class="emphasis">application</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3310"></A
><a class="indexterm" name="AUTOID-3313"></A
>Binary data. The primary subtype defined in RFC 1521 is
<em class="emphasis">octet-stream</EM
>,<a class="indexterm" name="AUTOID-3317"></A
>
which indicates the data is a stream of 8-bit binary bytes. One other
subtype, <em class="emphasis">PostScript</EM
>,<a class="indexterm" name="AUTOID-3320"></A
>
is defined in the standard.  Since then
more than 90 subtypes have been defined. They specify binary data
formatted for a particular application. For example, <em class="emphasis">msword</EM
> is
an application subtype.</P
></DD
><dt class="term"><em class="emphasis">image</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3328"></A
><a class="indexterm" name="AUTOID-3330"></A
>Still graphic images. Two subtypes are defined in RFC 1521: <em class="emphasis">jpeg</EM
><a class="indexterm" name="AUTOID-3334"></A
><a class="indexterm" name="AUTOID-3336"></A
>
and <em class="emphasis">gif</EM
>. More than 10 additional subtypes have since been added,
including widely used image data standards such as <em class="emphasis">tiff</EM
>,<a class="indexterm" name="AUTOID-3340"></A
>
<em class="emphasis">cgm</EM
>, and <em class="emphasis">g3fax</EM
>.<a class="indexterm" name="AUTOID-3344"></A
><a class="indexterm" name="AUTOID-3346"></A
></P
></DD
><dt class="term"><em class="emphasis">video</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3353"></A
><a class="indexterm" name="AUTOID-3355"></A
>Moving graphic images. The initially defined subtype was <em class="emphasis">mpeg</EM
>,<a class="indexterm" name="AUTOID-3359"></A
>
which is a widely used standard for computer video data. A few others
have since been added, including <em class="emphasis">quicktime</EM
>.<a class="indexterm" name="AUTOID-3362"></A
></P
></DD
><dt class="term"><em class="emphasis">audio</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3369"></A
>Audio data. The only subtype initially defined for audio was <em class="emphasis">basic</EM
>,<a class="indexterm" name="AUTOID-3372"></A
>
which means the sounds are encoded using pulse code modulation (PCM).<a class="indexterm" name="AUTOID-3374"></A
><a class="indexterm" name="AUTOID-3376"></A
></P
></DD
><dt class="term"><em class="emphasis">multipart</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3383"></A
>Data composed of multiple independent sections. A multipart message
body is made up of several independent parts. RFC 1521 defines four
subtypes. The primary subtype is <em class="emphasis">mixed</EM
>,<a class="indexterm" name="AUTOID-3386"></A
>
which means that each part of the message can be data of any content
type. Other subtypes are: <em class="emphasis">alternative</EM
>,<a class="indexterm" name="AUTOID-3389"></A
>
meaning that the same data is repeated in each section in different
formats; <em class="emphasis">parallel</EM
>,<a class="indexterm" name="AUTOID-3392"></A
>
meaning that the data in the various parts is to be viewed
simultaneously; and <em class="emphasis">digest</EM
>,<a class="indexterm" name="AUTOID-3395"></A
>
meaning that each section is data of the type <em class="emphasis">message</EM
>.<a class="indexterm" name="AUTOID-3398"></A
>
Several subtypes have since been added, including support for voice
messages (<em class="emphasis">voice-message</EM
>)<a class="indexterm" name="AUTOID-3402"></A
>
and <em class="emphasis">encrypted</EM
> messages.<a class="indexterm" name="AUTOID-3405"></A
></P
></DD
><dt class="term"><em class="emphasis">message</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3413"></A
><a class="indexterm" name="AUTOID-3416"></A
><a class="indexterm" name="AUTOID-3419"></A
>Data that is an encapsulated mail message. RFC 1521 defines three
subtypes. The primary subtype, <em class="emphasis">rfc822</EM
>,<a class="indexterm" name="AUTOID-3423"></A
>
indicates that the data is a complete RFC 822 mail message. The other
subtypes, <em class="emphasis">partial</EM
><a class="indexterm" name="AUTOID-3426"></A
>
and <em class="emphasis">External-body</EM
>,<a class="indexterm" name="AUTOID-3429"></A
>
are both designed to handle large messages.  <em class="emphasis">partial</EM
> allows
large encapsulated messages to be split among multiple MIME
messages. <em class="emphasis">External-body</EM
> points to an external source for the
contents of a large message body, so that only the pointer, not the
message itself, is contained in the MIME message. Two additional
subtypes have been defined: <em class="emphasis">news</EM
><a class="indexterm" name="AUTOID-3434"></A
>
for carrying network news, and
<em class="emphasis">http</EM
><a class="indexterm" name="AUTOID-3437"></A
>
for HTTP traffic formatted to comply with MIME content typing.<a class="indexterm" name="AUTOID-3440"></A
></P
></DD
></DL
><p class="para"><a class="indexterm" name="TCP2-CH-3-IX-CONTENT-TRANSFER-ENCODING-HEADERS"></A
>The Content-Transfer-Encoding header identifies the type of encoding
used on the data. Traditional SMTP systems only forward 7-bit ASCII
data with a line length of less than 1000 bytes. To ensure that the
data from a MIME system is forwarded through
gateways that may only support 7-bit ASCII, the data can be encoded.
RFC 1521 defines six types of encoding. Some types are used to
identify the encoding inherent in the data. Only two types are actual
encoding techniques defined in the RFC. The six encoding types are:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">7bit</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3450"></A
><a class="indexterm" name="AUTOID-3452"></A
>US ASCII data. No encoding is performed on 7-bit ASCII data.</P
></DD
><dt class="term"><em class="emphasis">8bit</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3459"></A
><a class="indexterm" name="AUTOID-3461"></A
>Octet data. No encoding is performed. The data is binary, but the
lines of data are short enough for SMTP transport; i.e., the lines are
fewer than 1000 bytes long.</P
></DD
><dt class="term"><em class="emphasis">binary</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3468"></A
><a class="indexterm" name="AUTOID-3471"></A
>Binary data. No encoding is performed. The data is binary and the
lines may be longer than 1000 bytes. There is no difference between
<em class="emphasis">binary</EM
> and <em class="emphasis">8bit</EM
> data except the line length restriction;<a class="indexterm" name="AUTOID-3475"></A
>
both types of data are unencoded byte (octet) streams. MIME does not
handle unencoded bitstream data.</P
></DD
><dt class="term"><em class="emphasis">quoted-printable</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3482"></A
><a class="indexterm" name="AUTOID-3484"></A
>Encoded text data. This encoding technique handles data that is
largely composed of printable ASCII text. The ASCII text is sent
unencoded, while bytes with a value greater than 127 or less than 33
are sent encoded as strings made up of the equal sign followed by the
hexadecimal value of the byte. For example: the ASCII form feed
character, which has the hexadecimal value of 0C, is sent as
<em class="emphasis">=0C</EM
>. Naturally there's more to it than this&nbsp;- for example, the
literal equal sign has to be sent as <em class="emphasis">=3D</EM
>, and the newline at the
end of each line is not encoded. But this is the general idea of how
<em class="emphasis">quoted-printable</EM
> data is sent.</P
></DD
><dt class="term"><em class="emphasis">base64</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3495"></A
><a class="indexterm" name="AUTOID-3497"></A
>Encoded binary data. This encoding technique can be used on any
byte-stream data. Three octets of data are encoded as four 6-bit
characters, which increases the size of the file by one-third. The
6-bit characters are a subset of US ASCII, chosen because they can be
handled by any type of mail system. The maximum line length for
<em class="emphasis">base64</EM
> data is 76 characters.
<a class="xref" href="#TCP2-CH-3-FIG-3" title="base64 encoding">Figure 3.4</A
>
illustrates this 3 to 4 encoding technique.</P
></DD
><dt class="term"><em class="emphasis">x-token</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3507"></A
>Specially encoded data. It is possible for software developers to
define their own private encoding techniques.
If they do so, the name of the encoding technique must begin with
<em class="emphasis">X-</EM
>. Doing this is strongly discouraged because it limits<a class="indexterm" name="AUTOID-3510"></A
>
interoperability between mail systems.<a class="indexterm" name="AUTOID-3514"></A
><a class="indexterm" name="AUTOID-3515"></A
></P
></DD
></DL
><h4 class="figure"><a class="title" name="TCP2-CH-3-FIG-3">Figure 3.4: base64 encoding</A
></H4
><img class="graphic" src="figs/tcp2_0304.gif" alt="Figure 3.4"><p class="para"><a class="indexterm" name="AUTOID-3520"></A
>The number of supported data types and encoding techniques grows as new
data formats appear and are used in message transmissions. New RFCs
constantly define new data types and encoding. Read the latest RFCs to
keep up with MIME developments.</P
><p class="para"><a class="indexterm" name="TCP2-CH-3-IX-SIMPLE-MAIL-TRANSFER-PROTOCOL-SMTP-SERVICE-EXTENSIONS-TO"></A
>MIME defines data types that SMTP was not designed to carry. To handle
these and other future requirements, RFC 1869, <em class="emphasis">SMTP Service
Extensions</EM
>, defines a technique for making SMTP <em class="emphasis">extensible</EM
>.<a class="indexterm" name="AUTOID-3529"></A
>
The RFC does not define new services for SMTP; in fact, the only service
extensions mentioned in the RFC are defined in other RFCs. What this
RFC does define is a simple mechanism for systems to negotiate which
SMTP extensions are supported. The RFC defines a new <em class="emphasis">hello</EM
><a class="indexterm" name="AUTOID-3533"></A
><a class="indexterm" name="AUTOID-3536"></A
>
command (<b class="emphasis.bold">EHLO</B
>) and the legal responses to that command. One response
is for the receiving system to return a list of the SMTP extensions it
supports. This response allows the sending system to know what
extended services can be used, and to avoid those that are not
implemented on the remote system. SMTP implementations that support
the <b class="emphasis.bold">EHLO</B
> command are called Extended SMTP (ESMTP).<a class="indexterm" name="AUTOID-3540"></A
><a class="indexterm" name="AUTOID-3542"></A
><a class="indexterm" name="AUTOID-3544"></A
></P
><p class="para">Several ESMTP service extensions have been defined for MIME mailers. 
<a class="xref" href="#TCP2-CH-3-TAB-3" title="SMTP Service Extensions">Table 3.4</A
>
lists some of these. The table lists the <b class="emphasis.bold">EHLO</B
> keyword associated with
each extension, the number of the RFC that defines it, and its purpose.
These service extensions are just the beginning. Undoubtedly more will
be defined to support MIME and other SMTP enhancements.</P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-3-TAB-3">Table 3.4: SMTP Service Extensions</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Keyword</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">RFC</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Server Extension </TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">8BITMIME</TD
><td class="entry" rowspan="1" colspan="1">1652</TD
><td class="entry" rowspan="1" colspan="1">Accept 8bit binary data</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">CHUNKING</TD
><td class="entry" rowspan="1" colspan="1">1830</TD
><td class="entry" rowspan="1" colspan="1">Accept messages cut into chunks</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">CHECKPOINT</TD
><td class="entry" rowspan="1" colspan="1">1845</TD
><td class="entry" rowspan="1" colspan="1">Checkpoint/restart mail transactions</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">PIPELINING</TD
><td class="entry" rowspan="1" colspan="1">1854</TD
><td class="entry" rowspan="1" colspan="1">Accept multiple commands in a single send</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">SIZE</TD
><td class="entry" rowspan="1" colspan="1">1870</TD
><td class="entry" rowspan="1" colspan="1">Display maximum acceptable message size</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">DSN</TD
><td class="entry" rowspan="1" colspan="1">1891</TD
><td class="entry" rowspan="1" colspan="1">Provide delivery status notifications</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ETRN</TD
><td class="entry" rowspan="1" colspan="1">1985</TD
><td class="entry" rowspan="1" colspan="1">Accept remote queue processing requests</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ENHANCEDSTATUSCODES</TD
><td class="entry" rowspan="1" colspan="1">2034</TD
><td class="entry" rowspan="1" colspan="1">Provide enhanced error codes</TD
></TR
></TBODY
></TABLE
><p class="para">It is easy to check which extensions are supported by your server by
using the <b class="emphasis.bold">EHLO</B
> command. The following example is from a sendmail 8.8.5.
system:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>telnet localhost 25</B
></CODE
>
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
220 peanut ESMTP Sendmail 8.7.5/8.7.3; Tue, 11 Nov 1997 15:22:34 -0500
<code class="userinput"><b>ehlo peanut</B
></CODE
>
250-peanut Hello craig@localhost [127.0.0.1], pleased to meet you
250-EXPN
250 HELP
250-8BITMIME
250-SIZE
250-DSN
250-ETRN
250-VERB
250-ONEX
250-XUSR
<code class="userinput"><b>quit</B
></CODE
>
221 peanut closing connection
Connection closed by foreign host.</PRE
></BLOCKQUOTE
></P
><p class="para">The sample system lists nine commands in response to the <b class="emphasis.bold">EHLO</B
> greeting.
Two of these, <b class="emphasis.bold">EXPN</B
><a class="indexterm" name="AUTOID-3601"></A
><a class="indexterm" name="AUTOID-3604"></A
>
and <b class="emphasis.bold">HELP</B
>, are standard SMTP commands that aren't
implemented on all systems (the standard commands are listed in 
<a class="xref" href="#TCP2-CH-3-TAB-0" title="SMTP Commands">Table 3.1</A
>
8BITMIME, SIZE, DSN, and ETRN are ESMTP extensions, all of which are
described in 
<a class="xref" href="#TCP2-CH-3-TAB-3" title="SMTP Service Extensions">Table 3.4</A
>
The last three keywords in the response are VERB, ONEX, and XUSR. All
of these are specific to sendmail version 8.  None is defined in an
RFC. VERB<a class="indexterm" name="AUTOID-3610"></A
>
simply places the sendmail server in verbose mode. ONEX<a class="indexterm" name="AUTOID-3612"></A
>
limits the session to a single message transaction.  XUSR is as yet<a class="indexterm" name="AUTOID-3614"></A
>
unimplemented, but it will be equivalent to the <b class="emphasis.bold">-U</B
> sendmail
command-line argument.
[11]
As the last three keywords indicate, the RFCs allow for private ESMTP
extensions.<a class="indexterm" name="AUTOID-3620"></A
><a class="indexterm" name="AUTOID-3623"></A
><a class="indexterm" name="AUTOID-3627"></A
></P
><blockquote class="footnote"><p class="para">[11] See <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E, <cite class="appendix">A sendmail Reference</CITE
></A
>, for a list of the sendmail command-line arguments.</P
></BLOCKQUOTE
><p class="para">The specific extensions implemented on each operating systems are
different. For example, on a Solaris 2.5.1 system<a class="indexterm" name="AUTOID-3631"></A
>
only three keywords
(EXPN, SIZE, and HELP) are displayed in response to <b class="emphasis.bold">EHLO</B
>. The purpose
of <b class="emphasis.bold">EHLO</B
> is to identify these differences at the begining of the SMTP
mail exchange.</P
><p class="para">ESMTP and MIME are important because they provide a standard way to
transfer non-ASCII data through email. Users share lots of application
specific data that are not 7-bit ASCII. Many users depend on email as
a file transfer mechanism.<a class="indexterm" name="AUTOID-3636"></A
><a class="indexterm" name="AUTOID-3639"></A
></P
><p class="para">SMTP, POP, and MIME are essential parts of the mail system, but other
email protocols may also be essential in the future. The one certainty is that the network will continue to change. You need
to track current developments and include helpful technologies into
your planning. In the next section we look at the various types of TCP/IP
configuration servers. Unlike DNS and email, configuration servers are
not used on most networks. This is changing, however. The demand for easier
installation and improved mobility may make configuration servers part
of your network's future.<a class="indexterm" name="AUTOID-3641"></A
><a class="indexterm" name="AUTOID-3642"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch03_03.htm#TCP2-CH-3-SECT-3.1" title="3.3 Domain Name Service"><img src="../gifs/txtpreva.gif" alt="Previous: 3.3 Domain Name Service" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch03_05.htm#TCP2-CH-3-SECT-5.1" title="3.5 Configuration Servers"><img src="../gifs/txtnexta.gif" alt="Next: 3.5 Configuration Servers" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.3 Domain Name Service</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.5 Configuration Servers</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
