<html><head>
<title>[Chapter 11] 11.6 Checking Name Service </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:40:49Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch11_01.htm" title="11. Troubleshooting TCP/IP "><link rel="prev" href="ch11_05.htm#TCP2-CH-11-SECT-5.2" title="11.5 Checking Routing "><link rel="next" href="ch11_07.htm#TCP2-CH-11-SECT-7.1" title="11.7 Analyzing Protocol Problems "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch11_05.htm#TCP2-CH-11-SECT-5.2" title="11.5 Checking Routing "><img src="../gifs/txtpreva.gif" alt="Previous: 11.5 Checking Routing " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 11<br>Troubleshooting TCP/IP </FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch11_07.htm#TCP2-CH-11-SECT-7.1" title="11.7 Analyzing Protocol Problems "><img src="../gifs/txtnexta.gif" alt="Next: 11.7 Analyzing Protocol Problems " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-11-SECT-6">11.6 Checking Name Service </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-11-IX-TROUBLESHOOTING-NAME-SERVICE"></A
><a class="indexterm" name="TCP2-CH-11-IX-NAME-SERVER-NS-TROUBLESHOOTING"></A
><a class="indexterm" name="AUTOID-16098"></A
>Name server problems are indicated when the &quot;unknown host&quot; error
message is returned by the user's application. Name server problems
can usually be diagnosed with <b class="emphasis.bold">nslookup</B
> or <b class="emphasis.bold">dig</B
>.
<b class="emphasis.bold">nslookup</B
> is discussed in detail in <a class="xref" href="ch08_01.htm" title="Configuring DNS Name Service ">Chapter 8</A
>. <b class="emphasis.bold">dig</B
> is an
alternative tool with similar functionality that is discussed in this
chapter. Before looking at <b class="emphasis.bold">dig</B
>, let's take another look at
<b class="emphasis.bold">nslookup</B
> and see how it is used to troubleshoot name service.</P
><p class="para"><a class="indexterm" name="TCP2-CH-11-IX-NSLOOKUP-IN-TROUBLESHOOTING-TROUBLESHOOTING"></A
>The three features of <b class="emphasis.bold">nslookup</B
> covered in <a class="xref" href="ch08_01.htm" title="Configuring DNS Name Service ">Chapter 8</A
> are
particularly important for troubleshooting remote name server
problems. These features are its ability to:</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16116"></A
>Locate the authoritative servers for the remote domain
using the NS query</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16120"></A
>Obtain all records about the remote host using the ANY
query</P
></LI
><li class="listitem"><p class="para">Browse all entries in the remote zone using
<b class="emphasis.bold">nslookup</B
>'s <b class="emphasis.bold">ls</B
> and <b class="emphasis.bold">view</B
> commands</P
></LI
></UL
><p class="para">When troubleshooting a remote server problem, directly query the
authoritative servers returned by the NS query. Don't rely on
information returned by non-authoritative servers. If the problems
that have been reported are intermittent, query all of the
authoritative servers in turn and compare their answers. Intermittent
name server problems are sometimes caused by the remote servers
returning different answers to the same query.</P
><p class="para">The ANY query returns all records about a host, thus giving the
broadest range of troubleshooting information. Simply knowing what
information is (and isn't) available can solve a lot of problems. For
example, if the query returns an MX record but no A record, it is easy
to understand why the user couldn't <b class="emphasis.bold">telnet</B
> to that host! Many
hosts are accessible to mail that are not accessible by other network
services. In this case, the user is confused and is trying to use the
remote host in an inappropriate manner.</P
><p class="para">If you are unable to locate any information about the hostname that
the user gave you, perhaps the hostname is incorrect. Given that the
hostname you have is wrong, looking for the correct name is like
trying to find a needle in a haystack. However,<a class="indexterm" name="AUTOID-16131"></A
>
<b class="emphasis.bold">nslookup</B
> can help. Use <b class="emphasis.bold">nslookup</B
>'s <b class="emphasis.bold">ls</B
> command to dump
the remote zone file, and redirect the listing to a file. Then use<a class="indexterm" name="AUTOID-16136"></A
>
<b class="emphasis.bold">nslookup</B
>'s <b class="emphasis.bold">view</B
> command to browse through the file, looking
for names similar to the one the user supplied. Many problems are
caused by a mistaken hostname.</P
><p class="para">All of the <b class="emphasis.bold">nslookup</B
> features and commands mentioned here are
used in <a class="xref" href="ch08_01.htm" title="Configuring DNS Name Service ">Chapter 8</A
>. However, some examples using these commands to
solve real name server problems will be helpful. The three examples
that follow are based on actual trouble reports.
[7]</P
><blockquote class="footnote"><p class="para">[7] The host and server names are fictitious, but the problems were
real.</P
></BLOCKQUOTE
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-11-SECT-6.0.1">11.6.1 Some systems work, others don't </A
></H3
><p class="para">A user reported that she could resolve a certain hostname from her
workstation, but could not resolve the same hostname from the central
system. However, the central system could resolve other hostnames. We
ran several tests and found that we could resolve the hostname on some
systems and not on others. There seemed to be no predictable pattern
to the failure. So we used <b class="emphasis.bold">nslookup</B
> to check the remote
servers.</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>nslookup</B
></CODE
>
Default Server:  almond.nuts.com
Address:  172.16.12.1

&gt; <code class="userinput"><b>set type=NS</B
></CODE
>
&gt; <code class="userinput"><b>foo.edu.</B
></CODE
>
Server:  almond.nuts.com
Address:  172.16.12.1

foo.edu        nameserver = gerbil.foo.edu
foo.edu        nameserver = red.big.com
foo.edu        nameserver = shrew.foo.edu
gerbil.foo.edu   inet address = 198.97.99.2
red.big.com   inet address = 184.6.16.2
shrew.foo.edu    inet address = 198.97.99.1
&gt; <code class="userinput"><b>set type=ANY</B
></CODE
>
&gt; <code class="userinput"><b>server gerbil.foo.edu</B
></CODE
>
Default Server:  gerbil.foo.edu
Address:  198.97.99.2

&gt; <code class="userinput"><b>hamster.foo.edu</B
></CODE
>
Server:  gerbil.foo.edu
Address:  198.97.99.2

hamster.foo.edu        inet address = 198.97.99.8
&gt; <code class="userinput"><b>server red.big.com</B
></CODE
>
Default Server:  red.big.com
Address:  184.6.16.2
&gt; <code class="userinput"><b>hamster.foo.edu</B
></CODE
>
Server:  red.big.com
Address:  184.6.16.2

* red.big.com can't find hamster.foo.edu: Non-existent domain</PRE
></BLOCKQUOTE
></P
><p class="para">This sample <b class="emphasis.bold">nslookup</B
> session contains several steps.
The first step is to locate the authoritative servers for the host
name in question (<em class="emphasis">hamster.foo.edu</EM
>). We set the query type to NS
to get the name server records, and query for the domain
(<em class="emphasis">foo.edu</EM
>) in which the hostname is found. This returns three
names of authoritative servers: <em class="emphasis">gerbil.foo.edu</EM
>, <em class="emphasis">red.big.com</EM
>,
and <em class="emphasis">shrew.foo.edu</EM
>.</P
><p class="para">Next, we set the query type to ANY to look for any records related to
the hostname in question. Then we set the server to the first server
in the list, <em class="emphasis">gerbil.foo.edu</EM
>, and query for
<em class="emphasis">hamster.foo.edu</EM
>.  This returns an address record. So server
<em class="emphasis">gerbil.foo.edu</EM
> works fine. We repeat the test using
<em class="emphasis">red.big.com</EM
> as the server, and it fails. No records are
returned.</P
><p class="para"><a class="indexterm" name="AUTOID-16172"></A
>The next step is to get SOA records from each server and see if they are 
the same:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>set type=SOA</B
></CODE
>
&gt; <code class="userinput"><b>foo.edu.</B
></CODE
>
Server:  red.big.com
Address:  184.6.16.2

foo.edu        origin = gerbil.foo.edu
	mail addr = amanda.gerbil.foo.edu
	serial=10164, refresh=43200, retry=3600, expire=3600000,
	min=2592000
&gt; <code class="userinput"><b>server gerbil.foo.edu</B
></CODE
>
Default Server:  gerbil.foo.edu
Address:  198.97.99.2

&gt; <code class="userinput"><b>foo.edu.</B
></CODE
>
Server:  gerbil.foo.edu
Address:  198.97.99.2

foo.edu        origin = gerbil.foo.edu
	mail addr = amanda.gerbil.foo.edu
	serial=10164, refresh=43200, retry=3600, expire=3600000,
	min=2592000

&gt; <code class="userinput"><b>exit</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">If the SOA records have different serial numbers, perhaps the zone
file, and therefore the hostname, has not yet been downloaded to the
secondary server. If the serial numbers are the same and the data is
different, as in this case,
there is a definite problem. Contact the remote domain administrator
and notify her of the problem. The administrator's
mailing address is shown in the &quot;mail addr&quot; field of the SOA record.
In our example,

we would send mail to <em class="emphasis">amanda@gerbil.foo.edu</EM
> reporting
the problem.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-11-SECT-6.0.2">11.6.2 The data is here and the server can't find it! </A
></H3
><p class="para">This problem was reported by the administrator of one of our secondary
name servers. The administrator reported that his server could not
resolve a certain hostname in a domain for which his server was a
secondary server. The primary server was, however, able to resolve the
name. The administrator dumped his cache (more on dumping the server<a class="indexterm" name="AUTOID-16186"></A
>
cache in the next section), and he could see in the dump that his
server had the correct entry for the host. But his server still would
not resolve that hostname to an IP address!</P
><p class="para">The problem was replicated on several other secondary servers. The
primary server would resolve the name; the secondary servers wouldn't.
All servers had the same SOA serial number, and a dump of the cache on
each server showed that they all had the correct address records for
the hostname in question. So why wouldn't they resolve the hostname
to an address?</P
><p class="para">Visualizing the difference between the way primary and secondary
servers load their
data made us suspicious of
the zone file transfer. Primary servers load the data directly from
local disk files. Secondary servers transfer the data from the primary
server via a zone file transfer. Perhaps the zone files were getting
corrupted. We displayed the zone file on one of the secondary servers,
and it showed the following data:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>cat /usr/etc/sales.nuts.com.hosts</B
></CODE
>
PCpma      IN   A   172.16.64.159
      IN   HINFO   &quot;pc&quot; &quot;n3/800salesnutscom&quot;
PCrkc      IN   A   172.16.64.155
      IN   HINFO   &quot;pc&quot; &quot;n3/800salesnutscom&quot;
PCafc      IN   A   172.16.64.189
      IN   HINFO   &quot;pc&quot; &quot;n3/800salesnutscom&quot;
accu      IN   A   172.16.65.27
cmgds1   IN   A   172.16.130.40
cmg      IN   A   172.16.130.30
PCgns      IN   A   172.16.64.167
      IN   HINFO   &quot;pc&quot; &quot;(3/800salesnutscom&quot;
gw      IN   A   172.16.65.254
zephyr   IN   A   172.16.64.188
      IN   HINFO   &quot;Sun&quot; &quot;sparcstation&quot;
ejw      IN   A   172.16.65.17
PCecp      IN   A   172.16.64.193
      IN   HINFO   &quot;pc&quot; &quot;nLsparcstationstcom&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">Notice the odd display in the last field of the HINFO statement for
each PC.
[8]
This data might have been corrupted in the transfer or it
might be bad on the primary server. We used <b class="emphasis.bold">nslookup</B
> to check
that.</P
><blockquote class="footnote"><p class="para">[8] See <a class="xref" href="appd_01.htm" title="A dhcpd Reference">Appendix D, <cite class="appendix">A dhcpd Reference</CITE
></A
>, for a detailed description of the HINFO statement.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>nslookup</B
></CODE
>
Default Server:  almond.nuts.com
Address:  172.16.12.1

&gt; <code class="userinput"><b>server acorn.sales.nuts.com</B
></CODE
>
Default Server:  acorn.sales.nuts.com
Address:  172.16.6.1

&gt; <code class="userinput"><b>set query=HINFO</B
></CODE
>
&gt; <code class="userinput"><b>PCwlg.sales.nuts.com</B
></CODE
>
Server:  acorn.sales.nuts.com
Address:  172.16.6.1

PCwlg.sales.nuts.com     CPU=pc  OS=ov
packet size error (0xf7fff590 != 0xf7fff528)
&gt; <code class="userinput"><b>exit</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">In this <b class="emphasis.bold">nslookup</B
> example, we set the server to
<em class="emphasis">acorn.sales.nuts.com</EM
>, which is the primary server for<a class="indexterm" name="AUTOID-16209"></A
>
<em class="emphasis">sales.nuts.com</EM
>. Next we queried for the HINFO record for one of
the hosts that appeared to have a corrupted record. The &quot;packet size
error&quot; message clearly indicates that <b class="emphasis.bold">nslookup</B
> was even having
trouble retrieving the HINFO record directly from the primary server.
We contacted the administrator of the primary server and told him about
the problem, pointing out the records that appeared to be in error. He
discovered that he had forgotten to put an operating system entry on
some of the HINFO records. He corrected this, and it fixed the
problem.<a class="indexterm" name="AUTOID-16213"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-11-SECT-6.0.3">11.6.3 Cache corruption </A
></H3
><p class="para">The problem described above was caused by having the name server cache<a class="indexterm" name="AUTOID-16217"></A
>
corrupted by bad data. Cache corruption can occur even if your system
is not a secondary server. Sometimes the root server entries in the
cache become corrupted. Dumping the cache can help diagnose these
types of problems.</P
><p class="para">For example, a user reported intermittent name server failures. She
had no trouble with any hostnames within the local domain, or with
some names outside the local domain, but names in several different
remote domains would not resolve. <b class="emphasis.bold">nslookup</B
> tests produced no
solid clues, so the name server cache was dumped and examined for<a class="indexterm" name="AUTOID-16222"></A
>
problems. The root server entries were corrupted, so <b class="emphasis.bold">named</B
> was
reloaded to clear the cache and reread the <em class="emphasis">named.ca</EM
> file.
Here's how it was done.</P
><p class="para"><a class="indexterm" name="AUTOID-16229"></A
>The SIGINT signal causes <b class="emphasis.bold">named</B
> to dump the name server cache to
the file <em class="emphasis">/var/tmp/named_dump.db</EM
>. The following command passes
<b class="emphasis.bold">named</B
> this signal:</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>kill -INT `cat /etc/named.pid`</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-16238"></A
><a class="indexterm" name="AUTOID-16240"></A
>The process ID of <b class="emphasis.bold">named</B
> can be obtained from
<em class="emphasis">/etc/named.pid</EM
>, as in the example above, because <b class="emphasis.bold">named</B
>
writes its process ID in that file during startup.
[9]</P
><blockquote class="footnote"><p class="para">[9] On our Linux system the process ID is written to <em class="emphasis">/var/run/named.pid</EM
>.</P
></BLOCKQUOTE
><p class="para">Once SIGINT causes <b class="emphasis.bold">named</B
> to snapshot its cache to the file, we
can then examine the
first part of the file to see if the names and
addresses of the root servers are correct. For example:</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>head -10 /var/tmp/named_dump.db</B
></CODE
>
; Dumped at Wed Sep 18 08:45:58 1991
; --- Cache &amp; Data ---
$ORIGIN .
.       80805   IN      SOA     NS.NIC.DDN.MIL. HOSTMASTER.NIC.DDN.MIL.
		( 910909 10800 900 604800 86400 )
        479912  IN      NS      NS.NIC.DDN.MIL.
        479912  IN      NS      AOS.BRL.MIL.
        479912  IN      NS      A.ISI.EDU.
        479912  IN      NS      C.NYSER.NET.
        479912  IN      NS      TERP.UMD.EDU.</PRE
></BLOCKQUOTE
></P
><p class="para">The cache shown above is clean. If intermittent name server problems
lead you to suspect a cache corruption problem, examine the cache and
check the names and addresses of all the root servers. The following symptoms
might indicate a problem with the root server cache:</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16258"></A
><a class="indexterm" name="AUTOID-16260"></A
>Incorrect root server names. The section on <em class="emphasis">/etc/named.ca</EM
> in
<a class="xref" href="ch08_01.htm" title="Configuring DNS Name Service ">Chapter 8</A
> explains how you can locate the correct root server names.
The easiest way to do this is to get the file<a class="indexterm" name="AUTOID-16265"></A
><a class="indexterm" name="AUTOID-16267"></A
>
<em class="emphasis">domain/named.root</EM
> from the InterNIC.</P
></LI
><li class="listitem"><p class="para">No address or an incorrect address for any of the servers. Again, the
correct addresses are in <em class="emphasis">domain/named.root</EM
>.</P
></LI
><li class="listitem"><p class="para">A name other than root (<code class="literal">.</CODE
>) in the name field of the first root
server NS record, or the wildcard character (<code class="literal">*</CODE
>) occurring in
the name field of a root or top-level name server. The structure of NS
records is described in <a class="xref" href="appd_01.htm" title="A dhcpd Reference">Appendix D</A
>.</P
></LI
></UL
><p class="para">A &quot;bad cache&quot; with multiple errors might look like this:</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>head -10 /var/tmp/named_dump.db</B
></CODE
>
; Dumped at Wed Sep 18 08:45:58 1991
; --- Cache &amp; Data ---
$ORIGIN .
arpa   80805   IN     SOA    SRI-NIC.ARPA.  HOSTMASTER.SRI-NIC.ARPA.
		( 910909 10800 900 604800 86400 )
       479912  IN     NS     NS.NIC.DDN.MIL.
       479912  IN     NS     AOS.BRL.MIL.
       479912  IN     NS     A.ISI.EDU.
       479912  IN     NS     C.NYSER.NET.
       479912  IN     NS     TERP.UMD.EDU.
*      479912  IN     NS     NS.FOO.MIL.</PRE
></BLOCKQUOTE
></P
><p class="para">This contrived example has three glaring errors. The &quot;arpa&quot; entry in
the first field of the SOA record is invalid, and is the most infamous
form of cache corruption. The last NS record is also invalid.
NS.FOO.MIL. is not a valid root server, and an asterisk (<code class="literal">*</CODE
>) in
the first field of a root server record is not normal.</P
><p class="para">If you see problems like these, force <b class="emphasis.bold">named</B
> to reload its cache
with the SIGHUP signal as shown below:<a class="indexterm" name="AUTOID-16286"></A
></P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>kill -HUP `cat /etc/named.pid`</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">This clears the cache and reloads the valid root server entries from
your <em class="emphasis">named.ca</EM
> file.</P
><p class="para"><a class="indexterm" name="AUTOID-16294"></A
><a class="indexterm" name="AUTOID-16296"></A
><a class="indexterm" name="AUTOID-16298"></A
>If you know which system is corrupting your cache, instruct your system
to ignore updates from the culprit by using the <b class="emphasis.bold">bogusns</B
> statement
in the <em class="emphasis">/etc/named.boot</EM
> file. The <b class="emphasis.bold">bogusns</B
> statement lists
the IP addresses of name servers whose information cannot be trusted.
For example, in the previous section we described a problem where
<em class="emphasis">acorn.sales.nuts.com</EM
> (172.16.16.1) was causing cache corruption
with improperly formatted HINFO records. The following entry in the
<em class="emphasis">named.boot</EM
> file blocks queries to <em class="emphasis">acorn.sales.nuts.com</EM
> and
thus blocks the cache corruption:</P
><p class="para"><blockquote class="screen"><pre class="screen">bogusns 172.16.16.1</PRE
></BLOCKQUOTE
></P
><p class="para">The <b class="emphasis.bold">bogusns</B
> entry is only a temporary measure. It is designed to
keep things running while the remote domain administrator has a chance
to diagnose and repair the problem. Once the remote system is fixed,
remove the <b class="emphasis.bold">bogusns</B
> entry from <em class="emphasis">named.boot</EM
>.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-11-SECT-6.1">11.6.4 dig: An Alternative to nslookup </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-11-IX-DIG"></A
>An alternative to <b class="emphasis.bold">nslookup</B
> for making name service queries is
<b class="emphasis.bold">dig</B
>. <b class="emphasis.bold">dig</B
> queries are usually entered as single-line
commands, while <b class="emphasis.bold">nslookup</B
> is usually run as an interactive
session. But the <b class="emphasis.bold">dig</B
> command performs essentially the same
function as <b class="emphasis.bold">nslookup</B
>. Which you use is mostly a matter of
personal choice. They both work well.</P
><p class="para">As an example, we'll use <b class="emphasis.bold">dig</B
> to ask the root server
<em class="emphasis">terp.umd.edu</EM
> for the NS records for the <em class="emphasis">mit.edu</EM
> domain. To
do this, enter the following command:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>dig @terp.umd.edu mit.edu ns</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">In this example, <em class="emphasis">@terp.umd.edu</EM
> is the server that is being
queried. The server can be identified by name or IP address. If
you're troubleshooting a problem in a remote domain, specify an
authoritative server for that domain. In this example we're asking for
the names of servers for a top-level domain (<em class="emphasis">mit.edu</EM
>), so we ask
a root server.</P
><p class="para">If you don't specify a server explicitly, <b class="emphasis.bold">dig</B
> uses the local name
server, or the name server defined in the <em class="emphasis">/etc/resolv.conf</EM
> file.<a class="indexterm" name="AUTOID-16337"></A
><a class="indexterm" name="AUTOID-16339"></A
>
(<a class="xref" href="ch08_01.htm" title="Configuring DNS Name Service ">Chapter 8</A
> describes <em class="emphasis">resolv.conf</EM
>.)   Optionally,<a class="indexterm" name="AUTOID-16344"></A
>
you can set the environment variable LOCALRES to the name of an
alternate <em class="emphasis">resolv.conf</EM
> file. This alternate file will then be
used in place of <em class="emphasis">/etc/resolv.conf</EM
> for <b class="emphasis.bold">dig</B
>
queries. Setting the LOCALRES variable will only affect <b class="emphasis.bold">dig</B
>.
Other programs that use name service will continue to use
<em class="emphasis">/etc/resolv.conf</EM
>.</P
><p class="para">The last item on our sample command line is <em class="emphasis">ns</EM
>. This is the query
type. A query type is a value that requests a specific type of DNS
information. It is similar to the value used in <b class="emphasis.bold">nslookup</B
>'s<a class="indexterm" name="AUTOID-16354"></A
><a class="indexterm" name="AUTOID-16356"></A
>
<b class="emphasis.bold">set type</B
> command. 
<a class="xref" href="#TCP2-CH-11-TAB-0" title="dig Query Types">Table 11.1</A
>
shows the possible <b class="emphasis.bold">dig</B
> query
types and their meanings.</P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-11-TAB-0">Table 11.1: dig Query Types</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Query Type</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">DNS Record Requested</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">a</TD
><td class="entry" rowspan="1" colspan="1">Address records</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">any</TD
><td class="entry" rowspan="1" colspan="1">Any type of record</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">mx</TD
><td class="entry" rowspan="1" colspan="1">Mail Exchange records</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ns</TD
><td class="entry" rowspan="1" colspan="1">Name Server records</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">soa</TD
><td class="entry" rowspan="1" colspan="1">Start of Authority records</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">hinfo</TD
><td class="entry" rowspan="1" colspan="1">Host Info records</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">axfr</TD
><td class="entry" rowspan="1" colspan="1">All records in the zone</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">txt</TD
><td class="entry" rowspan="1" colspan="1">Text records</TD
></TR
></TBODY
></TABLE
><p class="para">Notice that the function of <b class="emphasis.bold">nslookup</B
>'s <b class="emphasis.bold">ls</B
> command is
performed by the <b class="emphasis.bold">dig</B
> query type <b class="emphasis.bold">axfr</B
>.</P
><p class="para"><b class="emphasis.bold">dig</B
> also has an option that is useful for locating a hostname
when you have only an IP address. If you only have the IP address of a
host, you may want to find out the hostname because numeric addresses
are more prone to typos. Having the hostname can reduce the user's<a class="indexterm" name="AUTOID-16401"></A
>
problems. The <em class="emphasis">in-addr.arpa</EM
> domain converts addresses to hostnames,
and <b class="emphasis.bold">dig</B
> provides a simple way to enter <em class="emphasis">in-addr.arpa</EM
> domain
queries. Using the <b class="emphasis.bold">-x</B
> option, you can query for a number to name 
conversion without having to manually reverse the numbers and 
add &quot;in-addr.arpa.&quot; For
example, to query for the hostname of IP address 18.72.0.3, simply
enter:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>dig -x 18.72.0.3</B
></CODE
>

; &lt;&lt;&gt;&gt; DiG 2.1 &lt;&lt;&gt;&gt; -x 
;; res options: init recurs defnam dnsrch
;; got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 6
;; flags: qr aa rd ra; Ques: 1, Ans: 1, Auth: 0, Addit: 0
;; QUESTIONS:
;;      3.0.72.18.in-addr.arpa, type = ANY, class = IN

;; ANSWERS:
3.0.72.18.in-addr.arpa. 21600   PTR     BITSY.MIT.EDU.

;; Total query time: 74 msec
;; FROM: peanut to SERVER: default -- 172.16.12.1
;; WHEN: Sat Jul 12 11:12:55 1997
;; MSG SIZE  sent: 40  rcvd: 67</PRE
></BLOCKQUOTE
></P
><p class="para">The answer to our query is BITSY.MIT.EDU, but <b class="emphasis.bold">dig</B
> displays lots
of other output. The first five lines and the last four lines provide
information and statistics about the query. For our purposes, the only
important information is the answer.<a class="indexterm" name="AUTOID-16413"></A
><a class="indexterm" name="AUTOID-16414"></A
><a class="indexterm" name="AUTOID-16415"></A
>
[10]</P
><blockquote class="footnote"><p class="para">[10] To see a single-line answer to this query, pipe <b class="emphasis.bold">dig</B
>'s output to
<b class="emphasis.bold">grep</B
>; e.g., <b class="emphasis.bold">dig -x 18.72.0.3 | grep PTR</B
>.</P
></BLOCKQUOTE
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch11_05.htm#TCP2-CH-11-SECT-5.2" title="11.5 Checking Routing "><img src="../gifs/txtpreva.gif" alt="Previous: 11.5 Checking Routing " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch11_07.htm#TCP2-CH-11-SECT-7.1" title="11.7 Analyzing Protocol Problems "><img src="../gifs/txtnexta.gif" alt="Next: 11.7 Analyzing Protocol Problems " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">11.5 Checking Routing </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">11.7 Analyzing Protocol Problems </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
