<html><head>
<title>[Chapter 7] 7.7 Configuring gated </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:35:56Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_01.htm" title="7. Configuring Routing "><link rel="prev" href="ch07_06.htm" title="7.6 Gateway Routing Daemon "><link rel="next" href="ch07_08.htm" title="7.8 Summary "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_06.htm" title="7.6 Gateway Routing Daemon "><img src="../gifs/txtpreva.gif" alt="Previous: 7.6 Gateway Routing Daemon " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 7<br>Configuring Routing </FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch07_08.htm" title="7.8 Summary "><img src="../gifs/txtnexta.gif" alt="Next: 7.8 Summary " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-7-SECT-7">7.7 Configuring gated </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-7-IX-GATEWAY-ROUTING-DAEMON-GATED-CONFIGURING"></A
><b class="emphasis.bold">gated</B
> is available from <a class="systemitem.sitename" href="../../../../../../../www.gated.org/">http://www.gated.org</A
>. <a class="xref" href="appb_01.htm" title="A gated Reference">Appendix B, <cite class="appendix">A gated Reference</CITE
></A
>,
provides information about downloading and compiling the software. In
this section, we use <b class="emphasis.bold">gated</B
> release 3.5.5, the version of
<b class="emphasis.bold">gated</B
> that is currently available without restrictions. There
are other, newer versions of <b class="emphasis.bold">gated</B
> available to members of the
Gated Consortium. If you plan to build products based on <b class="emphasis.bold">gated</B
><a class="indexterm" name="AUTOID-8667"></A
>
or you plan to do research on routing protocols using <b class="emphasis.bold">gated</B
>, you
should join the consortium. For the purposes of this book, release
3.5.5 is fine.</P
><p class="para"><b class="emphasis.bold">gated</B
> reads its configuration from the <em class="emphasis">/etc/gated.conf</EM
>
file. The configuration commands in the file resemble C code. All
statements end with a semicolon, and associated statements are grouped
together by curly braces. This structure makes it simple to see what
parts of the configuration are associated with each other, which is
important when multiple protocols are configured in the same file. In
addition to structure in the language, the <em class="emphasis">/etc/gated.conf</EM
> file
also has a structure.</P
><p class="para"><a class="indexterm" name="TCP2-CH-7-IX-GATEWAY-ROUTING-DAEMON-GATED-COMMANDS-LISTED"></A
>The different configuration statements, and the order in which these
statements must appear, divide <em class="emphasis">gated.conf</EM
> into sections:
<em class="emphasis">option statements</EM
>, <em class="emphasis">interface statements</EM
>, <em class="emphasis">definition
statements</EM
>, <em class="emphasis">protocol statements</EM
>, <em class="emphasis">static statements</EM
>,
<em class="emphasis">control statements</EM
>, and <em class="emphasis">aggregate statements</EM
>. Entering a
statement out of order causes an error when parsing the file.</P
><p class="para">Two other types of statements do not fall into any of these categories.
They are <em class="emphasis">directive statements</EM
> and <em class="emphasis">trace statements</EM
>. These
can occur anywhere in the <em class="emphasis">gated.conf</EM
> file and do not directly
relate to the configuration of any protocol. These statements provide
instructions to the parser, and instructions to control tracing from
within the configuration file.</P
><p class="para">The <b class="emphasis.bold">gated</B
> configuration commands are summarized in 
<a class="xref" href="#TCP2-CH-7-TAB-1" title="gated Configuration Statements">Table 7.2</A
>
The table lists each command by name, identifies the statement type,
and provides a very short synopsis of each command's function. The
entire command language is covered in detail in <a class="xref" href="appb_01.htm" title="A gated Reference">Appendix B</A
>.</P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-7-TAB-1">Table 7.2: gated Configuration Statements</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Statement</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Type</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">%directory</TD
><td class="entry" rowspan="1" colspan="1">directive</TD
><td class="entry" rowspan="1" colspan="1">Sets the directory for include files</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">%include</TD
><td class="entry" rowspan="1" colspan="1">directive</TD
><td class="entry" rowspan="1" colspan="1">Includes a file into <em class="emphasis">gated.conf</EM
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">traceoptions</TD
><td class="entry" rowspan="1" colspan="1">trace</TD
><td class="entry" rowspan="1" colspan="1">Specifies which events are traced</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">options</TD
><td class="entry" rowspan="1" colspan="1">option</TD
><td class="entry" rowspan="1" colspan="1">Defines gated options</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">interfaces</TD
><td class="entry" rowspan="1" colspan="1">interface</TD
><td class="entry" rowspan="1" colspan="1">Defines interface options</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">autonomoussystem</TD
><td class="entry" rowspan="1" colspan="1">definition</TD
><td class="entry" rowspan="1" colspan="1">Defines the AS number</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">routerid</TD
><td class="entry" rowspan="1" colspan="1">definition</TD
><td class="entry" rowspan="1" colspan="1">Defines the originating router for BGP or OSPF</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">martians</TD
><td class="entry" rowspan="1" colspan="1">definition</TD
><td class="entry" rowspan="1" colspan="1">Defines invalid destination addresses</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">snmp</TD
><td class="entry" rowspan="1" colspan="1">protocol</TD
><td class="entry" rowspan="1" colspan="1">Enables reporting to SNMP</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">rip</TD
><td class="entry" rowspan="1" colspan="1">protocol</TD
><td class="entry" rowspan="1" colspan="1">Enables RIP</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">hello</TD
><td class="entry" rowspan="1" colspan="1">protocol</TD
><td class="entry" rowspan="1" colspan="1">Enables Hello protocol</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">isis</TD
><td class="entry" rowspan="1" colspan="1">protocol</TD
><td class="entry" rowspan="1" colspan="1">Enables ISIS protocol </TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">kernel</TD
><td class="entry" rowspan="1" colspan="1">protocol</TD
><td class="entry" rowspan="1" colspan="1">Configures kernel interface options</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ospf</TD
><td class="entry" rowspan="1" colspan="1">protocol</TD
><td class="entry" rowspan="1" colspan="1">Enables OSPF protocol</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">redirect</TD
><td class="entry" rowspan="1" colspan="1">protocol</TD
><td class="entry" rowspan="1" colspan="1">Removes routes installed by ICMP</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">egp</TD
><td class="entry" rowspan="1" colspan="1">protocol</TD
><td class="entry" rowspan="1" colspan="1">Enables EGP</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">bgp</TD
><td class="entry" rowspan="1" colspan="1">protocol</TD
><td class="entry" rowspan="1" colspan="1">Enables BGP</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">icmp</TD
><td class="entry" rowspan="1" colspan="1">protocol</TD
><td class="entry" rowspan="1" colspan="1">Configures the processing of general ICMP packets</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">static</TD
><td class="entry" rowspan="1" colspan="1">static</TD
><td class="entry" rowspan="1" colspan="1">Defines static routes</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">import</TD
><td class="entry" rowspan="1" colspan="1">control</TD
><td class="entry" rowspan="1" colspan="1">Defines what routes are accepted</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">export</TD
><td class="entry" rowspan="1" colspan="1">control</TD
><td class="entry" rowspan="1" colspan="1">Defines what routes are advertised</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">aggregate</TD
><td class="entry" rowspan="1" colspan="1">aggregate</TD
><td class="entry" rowspan="1" colspan="1">Controls route aggregation</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">generate</TD
><td class="entry" rowspan="1" colspan="1">aggregate</TD
><td class="entry" rowspan="1" colspan="1">Controls creation of a default route</TD
></TR
></TBODY
></TABLE
><p class="para">Just from this brief description, you can see that the <b class="emphasis.bold">gated</B
>
configuration language has many commands. The language provides
configuration control for several different protocols and additional
commands to configure the added features of <b class="emphasis.bold">gated</B
> itself. All of
this can be confusing.<a class="indexterm" name="AUTOID-8799"></A
></P
><p class="para">To avoid confusion, don't try to understand the details of everything
offered by <b class="emphasis.bold">gated</B
>. Your routing environment will not use all of
these protocols and features. Even if you are providing the gateway at
the border between two anonymous systems, you will probably only run two
routing protocols: one interior protocol and one exterior protocol.
Only those commands that relate to your actual configuration need to be
included in your configuration file. As
you read this section, skip the things you don't need. For example, if
you don't use the BGP protocol, don't study the <b class="emphasis.bold">bgp</B
> statement. When
you do need more details about a specific statement, look it up in
<a class="xref" href="appb_01.htm" title="A gated Reference">Appendix B</A
>. With this in mind, let's look at some sample
configurations.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-7-SECT-7.1">7.7.1 Sample gated.conf Configurations </A
></H3
><p class="para">The details in <a class="xref" href="appb_01.htm" title="A gated Reference">Appendix B</A
> may make <b class="emphasis.bold">gated</B
> configuration appear
more complex than it is. <b class="emphasis.bold">gated</B
>'s rich command language can be 
confusing, as can its support for multiple protocols and the fact that it
often provides a few ways to do the same thing. But
some realistic examples will show that individual configurations do not
need to be complex.</P
><p class="para">The basis for the sample configurations is the network in 
<a class="xref" href="#TCP2-CH-7-FIG-3" title="Sample routing topology">Figure 7.4</A
>
We have installed a new router that provides our backbone with direct
access to the Internet, and we have decided to install new routing
protocols. We'll configure a host to listen to RIP-2 updates, an
interior gateway to run RIP-2 and OSPF, and an exterior gateway to run
OSPF and BGP.</P
><h4 class="figure"><a class="title" name="TCP2-CH-7-FIG-3">Figure 7.4: Sample routing topology</A
></H4
><img class="graphic" src="figs/tcp2_0704.gif" alt="Figure 7.4"><p class="para">Gateway <em class="emphasis">cashew</EM
> interconnects subnet 172.16.9.0 and subnet 172.16.1.0.
To hosts on subnet 9, it advertises itself as the default gateway,
because it is the gateway to the outside world. It uses RIP-2 to
advertise routes on subnet 9. On subnet 1, gateway <em class="emphasis">cashew</EM
> advertises
itself as the gateway to subnet 9 using OSPF.</P
><p class="para">Gateway <em class="emphasis">brazil</EM
> provides subnet 1 with access to the Internet through
autonomous system 164. Because gateway <em class="emphasis">brazil</EM
> provides access to the
Internet, it announces itself as the default gateway to the other
systems on subnet 1 using OSPF. To the external autonomous system, it
uses BGP to announce itself as the path to the internal networks it
learns about through OSPF.</P
><p class="para">Let's look at the routing configuration of host <em class="emphasis">macadamia</EM
>, gateway
<em class="emphasis">cashew</EM
>, and gateway <em class="emphasis">brazil</EM
>.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-7-SECT-7.1.1">7.7.1.1 A host configuration </A
></H4
><p class="para"><a class="indexterm" name="TCP2-CH-7-IX-GATEWAY-ROUTING-DAEMON-GATED-CONFIGURING-HOST-ROUTING"></A
>The host routing configuration is very simple. The <b class="emphasis.bold">rip yes</B
>
statement enables RIP, and that's all that is really required to run<a class="indexterm" name="AUTOID-8833"></A
>
RIP. That basic configuration should work for any system that runs
RIP. The additional clauses enclosed in curly braces modify the basic RIP
configuration. We use a few clauses to create a more interesting
example. Here is the RIP-2 configuration for host <em class="emphasis">macadamia</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">#
#  enable rip, don't broadcast updates,
#  listen for RIP-2 updates on the multicast address,
#  check that the updates are authentic.
#
rip yes {
        nobroadcast ;
        interface 172.16.9.23
             version 2 
             multicast 
             authentication simple &quot;REALstuff&quot; ;

} ;</PRE
></BLOCKQUOTE
></P
><p class="para">This sample file shows the basic structure of <em class="emphasis">gated.conf</EM
><a class="indexterm" name="AUTOID-8841"></A
>
configuration statements. Lines beginning with a sharp sign (#) are
comments.<a class="indexterm" name="AUTOID-8843"></A
><a class="indexterm" name="AUTOID-8845"></A
><a class="indexterm" name="AUTOID-8847"></A
><a class="indexterm" name="AUTOID-8849"></A
>
[12]<a class="indexterm" name="AUTOID-8853"></A
><a class="indexterm" name="AUTOID-8856"></A
>
All statements end with semicolons. Clauses associated with a
configuration statement can span multiple lines and are enclosed in
curly braces (<code class="literal">{}</CODE
>). In the example, the <code class="literal">nobroadcast</CODE
> and<a class="indexterm" name="AUTOID-8861"></A
><a class="indexterm" name="AUTOID-8864"></A
><a class="indexterm" name="AUTOID-8867"></A
>
<code class="literal">interface</CODE
> clauses apply directly to the rip statement. The
<code class="literal">version</CODE
>, <code class="literal">multicast</CODE
>, and <code class="literal">authentication</CODE
> keywords
are part of the interface clause.</P
><blockquote class="footnote"><p class="para">[12] Comments can also be enclosed between a \* and a *\.</P
></BLOCKQUOTE
><p class="para">The keyword <code class="literal">nobroadcast</CODE
> prevents the host from broadcasting
its own RIP updates. The default is <code class="literal">nobroadcast</CODE
> when the
system has one network interface and <code class="literal">broadcast</CODE
> when it has
more than one. The <code class="literal">nobroadcast</CODE
> keyword performs the same
function as the <b class="emphasis.bold">-q</B
> command-line option does for
<b class="emphasis.bold">routed</B
>. However, <b class="emphasis.bold">gated</B
> can do much more than <b class="emphasis.bold">routed</B
>,
as the next clause shows.</P
><p class="para">The <code class="literal">interface</CODE
> clause defines interface parameters for RIP. The
parameters associated with this clause say that RIP-2 updates<a class="indexterm" name="AUTOID-8885"></A
>
will be received via the RIP-2 multicast address on interface
172.16.9.23, and that authentic updates will contain the password
<code class="literal">REALstuff</CODE
>. For RIP-2, <code class="literal">simple</CODE
> authentication is a clear-text
password up to 16 bytes long. This is not intended to protect the
system from malicious actions; it is only intended to protect the
routers from a configuration accident. If a user mistakenly sets his
system up as a RIP supplier, he is very unlikely to accidently enter
the correct password into his configuration. Stronger authentication
will soon be available in the form of a Message Digest 5 (MD5)<a class="indexterm" name="AUTOID-8890"></A
>
cryptographic checksum by specifying <code class="literal">md5</CODE
> in the authentication
clause.<a class="indexterm" name="AUTOID-8893"></A
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-7-SECT-7.1.2">7.7.1.2 Interior gateway configurations </A
></H4
><p class="para"><a class="indexterm" name="TCP2-CH-7-IX-GATEWAY-ROUTING-DAEMON-GATED-CONFIGURING-INTERIOR-GATEWAY"></A
>Gateway configurations are more complicated than the simple host
configuration shown above. Gateways always have multiple interfaces
and occasionally run multiple routing protocols. Our first sample
configuration is for the interior gateway between subnet 9 and the
central backbone, subnet 1. It uses RIP-2 on subnet 9 to announce
routes to the UNIX hosts. It uses OSPF on subnet 1 to exchange routes
with the other gateways. Here's the configuration of gateway <em class="emphasis">cashew</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">#  Don't time-out subnet 9
interfaces {
    interface 172.16.9.1 passive ;
} ;
# Define the OSPF router id
routerid 172.16.1.9 ;
# Enable RIP-2; announce OSPF routes to
# subnet 9 with a cost of 5.
rip yes {
    broadcast ;
    defaultmetric 5 ;
    interface 172.16.9.1
         version 2
         multicast
         authentication simple &quot;REALstuff&quot; ;
} ;
# Enable OSPF; subnet 1 is the backbone area;
# use password authentication.
ospf yes {
     backbone {
         authtype simple ;
         interface 172.16.1.9 {
              priority 5 ;
              authkey &quot;It'sREAL&quot; ;
              } ;
          } ;
} ;</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">interfaces</CODE
> statement defines routing characteristics for
the network interfaces. The keyword <code class="literal">passive</CODE
> in the interface<a class="indexterm" name="AUTOID-8907"></A
>
clause is used here, just as we have seen it used before, to create a
permanent static route that will not be removed from the routing
table. In this case, the permanent route is through a directly
attached network interface. Normally when <b class="emphasis.bold">gated</B
> thinks an
interface is malfunctioning, it increases the cost of the interface by
giving it a high-cost preference value (120) to reduce the probability<a class="indexterm" name="AUTOID-8911"></A
>
of a gateway routing data through a non-operational interface.
<b class="emphasis.bold">gated</B
> determines that an interface is malfunctioning when it does
not receive routing updates on that interface. We don't want
<b class="emphasis.bold">gated</B
> to downgrade the 172.16.9.1 interface, even if it does
think the interface is malfunctioning, because our router is the only
path to subnet 9. That's why this configuration includes the clause
<code class="literal">interface 172.16.9.1 passive</CODE
>.</P
><p class="para">The <code class="literal">routerid</CODE
> statement defines the router identifier for OSPF.<a class="indexterm" name="AUTOID-8919"></A
>
Unless it is explicitly defined in the configuration file, <b class="emphasis.bold">gated</B
>
uses the address of the first interface it encounters as the default
router identifier address. Here we specify the address of the interface
that actually speaks OSPF as the OSPF router identifier.</P
><p class="para">In the previous example we discussed all the clauses on the <b class="emphasis.bold">rip</B
>
statement except one&nbsp;- the <code class="literal">defaultmetric</CODE
> clause.
The <code class="literal">defaultmetric</CODE
> clause defines the RIP metric used
to advertise routes learned from other routing protocols. 
This gateway runs both OSPF and RIP-2. We wish to
advertise the routes learned via OSPF to our RIP clients, and to do that, a
metric is required. We choose a RIP cost of 5. If the
<code class="literal">defaultmetric</CODE
> clause is not used, routes learned from OSPF are
not advertised to the RIP clients.
[13]
This statement is required for our configuration.</P
><blockquote class="footnote"><p class="para">[13] This is not strictly true. The routes are advertised with a cost of 16,
meaning that the destinations are unreachable.</P
></BLOCKQUOTE
><p class="para">The <code class="literal">ospf yes</CODE
> statement enables OSPF. The first clause<a class="indexterm" name="AUTOID-8931"></A
><a class="indexterm" name="AUTOID-8934"></A
>
associated with this statement is <code class="literal">backbone</CODE
>. It states that the<a class="indexterm" name="AUTOID-8938"></A
>
router is part of the OSPF backbone area. Every <code class="literal">ospf yes</CODE
>
statement must have at least one associated area clause. It can define
a specific area, e.g., <code class="literal">area 2</CODE
>, but at least one router must be
in the backbone area. While the OSPF backbone is area 0, it cannot be
specified as <code class="literal">area 0</CODE
>; it must be specified with the keyword
<code class="literal">backbone</CODE
>. In our sample configuration, subnet 1 is the
backbone and all routers attached to it are in the backbone area. It
is possible for a single router to attach to multiple areas with a
different set of configuration parameters for each area. Notice how
the nested curly braces group the clauses together. The remaining
clauses in the configuration file are directly associated with the
backbone area clause.</P
><p class="para">The <code class="literal">authtype simple ;</CODE
> clause says that simple, password-based<a class="indexterm" name="AUTOID-8946"></A
>
authentication is used in the backbone area. Two choices, <code class="literal">simple</CODE
> and
<code class="literal">none</CODE
>, are available for authtype in GateD 3.5.5. <code class="literal">none</CODE
> means no
authentication is used. <code class="literal">simple</CODE
> means that the correct
eight-character password must be used or the update will be rejected. Password
authentication is used only to protect against accidents. It is not
intended to protect against malicious actions. Stronger authentication
based on MD5 is being developed.</P
><p class="para">The interface that connects this router to the backbone area is defined
by the interface clause. It has two associated subclauses. The
<code class="literal">authkey &quot;It'sREAL&quot; ;</CODE
> clause defines the password used for
simple authentication by this interface. The <code class="literal">priority 5 ;</CODE
>
clause defines the priority used by this router when the backbone is
electing a designated router. The higher the priority number, the less
likely a router will be elected as the designated router. Use
<code class="literal">priority</CODE
> to steer the election toward the most capable
routers.<a class="indexterm" name="AUTOID-8956"></A
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-7-SECT-7.1.3">7.7.1.3 Exterior gateway configuration </A
></H4
><p class="para"><a class="indexterm" name="TCP2-CH-7-IX-GATEWAY-ROUTING-DAEMON-GATED-CONFIGURING-EXTERIOR-GATEWAY"></A
>The configuration for gateway <em class="emphasis">brazil</EM
> is the most complex because it
runs both OSPF and BGP. The configuration file for gateway <em class="emphasis">brazil</EM
> is:</P
><p class="para"><blockquote class="screen"><pre class="screen"># Defines our AS number for BGP
autonomoussystem 249;

# Defines the OSPF router id
routerid 172.16.1.1;

# Disable RIP
rip no;

# Enable BGP
bgp yes {
   preference 50 ;
   group type external peeras 164 {
        peer 10.6.0.103 ;
        peer 10.20.0.72 ;
        };
};

# Enable OSPF; subnet 1 is the backbone area;
# use password authentication.
ospf yes {
     backbone {
         authtype simple ;
         interface 172.16.1.1 {
              priority 10 ;
              authkey &quot;It'sREAL&quot; ;
              } ;
          } ;
};

# Announce routes learned from OSPF and route
# to directly connected network via BGP to AS 164
export proto bgp as 164 {
     proto direct ;
     proto ospf ;
};

# Announce routes learned via BGP from 
# AS number 164 to our OSPF area.
export proto ospfase type 2  {
     proto bgp as 164  {
          all ;   
          };
};</PRE
></BLOCKQUOTE
></P
><p class="para">This configuration enables both BGP and OSPF, and sets certain
protocol-specific parameters. BGP needs to know the AS number, which
is 249 for <em class="emphasis">nuts-net</EM
>. OSPF needs to know the router identifier
address. We set it to the address of the router interface that runs
OSPF. The AS number and the router identifier are defined early in the
configuration because <code class="literal">autonomoussystem</CODE
> and <code class="literal">routerid</CODE
>
are definition statements, and therefore must occur before the first
protocol statement. Refer back to
<a class="xref" href="#TCP2-CH-7-TAB-1" title="gated Configuration Statements">Table 7.2</A
>
for the various statement types.</P
><p class="para">The first protocol statement is the one that turns RIP off. We don't
want to run RIP and the default for <b class="emphasis.bold">gated</B
> is to turn RIP on.
Therefore we explicitly disable RIP with the <code class="literal">rip no ;</CODE
>
statement.</P
><p class="para"><a class="indexterm" name="AUTOID-8977"></A
>BGP is enabled by the <code class="literal">egp yes</CODE
> statement, which also defines a
few additional BGP parameters. The <code class="literal">preference 50 ;</CODE
> clause
tells <b class="emphasis.bold">gated</B
> to set the preference for routes received via BGP to
50.  The default for these routes is 170. By changing the preference to 50,
we make the routes highly favored. Setting a preference value of 50
allows BGP routes to override static routes, though they will not
override routes learned from OSPF. This is solely for the purpose
of illustration. You probably don't want to make an external route
highly preferred. See
<a class="xref" href="ch07_06.htm" title="Default Preference Values">Table 7.1</A
>
for the list of
default preferences.</P
><p class="para">The <code class="literal">group</CODE
> clause sets parameters for all of the BGP peers in the
group. The clause defines the type of BGP connection being created. The
example is a classic external routing protocol connection, and the
external autonomous system we are connecting to is AS number 164.
<b class="emphasis.bold">gated</B
> can create five different types of BGP sessions, but only
one, <code class="literal">type external</CODE
>, is used to directly communicate with an
external autonomous system. The other four group types are used for
internal BGP (IBGP).<a class="indexterm" name="AUTOID-8988"></A
>
[14]
IBGP is simply an acronym used for BGP when it is used to move routing
information around inside of an autonomous system. In our example we
use it to move routing information between autonomous systems.</P
><blockquote class="footnote"><p class="para">[14] See <a class="xref" href="appb_01.htm" title="A gated Reference">Appendix B</A
> for information on all group types.</P
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-8995"></A
>The BGP neighbors from which updates are accepted are indicated by the<a class="indexterm" name="AUTOID-8998"></A
>
peer clauses. Each peer is a member of
the group. Everything related to the group, such as the AS number,
applies to every system in the group. To accept updates from any system, use
<code class="literal">allow</CODE
> in place of the list of peers.</P
><p class="para"><a class="indexterm" name="AUTOID-9003"></A
>The OSPF protocol is enabled by the <b class="emphasis.bold">ospf yes</B
> statement. The
configuration of OSPF on this router is the same as it is for other
routers in the backbone area. The only parameter that has been changed
from the previous example is the priority number. Because this route
has a particularly heavy load, we have decided to make it slightly less
preferred for the designated router election.</P
><p class="para">The export statements control the routes that <b class="emphasis.bold">gated</B
> advertises to
other routers. The first export statement directs <b class="emphasis.bold">gated</B
> to use
BGP (<code class="literal">proto bgp</CODE
>) to advertise to autonomous system 164 (<code class="literal">as
164</CODE
>) any directly connected networks (<code class="literal">proto direct</CODE
>) and any
routes learned from OSPF (<code class="literal">proto ospf</CODE
>). Notice that the AS
number specified in this statement is not the AS number of
<em class="emphasis">nuts-net</EM
>. It is the autonomous system number of the external
system. The first line of the export statement defines to whom we are
advertising. The proto clauses located within the curly braces define<a class="indexterm" name="AUTOID-9015"></A
>
what we are advertising.</P
><p class="para">The second export statement announces the routes learned from the
external autonomous system. The routes are received via BGP and are
advertised via OSPF. Because these are routes from an external
autonomous system, they are advertised as <em class="emphasis">autonomous system
external</EM
> (ASE) routes. That's why the export statement specifies<a class="indexterm" name="AUTOID-9019"></A
>
<code class="literal">ospfase</CODE
> as the protocol through which the routes are<a class="indexterm" name="AUTOID-9023"></A
>
announced. The <code class="literal">type 2</CODE
> parameter defines the type of external
routes that are being advertised. There are two types supported by
<b class="emphasis.bold">gated</B
>. Type 2 routes are those learned from an exterior gateway
protocol that does not provide a routing metric comparable to the OSPF
metric. These routes are advertised with the cost of reaching the
border router. In this case, the routes are advertised with the OSPF
cost of reaching gateway <em class="emphasis">brazil</EM
>. Type 1 routes are those learned from
an external protocol that does provide a metric directly comparable to
the OSPF metric. In that case, the metric from the external protocol
is added to the cost of reaching the border router when routes are
advertised.</P
><p class="para">The source of the routes advertised in the second export statement is
the BGP connection (<code class="literal">proto bgp</CODE
>) to autonomous system 164<a class="indexterm" name="AUTOID-9030"></A
>
(<code class="literal">as 164</CODE
>). The proto clause is qualified with an optional
<em class="emphasis">route filter</EM
>. A route filter is used to select the routes from a
specific source. The filter can list
networks with associated netmasks to select an individual destination. In
the example, the keyword <code class="literal">all</CODE
> is used to select all routes
received via BGP, which is, in fact, the default.</P
><p class="para">All of the routes received from an external autonomous system could
produce a very large routing table. Individual routes are useful when
you have multiple border routers that can reach the outside world.<a class="indexterm" name="AUTOID-9037"></A
>
However, if you have only one border router, a default route may be all
that is needed. To export a default route, insert an <code class="literal">options
gendefault ;</CODE
> statement in the beginning of the configuration
file.
[15]
This tells <b class="emphasis.bold">gated</B
> to generate a default route
when the system peers with a BGP neighbor. Next, replace the second export statement in the sample file with the following export statement:</P
><blockquote class="footnote"><p class="para">[15] The <code class="literal">generate</CODE
> statement is an alternative way to create a
default route. See <a class="xref" href="appb_01.htm" title="A gated Reference">Appendix B</A
> for details.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen"># Announce a default route when peering 
# with a BGP neighbor. 
export proto ospfase type 2  {
     proto default ;   
};</PRE
></BLOCKQUOTE
></P
><p class="para">This export statement tells <b class="emphasis.bold">gated</B
> to advertise the border router
as the default gateway, but only when it has an active connection to
the external system.<a class="indexterm" name="AUTOID-9049"></A
></P
><p class="para">These few examples show that <em class="emphasis">gated.conf</EM
> files are usually small
and easy to read. Use <b class="emphasis.bold">gated</B
> if you need to run a<a class="indexterm" name="AUTOID-9053"></A
><a class="indexterm" name="AUTOID-9056"></A
>
routing protocol on your computer. It allows you to use the same
software and the same configuration language on all of your hosts,
interior gateways, and exterior gateways.</P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-7-SECT-7.2">7.7.2 Testing the Configuration </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-7-IX-GATEWAY-ROUTING-DAEMON-GATED-TESTING-THE-CONFIGURATION"></A
>Test the configuration file before you try to use it. The <b class="emphasis.bold">gated</B
>
configuration syntax is complex and it is easy to make a mistake.
Create your new configuration in a test file; test the new
configuration; then move the test configuration to
<em class="emphasis">/etc/gated.conf</EM
>. Here's how.</P
><p class="para">Assume that a configuration file called <em class="emphasis">test.conf</EM
> has already
been created. It is tested using <b class="emphasis.bold">-f</B
> and <b class="emphasis.bold">-c</B
> on the command
line:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>gated -c -f test.conf trace.test</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The <b class="emphasis.bold">-f</B
> option tells <b class="emphasis.bold">gated</B
> to read the configuration from
the named file instead of from <em class="emphasis">/etc/gated.conf</EM
>. In the sample it
reads the configuration from <em class="emphasis">test.conf</EM
>. The <b class="emphasis.bold">-c</B
> option
tells <b class="emphasis.bold">gated</B
> to read the configuration file and check for syntax
errors. When <b class="emphasis.bold">gated</B
> finishes reading the file, it terminates; it
does not modify the routing table. The <b class="emphasis.bold">-c</B
> option turns on
tracing, so specify a trace file or the trace data will be displayed
on your terminal. In the sample we specified <em class="emphasis">trace.test</EM
> as the
trace file. The <b class="emphasis.bold">-c</B
> option also produces a snapshot of the
state of <b class="emphasis.bold">gated</B
> after reading the configuration file and writes the
snapshot to <em class="emphasis">/usr/tmp/gated_dump</EM
>. You don't need to be superuser
or to terminate the active <b class="emphasis.bold">gated</B
> process to run <b class="emphasis.bold">gated</B
> when
the <b class="emphasis.bold">-c</B
> option is used.</P
><p class="para"><a class="indexterm" name="AUTOID-9092"></A
><a class="indexterm" name="AUTOID-9094"></A
>The dump and the trace file (<em class="emphasis">trace.test</EM
>) can then be examined for
errors and other information. When you're confident that the
configuration is correct, become superuser and move your new
configuration (<em class="emphasis">test.conf</EM
>) to <em class="emphasis">/etc/gated.conf</EM
>.</P
><p class="para">An alternative command for testing the configuration file is <b class="emphasis.bold">gdc</B
>,<a class="indexterm" name="AUTOID-9102"></A
>
though it must be run by the root user. It includes features for
checking and installing a new configuration. <b class="emphasis.bold">gdc</B
> uses three
different configuration files. The current configuration is
<em class="emphasis">/etc/gated.conf</EM
>. The previous configuration is stored in
<em class="emphasis">/etc/gated.conf-</EM
>. The &quot;next&quot; configuration is stored in
<em class="emphasis">/etc/gated.conf+</EM
>, which is normally the configuration that needs
to be tested. Here's how <b class="emphasis.bold">gdc</B
> tests a configuration:</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>cp test.conf /etc/gated.conf+</B
></CODE
>
# <code class="userinput"><b>gdc checknew</B
></CODE
>
configuration file /etc/gated.conf+ checks out okay
# <code class="userinput"><b>gdc newconf</B
></CODE
>
# <code class="userinput"><b>gdc restart</B
></CODE
>
gated not currently running
gdc: /etc/gated was started</PRE
></BLOCKQUOTE
></P
><p class="para">In this sample the test configuration was copied to
<em class="emphasis">/etc/gated.conf+</EM
> and tested with the <b class="emphasis.bold">gdc checknew</B
>
command. If syntax problems are found in the file, a warning message is
displayed and the detailed error messages are written to
<em class="emphasis">/usr/tmp/gated_parse</EM
>. There were no syntax errors in the example
so we make the test file the current configuration with the <b class="emphasis.bold">gdc
newconf</B
> command. This command moves the current configuration to
<em class="emphasis">gated.conf-</EM
> and moves the new configuration (<em class="emphasis">gated.conf+</EM
>) to
the current configuration. The <b class="emphasis.bold">gdc restart</B
> command terminates
<b class="emphasis.bold">gated</B
> if it is currently running&nbsp;- it was not in the
example&nbsp;- and starts a new copy of <b class="emphasis.bold">gated</B
> using the new
configuration.<a class="indexterm" name="AUTOID-9125"></A
><a class="indexterm" name="AUTOID-9126"></A
></P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-7-SECT-7.2.1">7.7.2.1 Running gated at startup </A
></H4
><p class="para"><a class="indexterm" name="TCP2-CH-7-IX-GATEWAY-ROUTING-DAEMON-GATED-RUNNING-AT-STARTUP"></A
>As with any routing software, <b class="emphasis.bold">gated</B
> should be included in your
startup file. Some systems come with the code to start <b class="emphasis.bold">gated</B
>
included in the startup file. If your system doesn't, you'll need to
add it. If you already have code in your startup file that runs
<b class="emphasis.bold">routed</B
>, replace it with code to run <b class="emphasis.bold">gated</B
>. <b class="emphasis.bold">gated</B
> and
<b class="emphasis.bold">routed</B
> should not be running at the same time.&#13;</P
><p class="para">Our imaginary gateway, <em class="emphasis">almond</EM
>, is a Solaris system with code in
the <em class="emphasis">/etc/init.d/inetinit</EM
> file that starts <b class="emphasis.bold">routed</B
>. We
comment out those lines, and add these lines:</P
><p class="para"><blockquote class="screen"><pre class="screen">if [ -f /usr/sbin/gated -a -f /etc/gated.conf ]; then
     /usr/sbin/gated;      echo -n 'gated' &gt; /dev/console
fi</PRE
></BLOCKQUOTE
></P
><p class="para">This code assumes that <b class="emphasis.bold">gated</B
> is installed in <em class="emphasis">/usr/sbin</EM
> and
that the configuration file is named <em class="emphasis">/etc/gated.conf</EM
>. The code
checks that <b class="emphasis.bold">gated</B
> is present, and that the configuration file
<em class="emphasis">/etc/gated.conf</EM
> exists. If both files are found, <b class="emphasis.bold">gated</B
> begins.</P
><p class="para">The code checks for a configuration file because <b class="emphasis.bold">gated</B
> usually
runs with one. If <b class="emphasis.bold">gated</B
> is started without a configuration file,
it checks the routing table for a default route. If it doesn't find
one, it starts RIP; otherwise, it just uses the default route. Create an<a class="indexterm" name="AUTOID-9155"></A
><a class="indexterm" name="AUTOID-9159"></A
>
<em class="emphasis">/etc/gated.conf</EM
> file even if you only want to run RIP. The
configuration file documents your routing configuration and protects
you if the default configuration of <b class="emphasis.bold">gated</B
> changes in the future.<a class="indexterm" name="AUTOID-9164"></A
><a class="indexterm" name="AUTOID-9165"></A
></P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_06.htm" title="7.6 Gateway Routing Daemon "><img src="../gifs/txtpreva.gif" alt="Previous: 7.6 Gateway Routing Daemon " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch07_08.htm" title="7.8 Summary "><img src="../gifs/txtnexta.gif" alt="Next: 7.8 Summary " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.6 Gateway Routing Daemon </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.8 Summary </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
