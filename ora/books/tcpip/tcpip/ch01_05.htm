<html><head>
<title>[Chapter 1] 1.5 Internet Layer</TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:30:54Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch01_01.htm" title="1. Overview of TCP/IP"><link rel="prev" href="ch01_04.htm" title="1.4 Network Access Layer"><link rel="next" href="ch01_06.htm#TCP2-CH-1-SECT-6.2" title="1.6 Transport Layer"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch01_04.htm" title="1.4 Network Access Layer"><img src="../gifs/txtpreva.gif" alt="Previous: 1.4 Network Access Layer" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 1<br>Overview of TCP/IP</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch01_06.htm#TCP2-CH-1-SECT-6.2" title="1.6 Transport Layer"><img src="../gifs/txtnexta.gif" alt="Next: 1.6 Transport Layer" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-1-SECT-5">1.5 Internet Layer</A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-1-IX-INTERNET-LAYER"></A
>The layer above the Network Access Layer in the protocol hierarchy is
the <em class="emphasis">Internet Layer</EM
>. The Internet Protocol, RFC 791, is the
heart of TCP/IP and the most important protocol in the Internet Layer.
IP provides the basic packet delivery service on which TCP/IP 
networks are built. All protocols, in the layers above and below IP,
use the Internet Protocol to deliver data. All TCP/IP data flows
through IP, incoming and outgoing, regardless of its final
destination.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-1-SECT-5.1">1.5.1 Internet Protocol</A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-1-IX-INTERNET-PROTOCOL-IP"></A
><a class="indexterm" name="TCP2-CH-1-IX-INTERNET-PROTOCOL-IP2"></A
>The Internet Protocol is the building block of the Internet. Its
functions include:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Defining the datagram, which is the basic unit of transmission in the
Internet</P
></LI
><li class="listitem"><p class="para">Defining the Internet addressing scheme</P
></LI
><li class="listitem"><p class="para">Moving data between the Network Access Layer and the Host-to-Host
Transport Layer</P
></LI
><li class="listitem"><p class="para">Routing datagrams to remote hosts</P
></LI
><li class="listitem"><p class="para">Performing fragmentation and re-assembly of datagrams</P
></LI
></UL
><p class="para">Before describing these functions in more detail, let's look at some of
IP's characteristics. First, IP is a <em class="emphasis">connectionless protocol</EM
>.
This means that IP does not exchange control information (called a
&quot;handshake&quot;)<a class="indexterm" name="AUTOID-585"></A
>
to establish an end-to-end connection before transmitting
data. In contrast, a <em class="emphasis">connection-oriented protocol</EM
> exchanges
control information with the remote system to verify that it is ready
to receive data before any data is sent. When the handshaking is
successful, the systems are said to have established a
<em class="emphasis">connection</EM
>. Internet Protocol relies on protocols in other
layers to establish the connection if they require connection-oriented
service.</P
><p class="para">IP also relies on protocols in the other layers to provide error<a class="indexterm" name="AUTOID-590"></A
>
detection and error<a class="indexterm" name="AUTOID-593"></A
>
recovery. The Internet Protocol is sometimes called
an <em class="emphasis">unreliable protocol</EM
> because it contains no error detection and
recovery code. This is not to say that the protocol cannot be
relied on&nbsp;- quite the contrary. IP can be relied upon to accurately
deliver your data to the connected network, but it doesn't
check whether that data was correctly received. Protocols
in other layers of the TCP/IP architecture provide this checking when
it is required.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-1-SECT-5.1.1">1.5.1.1 The datagram</A
></H4
><p class="para"><a class="indexterm" name="TCP2-CH-1-IX-DATAGRAMS"></A
>The TCP/IP protocols were built to transmit data over the ARPANET,<a class="indexterm" name="AUTOID-602"></A
>
which was a <em class="emphasis">packet switching network</EM
>.<a class="indexterm" name="AUTOID-605"></A
>
A <em class="emphasis">packet</EM
> is a block of data that
carries with it the information necessary to deliver it&nbsp;- in a manner
similar to a postal letter, which has an address written on its
envelope. A packet switching network uses the addressing information in
the packets to switch packets from one physical network to another,
moving them toward their final destination. Each packet travels the
network independently of any other packet.</P
><p class="para">The <em class="emphasis">datagram</EM
> is the packet format defined by Internet Protocol.
<a class="xref" href="#TCP2-CH-1-FIG-4" title="IP datagram format">Figure 1.5</A
>
is a pictorial representation of an IP datagram. The first
five or six 32-bit words of the datagram are control information
called the <em class="emphasis">header</EM
>.<a class="indexterm" name="AUTOID-613"></A
>
By default, the header is five words long; the
sixth word is optional. Because the header's length is variable, it
includes a field called <em class="emphasis">Internet Header Length (IHL)</EM
><a class="indexterm" name="AUTOID-616"></A
><a class="indexterm" name="AUTOID-618"></A
>
that indicates the header's length in words. The header
contains all the information necessary to deliver the packet.</P
><h4 class="figure"><a class="title" name="TCP2-CH-1-FIG-4">Figure 1.5: IP datagram format</A
></H4
><img class="graphic" src="figs/tcp2_0105.gif" alt="Figure 1.5"><p class="para">The Internet Protocol delivers the datagram by checking the
<em class="emphasis">Destination Address</EM
><a class="indexterm" name="AUTOID-625"></A
>
in word 5 of the header. The Destination
Address is a standard 32-bit IP address that identifies the destination
network and the specific host on that network. (The format of IP
addresses is explained in <a class="xref" href="ch02_01.htm" title="Delivering the Data">Chapter 2, <cite class="chapter">Delivering the Data</CITE
></A
>.) If the Destination Address is the
address of a host on the local network, the packet is delivered
directly to the destination. If the Destination Address is not on the
local network, the packet is passed to a gateway for delivery.<a class="indexterm" name="AUTOID-628"></A
>
<em class="emphasis">Gateways</EM
> are devices that switch packets between the
different physical networks. Deciding which gateway to use is
called <em class="emphasis">routing</EM
>.<a class="indexterm" name="AUTOID-632"></A
>
IP makes the routing decision for each individual
packet.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-1-SECT-5.1.2">1.5.1.2 Routing datagrams</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-638"></A
>Internet gateways are commonly (and perhaps more accurately) referred
to as <em class="emphasis">IP routers</EM
> because they use Internet Protocol to route
packets between networks. In traditional TCP/IP jargon, there are only
two types of network devices&nbsp;- <em class="emphasis">gateways</EM
> and <em class="emphasis">hosts</EM
>. Gateways
forward packets between networks, and hosts don't. However, if a host
is connected to more than one network (called a <em class="emphasis">multi-homed host</EM
>),<a class="indexterm" name="AUTOID-645"></A
>
it can forward packets between the networks. When a multi-homed host
forwards packets, it acts just like any other gateway and is
considered to be a gateway. Current data communications terminology
makes a distinction between gateways and routers,
[4]
but we'll use the terms <em class="emphasis">gateway</EM
> and <em class="emphasis">IP router</EM
> interchangeably.</P
><blockquote class="footnote"><p class="para">[4] In current terminology, a gateway moves data between different
protocols and a router moves data between different networks. So a system
that moves mail between TCP/IP and OSI is a gateway, but a
traditional IP gateway is a router.</P
></BLOCKQUOTE
><p class="para"><a class="xref" href="#TCP2-CH-1-FIG-5" title="Routing through gateways">Figure 1.6</A
>
shows the use of gateways to forward packets.
The hosts (or <em class="emphasis">end systems</EM
>) process packets through all four protocol
layers, while the gateways (or <em class="emphasis">intermediate systems</EM
>) process the
packets only up to the Internet Layer where the routing decisions are
made.</P
><h4 class="figure"><a class="title" name="TCP2-CH-1-FIG-5">Figure 1.6: Routing through gateways</A
></H4
><img class="graphic" src="figs/tcp2_0106.gif" alt="Figure 1.6"><p class="para">Systems can only deliver packets to other devices attached to the
same physical network.<a class="indexterm" name="AUTOID-660"></A
>
Packets from <em class="emphasis">A1</EM
> destined for host <em class="emphasis">C1</EM
>
are forwarded through gateways <em class="emphasis">G1</EM
> and <em class="emphasis">G2</EM
>. Host <em class="emphasis">A1</EM
>
first delivers the packet to gateway <em class="emphasis">G1</EM
>, with which it shares
network <em class="emphasis">A</EM
>. Gateway <em class="emphasis">G1</EM
> delivers the packet to <em class="emphasis">G2</EM
> over
network <em class="emphasis">B</EM
>. Gateway <em class="emphasis">G2</EM
> then delivers the packet directly to
host <em class="emphasis">C1</EM
>, because they are both attached to network <em class="emphasis">C</EM
>. Host
<em class="emphasis">A1</EM
> has no knowledge of any gateways beyond gateway <em class="emphasis">G1</EM
>. It
sends packets destined for both networks <em class="emphasis">C</EM
> and <em class="emphasis">B</EM
> to that
local gateway, and then relies on that gateway to properly forward the
packets along the path to their destinations. Likewise, host <em class="emphasis">C1</EM
>
would send its packets to <em class="emphasis">G2</EM
>, in order to reach a host on network
<em class="emphasis">A</EM
>, as well as any host on network <em class="emphasis">B</EM
>.</P
><p class="para"><a class="xref" href="#TCP2-CH-1-FIG-6" title="Networks, gateways, and hosts">Figure 1.7</A
>
shows another view of routing. This figure emphasizes
that the underlying physical networks that a datagram
travels through
may be different and even incompatible. Host <em class="emphasis">A1</EM
> on the token<a class="indexterm" name="AUTOID-687"></A
>
ring network routes the datagram through gateway <em class="emphasis">G1</EM
>, to reach
host <em class="emphasis">C1</EM
> on the Ethernet. Gateway <em class="emphasis">G1</EM
> forwards the data
through the X.25 network to gateway <em class="emphasis">G2</EM
>, for delivery to <em class="emphasis">C1</EM
>.
The datagram traverses three physically different networks, but
eventually arrives intact at <em class="emphasis">C1</EM
>.</P
><h4 class="figure"><a class="title" name="TCP2-CH-1-FIG-6">Figure 1.7: Networks, gateways, and hosts</A
></H4
><img class="graphic" src="figs/tcp2_0107.gif" alt="Figure 1.7"></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-1-SECT-5.1.3">1.5.1.3 Fragmenting datagrams</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-702"></A
>As a datagram is routed through different networks, it may be necessary
for the IP module in a gateway to divide the datagram into smaller
pieces. A datagram received from one network may be too large to be
transmitted in a single packet on a different network. This condition
occurs only when a gateway interconnects dissimilar physical networks.</P
><p class="para">Each type of network has a <em class="emphasis">maximum transmission unit</EM
> (MTU),<a class="indexterm" name="AUTOID-707"></A
>
which is the largest packet that it can transfer. If the datagram received
from one network is longer than the other network's MTU, it is
necessary to divide the datagram into smaller <em class="emphasis">fragments</EM
> for
transmission. This process is called <em class="emphasis">fragmentation</EM
>.<a class="indexterm" name="AUTOID-711"></A
>
Think of a train delivering a load of steel. Each railway car can carry more
steel than the trucks that will take it along the highway; so
each railway car
is unloaded onto many different trucks. In the same way that a
railroad is physically different from a highway, an Ethernet is<a class="indexterm" name="AUTOID-713"></A
>
physically different from an X.25 network; IP must break
an Ethernet's relatively large packets into smaller
packets before it can transmit them over an X.25 network.<a class="indexterm" name="AUTOID-715"></A
></P
><p class="para">The format of each fragment is the same as the format of any normal
datagram. Header word 2 contains information that identifies each
datagram fragment and provides information about how to re-assemble the
fragments back into the original datagram. The Identification<a class="indexterm" name="AUTOID-719"></A
>
field identifies what datagram the fragment belongs to, and the
Fragmentation Offset field<a class="indexterm" name="AUTOID-721"></A
>
tells what piece of the datagram this
fragment is. The Flags field<a class="indexterm" name="AUTOID-723"></A
>
has a &quot;More Fragments&quot; bit 
that tells IP if it has assembled all of the datagram fragments.<a class="indexterm" name="AUTOID-725"></A
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-1-SECT-5.1.4">1.5.1.4 Passing datagrams to the transport layer</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-729"></A
><a class="indexterm" name="AUTOID-731"></A
>When IP receives a datagram that is addressed to the local host, it
must pass the data portion of the datagram to the correct Transport
Layer protocol. This is done by using the <em class="emphasis">protocol number</EM
> from<a class="indexterm" name="AUTOID-735"></A
>
word 3 of the datagram header. Each Transport Layer protocol has a
unique protocol number that identifies it to IP.
Protocol numbers are discussed in <a class="xref" href="ch02_01.htm" title="Delivering the Data">Chapter 2</A
>.</P
><p class="para">You can see from this short overview that IP performs many important
functions. Don't expect to fully understand datagrams,
gateways, routing, IP addresses, and all the other things that IP does
from this short description. Each chapter adds more details about
these topics. So let's continue on with the other protocol in the
TCP/IP Internet Layer.<a class="indexterm" name="AUTOID-740"></A
><a class="indexterm" name="AUTOID-741"></A
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-1-SECT-5.2">1.5.2 Internet Control Message Protocol</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-745"></A
>An integral part of IP is the <em class="emphasis">Internet Control Message Protocol</EM
>
(ICMP) defined in RFC 792. This protocol is part of the Internet
Layer and uses the IP datagram delivery facility to send its messages.<a class="indexterm" name="AUTOID-748"></A
>
ICMP sends messages that perform the following control, error reporting, and
informational functions for TCP/IP:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">Flow control</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-756"></A
>When datagrams arrive too fast for processing, the destination host or
an intermediate gateway sends an ICMP Source Quench Message back<a class="indexterm" name="AUTOID-758"></A
>
to the sender. This tells the source to stop sending
datagrams temporarily.</P
></DD
><dt class="term"><em class="emphasis">Detecting unreachable destinations</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-765"></A
>When a destination is unreachable, the system detecting the problem
sends a Destination Unreachable Message<a class="indexterm" name="AUTOID-767"></A
>
to the datagram's source. If
the unreachable destination is a network or host, the message is sent
by an intermediate gateway. But if the destination is an unreachable
port, the destination host sends the message. (We discuss ports in
<a class="xref" href="ch02_01.htm" title="Delivering the Data">Chapter 2</A
>.)</P
></DD
><dt class="term"><em class="emphasis">Redirecting routes</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-775"></A
>A gateway sends the ICMP Redirect Message<a class="indexterm" name="AUTOID-777"></A
>
to tell a host to use
another gateway, presumably because the other gateway is a better
choice. This message can be used only when the source host is on the
same network as both gateways. To better understand this, refer to
<a class="xref" href="#TCP2-CH-1-FIG-6" title="Networks, gateways, and hosts">Figure 1.7</A
>
If a host on the X.25 network sent a datagram to <em class="emphasis">G1</EM
>,
it would be possible for <em class="emphasis">G1</EM
> to redirect that host to <em class="emphasis">G2</EM
>
because
the host, <em class="emphasis">G1</EM
>, and <em class="emphasis">G2</EM
> are all attached to the
same network. On the other hand, if a host on the token ring network
sent a datagram to <em class="emphasis">G1</EM
>, the host could not be redirected to use
<em class="emphasis">G2</EM
>. This is because <em class="emphasis">G2</EM
> is not attached to the token ring.</P
></DD
><dt class="term"><em class="emphasis">Checking remote hosts</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-793"></A
>A host can send the ICMP Echo Message<a class="indexterm" name="AUTOID-796"></A
>
to see if a remote system's
Internet Protocol is up and operational. When a system receives an
echo message, it replies and sends the data from the packet back to the
source host. The <b class="emphasis.bold">ping</B
> command uses this message.<a class="indexterm" name="AUTOID-799"></A
></P
></DD
></DL
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch01_04.htm" title="1.4 Network Access Layer"><img src="../gifs/txtpreva.gif" alt="Previous: 1.4 Network Access Layer" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch01_06.htm#TCP2-CH-1-SECT-6.2" title="1.6 Transport Layer"><img src="../gifs/txtnexta.gif" alt="Next: 1.6 Transport Layer" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">1.4 Network Access Layer</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">1.6 Transport Layer</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
