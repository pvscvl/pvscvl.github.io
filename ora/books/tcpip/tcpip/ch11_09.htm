<html><head>
<title>[Chapter 11] 11.9 Simple Network Management Protocol </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:41:27Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch11_01.htm" title="11. Troubleshooting TCP/IP "><link rel="prev" href="ch11_08.htm" title="11.8 Protocol Case Study "><link rel="next" href="ch11_10.htm" title="11.10 Summary "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch11_08.htm" title="11.8 Protocol Case Study "><img src="../gifs/txtpreva.gif" alt="Previous: 11.8 Protocol Case Study " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 11<br>Troubleshooting TCP/IP </FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch11_10.htm" title="11.10 Summary "><img src="../gifs/txtnexta.gif" alt="Next: 11.10 Summary " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-11-SECT-9">11.9 Simple Network Management Protocol </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-11-IX-SIMPLE-NETWORK-MANAGEMENT-PROTOCOL-SNMP"></A
>Troubleshooting is necessary to recover from problems, but the ultimate<a class="indexterm" name="AUTOID-16624"></A
><a class="indexterm" name="AUTOID-16628"></A
>
goal of the network administrator is to avoid problems. That is also
the goal of network management software. The network management
software used on TCP/IP networks is based on the <em class="emphasis">Simple Network
Management Protocol</EM
> (SNMP).</P
><p class="para"><a class="indexterm" name="AUTOID-16633"></A
><a class="indexterm" name="AUTOID-16636"></A
>SNMP is a client/server protocol. In SNMP terminology, it is described
as a <em class="emphasis">manager/agent protocol</EM
>. The <em class="emphasis">agent</EM
> (the server) runs on
the device being managed, which is called the <em class="emphasis">Managed Network
Entity</EM
>. The agent monitors the status of the device and reports that
status to the manager.</P
><p class="para"><a class="indexterm" name="AUTOID-16643"></A
><a class="indexterm" name="AUTOID-16645"></A
>The <em class="emphasis">manager</EM
> (the client) runs on the <em class="emphasis">Network Management
Station</EM
> (NMS). The NMS collects information from all of the
different devices that are being managed, consolidates it, and presents
it to the network administrator. This design places all of the data
manipulation tools and most of the human interaction on the NMS.
Concentrating the bulk of the work on the manager means that the agent
software is small and easy to implement. Correspondingly, most TCP/IP
network equipment comes with an SNMP management agent.</P
><p class="para">SNMP is a request/response protocol. UDP port 161 is its well-known
port. SNMP uses UDP as its transport protocol because it has no need
for the overhead of TCP. &quot;Reliability&quot; is not required because each
request generates a response. If the SNMP application does not receive
a response, it simply re-issues the request. &quot;Sequencing&quot; is not
needed because each request and each response travels as a single
datagram.</P
><p class="para"><a class="indexterm" name="AUTOID-16651"></A
><a class="indexterm" name="AUTOID-16653"></A
>The request and response messages that SNMP sends in the datagrams are
called <em class="emphasis">Protocol Data Units</EM
> (PDU). The five PDUs used by SNMP are
listed in 
<a class="xref" href="#TCP2-CH-11-TAB-2" title="SNMP Protocol Data Units">Table 11.3</A
>
These message types allow the manager to request
management information, and when appropriate, to modify that
information. The messages also allow the agent to respond to manager
requests and to notify the manager of unusual situations.</P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-11-TAB-2">Table 11.3: SNMP Protocol Data Units</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">PDU</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Use</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">GetRequest</TD
><td class="entry" rowspan="1" colspan="1">Manager requests an update.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">GetNextRequest</TD
><td class="entry" rowspan="1" colspan="1">Manager requests the next entry in a table.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">GetResponse</TD
><td class="entry" rowspan="1" colspan="1">Agent answers a manager request.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">SetRequest</TD
><td class="entry" rowspan="1" colspan="1">Manager modifies data on the managed device.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Trap</TD
><td class="entry" rowspan="1" colspan="1">Agent alerts manager of an unusual event.</TD
></TR
></TBODY
></TABLE
><p class="para">The NMS periodically requests the status of each managed device
(GetRequest) and each agent responds with the status of its device<a class="indexterm" name="AUTOID-16681"></A
>
(GetResponse). Making periodic requests is called <em class="emphasis">polling</EM
>.
Polling reduces the burden on the agent because the NMS decides when
polls are needed, and the agent simply responds. Polling
also reduces the burden on the network because the polls originate from
a single system at a predictable rate. The shortcoming of polling is
that it does not allow for real-time updates. If a problem occurs on a
managed device, the manager does not find out until the agent is polled. To
handle this, SNMP uses a modified polling system called
<em class="emphasis">trap-directed polling</EM
>.<a class="indexterm" name="AUTOID-16685"></A
></P
><p class="para">A <em class="emphasis">trap</EM
> is an interrupt signaled by a predefined event. When a
trap event occurs, the SNMP agent does not wait for the manager to poll;
instead it immediately sends information to the manager. Traps allow
the agent to inform the manager of unusual events while allowing the
manager to maintain control of polling. SNMP traps are sent on UDP
port 162.

The manager sends polls on port 161 and listens for traps on port 162. 
<a class="xref" href="#TCP2-CH-11-TAB-3" title="Generic Traps Defined in the RFCs">Table 11.4</A
>
lists the trap events defined in the RFCs.</P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-11-TAB-3">Table 11.4: Generic Traps Defined in the RFCs</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Trap</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Meaning</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">coldStart</TD
><td class="entry" rowspan="1" colspan="1">Agent restarted; possible configuration changes</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">warmStart</TD
><td class="entry" rowspan="1" colspan="1">Agent reinitialized without configuration changes</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">enterpriseSpecific</TD
><td class="entry" rowspan="1" colspan="1">An event significant to this hardware or software</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">authenticationFailure</TD
><td class="entry" rowspan="1" colspan="1">Agent received an unauthenticated message</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">linkDown</TD
><td class="entry" rowspan="1" colspan="1">Agent detected a network link failure</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">linkUp</TD
><td class="entry" rowspan="1" colspan="1">Agent detected a network link coming up</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">egpNeighborLoss</TD
><td class="entry" rowspan="1" colspan="1">The device's EGP neighbor is down</TD
></TR
></TBODY
></TABLE
><p class="para"><a class="indexterm" name="AUTOID-16721"></A
>The last three entries in this table show the roots of SNMP in <em class="emphasis">Simple
Gateway Management Protocol</EM
> (SGMP), which was a tool
for tracking the status of network routers. Routers are
generally the only devices that have multiple network links to keep track
of and are the only devices that run <em class="emphasis">Exterior Gateway Protocol</EM
> (EGP).<a class="indexterm" name="AUTOID-16725"></A
>
[12]
These traps are not significant for most systems.</P
><blockquote class="footnote"><p class="para">[12] EGP is covered in <a class="xref" href="ch07_01.htm" title="Configuring Routing ">Chapter 7</A
>.</P
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-16731"></A
>The most important trap may be the <b class="emphasis.bold">enterpriseSpecific</B
> trap. The
events that signal this trap are defined differently by every vendor's
SNMP agent software. Therefore it is possible for the trap to be tuned
to events that are significant for that system. SNMP uses the term
&quot;enterprise&quot; to refer to something that is privately defined by a
vendor or organization as opposed to something that is globally defined
by an RFC.</P
><p class="para">SNMP has twice as much jargon as the rest of networking&nbsp;- and that's
saying something! Managed Network Entity, NMS, PDU, trap, polling,
enterprise&nbsp;- that's just the beginning! We also need to mention (below)
what SMI is, what a MIB is, and what ANS.1 is used for. Why this
bewildering array of acronyms and buzzwords? I think there are two
main reasons:</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16738"></A
>Network management covers a wide range of different devices, from
repeaters to mainframe computers. A &quot;vendor-neutral&quot; language is
needed to define terms for the manufacturers of all of this different
equipment.</P
></LI
><li class="listitem"><p class="para">SNMP is based on the <em class="emphasis">Common Management Information Protocol</EM
>
(CMIP) that was created by the <em class="emphasis">International Standards<a class="indexterm" name="AUTOID-16744"></A
>
Organization</EM
> (ISO). Formal international standards always spend a
lot of time defining terms because it is important to make terms clear
when they are used by people from many different cultures who speak
many different languages.</P
></LI
></UL
><p class="para">Now that you know why you have to suffer through all of this jargon, let's
define a few more important terms.</P
><p class="para"><a class="indexterm" name="AUTOID-16748"></A
><a class="indexterm" name="AUTOID-16750"></A
>The <em class="emphasis">Structure of Management Information</EM
> (SMI) defines how data
should be presented in an SNMP environment. The SMI is documented in
RFC 1155 and RFC 1065, <em class="emphasis">Structure and Identification of Management 
Information for
TCP/IP-based Internets</EM
>. The SMI defines how managed objects are
named, the syntax in which they are defined, and how they are encoded
for transmission over the network. The SMI is based on
previous ISO work.</P
><p class="para"><a class="indexterm" name="AUTOID-16755"></A
>Each managed object is given a globally unique name called an <em class="emphasis">object
identifier</EM
>. The object identifier is part of a hierarchical name space
that is managed by the ISO. The hierarchical name structure is used,
just like it is in DNS, to guarantee that each name is globally unique.
In an object identifier, each level of the hierarchy is identified by
a number.</P
><p class="para">Objects are defined just as formally as they are named. The syntax used<a class="indexterm" name="AUTOID-16759"></A
>
to define managed objects is <em class="emphasis">Abstract Syntax Notation One</EM
><em class="emphasis"> (ASN.1)</EM
>.
ASN.1 is ISO Standard 8824, <em class="emphasis">Specification of Abstract Syntax Notation
One (ASN.1)</EM
>. It is a very formal set of language rules for 
defining data. It makes the data definition independent of incompatibilities
between systems and character sets. ASN.1 also includes a set of rules
for encoding data for transfer over a network. These rules are defined
in ISO Standard 8825, <em class="emphasis">Specification of Basic Encoding Rules for Abstract<a class="indexterm" name="AUTOID-16765"></A
>
Syntax Notation One (ASN.1)</EM
>. The <em class="emphasis">Basic Encoding Rules</EM
> (BER) define
that bit 8 of an octet is sent first, that 2's complement is used for signed
integers, and other nitty-gritty details of data transmission.</P
><p class="para">Every object managed by SNMP has a unique object identifier
defined by the ASN.1 syntax and encoding defined by BER. When all of these
unique objects are grouped together, they are called the <em class="emphasis">Management<a class="indexterm" name="AUTOID-16770"></A
><a class="indexterm" name="AUTOID-16772"></A
>
Information Base</EM
> (MIB). The MIB refers to all information that
is managed by SNMP. However, we usually refer to &quot;a MIB&quot; or &quot;the MIBs&quot; 
(plural), meaning the
individual databases of management information formally defined by an
RFC or privately defined by a vendor.</P
><p class="para">MIBI and MIBII are standards defined by RFCs. MIBII is a superset of
MIBI, and is the standard MIB for monitoring TCP/IP. It provides such
information as the number of packets transmitted into and out of an
interface, and the number of errors that occurred sending and receiving
those packets&nbsp;- useful information for spotting usage trends and
potential trouble spots. Every agent supports MIBI or MIBII.<a class="indexterm" name="AUTOID-16775"></A
></P
><p class="para">Some systems also provide a private MIB in addition to the standard
MIBII. Private MIBs add to the monitoring capability by providing
system-specific information. Most UNIX systems do not provide private
MIBs. Private MIBs are most common on network hardware like routers,
hubs, and switches.</P
><p class="para"><a class="indexterm" name="AUTOID-16779"></A
>No matter what MIBs are provided by the agents, it is the monitoring
software that displays the information for the system administrator. A
private MIB won't do you any good unless your network monitoring
software also supports that MIB. For this reason, most administrators
prefer to purchase a monitor from the vendor that supplies the bulk of
their network equipment. Another possibility is to select a monitor
that includes a <em class="emphasis">MIB compiler</EM
>, which gives you the most flexibility.
A MIB compiler reads in the ASN.1 description of a MIB and adds the MIB<a class="indexterm" name="AUTOID-16782"></A
>
to the monitor. A MIB compiler makes the monitor <em class="emphasis">extensible</EM
>
because if you can get the ASN.1 source from the network equipment
vendor, you can add the vendor's private MIB to your monitor.</P
><p class="para">MIB compilers are only part of the advanced features offered by some
monitors. Some of the features offered are:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">Network maps</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16793"></A
>Some monitors automatically draw a map of the network.
Colors are used to indicate the state (up, down, etc.) of the devices
on the network. At a glance, the network manager sees the overall state
of the network.</P
></DD
><dt class="term"><em class="emphasis">Tabular data displays</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16801"></A
>Data displayed in tables or rendered into
charts is used to make comparisons between different devices. Some
monitors output data that can then be read into a standard spreadsheet
or graphing program.</P
></DD
><dt class="term"><em class="emphasis">Filters</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16808"></A
>Filters sift the data coming in from the agents in order to
detect certain conditions.</P
></DD
><dt class="term"><em class="emphasis">Alarms</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16815"></A
><a class="indexterm" name="AUTOID-16817"></A
>Alarms indicate when &quot;thresholds&quot; are exceeded or special
events occur. For example, you may want an alarm to trigger when your
server exceeds some specified number of transmit errors.</P
></DD
></DL
><p class="para">Don't be put off by the jargon. All of this detail is necessary to
formally define a network management scheme that is independent of the
managed systems, but you don't need to memorize it. You need to know
that a MIB is a collection of management information, that an NMS is
the network management station, and that an agent runs in each managed
device in order to make intelligent decisions when selecting an SNMP
monitor. This information provides that necessary background. The
features available in network monitors vary widely; so does the price.
Select an SNMP monitor that is suitable for the complexity of your
network and the size of your budget.<a class="indexterm" name="AUTOID-16820"></A
></P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch11_08.htm" title="11.8 Protocol Case Study "><img src="../gifs/txtpreva.gif" alt="Previous: 11.8 Protocol Case Study " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch11_10.htm" title="11.10 Summary "><img src="../gifs/txtnexta.gif" alt="Next: 11.10 Summary " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">11.8 Protocol Case Study </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">11.10 Summary </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
