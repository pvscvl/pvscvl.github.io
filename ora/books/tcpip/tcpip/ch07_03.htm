<html><head>
<title>[Chapter 7] 7.3 Building a Static Routing Table </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:35:32Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_01.htm" title="7. Configuring Routing "><link rel="prev" href="ch07_02.htm" title="7.2 The Minimal Routing Table "><link rel="next" href="ch07_04.htm#TCP2-CH-7-SECT-4.3" title="7.4 Interior Routing Protocols "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_02.htm" title="7.2 The Minimal Routing Table "><img src="../gifs/txtpreva.gif" alt="Previous: 7.2 The Minimal Routing Table " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 7<br>Configuring Routing </FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch07_04.htm#TCP2-CH-7-SECT-4.3" title="7.4 Interior Routing Protocols "><img src="../gifs/txtnexta.gif" alt="Next: 7.4 Interior Routing Protocols " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-7-SECT-3">7.3 Building a Static Routing Table </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-7-IX-STATIC-ROUTING-TABLE-BUILDING"></A
>As we have seen, the minimal routing table works to reach hosts only on
the directly connected physical networks. To reach remote hosts, routes 
through external gateways must be added to the routing table. One
way to do this is by constructing a static routing table with
<b class="emphasis.bold">route</B
> commands.</P
><p class="para"><a class="indexterm" name="AUTOID-7731"></A
>Use the UNIX <b class="emphasis.bold">route</B
> command to add or delete entries manually in
the routing table. For example, to add the route 207.25.98.0 to a
Solaris system's routing table, enter:</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>route add 207.25.98.0 172.16.12.1 1</B
></CODE
>
add net 207.25.98.0: gateway almond</PRE
></BLOCKQUOTE
></P
><p class="para">The first argument after the <b class="emphasis.bold">route</B
> command in this sample is the
keyword <b class="emphasis.bold">add</B
>. The first keyword on a <b class="emphasis.bold">route</B
> command line
is either <b class="emphasis.bold">add</B
> or <b class="emphasis.bold">delete</B
>, telling <b class="emphasis.bold">route</B
> either to add
a new route or delete an existing one. There is no default; if neither
keyword is used, <b class="emphasis.bold">route</B
> displays the routing table.</P
><p class="para">The next value is the destination address, which is the address reached
via this route. The destination address can be specified as an IP
address, a network name from the <em class="emphasis">/etc/networks</EM
> file, a host<a class="indexterm" name="AUTOID-7748"></A
><a class="indexterm" name="AUTOID-7751"></A
>
name from the <em class="emphasis">/etc/hosts</EM
> file, or the keyword <b class="emphasis.bold">default</B
>.<a class="indexterm" name="AUTOID-7755"></A
><a class="indexterm" name="AUTOID-7758"></A
>
Because most routes are added early in the startup process, numeric IP
addresses are used more than names. This is done so that the routing
configuration is not dependent on the state of the name server
software. Always use the complete numeric address (all four bytes).
<b class="emphasis.bold">route</B
> expands the address if it contains less than four bytes,
and the expanded address may not be what you intended.
[4]</P
><blockquote class="footnote"><p class="para">[4] Some implementations of <b class="emphasis.bold">route</B
> expand &quot;26&quot; to 0.0.0.26, even
though &quot;26&quot; could mean Milnet (26.0.0.0).</P
></BLOCKQUOTE
><p class="para">If the keyword <b class="emphasis.bold">default</B
> is used for the destination address,
<b class="emphasis.bold">route</B
> creates a <em class="emphasis">default route</EM
>.<a class="indexterm" name="AUTOID-7768"></A
>
[5]
The default route is used whenever there is no specific route to a
destination, and it is often the only route you need. If your network
has only one gateway, use a default route to direct all traffic bound
for remote networks through that gateway.</P
><blockquote class="footnote"><p class="para">[5] The network address associated with the default route is 0.0.0.0.</P
></BLOCKQUOTE
><p class="para">Next on the <b class="emphasis.bold">route</B
> command line is the gateway address.<a class="indexterm" name="AUTOID-7775"></A
>
[6]
This is
the IP address of the external gateway through which data is sent to
the destination address. The address must be the address of a gateway
on a directly connected network. TCP/IP routes specify the<a class="indexterm" name="AUTOID-7781"></A
>
<em class="emphasis">next-hop</EM
> in the path to a remote destination. That next-hop must
be directly accessible to the local host; therefore, it must be on a
directly connected network.</P
><blockquote class="footnote"><p class="para">[6] The syntax varies slightly between systems. Linux precedes the gateway
address with the keyword <code class="literal">gw</CODE
>. Check your system's documentation
for the details.</P
></BLOCKQUOTE
><p class="para">The last argument on the command line is the routing metric. The metric<a class="indexterm" name="AUTOID-7786"></A
>
argument is not used when routes are deleted, but many systems require it
when a route is added. Despite being required, <b class="emphasis.bold">route</B
> only
uses the metric to decide if this is a route through a directly
attached interface or a route through an external gateway. If the
metric is 0, the route is installed as a route through a local
interface, and the G flag, which we saw in the <b class="emphasis.bold">netstat -i</B
> display,
is not set. If the metric value is greater than 0, the route is
installed with the G flag set, and the gateway address is assumed to be
the address of an external gateway. Static routing makes no other use
of the metric. Dynamic routing is required to make real use of varying
metric values.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-7-SECT-3.1">7.3.1 Adding Static Routes </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-7794"></A
>As an example, let's configure static routing on the imaginary
workstation <em class="emphasis">peanut</EM
>. 
<a class="xref" href="#TCP2-CH-7-FIG-0" title="Routing on a subnet">Figure 7.1</A
>
shows the subnet 172.16.12.0.
There are two gateways on this subnet, <em class="emphasis">almond</EM
> and <em class="emphasis">pecan</EM
>.
<em class="emphasis">almond</EM
> is the gateway to thousands of networks on the Internet;
<em class="emphasis">pecan</EM
> provides access to the other subnets on <em class="emphasis">nuts-net</EM
>.
We'll use <em class="emphasis">almond</EM
> as our default gateway because it is used by
thousands of routes. The smaller number of routes through <em class="emphasis">pecan</EM
>
can easily be entered individually. The number of routes through a
gateway, not the amount of traffic it handles, decides which gateway to
select as the default. Even if most of <em class="emphasis">peanut</EM
>'s network traffic goes
through <em class="emphasis">pecan</EM
> to other hosts on <em class="emphasis">nuts-net</EM
>, the default
gateway should be <em class="emphasis">almond</EM
>.</P
><h4 class="figure"><a class="title" name="TCP2-CH-7-FIG-0">Figure 7.1: Routing on a subnet</A
></H4
><img class="graphic" src="figs/tcp2_0701.gif" alt="Figure 7.1"><p class="para">To install the default route on <em class="emphasis">peanut</EM
>, we enter:</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>route -n add default 172.16.12.1 1</B
></CODE
>
add net default: gateway 172.16.12.1</PRE
></BLOCKQUOTE
></P
><p class="para">The destination is <b class="emphasis.bold">default</B
>, and the gateway address (172.16.12.1)
is <em class="emphasis">almond</EM
>'s address. Now <em class="emphasis">almond</EM
> is <em class="emphasis">peanut</EM
>'s default
gateway. The <b class="emphasis.bold">-n</B
> option is not required. It just tells <b class="emphasis.bold">route</B
>
to display numeric addresses in its informational messages. When you
add <b class="emphasis.bold">route</B
> commands to a startup file, use the <b class="emphasis.bold">-n</B
> option to
prevent <b class="emphasis.bold">route</B
> from wasting time querying name server software that
may not be running.</P
><p class="para">After installing the default route, examine the routing
table to make sure the route has been added:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>netstat -rn</B
></CODE
>
Routing tables
Destination     Gateway        Flags    Refcnt Use       Interface
127.0.0.1       127.0.0.1      UH       1      132       lo0
default         172.16.12.1    UG       0      0         le0
172.16.12.0     172.16.12.2     U       26     49041     le0</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;Try <b class="emphasis.bold">ping</B
> again to see whether <em class="emphasis">peanut</EM
> can now communicate
with remote hosts. If we're lucky,
[7]
the remote host responds and we see:</P
><blockquote class="footnote"><p class="para">[7] It is possible that the remote host is down. If it is, <b class="emphasis.bold">ping</B
>
receives no answer. Don't give up; try another host.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>ping 207.25.98.2</B
></CODE
>
PING 207.25.98.2: 56 data bytes
64 bytes from ruby.ora.com (207.25.98.2): icmp_seq=0. time=110. ms
64 bytes from ruby.ora.com (207.25.98.2): icmp_seq=1. time=100. ms
^C
----207.25.98.2 PING Statistics----
2 packets transmitted, 2 packets received, 0% packet loss
round-trip (ms)  min/avg/max = 100/105/110</PRE
></BLOCKQUOTE
></P
><p class="para">This display indicates successful communication with the remote host,
which means that we now have a good route to hosts on the Internet.</P
><p class="para">However, we still haven't installed routes to the rest of
<em class="emphasis">nuts-net</EM
>. If we <b class="emphasis.bold">ping</B
> a host on another subnet, something
interesting happens:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>ping 172.16.1.2</B
></CODE
>
PING 172.16.1.2: 56 data bytes
ICMP Host redirect from gateway almond.nuts.com (172.16.12.1)
 to pecan.nuts.com (172.16.12.3) for filbert.nuts.com (172.16.1.2)
64 bytes from filbert.nuts.com (172.16.1.2): icmp_seq=1. time=30. ms
^C
----172.16.1.2 PING Statistics----
1 packets transmitted, 1 packets received, 0% packet loss
round-trip (ms)  min/avg/max = 30/30/30</PRE
></BLOCKQUOTE
></P
><p class="para"><em class="emphasis">peanut</EM
> believes that all destinations are reachable through its
default route. Therefore, even data destined for the other subnets is
sent to <em class="emphasis">almond</EM
>. If <em class="emphasis">peanut</EM
> sends data to <em class="emphasis">almond</EM
> that
should go through <em class="emphasis">pecan</EM
>, <em class="emphasis">almond</EM
> sends an ICMP Redirect to
<em class="emphasis">peanut</EM
> telling it to use <em class="emphasis">pecan</EM
>. (See <a class="xref" href="ch01_01.htm" title="Overview of TCP/IP">Chapter 1, <cite class="chapter">Overview of TCP/IP</CITE
></A
>, for a
description of the ICMP Redirect Message.) <b class="emphasis.bold">ping</B
> shows the ICMP<a class="indexterm" name="AUTOID-7860"></A
>
Redirect in action. <b class="emphasis.bold">netstat</B
> shows the effect the redirect has on<a class="indexterm" name="AUTOID-7863"></A
>
the routing table:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>netstat -nr</B
></CODE
>
Routing tables
Destination     Gateway        Flags    Refcnt Use        Interface
127.0.0.1       127.0.0.1      UH       1      1604       lo0
172.16.1.2      172.16.12.3    UGHD     0      514        le0
default         172.16.12.1    UG       3      373964     le0
172.16.12.0     172.16.12.1    U        31     686547     le0</PRE
></BLOCKQUOTE
></P
><p class="para">The route with the D flag set was installed by the ICMP Redirect.</P
><p class="para">Some network managers take advantage of ICMP Redirects when designing a
network. All hosts are configured with a default route, even those on
networks with more than one gateway. The gateways exchange routing
information through routing protocols and redirect hosts to the best
gateway for a specific route. This type of routing, which is dependent
on ICMP Redirects, became popular because of personal computers (PCs).
Many PCs cannot run a routing protocol; some do not have a <b class="emphasis.bold">route</B
>
command and are limited to a single default route. Clearly, ICMP
Redirects are needed to support these clients. Also, this type of
routing is simple to configure and well suited for implementation
through a configuration server, as the same default route is used
on every host. For these reasons, some network managers encourage 
repeated ICMP Redirects.</P
><p class="para">Other network administrators prefer to avoid ICMP Redirects and
to maintain direct control over the contents of the routing table.
To avoid redirects, specific routes can be installed for each subnet,
using individual <b class="emphasis.bold">route</B
> statements:</P
><p class="para"><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>route -n add 172.16.1.0 172.16.12.3 1</B
></CODE
>
add net 172.16.1.0: gateway 172.16.12.3
# <code class="userinput"><b>route -n add 172.16.6.0 172.16.12.3 1</B
></CODE
>
add net 172.16.6.0: gateway 172.16.12.3
# <code class="userinput"><b>route -n add 172.16.3.0 172.16.12.3 1</B
></CODE
>
add net 172.16.3.0: gateway 172.16.12.3
# <code class="userinput"><b>route -n add 172.16.9.0 172.16.12.3 1</B
></CODE
>
add net 172.16.9.0: gateway 172.16.12.3</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="emphasis.bold">netstat</B
> shows what the completed routing table looks like.
<em class="emphasis">peanut</EM
> is directly connected only to 172.16.12.0, so all gateways
in its routing table have addresses that begin with 172.16.12. The
finished routing table is shown below.</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>netstat -rn</B
></CODE
>
Routing tables
Destination          Gateway          Flags    Refcnt Use Interface
127.0.0.1            127.0.0.1        UH       1      132       lo0
172.16.12.0          172.16.12.2      U        26     49041     le0
172.16.1.3           172.16.12.3      UGHD     1      514       le0
default              172.16.12.1      UG       0      0         le0
172.16.1.0           172.16.12.3      UG       1      4904      le0
172.16.6.0           172.16.12.3      UG       0      0         le0
172.16.3.0           172.16.12.3      UG       0      0         le0
172.16.9.0           172.16.12.3      UG       0      0         le0</PRE
></BLOCKQUOTE
></P
><p class="para">The routing table we have constructed uses the default route (through
<em class="emphasis">almond</EM
>) to reach external networks, and specific routes (through
<em class="emphasis">pecan</EM
>) to reach other subnets within <em class="emphasis">nuts-net</EM
>. Rerunning
the <b class="emphasis.bold">ping</B
> tests produces consistently successful results.
However, if any subnets are added to the network, the routes to these
new subnets must be manually added to the routing table. Additionally,
if the system is rebooted, all static routing table entries are lost.
Therefore, to use static routing, you must ensure that the routes are
re-installed each time your system boots.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-CH-7-SECT-3.1.1">7.3.1.1 Installing static routes at startup </A
></H4
><p class="para"><a class="indexterm" name="TCP2-CH-7-IX-STATIC-ROUTES-INSTALLING-AT-STARTUP"></A
>If you decide to use static routing, you need to make two modifications
to your startup files:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Add the desired <b class="emphasis.bold">route</B
> statements to a startup file.</P
></LI
><li class="listitem"><p class="para">Remove any statements from the startup file that run a routing
protocol.</P
></LI
></OL
><p class="para">Linux provides an interesting example, because it requires static routes
to build the minimal routing table. The Linux implementation of<a class="indexterm" name="AUTOID-7905"></A
>
<b class="emphasis.bold">ifconfig</B
> doesn't modify the routing table when a new interface
is configured. The route for a new interface is explicitly added
with a <b class="emphasis.bold">route</B
> command. These &quot;interface routes&quot; are stored in a<a class="indexterm" name="AUTOID-7910"></A
>
startup script. On our sample Slackware Linux system, the routes are<a class="indexterm" name="AUTOID-7913"></A
>
found in <em class="emphasis">/etc/rc.d/rc.inet1</EM
>:<a class="indexterm" name="AUTOID-7916"></A
><a class="indexterm" name="AUTOID-7919"></A
>
[8]</P
><blockquote class="footnote"><p class="para">[8] The actual <b class="emphasis.bold">route</B
> statements in <em class="emphasis">rc.inet1</EM
> use script variables.
We changed these to addresses for the sake of clarity.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">/sbin/route add -net 127.0.0.0
/sbin/route add -net 172.16.5.0 netmask 255.255.255.0</PRE
></BLOCKQUOTE
></P
><p class="para">The first statement installs the route for the loopback interface.
Note the abbreviated syntax of this command: it specifies a destination
but no gateway. This is because Linux has a special syntax just for
assigning a route to an interface. We could have written the command as:</P
><p class="para"><blockquote class="screen"><pre class="screen">/sbin/route add -net 127.0.0.0 dev lo0</PRE
></BLOCKQUOTE
></P
><p class="para">If <b class="emphasis.bold">dev</B
> is not specified on the command line, the <b class="emphasis.bold">route</B
> command
determines the correct interface from the destination address.</P
><p class="para">The second statement from the <em class="emphasis">/etc/rc.d/rc.inet1</EM
> script installs the
route for the Ethernet interface. This statement includes a subnet mask.
If none was provided, it would default to 255.255.0.0, which is the
standard for the class B address 172.16.0.0.</P
><p class="para">Installing routes for directly connected interfaces is specific to Linux.
As another more general example, let's see how to add static routing to
the startup script on a Solaris system. Before
making changes to your real system, check your system's documentation. You
may need to modify a different boot script, and the execution path of
the routing daemon may be different. Only the documentation
can provide the exact details you need.</P
><p class="para">On a Solaris system, edit <em class="emphasis">/etc/init.d/inetinit</EM
> to add the<a class="indexterm" name="AUTOID-7938"></A
><a class="indexterm" name="AUTOID-7942"></A
>
<b class="emphasis.bold">route</B
> statements:</P
><p class="para"><blockquote class="screen"><pre class="screen">route -n add default 172.16.12.1 1 &gt; /dev/console
route -n add 172.16.1.0 172.16.12.3 1 &gt; /dev/console
route -n add 172.16.6.0 172.16.12.3 1 &gt; /dev/console
route -n add 172.16.3.0 172.16.12.3 1 &gt; /dev/console
route -n add 172.16.9.0 172.16.12.3 1 &gt; /dev/console</PRE
></BLOCKQUOTE
></P
><p class="para">Next, check whether or not the script starts a routing protocol.
If it does, comment out the lines that start it. You don't want a
routing protocol running when you are using static routing. On our
Solaris sample system, the routing software is only started if the
system has more than one network interface (i.e., is a router) or the
<em class="emphasis">/etc/gateways</EM
> file has been created. (More on this file later.)<a class="indexterm" name="AUTOID-7949"></A
><a class="indexterm" name="AUTOID-7952"></A
>
Neither of these things is true. Therefore the routing daemon won't be
run by the startup process and we don't have to do anything except add
the <b class="emphasis.bold">route</B
> statements.</P
><p class="para">Although the startup filename may be different on your system, the
procedure should be basically the same. These simple steps are all you
need to set up static routing. The problem with static routing is
not setting it up, but maintaining it, if you have a changeable networking
environment. Routing protocols are flexible enough to handle simple and
complex routing environments. That is why some startup procedures run
routing protocols by default. However, most UNIX systems need only a static
default route. Routing protocals are usually needed only by routers.<a class="indexterm" name="AUTOID-7956"></A
><a class="indexterm" name="AUTOID-7957"></A
></P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_02.htm" title="7.2 The Minimal Routing Table "><img src="../gifs/txtpreva.gif" alt="Previous: 7.2 The Minimal Routing Table " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch07_04.htm#TCP2-CH-7-SECT-4.3" title="7.4 Interior Routing Protocols "><img src="../gifs/txtnexta.gif" alt="Next: 7.4 Interior Routing Protocols " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.2 The Minimal Routing Table </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.4 Interior Routing Protocols </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
