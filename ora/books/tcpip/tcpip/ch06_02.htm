<html><head>
<title>[Chapter 6] 6.2 TCP/IP Over a Serial Line </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:34:29Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch06_01.htm" title="6. Configuring the Interface "><link rel="prev" href="ch06_01.htm" title="6.1 The ifconfig Command "><link rel="next" href="ch06_03.htm#TCP2-CH-6-SECT-3.3" title="6.3 Installing PPP "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch06_01.htm" title="6.1 The ifconfig Command "><img src="../gifs/txtpreva.gif" alt="Previous: 6.1 The ifconfig Command " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 6<br>Configuring the Interface </FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch06_03.htm#TCP2-CH-6-SECT-3.3" title="6.3 Installing PPP "><img src="../gifs/txtnexta.gif" alt="Next: 6.3 Installing PPP " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-6-SECT-2">6.2 TCP/IP Over a Serial Line </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-6-IX-TCP-IP-PROTOCOL-OVER-A-SERIAL-LINE"></A
>TCP/IP runs over a wide variety of physical media. The media can be
Ethernet cables, as in your local Ethernet, or telephone circuits, as
in a wide area network. In the first half of this chapter, we used
<b class="emphasis.bold">ifconfig</B
> to configure a local Ethernet interface. In this
section, we use other commands to configure a network interface to use a
telephone circuit.</P
><p class="para">Almost all data communication takes place via serial interfaces.<a class="indexterm" name="AUTOID-6413"></A
>
A serial interface is just an interface that sends the data as a series
of bits over a single wire, as opposed to a parallel interface that
sends the data bits in parallel over several wires simultaneously.
This description of a serial interface would fit almost any communications
interface (including Ethernet itself), but the term is usually applied to
an interface that connects to a telephone circuit via a modem or similar
device. Likewise, a telephone circuit is often called a serial line.</P
><p class="para">In the TCP/IP world, serial lines are used to create wide area networks<a class="indexterm" name="AUTOID-6417"></A
>
(WANs). Unfortunately, TCP/IP has not always had a standard
physical layer protocol for serial lines. Because of the lack of
a standard, network designers were forced to use a single brand of
routers within their WANs to ensure successful physical layer
communication. The growth of TCP/IP WANs led to a strong
interest in standardizing serial-line communications to provide vendor
independence.</P
><p class="para">Other forces that increased interest in serial line communications were
the advent of small affordable systems that run TCP/IP and the advent of
high-speed, dial-up modems<a class="indexterm" name="AUTOID-6420"></A
>
that provide &quot;reasonable&quot; TCP/IP performance.
When the ARPANET<a class="indexterm" name="AUTOID-6423"></A
>
was formed, computers were very expensive and dial-up
modems were very slow. At that time, if you could afford a computer, you
could afford a leased telephone line. In recent years, however, it has
become possible to own a UNIX system at home. In this new environment,
there is an increasing demand for services that allow TCP/IP access over
low-cost, dial-up serial lines.</P
><p class="para">These two forces&nbsp;- the need for standardized wide area communications
and the need for dial-up TCP/IP access&nbsp;- have led to the creation of two
serial-line protocols: Serial Line IP (SLIP) and Point-to-Point Protocol
(PPP).
[7]</P
><blockquote class="footnote"><p class="para">[7] Dial-up modems are usually asynchronous. Both PPP and SLIP support
asynchronous, dial-up service as well as synchronous leased-line service.</P
></BLOCKQUOTE
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-6-SECT-2.1">6.2.1 The Serial Protocols </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-6-IX-SERIAL-LINE-IP-SLIP"></A
>Serial Line IP was created first. It is a minimal protocol that
allows isolated hosts to link via TCP/IP over the telephone network.
The SLIP protocol defines a simple mechanism for framing datagrams
for transmission across serial lines. SLIP sends the datagram across
the serial line as a series of bytes, and it uses special characters to
mark when a series of bytes should be grouped together as a datagram.
SLIP defines two special characters for this purpose:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">The SLIP END character,<a class="indexterm" name="AUTOID-6436"></A
>
a single byte with the decimal
value 192, is the character that marks the end of a datagram.<a class="indexterm" name="AUTOID-6438"></A
>
When the receiving SLIP encounters the END character, it knows that it has a
complete datagram that can be sent up to IP.</P
></LI
><li class="listitem"><p class="para">The SLIP ESC character,<a class="indexterm" name="AUTOID-6443"></A
>
a single byte with the decimal
value of 219, is used to &quot;escape&quot; the SLIP control characters.
If the sending SLIP encounters a byte value equivalent to either a
SLIP END character or a SLIP ESC character in the datagram
it is sending, it converts that character to a sequence of two characters.
The two-character sequences are ESC 220 for the END character,
and ESC 221 for the ESC character itself.
[8]
When the receiving SLIP encounters these two-byte sequences, it
converts them back to single-byte values. This procedure prevents the
receiving SLIP from incorrectly interpreting a data byte as the end of
the datagram.</P
><blockquote class="footnote"><p class="para">[8] Here ESC refers to the SLIP escape character, not the ASCII
escape character.</P
></BLOCKQUOTE
></LI
></UL
><p class="para">SLIP is described in RFC 1055, <em class="emphasis">A Nonstandard for Transmission of IP
Datagrams Over Serial Lines: SLIP</EM
>. As the name of the RFC makes
clear, SLIP is not an Internet standard. The RFC does not propose a
standard; it documents an existing protocol. The RFC identifies the
deficiencies in SLIP, which fall into two
categories:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">The SLIP protocol does not define any link control information that 
could be used to dynamically control the characteristics of a
connection. Therefore, SLIP systems must assume certain link
characteristics. Because of this limitation, SLIP can only be used when
both hosts know each other's address, and only when IP datagrams are
being transmitted.</P
></LI
><li class="listitem"><p class="para">SLIP does not compensate for noisy, low-speed telephone lines. The
protocol does not provide error correction<a class="indexterm" name="AUTOID-6454"></A
><a class="indexterm" name="AUTOID-6457"></A
>
or data compression.<a class="indexterm" name="AUTOID-6459"></A
></P
></LI
></UL
><p class="para"><a class="indexterm" name="TCP2-CH-6-IX-POINT-TO-POINT-PROTOCOL-PPP"></A
>To address SLIP's weaknesses, Point-to-Point Protocol (PPP) was developed
as an Internet standard. At this writing, there are several RFCs that
document Point-to-Point Protocol.
[9]
Two key documents are: RFC 1548, <em class="emphasis">The Point-to-Point Protocol (PPP)</EM
>,
and RFC 1172, <em class="emphasis">The Point-to-Point Protocol (PPP) Initial Configuration
Options</EM
>.</P
><blockquote class="footnote"><p class="para">[9] If you want to make sure you have the very latest version of a
standard, obtain the latest list of RFCs as described in <a class="xref" href="ch13_01.htm" title="Internet Information Resources ">Chapter 13, <cite class="chapter">Internet Information Resources </CITE
></A
>.</P
></BLOCKQUOTE
><p class="para">PPP addresses the weaknesses of SLIP with a three-layered protocol:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">Data Link Layer Protocol</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-6475"></A
>The Data Link Layer Protocol used by PPP is a slightly modified version
of High-level Data Link Control (HDLC).<a class="indexterm" name="AUTOID-6478"></A
>
PPP modifies HDLC by adding a
Protocol field
that allows PPP to pass traffic for multiple Network Layer protocols.
HDLC is an international standard
protocol for reliably sending data over synchronous, serial
communications lines.
PPP also uses a proposed international standard for transmitting HDLC
over asynchronous lines; so PPP can guarantee reliable delivery over
any type of serial line.</P
></DD
><dt class="term"><em class="emphasis">Link Control Protocol</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-6485"></A
><a class="indexterm" name="AUTOID-6487"></A
>The Link Control Protocol (LCP) provides
control information for the serial link. It is used to establish the
connection, negotiate configuration parameters, check link quality, and
close the connection. LCP was developed specifically for PPP.</P
></DD
><dt class="term"><em class="emphasis">Network Control protocols</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-6494"></A
>The Network Control protocols are individual protocols that provide
configuration and control information for the Network Layer protocols.
Remember, PPP is designed to pass data for a wide variety of network
protocols. NCP allows PPP to be customized to do just that. Each
network protocol (DECNET, IP, OSI, etc.) has its own Network Control protocol. The Network Control protocol defined in RFCs 1331 and 1332 is the <a class="indexterm" name="AUTOID-6496"></A
><a class="indexterm" name="AUTOID-6498"></A
>
Internet Control Protocol (IPCP), which supports Internet Protocol.<a class="indexterm" name="AUTOID-6500"></A
></P
></DD
></DL
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-6-SECT-2.2">6.2.2 Choosing a Serial Protocol </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-6504"></A
>Point-to-Point Protocol (PPP) is the best TCP/IP serial protocol.
PPP is preferred because it is an Internet standard, which ensures<a class="indexterm" name="AUTOID-6508"></A
>
interoperability between systems from a wide variety of vendors.
It has more features than SLIP, and is more robust.
These benefits make PPP the best choice as a non-proprietary protocol
for connecting routers over serial lines and for connecting in remote
computers via dial-up lines.</P
><p class="para">However, sometimes your choice is limited. SLIP was the first 
widely available serial protocol for IP, and some older
dial-up servers support SLIP only. PPP and SLIP do not interoperate;
they are completely different protocols. So if your terminal servers
only have SLIP, the remote hosts that connect through these servers must
also have SLIP. Because of its installed base, SLIP will continue to
be used for the foreseeable future.</P
><p class="para">So which protocol should you use? When you are designing a new
serial-line service, use PPP. However, you may be forced to also support SLIP.
SLIP is sometimes the only serial protocol available for a specific
piece of hardware. Simply put, use PPP where you can and SLIP where
you must.</P
><p class="para">Linux systems include both SLIP and PPP. However, on some other UNIX 
systems such as Solaris, PPP is included and SLIP is not.
The only time you should consider using SLIP is
when it comes as part of the operating system. Avoid downloading SLIP
source code and porting it on to your system. Use PPP instead. If you
have old terminal servers that support only SLIP and new computers
that support only PPP, it's time to upgrade the old terminal server.<a class="indexterm" name="AUTOID-6514"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch06_01.htm" title="6.1 The ifconfig Command "><img src="../gifs/txtpreva.gif" alt="Previous: 6.1 The ifconfig Command " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch06_03.htm#TCP2-CH-6-SECT-3.3" title="6.3 Installing PPP "><img src="../gifs/txtnexta.gif" alt="Next: 6.3 Installing PPP " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">6.1 The ifconfig Command </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">6.3 Installing PPP </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
