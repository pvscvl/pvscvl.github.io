<html><head>
<title>[Appendix A] PPP Tools</TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:42:23Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="index.htm" title="TCP/IP Network Administration"><link rel="prev" href="ch13_07.htm" title="13.7 Summary "><link rel="next" href="appa_02.htm" title="A.2 The PPP Daemon"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch13_07.htm" title="13.7 Summary "><img src="../gifs/txtpreva.gif" alt="Previous: 13.7 Summary " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Appendix A</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="appa_02.htm" title="A.2 The PPP Daemon"><img src="../gifs/txtnexta.gif" alt="Next: A.2 The PPP Daemon" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="APPENDIX"><h1 class="appendix"><a class="title" name="TCP2-AP-1">A. PPP Tools</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="SECT1" href="#TCP2-AP-1-SECT-1" title="A.1 Dial-Up IP">Dial-Up IP</A
><br><a class="SECT1" href="appa_02.htm" title="A.2 The PPP Daemon">The PPP Daemon</A
><br><a class="SECT1" href="appa_03.htm" title="A.3 chat">chat</A
></P
><p></P
></DIV
><p class="para"><a class="indexterm" name="TCP2-AP-1-IX-POINT-TO-POINT-PROTOCOL-PPP-TOOLS-REFERENCE"></A
>This appendix is a reference for <b class="emphasis.bold">dip</B
>, <b class="emphasis.bold">pppd</B
>, and <b class="emphasis.bold">chat</B
>.
These tools are used to create dial-up IP connection for the <em class="emphasis">Point
to Point Protocol</EM
> (PPP). <b class="emphasis.bold">dip</B
> and <b class="emphasis.bold">chat</B
> are both scripting
languages. Creating a script that initializes the modem, dials the remote
server, logs in, and configures the remote server is the biggest task in
configuring a PPP connection. <a class="xref" href="ch06_01.htm" title="Configuring the Interface ">Chapter 6, <cite class="chapter">Configuring the Interface </CITE
></A
>, provides examples and tutorial
information about all three of the programs covered here.
This appendix provides a reference to the programs.</P
><div class="sect1"><h2 class="sect1"><a class="title" name="TCP2-AP-1-SECT-1">A.1 Dial-Up IP</A
></H2
><p class="para"><a class="indexterm" name="TCP2-AP-1-IX-DIAL-UP-IP-DIP-TOOLS-REFERENCE"></A
><a class="indexterm" name="TCP2-AP-1-IX-DIAL-UP-IP-DIP-TOOLS-REFERENCE2"></A
><b class="emphasis.bold">dip</B
> is a scripting tool designed specifically for creating SLIP and
PPP connections.
[1]
The syntax of the <b class="emphasis.bold">dip</B
> command is:</P
><blockquote class="footnote"><p class="para">[1] <em class="emphasis">Serial Line IP</EM
> (SLIP) predates PPP. Today most serial connections
are PPP, which is what this appendix emphasizes.</P
></BLOCKQUOTE
><dl class="variablelist"><dt class="term"></DT
><dd class="listitem"><p class="para"><b class="emphasis.bold">dip</B
> [<code class="replaceable"><i>options</I
></CODE
>] [<code class="replaceable"><i>scriptfile</I
></CODE
>]</P
></DD
></DL
><p class="para">The <b class="emphasis.bold">dip</B
> command is invoked with either an option set or a<a class="indexterm" name="AUTOID-19342"></A
><a class="indexterm" name="AUTOID-19344"></A
>
script file specified, or with both. When <code class="replaceable"><i>scriptfile</I
></CODE
> is specified,
<b class="emphasis.bold">dip</B
> executes the commands contained in the script file to create
a point-to-point connection. Examples of scripts and <b class="emphasis.bold">dip</B
> are shown in <a class="xref" href="ch06_01.htm" title="Configuring the Interface ">Chapter 6</A
>. The <code class="replaceable"><i>options</I
></CODE
> valid with script files are:</P
><dl class="variablelist"><dt class="term"><b class="emphasis.bold">-v</B
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-19358"></A
>Runs <b class="emphasis.bold">dip</B
> in verbose mode. In this mode, <b class="emphasis.bold">dip</B
> echos each line of
the script file as it is executed, and displays enhanced status messages.</P
></DD
><dt class="term"><b class="emphasis.bold">-m</B
> <code class="replaceable"><i>mtu</I
></CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-19368"></A
>Sets the Maximum Transmission Unit (MTU) to the number of bytes specified
by <code class="replaceable"><i>mtu</I
></CODE
>. The default MTU is 296 bytes.</P
></DD
><dt class="term"><b class="emphasis.bold">-p</B
> <code class="replaceable"><i>proto</I
></CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-19377"></A
>Selects the serial line protocol. Possible values for <code class="replaceable"><i>proto</I
></CODE
> are:
SLIP, CSLIP, PPP, or TERM.</P
></DD
></DL
><p class="para">The other <b class="emphasis.bold">dip</B
> command line options are:</P
><dl class="variablelist"><dt class="term"><b class="emphasis.bold">-k</B
></DT
><dd class="listitem"><p class="para">Kills the last <b class="emphasis.bold">dip</B
> process you started. You can only kill a
process you own, unless of course you're <em class="emphasis">root</EM
>.</P
></DD
><dt class="term"><b class="emphasis.bold">-l</B
> <code class="replaceable"><i>device</I
></CODE
></DT
><dd class="listitem"><p class="para">Identifies that the process to be killed is the one that has locked the
specified <code class="replaceable"><i>device</I
></CODE
>. This option is only valid when used with the
<b class="emphasis.bold">-k</B
> option.</P
></DD
><dt class="term"><b class="emphasis.bold">-i </B
>[<code class="replaceable"><i>username</I
></CODE
>]</DT
><dd class="listitem"><p class="para">Runs <b class="emphasis.bold">dip</B
> as a login shell to provide a PPP or SLIP server. The
<b class="emphasis.bold">diplogin</B
> command is equivalent to <b class="emphasis.bold">dip -i</B
>. These two forms
of the command are used interchangeably, but <b class="emphasis.bold">diplogin</B
> is the
most common form. <b class="emphasis.bold">diplogin</B
> is placed in the login shell field of
the <em class="emphasis">/etc/passwd</EM
> file entry for each PPP client. From there it is
run by <b class="emphasis.bold">login</B
>. The username from the <em class="emphasis">/etc/passwd</EM
> file is
used to retrieve additional configuration information from
<em class="emphasis">/etc/diphosts</EM
>. If the optional <code class="replaceable"><i>username</I
></CODE
> is specified
with the <b class="emphasis.bold">diplogin</B
> command, that username is used to retrieve the
information from the <em class="emphasis">/etc/diphosts</EM
> file. <a class="xref" href="ch06_01.htm" title="Configuring the Interface ">Chapter 6</A
> provides
a tutorial and examples of running <b class="emphasis.bold">diplogin</B
> to create a PPP
server, and of using the <em class="emphasis">/etc/diphosts</EM
> file.</P
></DD
><dt class="term"><b class="emphasis.bold">-a</B
></DT
><dd class="listitem"><p class="para">Prompts for the username and password. The <b class="emphasis.bold">-a</B
> option is valid
only when used with the <b class="emphasis.bold">-i</B
> option. The <b class="emphasis.bold">diplogini</B
> command
is equivalent to <b class="emphasis.bold">dip -i -a</B
>. <b class="emphasis.bold">diplogini</B
> is used as a login
shell in the <em class="emphasis">/etc/passwd</EM
> file where it is run by <b class="emphasis.bold">login</B
>.
Runs <b class="emphasis.bold">dip</B
> in test mode, which allows you to input individual
script language commands directly from the keyboard. The <b class="emphasis.bold">-t</B
>
option is frequently used in combination with <b class="emphasis.bold">-v</B
> so that the
result of each command can be better observed. As shown in
<a class="xref" href="ch06_01.htm" title="Configuring the Interface ">Chapter 6</A
>, this option is used to debug a <b class="emphasis.bold">dip</B
> script.</P
></DD
></DL
><p class="para"><b class="emphasis.bold">diplogin</B
> and <b class="emphasis.bold">diplogini</B
> are used only on servers and are not
used with a script file. The script file is used on the PPP clients
when <b class="emphasis.bold">dip</B
> is configured to dial into a remote server. The script
file contains the instructions used to do this.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-AP-1-SECT-1.1">A.1.1 The dip Script File</A
></H3
><p class="para"><a class="indexterm" name="TCP2-AP-1-IX-DIAL-UP-IP-DIP-SCRIPT-FILE"></A
><a class="indexterm" name="TCP2-AP-1-IX-DIAL-UP-IP-DIP-SCRIPT-FILE2"></A
>The script file is made up of comments, labels, variables, and commands.
Any line that begins with a sharp sign (#) is a comment. A label is a<a class="indexterm" name="AUTOID-19449"></A
><a class="indexterm" name="AUTOID-19451"></A
><a class="indexterm" name="AUTOID-19453"></A
><a class="indexterm" name="AUTOID-19455"></A
>
line that contains only a string ending in a colon. Labels are used
to divide the script into separate 
procedures. For example, the section of the script that dials the
remote host might begin with the label:</P
><p class="para"><blockquote class="screen"><pre class="screen">Dial-in:</PRE
></BLOCKQUOTE
></P
><p class="para">A variable stores a value. A variable name is a string that begins
with a dollar sign ($). You might, for example, create a variable to
hold a loop counter and give it the name <b class="emphasis.bold">$loopcntr</B
>. It is possible to
create your own variables, but this is rarely done. The variables that<a class="indexterm" name="AUTOID-19461"></A
>
are used in most scripts are the special variables defined by <b class="emphasis.bold">dip</B
>.
<a class="xref" href="#TCP2-AP-1-TAB-0" title="dip Special Variables">Table 13.1</A
>
lists the special variables and the value that each holds.</P
><table class="table"><caption class="table"><a class="title" name="TCP2-AP-1-TAB-0">Table A.1: dip Special Variables</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Variable</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Value Stored</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">$errlvl</B
></TD
><td class="entry" rowspan="1" colspan="1">The return code of the last command</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">$locip</B
></TD
><td class="entry" rowspan="1" colspan="1">The IP address of the local host</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">$local</B
></TD
><td class="entry" rowspan="1" colspan="1">The fully qualified domain name of the local host</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">$rmtip</B
></TD
><td class="entry" rowspan="1" colspan="1">The IP address of the remote host</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">$remote</B
></TD
><td class="entry" rowspan="1" colspan="1">The fully qualified domain name of the remote host</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">$mtu</B
></TD
><td class="entry" rowspan="1" colspan="1">The Maximum Transmission Unit in bytes</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">$modem</B
></TD
><td class="entry" rowspan="1" colspan="1">The modem type; currently this must be HAYES</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">$port</B
></TD
><td class="entry" rowspan="1" colspan="1">The name of the serial device, e.g., cua0</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">$speed</B
></TD
><td class="entry" rowspan="1" colspan="1">The transmission speed of the port</TD
></TR
></TBODY
></TABLE
><p class="para">The final component of the script file is the command list. There are many
script commands. Because this appendix is a reference, we cover them all.
However, most scripts are built using only a few of these commands.
See the sample scripts in <a class="xref" href="ch06_01.htm" title="Configuring the Interface ">Chapter 6</A
> and at the end of this section for
realistic <b class="emphasis.bold">dip</B
> scripts. The complete list of script commands is:</P
><dl class="variablelist"><dt class="term"><b class="emphasis.bold">beep</B
> [<code class="replaceable"><i>n</I
></CODE
>]</DT
><dd class="listitem"><p class="para">Tells the system to beep the user. Repeat <code class="replaceable"><i>n</I
></CODE
> times.</P
></DD
><dt class="term"><b class="emphasis.bold">bootp</B
></DT
><dd class="listitem"><p class="para">Tells the system to use the BOOTP protocol to obtain the local and remote IP addresses.<a class="indexterm" name="AUTOID-19527"></A
>
This command applies only to SLIP. PPP has its own protocol for
assigning addresses; SLIP does not. Usually SLIP addresses are
statically set inside the script. However, some SLIP servers have
evolved techniques for dynamic address assignment. The most common
method is for the server to display the address as clear text
immediately after the connection is made. Use the <b class="emphasis.bold">get $locip
remote</B
> command to retrieve the address from this type of SLIP
server. Other SLIP servers require you to send them a command before
they will display the address. Put the required server command in the
script and follow it with the <b class="emphasis.bold">get</B
> command. Finally, a few SLIP
servers use BOOTP to distribute addresses. Use the <b class="emphasis.bold">bootp</B
>
command in your script to enable BOOTP when it is required by your SLIP
server.

Sends a BREAK. Some remote servers may require a BREAK as an attention
character.</P
></DD
><dt class="term"><b class="emphasis.bold">chatkey</B
> <code class="replaceable"><i>keyword code</I
></CODE
></DT
><dd class="listitem"><p class="para">Maps a modem response <code class="replaceable"><i>keyword</I
></CODE
> to a numeric <code class="replaceable"><i>code</I
></CODE
>.
The predefined mappings are:</P
><blockquote class="literallayout"><p class="literallayout">0	OK<br>1	CONNECT<br>2	ERROR<br>3	BUSY<br>4	NO CARRIER<br>5	NO DIALTONE</P
></BLOCKQUOTE
><p class="para"></P
></DD
><dt class="term"><b class="emphasis.bold">config</B
> [<b class="emphasis.bold">interface</B
>|<b class="emphasis.bold">routing</B
>] [<b class="emphasis.bold">pre</B
>|<b class="emphasis.bold">up</B
>|<b class="emphasis.bold">down</B
>|<b class="emphasis.bold">post</B
>] <code class="replaceable"><i>arguments...</I
></CODE
></DT
><dd class="listitem"><p class="para">Modifies interface characteristics (<b class="emphasis.bold">interface</B
>) or the routing
table (<b class="emphasis.bold">routing</B
>) either before (<b class="emphasis.bold">pre</B
>) the link comes up, when
it is <b class="emphasis.bold">up</B
>, when it goes <b class="emphasis.bold">down</B
>,  or after (<b class="emphasis.bold">post</B
>) the
link is shutdown.
For example:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="literal">config up routing add canary gw ibis</CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">adds a route to <em class="emphasis">canary</EM
> using <em class="emphasis">ibis</EM
> as the gateway when the
link is up. Allowing users to modify the routing table or interface
characteristics is very dangerous. The <b class="emphasis.bold">config</B
> command is
disabled in the DIP code and requires re-compilation to be enabled.</P
></DD
><dt class="term"><b class="emphasis.bold">databits 7</B
>|<b class="emphasis.bold">8</B
></DT
><dd class="listitem"><p class="para">Sets the number of data bits to 7 or 8. 8 bits is recommended for PPP
and SLIP links.</P
></DD
><dt class="term"><b class="emphasis.bold">dec</B
> <code class="replaceable"><i>$variable</I
></CODE
> [<code class="replaceable"><i>value</I
></CODE
>]</DT
><dd class="listitem"><p class="para">Decrements <code class="replaceable"><i>$variable</I
></CODE
> by <code class="replaceable"><i>value</I
></CODE
>. The default value is 1.</P
></DD
><dt class="term"><b class="emphasis.bold">default</B
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-19587"></A
>Sets the PPP connection as the default route.</P
></DD
><dt class="term"><b class="emphasis.bold">dial</B
> <code class="replaceable"><i>phonenumber</I
></CODE
> [<code class="replaceable"><i>timeout</I
></CODE
>]</DT
><dd class="listitem"><p class="para">Dials the <code class="replaceable"><i>phonenumber</I
></CODE
>. If the remote modem does not answer
within <code class="replaceable"><i>timeout</I
></CODE
> seconds, the connection aborts.  <b class="emphasis.bold">$errlvl</B
>
is set to a numeric value based on the keyword returned by the local<a class="indexterm" name="AUTOID-19600"></A
>
modem.  Set <b class="emphasis.bold">chatkey</B
> for the keyword to numeric mappings.</P
></DD
><dt class="term"><b class="emphasis.bold">echo</B
> <b class="emphasis.bold">on</B
>|<b class="emphasis.bold">off</B
></DT
><dd class="listitem"><p class="para">Enables or disables the display of modem commands.</P
></DD
><dt class="term"><b class="emphasis.bold">exit</B
> [<code class="replaceable"><i>n</I
></CODE
>]</DT
><dd class="listitem"><p class="para">Exits the script, optionally returning the number <code class="replaceable"><i>n</I
></CODE
> as the exit
status.

Clears the input buffer.</P
></DD
><dt class="term"><b class="emphasis.bold">get</B
> <code class="replaceable"><i>$variable</I
></CODE
> [<b class="emphasis.bold">ask</B
> | <b class="emphasis.bold">remote</B
> [<code class="replaceable"><i>timeout</I
></CODE
>]] <code class="replaceable"><i>value</I
></CODE
></DT
><dd class="listitem"><p class="para">Sets <code class="replaceable"><i>$variable</I
></CODE
> to <code class="replaceable"><i>value</I
></CODE
>, unless <b class="emphasis.bold">ask</B
> or <b class="emphasis.bold">remote</B
> is
specified. When <b class="emphasis.bold">ask</B
> is specified, the user is prompted for the value.
When <b class="emphasis.bold">remote</B
> is specified, the value is read from the remote machine,
optionally waiting <code class="replaceable"><i>timeout</I
></CODE
> seconds for the remote system to respond.</P
></DD
><dt class="term"><b class="emphasis.bold">goto</B
> <code class="replaceable"><i>label</I
></CODE
></DT
><dd class="listitem"><p class="para">Jumps to the section of the script identified by <code class="replaceable"><i>label</I
></CODE
>.</P
></DD
><dt class="term"><b class="emphasis.bold">help</B
></DT
><dd class="listitem"><p class="para">Lists the <b class="emphasis.bold">dip</B
> script commands.</P
></DD
><dt class="term"><b class="emphasis.bold">if</B
> <code class="replaceable"><i>expr</I
></CODE
> <b class="emphasis.bold">goto</B
> <code class="replaceable"><i>label</I
></CODE
></DT
><dd class="listitem"><p class="para">A conditional statement that jumps to the section of the script identified
by <code class="replaceable"><i>label</I
></CODE
> if the <code class="replaceable"><i>expression</I
></CODE
> evaluates to true. The expression
must compare a variable to a constant using one of these operators: ==
(equal), != (not equal), &lt; (less than), &gt; (greater than), &lt;= (less than
or equal to), &gt;= (greater than or equal to).</P
></DD
><dt class="term"><b class="emphasis.bold">inc</B
> <code class="replaceable"><i>$variable</I
></CODE
> [<code class="replaceable"><i>value</I
></CODE
>]</DT
><dd class="listitem"><p class="para">Increments <code class="replaceable"><i>$variable</I
></CODE
> by <code class="replaceable"><i>value</I
></CODE
>. The default value is 1.</P
></DD
><dt class="term"><b class="emphasis.bold">init</B
> <code class="replaceable"><i>command</I
></CODE
></DT
><dd class="listitem"><p class="para">Sets the command string used to initialize the modem. The default is
ATE0 Q0 V1 X1.</P
></DD
><dt class="term"><b class="emphasis.bold">mode SLIP</B
>|<b class="emphasis.bold">CSLIP</B
>|<b class="emphasis.bold">PPP</B
>|<b class="emphasis.bold">TERM</B
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-19680"></A
>Selects the serial protocol. The default is SLIP.</P
></DD
><dt class="term"><b class="emphasis.bold">modem</B
> <code class="replaceable"><i>type</I
></CODE
></DT
><dd class="listitem"><p class="para">Sets the modem type. Ignore this command. The only legal value is
HAYES, and that is the default.</P
></DD
><dt class="term"><b class="emphasis.bold">netmask</B
> <code class="replaceable"><i>mask</I
></CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-19696"></A
>Sets the subnet mask.</P
></DD
><dt class="term"><b class="emphasis.bold">parity E</B
>|<b class="emphasis.bold">O</B
>|<b class="emphasis.bold">N</B
></DT
><dd class="listitem"><p class="para">Sets the parity to even (<b class="emphasis.bold">E</B
>), odd (<b class="emphasis.bold">O</B
>), or no (<b class="emphasis.bold">N</B
>).
No parity (<b class="emphasis.bold">N</B
>) is recommended for SLIP and PPP links.

Prompts the user for the password.
<a class="indexterm" name="AUTOID-19711"></A
>
Installs a proxy ARP entry for the remote system in the local host's
ARP table.</P
></DD
><dt class="term"><b class="emphasis.bold">print</B
> <code class="replaceable"><i>$variable</I
></CODE
></DT
><dd class="listitem"><p class="para">Displays the contents of <code class="replaceable"><i>$variable</I
></CODE
>.</P
></DD
><dt class="term"><b class="emphasis.bold">psend</B
> <code class="replaceable"><i>command</I
></CODE
></DT
><dd class="listitem"><p class="para">Executes <code class="replaceable"><i>command</I
></CODE
> through the default shell passing the output to
the serial device. The command runs using the user's real UID.</P
></DD
><dt class="term"><b class="emphasis.bold">port</B
> <code class="replaceable"><i>device</I
></CODE
></DT
><dd class="listitem"><p class="para">Identifies the serial device, such as cua0, that attaches the modem.

Exits the script with a nonzero exit status, aborting the connection.

Resets the modem.</P
></DD
><dt class="term"><b class="emphasis.bold">send</B
> <code class="replaceable"><i>string</I
></CODE
></DT
><dd class="listitem"><p class="para">Passes <code class="replaceable"><i>string</I
></CODE
> to the serial device.</P
></DD
><dt class="term"><b class="emphasis.bold">shell</B
> <code class="replaceable"><i>command</I
></CODE
></DT
><dd class="listitem"><p class="para">Executes <code class="replaceable"><i>command</I
></CODE
> through the default shell. The command runs using
the user's real UID.</P
></DD
><dt class="term"><b class="emphasis.bold">skey</B
> [<code class="replaceable"><i>timeout</I
></CODE
>]</DT
><dd class="listitem"><p class="para">Waits for an S/Key challenge from the remote terminal server,
prompts the user for the secret key, and generates and sends the response.
Waits <code class="replaceable"><i>timeout</I
></CODE
> seconds for the challenge. If the timer expires,
<b class="emphasis.bold">$errlvl</B
> is set to 1; otherwise, it is set to 0. S/Key must be
compiled into <b class="emphasis.bold">dip</B
>.</P
></DD
><dt class="term"><b class="emphasis.bold">sleep</B
> <code class="replaceable"><i>time</I
></CODE
></DT
><dd class="listitem"><p class="para">Delays <code class="replaceable"><i>time</I
></CODE
> seconds.</P
></DD
><dt class="term"><b class="emphasis.bold">speed</B
> <code class="replaceable"><i>bits-per-second</I
></CODE
></DT
><dd class="listitem"><p class="para">Sets the port speed. The default is 38400.</P
></DD
><dt class="term"><b class="emphasis.bold">stopbits 1</B
>|<b class="emphasis.bold">2</B
></DT
><dd class="listitem"><p class="para">Sets the number of stop bits to 1 or 2.

Enables terminal mode. In terminal mode, keyboard input is passed directly
to the serial device.</P
></DD
><dt class="term"><b class="emphasis.bold">timeout</B
> <code class="replaceable"><i>time</I
></CODE
></DT
><dd class="listitem"><p class="para">Sets the <code class="replaceable"><i>time</I
></CODE
> in seconds that the line is allowed to remain
inactive. When this timer expires, the link is closed.</P
></DD
><dt class="term"><b class="emphasis.bold">wait</B
> <code class="replaceable"><i>text </I
></CODE
>[<code class="replaceable"><i>timeout</I
></CODE
>]</DT
><dd class="listitem"><p class="para">Waits <code class="replaceable"><i>timeout</I
></CODE
> seconds for the <code class="replaceable"><i>text</I
></CODE
> string to arrive from
the remote system. If <code class="replaceable"><i>timeout</I
></CODE
> is not specified, the script will
wait forever.</P
></DD
></DL
><p class="para">In the next section we put some of these commands to work in a realistic
script.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="TCP2-AP-1-SECT-1.1.1">A.1.1.1 A sample dip script</A
></H4
><p class="para"><a class="indexterm" name="TCP2-AP-1-IX-DIAL-UP-IP-DIP-SCRIPT-FILE-SAMPLE"></A
><a class="indexterm" name="TCP2-AP-1-IX-DIAL-UP-IP-DIP-SCRIPT-FILE-SAMPLE2"></A
>This script is based on the PPP sample from <a class="xref" href="ch06_01.htm" title="Configuring the Interface ">Chapter 6</A
>. Labels and error
detection have been added to create a more robust script.</P
><p class="para"><blockquote class="screen"><pre class="screen"># Select configuration settings
setup:
# Ask PPP to provide the addresses
get $local 0.0.0.0
# Select the port
port cua1
# Set the port speed
speed 57600
# Create a loop counter
get $loopcntr 0

# Dial the remote server
dialin:
# Reset the modem and clear the input buffer
reset
flush
# Dial the PPP server and check the modem response
dial *70,301-555-1234
# If BUSY, dial again
if $errlvl == 3 goto redial
# If some other error, abort
if $errlvl != 1 goto dial-error
# Otherwise rest loop counter
get $loopcntr 0
# Give the server 2 seconds to get ready
sleep 2

# Login to the remote server
login:
# Send a carriage-return to wake up the server
send \r
# Wait for the Username&gt; prompt and send the username
wait name&gt; 20
if $errlvl != 0 goto try-again
send kristin\r
# Wait for the Password&gt; prompt and send the password
wait word&gt; 10
if $errlvl != 0 goto server-failure
password
# Wait for the PPP server's command line prompt
wait &gt; 20
if $errlvl != 0 goto server-failure
# Send the command required by the PPP server
send ppp enabled\r

# Success! We're on-line
connected:
# Set the interface to PPP mode
mode PPP
# Exit the script
exit

# Error processing routines

# Try dialing 3 times.  Wait 5 seconds between attempts
redial:
inc $loopcntr
if $loopcntr &gt; 3 goto busy-failure
sleep 5
goto dialin

# Try a second carriage return
try-again:
inc $loopcntr
if $loopcntr &gt; 1 goto server-failure
goto login


dial-error:
print Dial up of $remote failed.
quit

server-failure:
print $remote failed to respond.
quit

busy-failure:
print $remote is busy.  Try again later.
quit</PRE
></BLOCKQUOTE
></P
><p class="para">This script provides a realistic example of the commands used in most
scripts.  However, you may encounter a particularly tough scripting
problem. If you do, the abundance of scripting commands available with
<b class="emphasis.bold">dip</B
> should be able to handle it. If <b class="emphasis.bold">dip</B
> can't do the job,
try <b class="emphasis.bold">expect</B
>. See <em class="emphasis">Exploring Expect</EM
> by Don Libes (O'Reilly &amp;amp;amp;amp;amp;
Associates) for a full description of the <b class="emphasis.bold">expect</B
> scripting
language.<a class="indexterm" name="AUTOID-19814"></A
><a class="indexterm" name="AUTOID-19815"></A
><a class="indexterm" name="AUTOID-19816"></A
><a class="indexterm" name="AUTOID-19817"></A
><a class="indexterm" name="AUTOID-19818"></A
><a class="indexterm" name="AUTOID-19819"></A
><a class="indexterm" name="AUTOID-19820"></A
></P
></DIV
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch13_07.htm" title="13.7 Summary "><img src="../gifs/txtpreva.gif" alt="Previous: 13.7 Summary " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="appa_02.htm" title="A.2 The PPP Daemon"><img src="../gifs/txtnexta.gif" alt="Next: A.2 The PPP Daemon" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">13.7 Summary </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">A.2 The PPP Daemon</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
