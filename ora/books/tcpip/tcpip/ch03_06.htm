<html><head>
<title>[Chapter 3] 3.6 Bootstrap Protocol</TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:31:58Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_01.htm" title="3. Network Services"><link rel="prev" href="ch03_05.htm#TCP2-CH-3-SECT-5.1" title="3.5 Configuration Servers"><link rel="next" href="ch03_07.htm#TCP2-CH-3-SECT-7.1" title="3.7 File and Print Servers"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch03_05.htm#TCP2-CH-3-SECT-5.1" title="3.5 Configuration Servers"><img src="../gifs/txtpreva.gif" alt="Previous: 3.5 Configuration Servers" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 3<br>Network Services</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch03_07.htm#TCP2-CH-3-SECT-7.1" title="3.7 File and Print Servers"><img src="../gifs/txtnexta.gif" alt="Next: 3.7 File and Print Servers" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-3-SECT-6">3.6 Bootstrap Protocol</A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-3-IX-BOOTSTRAP-PROTOCOL-BOOTP"></A
>Bootstrap Protocol (BOOTP) is defined in RFCs 951 and 1532. The RFCs
describe BOOTP as an alternative to RARP, and when BOOTP is used RARP
is not needed. BOOTP, however, is a more comprehensive configuration
protocol than RARP. It provides much more configuration information
and has the potential to offer still more.  The original specification
allowed vendor extensions as a vehicle for the protocol's
evolution. RFC 1048 first formalized the definition of these
extensions, which have been updated over time and are currently
defined in RFC 2132. BOOTP and its extensions became the basis for the
Dynamic Host Configuration Protocol (DHCP). (More on DHCP later.)</P
><p class="para">The BOOTP client broadcasts a single packet called a <em class="emphasis">BOOTREQUEST</EM
><a class="indexterm" name="AUTOID-3712"></A
>
packet that contains, at a minimum, the client's physical network
address. The client sends the broadcast using the address
255.255.255.255, which is a special address called the <em class="emphasis">limited<a class="indexterm" name="AUTOID-3715"></A
>
broadcast address</EM
>.
[14]
The client waits for a response from the server. If a response is not
received within a specified time interval, the client retransmits the
request. BOOTP uses UDP as a transport protocol and, unlike RARP, it
does not require any special Network Access Layer protocols.<a class="indexterm" name="AUTOID-3721"></A
></P
><blockquote class="footnote"><p class="para">[14] This address is useful because, unlike the normal broadcast address,
it doesn't require the system to know the address of the network it is
on.</P
></BLOCKQUOTE
><p class="para">The server responds to the client's request with a <em class="emphasis">BOOTREPLY</EM
><a class="indexterm" name="AUTOID-3726"></A
>
packet. BOOTP uses two different well-known port numbers. UDP port
number 67 is used for the server and UDP port number 68 is used for the
client. This is very unusual. Most software uses a well-known port on<a class="indexterm" name="AUTOID-3728"></A
>
the server side and a randomly generated port<a class="indexterm" name="AUTOID-3730"></A
>
on the client side.
[15]
The random port number ensures that each pair of source/destination
ports identifies a unique path for exchanging information. A BOOTP
client, however, is still in the process of booting. It may not know
its IP address. Even if the client generates a source port for the
<em class="emphasis">BOOTREQUEST</EM
> packet, a server response that is addressed to that
port and the client's IP address won't be read by a client that
doesn't recognize the address. Therefore, BOOTP sends the response to
a specific port on all hosts. A broadcast sent to UDP port 68 is read
by all hosts, even by a system that doesn't know its specific
address. The system then determines if it is the intended recipient by
checking the physical network address embedded in the response.<a class="indexterm" name="AUTOID-3737"></A
></P
><blockquote class="footnote"><p class="para">[15] How and why random source port numbers are used is described in
<a class="xref" href="ch01_01.htm" title="Overview of TCP/IP">Chapter 1</A
>.</P
></BLOCKQUOTE
><p class="para">The server fills in all of the fields in the packet for which it has
data. BOOTP can provide every essential TCP/IP configuration value.
<a class="xref" href="ch09_01.htm" title="Configuring Network Servers ">Chapter 9</A
> provides a tutorial on setting up a BOOTP server,
as well as a complete list of all of the configuration parameters that
BOOTP can provide. In the next section we look at DHCP, which is based
on BOOTP.&#13;</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-3-SECT-6.1">3.6.1 Dynamic Host Configuration Protocol</A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-3-IX-DYNAMIC-HOST-CONFIGURATION-PROTOCOL-DHCP"></A
><em class="emphasis">Dynamic Host Configuration Protocol</EM
> (DHCP) is defined in RFCs
2131 and 2132. It's designed to be compatible with BOOTP. RFC 1534 outlines
interactions between BOOTP clients and DHCP servers, and between DHCP
clients and BOOTP servers.<a class="indexterm" name="AUTOID-3749"></A
>
But interoperability problems are possible; many network administrators<a class="indexterm" name="AUTOID-3752"></A
>
limit DHCP servers to DHCP clients. That's not necessary.
See <a class="xref" href="ch09_01.htm" title="Configuring Network Servers ">Chapter 9</A
> and <a class="xref" href="appd_01.htm" title="A dhcpd Reference">Appendix D, <cite class="appendix">A dhcpd Reference</CITE
></A
> for information on
supporting BOOTP clients with DHCP servers.</P
><p class="para">DHCP uses the same UDP ports, 67 and 68, as BOOTP and the same
<em class="emphasis">BOOTREQUEST</EM
> and <em class="emphasis">BOOTREPLY</EM
> packet format. But DHCP is more
then just an update of BOOTP. The new protocol expands the function of<a class="indexterm" name="AUTOID-3759"></A
>
BOOTP in two areas:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">The configuration parameters provided by a DHCP server include
everything defined in the <em class="emphasis">Requirements for Internet Hosts</EM
> RFC.
DHCP provides a client with a complete set of TCP/IP configuration
values.&#13;</P
></LI
><li class="listitem"><p class="para">DHCP permits automated allocation of IP addresses.</P
></LI
></UL
><p class="para">&#13;DHCP uses the portion of the BOOTP packet originally set aside for
vendor extensions to indicate the DHCP packet type and to carry a
complete set of configuration information. DHCP calls the values in
this part of the packet <em class="emphasis">options</EM
><a class="indexterm" name="AUTOID-3770"></A
>
instead of <em class="emphasis">vendor
extensions</EM
>.  This is a more accurate description because DHCP
defines how the options are used and does not leave their definition
up to the vendors. To handle the full set of configuration values from
the <em class="emphasis">Requirements for Internet Hosts</EM
> RFC, the Options field is<a class="indexterm" name="AUTOID-3775"></A
>
expanded to 312 bytes from the original 64 bytes of the BOOTP Vendor
Extensions field.<a class="indexterm" name="AUTOID-3778"></A
></P
><p class="para">You don't usually need to use this full set of configuration values.
Don't get me wrong. The parameters are needed for a complete TCP/IP
configuration. It's just that you don't need to define values for
them. Default values<a class="indexterm" name="AUTOID-3781"></A
>
are provided in most TCP/IP implementations, and the defaults only
need to be changed in special circumstances.  Frankly, you don't need
most of the parameters defined by BOOTP, let alone any additional
parameters. The expanded configuration parameters of DHCP make it a
more complete protocol than BOOTP, but they are of only marginal
value.</P
><p class="para">For most network administrators, automatic allocation of IP addresses is
a more interesting feature. DHCP allows addresses to be assigned in<a class="indexterm" name="AUTOID-3785"></A
>
three ways:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">Manual allocation</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3795"></A
>The network administrator keeps complete control over addresses by
specifically assigning them to clients. This is exactly the same way
that addresses are handled under BOOTP.</P
></DD
><dt class="term"><em class="emphasis">Automatic allocation</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3804"></A
>The DHCP server permanently assigns an address from a pool of
addresses. The administrator is not involved in the details of
assigning a client an address.</P
></DD
><dt class="term"><em class="emphasis">Dynamic allocation</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-3813"></A
>The server assigns an address to a DHCP client for a limited period of
time. The limited life of the address is called a lease.<a class="indexterm" name="AUTOID-3816"></A
>
The client can return the address to the server at any time, but must
request an extension from the server to retain the address longer than
the time permitted. The server automatically reclaims the address
after the lease expires if the client has not requested an extension.</P
></DD
></DL
><p class="para">Dynamic allocation is useful in a large distributed network where
many systems are being added and deleted. Unused addresses are returned
to the pool of addresses without relying on users or system administrators
to take action to return them. Addresses are only used when and where
they're needed. Dynamic allocation allows a network to make the
maximum use of a limited set of addresses. It is particularly well-suited 
to mobile systems<a class="indexterm" name="AUTOID-3819"></A
>
that move from subnet to subnet<a class="indexterm" name="AUTOID-3821"></A
>
and therefore must be constantly reassigned addresses appropriate for
their current network location.</P
><p class="para">Dynamic address allocation does not work for every system. Name
servers, email servers, login hosts and other shared systems are
always online, and they are not mobile. These systems are accessed by
name, so a shared system's domain name must resolve to the correct
address. Shared systems are manually allocated permanent, fixed
addresses.</P
><p class="para">Dynamic address assignment has major repercussions for DNS. DNS is
required to map hostnames to IP addresses. It cannot perform this job
if IP addresses are constantly changing and DNS is not informed of the
changes. To make dynamic address assignment work for all types of
systems, we need a new DNS that can be dynamically updated by the DHCP
server. The IETF is currently working on a standard for <em class="emphasis">Dynamic DNS</EM
>.<a class="indexterm" name="AUTOID-3827"></A
>
When fully operational, it will help make dynamic
addresses available to systems that provide services and to
those that use them.</P
><p class="para">Given the nature of dynamic addressing, most sites assign permanent
fixed addresses to shared servers. This happens through traditional
system administration and is not handled by DHCP. In effect, the
administrator of the shared server is given an address and puts
that address in the shared server's configuration. Using DHCP for some
systems doesn't mean it must be used for all systems.</P
><p class="para">Many DHCP servers can support BOOTP clients. However, a DHCP client is
needed to take full advantage of the services offered by DHCP. BOOTP
clients do not understand dynamic address leases. They do not know
that an address can time out<a class="indexterm" name="AUTOID-3831"></A
>
and that it must be renewed. BOOTP clients must be manually or
automatically assigned permanent address.  True dynamic address
assignment is limited to DHCP clients.</P
><p class="para">Therefore, most sites that use DHCP have a mixture of:<a class="indexterm" name="AUTOID-3835"></A
></P
><ul class="itemizedlist"><li class="listitem"><p class="para">Permanent addresses assigned to systems that can't use DHCP or BOOTP</P
></LI
><li class="listitem"><p class="para">Manual addresses assigned by DHCP to BOOTP clients</P
></LI
><li class="listitem"><p class="para">Dynamic addresses assigned to all DHCP clients</P
></LI
></UL
><p class="para">We conclude this chapter with a discussion of file and print servers.<a class="indexterm" name="AUTOID-3846"></A
><a class="indexterm" name="AUTOID-3847"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch03_05.htm#TCP2-CH-3-SECT-5.1" title="3.5 Configuration Servers"><img src="../gifs/txtpreva.gif" alt="Previous: 3.5 Configuration Servers" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch03_07.htm#TCP2-CH-3-SECT-7.1" title="3.7 File and Print Servers"><img src="../gifs/txtnexta.gif" alt="Next: 3.7 File and Print Servers" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.5 Configuration Servers</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.7 File and Print Servers</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
