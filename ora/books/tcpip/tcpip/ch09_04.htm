<html><head>
<title>[Chapter 9] 9.4 A BOOTP Server </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:37:53Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch09_01.htm" title="9. Configuring Network Servers "><link rel="prev" href="ch09_03.htm#TCP2-CH-9-SECT-3.0.1" title="9.3 Network Information Service "><link rel="next" href="ch09_05.htm#TCP2-CH-9-SECT-5.1" title="9.5 DHCP "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_03.htm#TCP2-CH-9-SECT-3.0.1" title="9.3 Network Information Service "><img src="../gifs/txtpreva.gif" alt="Previous: 9.3 Network Information Service " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 9<br>Configuring Network Servers </FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_05.htm#TCP2-CH-9-SECT-5.1" title="9.5 DHCP "><img src="../gifs/txtnexta.gif" alt="Next: 9.5 DHCP " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-9-SECT-4">9.4 A BOOTP Server </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-9-IX-BOOTP-DAEMON-BOOTPD"></A
>A UNIX system becomes a BOOTP server when it runs the BOOTP daemon
(<b class="emphasis.bold">bootpd</B
>). Some systems, such as Linux, include the daemon with
the operating system. Other systems, like Solaris, do not.
Even systems that provide <b class="emphasis.bold">bootpd</B
> as part of the system software do
not run the daemon by default.</P
><p class="para">There are two ways to run the BOOTP daemon: it can be started at boot
time from a startup script or it can be started by the <em class="emphasis">Internet<a class="indexterm" name="AUTOID-11780"></A
>
daemon</EM
>, <b class="emphasis.bold">inetd</B
>. If the server has a large number of clients
that are frequently rebooted, run <b class="emphasis.bold">bootpd</B
> from a startup file.
Starting <b class="emphasis.bold">bootpd</B
> in this manner reduces the amount of &quot;startup&quot;
overhead because the daemon is only started once. Possible lines for
starting <b class="emphasis.bold">bootpd</B
> from the <em class="emphasis">rc.inet2</EM
> file on a Slackware Linux
system are:</P
><p class="para"><blockquote class="screen"><pre class="screen">if [ -f /usr/sbin/bootpd -a -f /etc/bootptab ]; then
      echo -n &quot; bootpd&quot;
      /usr/sbin/bootpd -s
fi</PRE
></BLOCKQUOTE
></P
><p class="para">The code checks to make sure that the daemon and its configuration
file are available. <b class="emphasis.bold">bootpd</B
> is then started with the <b class="emphasis.bold">-s</B
>
switch. This switch tells <b class="emphasis.bold">bootpd</B
> to continue running and
listening to the bootps port, and not to time out even if there is no
activity on that port. The disadvantage of starting <b class="emphasis.bold">bootpd</B
> in
this manner is that it continues to use system resources even when it
is not needed. The preferred way to start <b class="emphasis.bold">bootpd</B
> is from
<b class="emphasis.bold">inetd</B
>.  To start it from <b class="emphasis.bold">inetd</B
> on a Slackware 96 Linux
system, uncomment the <code class="literal">bootps</CODE
> entry in the <em class="emphasis">inetd.conf</EM
><a class="indexterm" name="AUTOID-11800"></A
>
file and correct the path and daemon name.
[10]
The completed <em class="emphasis">inetd.conf</EM
> entry is:&#13;</P
><blockquote class="footnote"><p class="para">[10] The Slackware 96 <em class="emphasis">inetd.conf</EM
> file attempts to start
<b class="emphasis.bold">in.bootpd</B
> instead of <b class="emphasis.bold">bootpd</B
>, which is the actual name of
the daemon on that system. I'm sure this will be corrected in later
releases of Slackware.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">bootps    dgram     udp  wait root /usr/sbin/bootpd    bootpd</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;This entry tells <b class="emphasis.bold">inetd</B
> to listen to UDP port 67 identified as<a class="indexterm" name="AUTOID-11812"></A
><a class="indexterm" name="AUTOID-11815"></A
>
bootps in the <em class="emphasis">/etc/services</EM
> file and, if it hears data on
that port, to run <em class="emphasis">/usr/sbin/bootpd</EM
> as user <em class="emphasis">root</EM
>. Once the line
is added to the <em class="emphasis">inetd.conf</EM
> file, send a SIGHUP to <b class="emphasis.bold">inetd</B
> to
force it to read the new configuration, as in this example:</P
><p class="para"><blockquote class="screen"><pre class="screen"># <b class="emphasis.bold">ps -acx | grep inetd</B
>
  93 ?  S    0:00 inetd
# <b class="emphasis.bold">kill -HUP 93</B
></PRE
></BLOCKQUOTE
></P
><p class="para">If your systems does not include BOOTP software, don't panic:
<b class="emphasis.bold">bootpd</B
> is available from the Internet. The same software found
in the Linux system can be downloaded in the <em class="emphasis">bootp-DD2.4.3.tar</EM
><a class="indexterm" name="AUTOID-11829"></A
>
file. Download and untar the source code. <b class="emphasis.bold">su</B
> to <em class="emphasis">root</EM
> and
compile the server software with <b class="emphasis.bold">make</B
>. The Makefile has
entry points for several different UNIX architectures. (For our sample
Solaris system, we use the <em class="emphasis">sunos5gcc</EM
> entry point.) If the software
compiles without errors do a <b class="emphasis.bold">make install</B
> to install the
executable daemon in the <em class="emphasis">/usr/sbin</EM
> directory. Do a <b class="emphasis.bold">make<a class="indexterm" name="AUTOID-11838"></A
>
install.man</B
> to install the manpages in <em class="emphasis">/usr/local/man</EM
>.</P
><p class="para">You should define all network services, including BOOTP, in the
<em class="emphasis">/etc/services</EM
> file. Add the following lines to your
<em class="emphasis">/etc/service</EM
> file when <b class="emphasis.bold">bootpd</B
> is installed:</P
><p class="para"><blockquote class="screen"><pre class="screen">bootps            67/udp                          # bootp server
bootpc            68/udp                          # bootp client</PRE
></BLOCKQUOTE
></P
><p class="para">Finally, make sure that you include <b class="emphasis.bold">bootpd</B
> in the<a class="indexterm" name="AUTOID-11849"></A
><a class="indexterm" name="AUTOID-11852"></A
>
<em class="emphasis">/etc/inetd.conf</EM
> file as shown earlier in this section. Once it
is included and <b class="emphasis.bold">inetd</B
> is reloaded with a SIGHUP signal, you are<a class="indexterm" name="AUTOID-11856"></A
>
ready to run.</P
><p class="para">Installing the daemon is only the beginning. The real challenge of
managing a BOOTP server is providing the configuration information that
clients need. The package found on Linux systems and in the
<em class="emphasis">bootp-DD2.4.3.tar</EM
> file is the BOOTP daemon from Carnegie Mellon
University (CMU). It has its own unique configuration commands. Other
BOOTP server implementations use other configuration commands.
However, the type of information provided by BOOTP is the same
regardless of the implementation.</P
><p class="para">The CMU server reads its configuration from the <em class="emphasis">/etc/bootptab</EM
><a class="indexterm" name="AUTOID-11862"></A
><a class="indexterm" name="AUTOID-11865"></A
>
file. The syntax used in this file is very similar to the syntax of
the <em class="emphasis">/etc/termcap</EM
> and the <em class="emphasis">/etc/printcap</EM
> files. Each
<b class="emphasis.bold">bootpd</B
> configuration parameter is two characters long and is
separated from the other parameters by a colon. The general format of<a class="indexterm" name="AUTOID-11870"></A
><a class="indexterm" name="AUTOID-11873"></A
>
a <em class="emphasis">bootptab</EM
> entry is:</P
><p class="para"><blockquote class="screen"><pre class="screen">hostname:pa=value:pa=value:pa=value...</PRE
></BLOCKQUOTE
></P
><p class="para">Where <em class="emphasis">hostname</EM
> is the hostname of the client, <em class="emphasis">pa</EM
> is the
two character parameter name, and <em class="emphasis">value</EM
> is the value assigned to
that parameter for this client.</P
><p class="para">Newline characters separate each client's entry. If an entry spans
multiple lines, the newline character at the end of each line must be
escaped with a backslash (\). Comments in the <em class="emphasis">bootptab</EM
> file<a class="indexterm" name="AUTOID-11885"></A
><a class="indexterm" name="AUTOID-11887"></A
><a class="indexterm" name="AUTOID-11889"></A
><a class="indexterm" name="AUTOID-11891"></A
>
begin with a sharp sign (#). 
<a class="xref" href="#TCP2-CH-9-TAB-2" title="bootptab Configuration Parameters">Table 9.3</A
>
contains a list of the
<em class="emphasis">bootptab</EM
> configuration parameters.</P
><table class="table"><caption class="table"><a class="title" name="TCP2-CH-9-TAB-2">Table 9.3: bootptab Configuration Parameters</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Parameter</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Description</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Example</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">bf</TD
><td class="entry" rowspan="1" colspan="1">Bootfile</TD
><td class="entry" rowspan="1" colspan="1">:bf=null</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">bs</TD
><td class="entry" rowspan="1" colspan="1">Bootfile size</TD
><td class="entry" rowspan="1" colspan="1">:bs=22050</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">cs</TD
><td class="entry" rowspan="1" colspan="1">Cookie servers list</TD
><td class="entry" rowspan="1" colspan="1">:cs=172.16.3.7</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">df</TD
><td class="entry" rowspan="1" colspan="1">Dump file</TD
><td class="entry" rowspan="1" colspan="1">:df=/var/tmp/bootp_db.dump</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">dn</TD
><td class="entry" rowspan="1" colspan="1">Domain name</TD
><td class="entry" rowspan="1" colspan="1">:dn=nuts.com</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ds</TD
><td class="entry" rowspan="1" colspan="1">Domain name servers list</TD
><td class="entry" rowspan="1" colspan="1">:ds=172.16.35.5</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ef</TD
><td class="entry" rowspan="1" colspan="1">Vendor extension file</TD
><td class="entry" rowspan="1" colspan="1">:ef=/usr/local/xyz.extensions</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">gw</TD
><td class="entry" rowspan="1" colspan="1">Gateways list</TD
><td class="entry" rowspan="1" colspan="1">:gw=128.2.13.1</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ha</TD
><td class="entry" rowspan="1" colspan="1">Hardware address</TD
><td class="entry" rowspan="1" colspan="1">:ha=7FF8100000AF</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">hd</TD
><td class="entry" rowspan="1" colspan="1">Bootfile directory</TD
><td class="entry" rowspan="1" colspan="1">:hd=/usr/boot</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">hn</TD
><td class="entry" rowspan="1" colspan="1">Send hostname boolean</TD
><td class="entry" rowspan="1" colspan="1">:hn</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ht</TD
><td class="entry" rowspan="1" colspan="1">Hardware type</TD
><td class="entry" rowspan="1" colspan="1">:ht=ethernet</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">im</TD
><td class="entry" rowspan="1" colspan="1">Impress servers list</TD
><td class="entry" rowspan="1" colspan="1">:im=172.16.8.12</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ip</TD
><td class="entry" rowspan="1" colspan="1">Host IP address</TD
><td class="entry" rowspan="1" colspan="1">:ip=172.16.11.1</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">lg</TD
><td class="entry" rowspan="1" colspan="1">Log servers list</TD
><td class="entry" rowspan="1" colspan="1">:lg=172.16.12.1</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">lp</TD
><td class="entry" rowspan="1" colspan="1">LPR servers list</TD
><td class="entry" rowspan="1" colspan="1">:lp=172.16.6.6</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ns</TD
><td class="entry" rowspan="1" colspan="1">IEN-116 name servers list</TD
><td class="entry" rowspan="1" colspan="1">:ns=172.16.12.6</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">nt</TD
><td class="entry" rowspan="1" colspan="1">Network Time Protocol server list</TD
><td class="entry" rowspan="1" colspan="1">:nt=172.16.50.30</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ra</TD
><td class="entry" rowspan="1" colspan="1">Reply address list</TD
><td class="entry" rowspan="1" colspan="1">:ra=172.16.12.255</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">rl</TD
><td class="entry" rowspan="1" colspan="1">Resource location servers</TD
><td class="entry" rowspan="1" colspan="1">:rl=172.16.99.35</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">sa</TD
><td class="entry" rowspan="1" colspan="1">TFTP server</TD
><td class="entry" rowspan="1" colspan="1">:sa=172.16.12.1</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">sm</TD
><td class="entry" rowspan="1" colspan="1">Subnet mask</TD
><td class="entry" rowspan="1" colspan="1">:sm=255.255.255.0</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">sw</TD
><td class="entry" rowspan="1" colspan="1">Swap server</TD
><td class="entry" rowspan="1" colspan="1">:sw=172.16.12.56</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">T<em class="emphasis">n</EM
></TD
><td class="entry" rowspan="1" colspan="1">Vendor extension <em class="emphasis">n</EM
></TD
><td class="entry" rowspan="1" colspan="1">:T132=&quot;12345927AD3B&quot;</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">tc</TD
><td class="entry" rowspan="1" colspan="1">Template continuation</TD
><td class="entry" rowspan="1" colspan="1">:tc=default1</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">td</TD
><td class="entry" rowspan="1" colspan="1">Secure TFTP directory</TD
><td class="entry" rowspan="1" colspan="1">:td=/tftpboot</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">to</TD
><td class="entry" rowspan="1" colspan="1">Time offset</TD
><td class="entry" rowspan="1" colspan="1">:to=18000</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ts</TD
><td class="entry" rowspan="1" colspan="1">Time servers list</TD
><td class="entry" rowspan="1" colspan="1">:ts=172.16.12.1</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">vm</TD
><td class="entry" rowspan="1" colspan="1">Vendor magic cookie selector</TD
><td class="entry" rowspan="1" colspan="1">:vm=auto</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">yd</TD
><td class="entry" rowspan="1" colspan="1">NIS domain name</TD
><td class="entry" rowspan="1" colspan="1">:yd=nuts</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ys</TD
><td class="entry" rowspan="1" colspan="1">NIS server</TD
><td class="entry" rowspan="1" colspan="1">:ys=172.16.12.1</TD
></TR
></TBODY
></TABLE
><p class="para">Every parameter in 
<a class="xref" href="#TCP2-CH-9-TAB-2" title="bootptab Configuration Parameters">Table 9.3</A
>
that has the word &quot;list&quot; in its
description accepts a list of whitespace-separated values. For
example, the name server list is defined using the <em class="emphasis">ds</EM
> parameter
in this format: <b class="emphasis.bold">:ds=172.16.12.1 172.16.7.3:</B
>. One parameter in
the table, <em class="emphasis">hn</EM
>, is a Boolean. If it is specified, the server
sends the <em class="emphasis">hostname</EM
> from the <em class="emphasis">bootptab</EM
> entry to the client.
As a Boolean <em class="emphasis">hn</EM
> does not take any values, but all the other
parameters do.</P
><p class="para">Use these parameters to configure TCP/IP for each client on your
network. The following sample <em class="emphasis">bootptab</EM
> file defines the domain
name, name servers, the default routers, the Ethernet addresses, the
hostnames, the IP addresses, the print servers, and the subnet masks
for three different systems. (Don't worry about the details yet; each
command will be explained later.)</P
><p class="para"><blockquote class="screen"><pre class="screen">#  /etc/bootptab file for nuts.com
acorn:\
     :hd=/usr/boot:bf=null:\
     :ds=172.16.12.1 172.16.3.5:\
     :sm=255.255.255.0:\
     :lp=172.16.12.1:\
     :gw=172.16.3.25:\
     :ht=1:ha=0080c7aaa804:\
     :dn=nuts.com:hn:ip=172.16.3.4:
peanut:\
     :hd=/usr/boot:bf=null:\
     :ds=172.16.12.1 172.16.3.5:\
     :sm=255.255.255.0:\
     :lp=172.16.12.1:\
     :gw=172.16.12.1:\
     :ht=1:ha=0800200159C3:\
     :dn=nuts.com:hn:ip=172.16.12.2:
hickory:\
     :hd=/usr/boot:bf=null:\
     :ds=172.16.12.1 172.16.3.5:\
     :sm=255.255.255.0:\
     :lp=172.16.12.1:\
     :gw=172.16.3.25:\
     :ht=1:ha=0000c0a15e10:\
     :dn=nuts.com:hn:ip=172.16.3.16</PRE
></BLOCKQUOTE
></P
><p class="para">Notice that much of the information is repetitive. All of the clients
use the same domain name, name servers, subnet masks, and print
servers. Systems on the same subnets also use the same default
routers. It is possible to define repetitive information in templates
that are then referenced in individual client configurations. The
following example uses a global template that defines the domain name,<a class="indexterm" name="AUTOID-12043"></A
>
name servers, subnet mask, and print servers. The template is then
referenced in each of the subsequent configurations by using the
<b class="emphasis.bold">tc</B
> parameter.</P
><p class="para"><blockquote class="screen"><pre class="screen">#  /etc/bootptab file for nuts.com
defaults:\
     :hd=/usr/boot:\
     :dn=nuts.com:ds=172.16.12.1 172.16.3.5:\
     :sm=255.255.255.0:\
     :lp=172.16.12.1:\
     :hn:
acorn:\
     :tc=defaults:\
     :bf=null:\
     :gw=172.16.3.25:\
     :ht=1:ha=0080c7aaa804:\
     :ip=172.16.3.4:
peanut:\
     :tc=defaults:\
     :bf=null:\
     :gw=172.16.12.1:\
     :ht=1:ha=0800200159C3:\
     :ip=172.16.12.2:
hickory:\
     :tc=defaults:\
     :bf=null:\
     :gw=172.16.3.25:\
     :ht=1:ha=0000c0a15e10:\
     :ip=172.16.3.16:</PRE
></BLOCKQUOTE
></P
><p class="para">The first entry, <em class="emphasis">defaults</EM
>, is the template. The remaining entries
are client entries. The template defines information used by all of
the hosts and the specific client entries define information unique to
those hosts. Looking at the template and at one of the host entries
shows a full configuration. First, let's examine the meaning of each
parameter in the <em class="emphasis">defaults</EM
> template:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">defaults:\</EM
></DT
><dd class="listitem"><p class="para">The name by which this template is referenced is <em class="emphasis">defaults</EM
>. A
template can be assigned any name as long as it doesn't conflict with
any hostname in the <em class="emphasis">bootptab</EM
> file.</P
></DD
><dt class="term"><em class="emphasis">:hd=/usr/boot:\</EM
></DT
><dd class="listitem"><p class="para">The first line of the <em class="emphasis">defaults</EM
> template defines the boot<a class="indexterm" name="AUTOID-12066"></A
>
directory (<em class="emphasis">hd</EM
>). BOOTP clients can be diskless systems that boot
from the server. The value provided by <b class="emphasis.bold">hd</B
>  is used by a diskless
system to retrieve the boot image. This directory is not used by our
clients, but could be needed if a terminal server, router, or other
diskless device was added to the network.</P
></DD
><dt class="term"><em class="emphasis">:dn=nuts.com:ds=172.16.12.1 172.16.3.5:\</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-12076"></A
>This line defines the domain name and the addresses of the domain name<a class="indexterm" name="AUTOID-12080"></A
>
servers. The <b class="emphasis.bold">dn</B
> parameter defines the domain name as
<em class="emphasis">nuts.com</EM
>. The <b class="emphasis.bold">ds</B
> parameter defines the IP addresses of the
name servers used on this network.</P
></DD
><dt class="term"><em class="emphasis">:sm=255.255.255.0:\</EM
></DT
><dd class="listitem"><p class="para">The <b class="emphasis.bold">sm</B
> parameter defines this network's subnet mask.<a class="indexterm" name="AUTOID-12093"></A
></P
></DD
><dt class="term"><em class="emphasis">:lp=172.16.12.1:\</EM
></DT
><dd class="listitem"><p class="para">This parameter defines the IP address of an <b class="emphasis.bold">lpr</B
> server that is<a class="indexterm" name="AUTOID-12103"></A
>
available to every system on the network.</P
></DD
><dt class="term"><em class="emphasis">:hn:</EM
></DT
><dd class="listitem"><p class="para">The <b class="emphasis.bold">hn</B
> parameter tells the server to send the hostname to the<a class="indexterm" name="AUTOID-12111"></A
>
client. When this parameter is incorporated in the <em class="emphasis">peanut</EM
> entry
as part of this template, the server sends the name <em class="emphasis">peanut</EM
> to the
client. When it is incorporated in the entry for <em class="emphasis">acorn</EM
>, the
name <em class="emphasis">acorn</EM
> is sent. Because this is the last line in the
<em class="emphasis">defaults</EM
> template, it does not end with a backslash.</P
></DD
></DL
><p class="para">Now let's look at the parameters in a client entry:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">acorn:\</EM
></DT
><dd class="listitem"><p class="para">The hostname associated with this client entry is <em class="emphasis">acorn</EM
>.</P
></DD
><dt class="term"><em class="emphasis">:tc=defaults:\</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-12133"></A
>This <b class="emphasis.bold">tc</B
> parameter tells <b class="emphasis.bold">bootpd</B
> to incorporate all of the
information defined in the <em class="emphasis">defaults</EM
> template into this client
entry. To use multiple templates in a client entry, include multiple
<b class="emphasis.bold">tc</B
> parameters. Exclude an individual parameter from a template
by specifying the parameter preceded by an at-sign (@). For example,<a class="indexterm" name="AUTOID-12139"></A
><a class="indexterm" name="AUTOID-12142"></A
>
to exclude the <b class="emphasis.bold">lpr</B
> server parameter provided by the <em class="emphasis">defaults</EM
>
template from inclusion in the <em class="emphasis">acorn</EM
> configuration, we could have
added <b class="emphasis.bold">:@lp:</B
> to the <em class="emphasis">acorn</EM
> entry.</P
></DD
><dt class="term"><em class="emphasis">:bf=null:\</EM
></DT
><dd class="listitem"><p class="para">The <b class="emphasis.bold">bf</B
> parameter defines the name of the boot file for diskless<a class="indexterm" name="AUTOID-12156"></A
>
systems. In the sample, the parameter intentionally points to a file
that does not exist because the client has a disk and we want it to
boot from its local disk. When a client has its own disk, a value is
not required in this field. However, in this case, the value is
commonly set to &quot;null&quot; to ensure that if the client accidently has a
boot file value in its BOOTREQUEST packet, the value will be<a class="indexterm" name="AUTOID-12159"></A
>
overwritten by the server.</P
></DD
><dt class="term"><em class="emphasis">:gw=172.16.3.25:\</EM
></DT
><dd class="listitem"><p class="para">The default gateway for this subnet is 172.16.3.25.</P
></DD
><dt class="term"><em class="emphasis">:ht=1:ha=0080c7aaa804:\</EM
></DT
><dd class="listitem"><p class="para">The <b class="emphasis.bold">ht</B
> parameter identifies the type of hardware used for the
client's network interface. The hardware type is identified by a
number or by a keyword. There are several possible values but only two
are meaningful: <b class="emphasis.bold">ht</B
> will be either 1 for Ethernet or 6 for Token
Ring. See the <em class="emphasis">bootptab</EM
> manpage if you're interested in the
other, rarely used, values.</P
><p class="para">The <b class="emphasis.bold">ha</B
> parameter defines the physical hardware address associated
with the client's network interface. The example shows an Ethernet
address. The type of address provided must be consistent with the
hardware type defined by the <b class="emphasis.bold">ht</B
> parameter. These two parameters
always appear together in a <em class="emphasis">bootptab</EM
> file.</P
></DD
><dt class="term"><em class="emphasis">:ip=172.16.3.4:\</EM
></DT
><dd class="listitem"><p class="para">The IP address for this client is 172.16.3.4.</P
></DD
></DL
><p class="para">With only three clients in the example, the benefit of using templates may
not be immediately clear. The benefits of saving time, reducing typing,
and avoiding errors are clearer when a large number of systems are
involved.</P
><p class="para">It is possible to configure a BOOTP server to handle a very large
number of clients. However, if a large number of clients rely on a
single boot server and all of the clients attempt to boot at one time,
the server can be overwhelmed.<a class="indexterm" name="AUTOID-12185"></A
>
This might happen in the case of a power outage. There are two<a class="indexterm" name="AUTOID-12187"></A
>
mitigating fators: Because most clients cache the configuration
provided by the server in a local disk file, they are not completely
dependent on the server; and the BOOTP protocol includes back-off<a class="indexterm" name="AUTOID-12189"></A
><a class="indexterm" name="AUTOID-12191"></A
>
algorithms that avoid contention problems. Still, it is possible for
an overloaded server to cause a significant delay when booting its
clients. One way to avoid problems is to have several boot
servers. One server for each subnet is a good design because it
eliminates the need to pass BOOTP information through a router, which
requires a special configuration.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-9-SECT-4.0.1">9.4.1 BOOTP gateway </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-12197"></A
><a class="indexterm" name="AUTOID-12199"></A
>Normally a BOOTREQUEST packet is not forwarded between networks
because it is transmitted from the client using the limited broadcast
address&nbsp;-  255.255.255.255. According to the RFCs, the limited
broadcast address should not be forwarded, though it is possible to
configure some routers to do so. The CMU BOOTP software provides a
BOOTP gateway program that eliminates the need to create a special
router configuration and allows you to put the configuration server on
a different subnet from the BOOTP clients. The BOOTP gateway is
<b class="emphasis.bold">bootpgw</B
>.</P
><p class="para">If your system includes BOOTP software, you may already have
<b class="emphasis.bold">bootpgw</B
>. Linux includes <b class="emphasis.bold">bootpgw</B
>. If your system doesn't
have it, it will when you download and install the
<em class="emphasis">bootp-2.4.3.tar</EM
> file.</P
><p class="para"><b class="emphasis.bold">bootpgw</B
> is run as an alternative to <b class="emphasis.bold">bootpd</B
>. Both of these
programs listen to the same port. The <em class="emphasis">inetd.conf</EM
> entry for
<b class="emphasis.bold">bootpgw</B
> is:</P
><p class="para"><blockquote class="screen"><pre class="screen">bootps  dgram  udp  wait  root  /usr/sbin/bootpgw bootpgw 172.16.12.1</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-12214"></A
><b class="emphasis.bold">inetd</B
> listens to the bootps port and starts the <b class="emphasis.bold">bootpgw</B
>
program when data is received on that port. (Adding the
bootps port to <em class="emphasis">/etc/services</EM
> is covered above in the
<b class="emphasis.bold">bootpd</B
> installation.) When <b class="emphasis.bold">bootpgw</B
> starts, it reads the
hostname or address of the BOOTP server from the command line. In the
example, the remote BOOTP server is 172.16.12.1. If the data received
on the bootps port is a BOOTREQUEST packet, <b class="emphasis.bold">bootpgw</B
> retransmits
the BOOTREQUEST as a unicast packet addressed directly to the remote
configuration server. </P
><p class="para">At least one system on each subnet must run either <b class="emphasis.bold">bootpd</B
> or
<b class="emphasis.bold">bootpgw</B
> to either reply to BOOTREQUEST packets or to forward them
to a system that will. It is not possible to run both <b class="emphasis.bold">bootpd</B
> and
<b class="emphasis.bold">bootpgw</B
> on one system and there is no reason to try. If the
subnet has a local BOOTP server up and running, there is no need to
forward BOOTREQUEST packets to another network. Use <b class="emphasis.bold">bootpgw</B
> on
very small subnets that do not justify a local configuration server.

On all other subnets, use a local BOOTP server.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-9-SECT-4.0.2">9.4.2 BOOTP extensions </A
></H3
><p class="para">As described in <a class="xref" href="ch03_01.htm" title="Network Services">Chapter 3</A
>, Dynamic Host Configuration Protocol<a class="indexterm" name="AUTOID-12233"></A
>
(DHCP) is based on the Bootstrap Protocol (BOOTP).  As you might
expect, the DHCP enhancements are included in the<a class="indexterm" name="AUTOID-12236"></A
>
<b class="emphasis.bold">bootp-2.4.3.tar</B
> file. Set the <b class="emphasis.bold">-DDYNAMIC</B
> option in the
Makefile to compile the DHCP extensions into <b class="emphasis.bold">bootpd</B
>. The DHCP
extensions add the following <em class="emphasis">/etc/bootptab</EM
> configuration
parameters:<a class="indexterm" name="AUTOID-12242"></A
><a class="indexterm" name="AUTOID-12246"></A
></P
><dl class="variablelist"><dt class="term"><b class="emphasis.bold">:T254=</B
><code class="replaceable"><i>number</I
></CODE
></DT
><dd class="listitem"><p class="para">The <code class="replaceable"><i>number</I
></CODE
> of addresses that can be dynamically assigned, written
in hex.</P
></DD
><dt class="term"><b class="emphasis.bold">:T253=</B
><code class="replaceable"><i>mode</I
></CODE
></DT
><dd class="listitem"><p class="para">The <code class="replaceable"><i>mode</I
></CODE
> in which dynamic addresses are written into the updated<a class="indexterm" name="AUTOID-12264"></A
><a class="indexterm" name="AUTOID-12268"></A
>
<em class="emphasis">bootptab</EM
> file. If the mode is 0, addresses are written as IP
addresses. If the mode is 1, addresses must be written as hostnames.
If a hostname can't be found for a dynamically assigned address, the
address assignment is not made when the mode is set to 1. If the mode
is 2, the dynamic address is written to the <em class="emphasis">bootptab</EM
> file as a
hostname if there is a valid hostname for the address. If there is
not, the IP address is used. Mode 2 is the default and usually should
not be changed.</P
></DD
><dt class="term"><b class="emphasis.bold">:T250=</B
><code class="replaceable"><i>string</I
></CODE
></DT
><dd class="listitem"><p class="para">The <code class="replaceable"><i>string</I
></CODE
> contains any additional configuration settings that should
be provided to the DHCP clients in the form of <em class="emphasis">bootptab</EM
> parameters.</P
></DD
><dt class="term"><b class="emphasis.bold">:dl=</B
><code class="replaceable"><i>time</I
></CODE
></DT
><dd class="listitem"><p class="para">The amount of <code class="replaceable"><i>time</I
></CODE
> that the client can keep the address. The client
must renew its request for the address before the amount of time specified
with the <b class="emphasis.bold">dl</B
> parameter has elapsed. If the client does not renew<a class="indexterm" name="AUTOID-12289"></A
>
its lease on the address, the server is free to assign the address to
another client. If the <b class="emphasis.bold">dl</B
> parameter is not used, the address is
permanently assigned.</P
></DD
></DL
><p class="para">To use these parameters in the <em class="emphasis">bootptab</EM
> file, create a special entry
in the file that begins with the string <b class="emphasis.bold">.dynamic-</B
><em class="emphasis">n</EM
>. <em class="emphasis">n</EM
> in
this string is a number from 1 to 32767. An example should make this
clear. Assume that we want to automatically assign the addresses from
172.16.12.64 to 172.16.12.192, and that we want to manually assign the
other addresses. We might enter the following in the <em class="emphasis">bootptab</EM
> file:</P
><p class="para"><blockquote class="screen"><pre class="screen">  .dynamic-1:ip=172.16.12.64:T254=0x80:T250=&quot;gw=172.16.12.1:ds=172.16.12.3&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">This defines a dynamic address group starting at 172.16.12.64. The group
contains 128 (80 hex) available addresses. Tell clients assigned an address
from this group to use 172.16.12.3 as a name server
and to use 172.16.12.1 as a gateway.</P
><p class="para">When <b class="emphasis.bold">bootpd</B
> receives an address request from a client it creates an
entry for the client using the information defined above, and physically
appends that new entry to the end of the <em class="emphasis">bootptab</EM
> file. The first
client request adds the following entry to the end of the <em class="emphasis">bootptab</EM
>
file:</P
><p class="para"><blockquote class="screen"><pre class="screen">172.16.12.64:ha=0080c7aaa804:gw=172.16.12.1:ds=172.16.12.3</PRE
></BLOCKQUOTE
></P
><p class="para">To assign the client a hostname instead of just an IP address, add
hostnames to the domain server database for all of the addresses in the
address group.</P
><p class="para">These extensions help <b class="emphasis.bold">bootpd</B
> provide services to DHCP clients.
There are also software packages available that have been designed from
the beginning to be DHCP servers.</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_03.htm#TCP2-CH-9-SECT-3.0.1" title="9.3 Network Information Service "><img src="../gifs/txtpreva.gif" alt="Previous: 9.3 Network Information Service " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_05.htm#TCP2-CH-9-SECT-5.1" title="9.5 DHCP "><img src="../gifs/txtnexta.gif" alt="Next: 9.5 DHCP " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">9.3 Network Information Service </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">9.5 DHCP </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
