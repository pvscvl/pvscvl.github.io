<html><head>
<title>[Chapter 10] 10.7 Modifying a sendmail.cf File </TITLE>
<meta name="DC.title" content="TCP/IP Network Administration"><meta name="DC.creator" content="Craig Hunt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-02-04T01:39:48Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-322-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" title="10. sendmail "><link rel="prev" href="ch10_06.htm#TCP2-CH-10-SECT-6.2.1" title="10.6 Rewriting the Mail Address "><link rel="next" href="ch10_08.htm#TCP2-CH-10-SECT-8.2" title="10.8 Testing sendmail.cf "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="TCP/IP Network Administration" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="TCP/IP Network Administration"><area shape="RECT" coords="467,0,514,18" href="../search/tsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_06.htm#TCP2-CH-10-SECT-6.2.1" title="10.6 Rewriting the Mail Address "><img src="../gifs/txtpreva.gif" alt="Previous: 10.6 Rewriting the Mail Address " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 10<br>sendmail </FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_08.htm#TCP2-CH-10-SECT-8.2" title="10.8 Testing sendmail.cf "><img src="../gifs/txtnexta.gif" alt="Next: 10.8 Testing sendmail.cf " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="TCP2-CH-10-SECT-7">10.7 Modifying a sendmail.cf File </A
></H2
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CF-FILE-MODIFYING"></A
>In this section we put into practice everything we discussed about
sample configuration files&nbsp;- their structure and the commands used
to build them. We'll modify the prototype configuration file,<a class="indexterm" name="AUTOID-14635"></A
>
<em class="emphasis">linux.smtp.cf</EM
>, for use on <em class="emphasis">peanut.nuts.com</EM
>. We've chosen
to modify this file because its configuration is closest to the
configuration we need for <em class="emphasis">peanut.nuts.com</EM
>. <em class="emphasis">peanut</EM
> is a Linux
workstation on a TCP/IP Ethernet, and it uses SMTP mail and domain
name service (DNS).</P
><p class="para">The following sections are titled according to the sections of the file,
and they describe the modifications we'll make to the file, section by
section. Remember that other <em class="emphasis">sendmail.cf</EM
> files will probably use
different section titles, but the basic information provided in the
configuration will be the same.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-10-SECT-7.1">10.7.1 Modifying Local Information </A
></H3
><p class="para"><a class="indexterm" name="TCP2-CH-10-IX-SENDMAIL-CF-FILE-MODIFYING-LOCAL-INFORMATION"></A
>The first line in the local information section of the <em class="emphasis">sendmail.cf</EM
>
file defines class w.
[21]<a class="indexterm" name="AUTOID-14654"></A
>
Class w is the full set of host names for which
this system accepts mail. Use the class w command to add hostnames to
this set. sendmail initializes this class to the value in macro w
(<b class="emphasis.bold">$w</B
>), which is the hostname of this computer. On most systems that is
enough; sendmail is able to correctly identify most of the other
hostnames for which it should accept mail by querying DNS.<a class="indexterm" name="AUTOID-14657"></A
>
The w class needs only to identify systems that expect
this host to accept mail for
them and that do not have CNAME<a class="indexterm" name="AUTOID-14660"></A
><a class="indexterm" name="AUTOID-14662"></A
><a class="indexterm" name="AUTOID-14664"></A
>
or MX entries in the DNS that point to
this host. You'll need to add a hostname to class w, or an MX record
to DNS, if you see the following mail error:</P
><blockquote class="footnote"><p class="para">[21] The full text of the local information section is shown in <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
>.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">mil-gw.nuts.com. config error: mail loops back to me (MX problem?)</PRE
></BLOCKQUOTE
></P
><p class="para">In our sample, we accept the <b class="emphasis.bold">Cw</B
> command as written, and let sendmail
define the value for w internally. This is the most common method for
desktop systems like <em class="emphasis">peanut</EM
>. On the system <em class="emphasis">almond</EM
>, which
is also known by the name <em class="emphasis">mil-gw</EM
>, we would add values to class w
as follows:</P
><p class="para"><blockquote class="screen"><pre class="screen">Cwlocalhost mil-gw mil-gw.nuts.com</PRE
></BLOCKQUOTE
></P
><p class="para">Now mail addressed to <em class="emphasis">user@mil-gw.nuts.com</EM
> would be accepted by
<em class="emphasis">almond</EM
> and not rejected as being addressed to the wrong host.</P
><p class="para">Some mail servers might need to be configured to accept mail for many
different hostnames. In that case you may want to load class w from a
file containing all of the hostnames. Do that with the <b class="emphasis.bold">F</B
> command.</P
><p class="para">No modification is necessary for the <b class="emphasis.bold">j</B
> macro definition because,
on this system, sendmail obtains a fully qualified domain name for the
<b class="emphasis.bold">j</B
> macro from DNS. On some systems this is the case; on other
systems sendmail obtains the hostname without the domain extension. If
<b class="emphasis.bold">j</B
> doesn't contain the full name, initialize <em class="emphasis">j</EM
> with the hostname
(<b class="emphasis.bold">$w</B
>) and the domain name. In the sample file we would do this by
&quot;uncommenting&quot; the <b class="emphasis.bold">Dj</B
> command and editing the domain string to
be <em class="emphasis">nuts.com</EM
>.  However, there is no need to do this because
<b class="emphasis.bold">j</B
> has the correct value.</P
><p class="para">To test if <b class="emphasis.bold">j</B
> is set to the correct value on your system, run
sendmail with the <b class="emphasis.bold">-bt</B
> option and the debug level set to 0.4.
In response to this, sendmail displays several lines of information,
including the value of <b class="emphasis.bold">j</B
>. In the example below, sendmail
displays the value <em class="emphasis">peanut.nuts.com</EM
> for <b class="emphasis.bold">j</B
>. If it displayed
only <em class="emphasis">peanut</EM
>, we would edit <em class="emphasis">sendmail.cf</EM
> to correct the
value for <b class="emphasis.bold">j</B
>.</P
><p class="para"><blockquote class="screen"><pre class="screen"># sendmail -bt -d0.4
Version 8.8.5
 Compiled with: LOG MATCHGECOS MIME8TO7 NAMED_BIND NDBM
                NETINET NETUNIX NEWDB SCANF USERDB XDEBUG
canonical name: peanut.nuts.com
 UUCP nodename: peanut
        a.k.a.: peanut.nuts.com
        a.k.a.: [172.16.12.2]

============ SYSTEM IDENTITY (after readcf) ============
      (short domain name) $w = peanut
  (canonical domain name) $j = peanut.nuts.com

         (subdomain name) $m = nuts.com
              (node name) $k = peanut
========================================================

ADDRESS TEST MODE (ruleset 3 NOT automatically invoked)
Enter &lt;ruleset&gt; &lt;address&gt;
&gt; ^D</PRE
></BLOCKQUOTE
></P
><p class="para">The next line in the local information section defines class P. In our
sample configuration file, class P stores the names of some special
mail routing domains. These pseudo-domain names allow us to address
users who are not on the Internet with Internet style email addresses.
For example, mail can be addressed using the normal UUCP &quot;bang&quot; syntax,<a class="indexterm" name="AUTOID-14701"></A
>
e.g., <em class="emphasis">ora!los!craig</EM
>, or it can be addressed in a pseudo-Internet
format, e.g., <em class="emphasis">craig@los.ora.uucp</EM
>. These mail routing domains
simplify the address that the user enters, and route the mail to the
correct mail relay host. However, pseudo-domains<a class="indexterm" name="AUTOID-14706"></A
>
are rarely needed because
most mailers now support standard Internet-style addresses.<a class="indexterm" name="AUTOID-14708"></A
>
The class P definition in <em class="emphasis">linux.smtp.cf</EM
> does not
require any modification.
The only value assigned as a pseudo-domain is a dot (.), which is used
in this <em class="emphasis">sendmail.cf</EM
> file to identify canonical domain names.</P
><p class="para">The configuration file has macro definitions for several mail relays.
None of these are assigned a value in our sample file. You only need
a relay host if your system cannot deliver the mail because it lacks
capability or connectivity. UNIX systems do not lack capability, but<a class="indexterm" name="AUTOID-14714"></A
>
a firewall might limit connectivity. Some sites use a mail relay so
that only one systems needs a full <em class="emphasis">sendmail.cf</EM
> configuration.
The other hosts at the site simply forward their mail to the smart host
for delivery. If this is the configuration policy of your site, enter
the name of the mail relay as the &quot;smart&quot; relay. For example:</P
><p class="para"><blockquote class="screen"><pre class="screen">DSrelay.nuts.com</PRE
></BLOCKQUOTE
></P
><p class="para">We don't enter anything in any of the relay settings on <em class="emphasis">peanut</EM
>. This
desktop system will handle all its own mail. Hey, that's why we run UNIX!</P
><p class="para">The local information section in the sample file also includes four key
file definitions. Three of these <b class="emphasis.bold">K</B
> commands are commented out,
and all four of them can be ignored. The one key file definition that
is not commented out defines the <em class="emphasis">dequote</EM
> database,<a class="indexterm" name="AUTOID-14725"></A
>
which is an
internal sendmail database used to remove quotes from within email
addresses. The <em class="emphasis">user</EM
> key file, which is commented out, is also an
internal database. It is used to check if a username exists. The last
two databases exist only if you create them. The <em class="emphasis">domaintable</EM
><a class="indexterm" name="AUTOID-14729"></A
>
is used to rewrite domain names and the <em class="emphasis">mailertable</EM
> database<a class="indexterm" name="AUTOID-14732"></A
>
is used to send mail addressed to a specific domain through a particular mailer
to a specific remote host.</P
><p class="para">The version number doesn't <em class="emphasis">require</EM
> modification&nbsp;- but it's a good
idea to keep track of the changes you make to your sendmail
configuration, and this is the place to do it. Each time you modify the
configuration, change the version number by adding your own revision
number. At the same time,
enter a comment in the file describing the changes you made. Usually,
this is the last change made to the files so the comments reflect
all changes. For example, the original version number
section in the <em class="emphasis">linux.smtp.cf</EM
> file is:</P
><p class="para"><blockquote class="screen"><pre class="screen">######################
#   Version Number   #
######################

DZ8.7.3</PRE
></BLOCKQUOTE
></P
><p class="para">After we have finished all of our modifications, it will
contain:</P
><p class="para"><blockquote class="screen"><pre class="screen">######################
#   Version Number   #
######################
#  R1.0 - modified for peanut by Craig
#       - cleaned up the comments in the local info section
#  R1.1 - modified macro M to use nuts.com instead of the
#         hostname in outgoing mail
#  R2.0 - added rule a to S11 &amp; S31 to rewrite to first.last format

DZ8.7.3R2.0</PRE
></BLOCKQUOTE
></P
><p class="para">Finally, we need to understand the purpose of a few other classes and
macros found in this section. The M macro is used to rewrite the sender
host address. Define a value for M to hide the name of the local host
in outbound mail. Classes E and M are both related to macro M. Class
E defines the usernames for which the hostname is not rewritten even
if the M macro is defined. For example, <em class="emphasis">root@peanut.nuts.com</EM
> is
not rewritten to <em class="emphasis">root@nuts.com</EM
> even if M is defined as DMnuts.com.
Class M is defines other hostnames, not just the local hostname,
that should be rewritten to the value of macro M. This is used on mail
servers that might need to rewrite sender addresses for their clients.
For example:</P
><p class="para"><blockquote class="screen"><pre class="screen"># who I masquerade as (null for no masquerading) (see also $=M)
DMnuts.com

# class M: domains that should be converted to $M
CMacorn.nuts.com brazil.nuts.com filbert.nuts.com</PRE
></BLOCKQUOTE
></P
><p class="para">Given the macro M and class M definitions shown above. This host would
rewrite mail from <em class="emphasis">user@brazil.nuts.com</EM
> or <em class="emphasis">user@acorn.nuts.com</EM
>
to <em class="emphasis">user@nuts.com</EM
>. <em class="emphasis">peanut</EM
> is not a server so we won't use
class M. But we will use macro M later in the configuration.</P
><p class="para">We spent lots of time looking at the local information section because
almost everything you will need to do to configure a system can be
done here. We will quickly discuss the other section before getting
into the really challenging task of working with rewrite rules.<a class="indexterm" name="AUTOID-14753"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="TCP2-CH-10-SECT-7.2">10.7.2 Modifying Options </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-14757"></A
>The section, &quot;Options,&quot; defines the sendmail environment.
For example, some of the options specify the file paths used by
sendmail, as in these lines from the <em class="emphasis">linux.smtp.cf</EM
> file:</P
><p class="para"><blockquote class="screen"><pre class="screen"># location of alias file
O AliasFile=/etc/aliases
# location of help file
O HelpFile=/usr/lib/sendmail.hf
# status file
O StatusFile=/etc/sendmail.st
# queue directory
O QueueDirectory=/var/spool/mqueue</PRE
></BLOCKQUOTE
></P
><p class="para">If these paths are correct for your system, don't modify them.
On <em class="emphasis">peanut</EM
> we want to keep the files just where they are, which
is generally the case when you use a <em class="emphasis">sendmail.cf</EM
> file that was
designed for your operating system. In fact, you will probably not need
to change any of the options if you use a configuration file designed
for your operating system. If you're really curious about sendmail
options, see <a class="xref" href="appe_01.htm" title="A sendmail Reference">Appendix E</A
>.</P
><p class="para">The next few sections of the <em class="emphasis">linux.smtp.cf</EM
> file define the
messages' precedences, the trusted users, and the headers. None of
these sections are modified. Following these sections are the rewrite
rules and the mailers. This material is the bulk of the file and the
heart of the configuration. The sample configuration file is designed to
allow SMTP mail delivery on a Linux system running DNS, so we assume no
modifications are required.
We want to test the configuration before copying it into
<em class="emphasis">sendmail.cf</EM
>. We'll save it in a temporary configuration file,
<em class="emphasis">test.cf</EM
>, and use the troubleshooting features of sendmail
to test it.<a class="indexterm" name="AUTOID-14772"></A
>&#13;</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_06.htm#TCP2-CH-10-SECT-6.2.1" title="10.6 Rewriting the Mail Address "><img src="../gifs/txtpreva.gif" alt="Previous: 10.6 Rewriting the Mail Address " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="TCP/IP Network Administration"><img src="../gifs/txthome.gif" alt="TCP/IP Network Administration" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_08.htm#TCP2-CH-10-SECT-8.2" title="10.8 Testing sendmail.cf "><img src="../gifs/txtnexta.gif" alt="Next: 10.8 Testing sendmail.cf " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.6 Rewriting the Mail Address </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.8 Testing sendmail.cf </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
