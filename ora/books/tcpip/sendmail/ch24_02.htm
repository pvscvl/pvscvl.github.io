<html><head>
<title>[Chapter 24] 24.2 Forms of Alias Delivery</TITLE>
<meta name="DC.title" content="sendmail"><meta name="DC.creator" content="Bryan Costales &amp; Eric Allman"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T19:38:08Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-222-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch24_01.htm" title="24. Aliases"><link rel="prev" href="ch24_01.htm" title="24.1 The aliases(5) File"><link rel="next" href="ch24_03.htm" title="24.3 Write a Delivery Agent Script"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="sendmail" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="sendmail"><area shape="RECT" coords="467,0,514,18" href="../search/ssrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch24_01.htm" title="24.1 The aliases(5) File"><img src="../gifs/txtpreva.gif" alt="Previous: 24.1 The aliases(5) File" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 24<br>Aliases</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch24_03.htm" title="24.3 Write a Delivery Agent Script"><img src="../gifs/txtnexta.gif" alt="Next: 24.3 Write a Delivery Agent Script" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="SML2-CH-24-SECT-2">24.2 Forms of Alias Delivery</A
></H2
><p class="para"><a class="indexterm" name="SML2-CH-24-IX-DELIVERY-ALIAS-FORMS-OF"></A
>The right-hand side of an alias entry can take four forms:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="replaceable"><i>local</I
></CODE
>:  <code class="replaceable"><i>user</I
></CODE
>
<code class="replaceable"><i>local</I
></CODE
>:  <code class="replaceable"><i>/file</I
></CODE
>
<code class="replaceable"><i>local</I
></CODE
>:  |<code class="replaceable"><i>program</I
></CODE
>
<code class="replaceable"><i>local</I
></CODE
>:  :include: <code class="replaceable"><i>list</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="replaceable"><i>user</I
></CODE
> specifies final delivery to a user's mail spool file
(via the <em class="emphasis">~/.forward</EM
> file), delivery to a new address (e.g.
<em class="emphasis">user@newsite</EM
>), or one step in further aliasing.
The <code class="replaceable"><i>/file</I
></CODE
> specifies delivery by appending to a file.
The <code class="literal">|</CODE
><code class="replaceable"><i>program</I
></CODE
> specifies delivery by piping the message through
a program.
The <code class="literal">:include:</CODE
> specifies processing of a mailing list.
The first three are covered here. The last is covered in the next chapter.&#13;</P
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-24-SECT-2-1">24.2.1 Delivery to Users</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-22453"></A
>Any address in the list of addresses to the right of the colon that does
not begin with a <code class="literal">/</CODE
> character or a <code class="literal">|</CODE
>
character is considered the address
of a user. The address can be local or remote.</P
><p class="para">If a user address is prefixed
with a backslash character (<code class="literal">\</CODE
>)
[1]
and the address is a local one, all further aliasing is suppressed
(including reading the user's <em class="emphasis">~/.forward</EM
> file). The message is
delivered with the <code class="literal">local</CODE
> delivery agent.&#13;</P
><blockquote class="footnote"><p class="para">[1] Actually, a backslash anywhere in the name causes the same
immediate delivery.</P
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-24-SECT-2-2">24.2.2 Delivery to Files</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-22467"></A
><a class="indexterm" name="SML2-CH-24-IX-APPENDING-TO-FILES"></A
><a class="indexterm" name="AUTOID-22471"></A
>When any of the addresses to the right of a colon in the alias
list begins with a <code class="literal">/</CODE
> character, delivery is made by appending
the mail message to a file.
This is automatic with most configuration files but not with others.
If your configuration file does not automatically recognize
a leading <code class="literal">/</CODE
> character, you will need to add a new rule
near the end of your rule set 0 (see <a class="xref" href="ch29_06.htm#SML2-CH-29-SECT-6-1" title="Rule Set 0">Section 29.6, "Rule Set 0"</A
>). For example,</P
><p class="para"><blockquote class="screen"><pre class="screen">R/$+     $@ $#local $: /$1</PRE
></BLOCKQUOTE
></P
><p class="para">Beginning with V8.7 <em class="emphasis">sendmail</EM
>, any delivery agent for which the
<code class="literal">F=/</CODE
> flag (see <a class="xref" href="ch30_08.htm" title="">Section 30.8.9, F=/ (forward slash)</A
>) is set can also append messages to files.
If you want to disable this ability, delete the <code class="literal">F=/</CODE
> flag from all delivery
agent declarations in your configuration file.</P
><p class="para">In the list of addresses to the right of the colon, <em class="emphasis">sendmail</EM
> considers
any local address that begins with the <code class="literal">/</CODE
> character to be
name of a file.
[2]<a class="indexterm" name="AUTOID-22494"></A
>
Whenever the recipient address is a file, <em class="emphasis">sendmail</EM
>
attempts to deliver the mail message by appending it to the file.
This ability to deliver mail to files is included primarily 
in <em class="emphasis">sendmail</EM
> so that failed mail may be saved to a user's
<em class="emphasis">~/dead.letter</EM
> file. 
It can also be used (through use of aliases)
to deliver mail to other files, but that use is less than optimum, as you
will see.</P
><blockquote class="footnote"><p class="para">[2] Note that an <em class="emphasis">@host</EM
> prevents this interpretation. That is, <em class="emphasis">/a</EM
>
is a file, but <em class="emphasis">/a@host</EM
> is not. This distinction is necessary
for X.400 addresses to be handled correctly. Note that this works only if the
<code class="literal">smtp</CODE
> delivery agent omits the <code class="literal">F=/</CODE
> flag.</P
></BLOCKQUOTE
><p class="para">To deliver to a file, <em class="emphasis">sendmail</EM
> first performs
a <em class="emphasis">fork</EM
>(2) and gives the child the task of delivery. The
<em class="emphasis">fork</EM
> is necessary so that <em class="emphasis">sendmail</EM
> can change its
effective <em class="emphasis">uid</EM
> and <em class="emphasis">gid</EM
>, as we will show.
The child then performs a <em class="emphasis">stat</EM
>(3)
on the file. If the file exists, its file permissions are saved
for later use.
If it doesn't exist, the saved permissions are defaulted to 0666.
Under V8.7 the decision to use <em class="emphasis">stat</EM
>(2) versus <em class="emphasis">lstat</EM
>(2)
to obtain the permissions is determined by the <code class="literal">SafeFileEnvironment</CODE
>
option (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.58, SafeFileEnvironment</A
>).</P
><p class="para">If the saved permissions have any execute bit set, the child
exits with EX_CANTCREAT as defined in <em class="emphasis">&lt;sysexits.h&gt;</EM
>.
If the file has a controlling user
associated with it, any <em class="emphasis">suid</EM
> and <em class="emphasis">sgid</EM
> bits are stripped from
the saved permissions.
If the file was listed in a <em class="emphasis">~/.forward</EM
> file, the controlling
user is the owner of the <em class="emphasis">~/.forward</EM
> file. If it was listed in a
<code class="literal">:include:</CODE
>'d file, the controlling 
user is the owner of the included file.
If the message is being processed from the queue, the controlling
user may be specified in the <code class="literal">qf</CODE
> file (see <a class="xref" href="ch23_09.htm" title="">Section 23.9.2, C line</A
>).</P
><p class="para">Then the queue <code class="literal">df</CODE
> file (see <a class="xref" href="ch23_09.htm" title="">Section 23.9.3, D line</A
>) is opened for reading
(if it is not already open). 
If that file cannot be opened, <em class="emphasis">sendmail</EM
>
prints the following error message but continues to attempt delivery:</P
><p class="para"><blockquote class="screen"><pre class="screen">mailfile: Cannot open <code class="replaceable"><i>df</I
></CODE
> for <code class="replaceable"><i>file</I
></CODE
> from <code class="replaceable"><i>sender</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Here, the <code class="replaceable"><i>df</I
></CODE
> is the name of the queue data file
that cannot be opened. The <code class="replaceable"><i>file</I
></CODE
> is the name of the
file to which <em class="emphasis">sendmail</EM
> is attempting to deliver the
message. The <code class="replaceable"><i>sender</I
></CODE
>
is the address of the sender of the mail message.</P
><p class="para"><a class="indexterm" name="AUTOID-22536"></A
>Next, if the <code class="literal">SafeFileEnvironment</CODE
> option (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.58</A
>)
was declared, <em class="emphasis">sendmail</EM
> performs a <em class="emphasis">chroot</EM
>(2) into the directory
specified. If the <em class="emphasis">chroot</EM
>(2) fails, <em class="emphasis">sendmail</EM
> prints and logs
the following error and the child exits with EX_CANTCREAT:</P
><p class="para"><blockquote class="screen"><pre class="screen">mailfile: Cannot chroot(<code class="replaceable"><i>directory</I
></CODE
>)</PRE
></BLOCKQUOTE
></P
><p class="para">Next, whether the <code class="literal">df</CODE
> file is opened or not, <em class="emphasis">sendmail</EM
>
changes its <em class="emphasis">gid</EM
>: </P
><ul class="itemizedlist"><li class="listitem"><p class="para">If there is a controlling user, <em class="emphasis">sendmail</EM
> sets its <em class="emphasis">gid</EM
> to
that of the controlling user.</P
></LI
><li class="listitem"><p class="para">Otherwise, if the <em class="emphasis">sgid</EM
> bit is set in the file's
saved permissions, <em class="emphasis">sendmail</EM
>
changes its <em class="emphasis">gid</EM
> to that of the group of the file.</P
></LI
><li class="listitem"><p class="para">Otherwise, <em class="emphasis">sendmail</EM
> checks to see whether 
the <code class="literal">U=</CODE
> equate is set for this delivery agent
(see <a class="xref" href="ch30_04.htm" title="">Section 30.4.13, U=</A
>).
If the <code class="literal">U=</CODE
> equate is set, <em class="emphasis">sendmail</EM
> changes its <em class="emphasis">gid</EM
>
to that specified.</P
></LI
><li class="listitem"><p class="para">Otherwise, <em class="emphasis">sendmail</EM
> changes its
<em class="emphasis">gid</EM
> to that specified by the <code class="literal">DefaultUser</CODE
> (<code class="literal">g</CODE
>) option
(see <a class="xref" href="ch34_08.htm" title="">Section 34.8.15, DefaultUser (g)(u)</A
>).</P
></LI
></UL
><p class="para">After this, <em class="emphasis">sendmail</EM
> changes its <em class="emphasis">uid</EM
>, using the same rules that it used
for the <em class="emphasis">gid</EM
> except that the last step uses the <code class="literal">DefaultUser</CODE
> (<code class="literal">u</CODE
>)
option.</P
><p class="para">The file (and possibly the path to it) is then checked to see whether it
is safe to write to. This is done by using the internal <em class="emphasis">safefile</EM
>() subroutine.
See the <code class="literal">-d44</CODE
> debugging switch (<a class="xref" href="ch37_05.htm" title="">Section 37.5.159, -d44.4</A
>)
for a description of this process.</P
><p class="para">If safe, <em class="emphasis">file</EM
> is then opened for writing in append mode. If <em class="emphasis">sendmail</EM
>
cannot open the file, it 
prints the following error message, and
the child exits with EX_CANTCREAT:</P
><p class="para"><blockquote class="screen"><pre class="screen">cannot open: <i class="lineannotation">reason for error here</I
></PRE
></BLOCKQUOTE
></P
><p class="para">If an open fails, it is attempted 10 more times 
(sleeping progressively longer between each try) 
[3]
on the assumption that on busy systems there may be
a temporary lack of resources (such as file descriptors).
The open includes file locking
with <em class="emphasis">flock</EM
>(2) or <em class="emphasis">fcntl</EM
>(2)
to prevent simultaneous writes.</P
><blockquote class="footnote"><p class="para">[3] The progression is 0 seconds for the first sleep, then 10 seconds,
then 20 seconds, then 30 seconds, and so on.</P
></BLOCKQUOTE
><p class="para">Once the file is opened, the header and body of the mail message are 
written to it.
Note that translations are controlled by the <code class="literal">F=</CODE
> flags of the  
<code class="literal">prog</CODE
> delivery agent for all but V8 <em class="emphasis">sendmail</EM
>. 
V8 <em class="emphasis">sendmail</EM
> uses the <code class="literal">F=</CODE
> flags of the <code class="literal">*file*</CODE
>
delivery agent.
For example, <code class="literal">F=l</CODE
> (see <a class="xref" href="ch30_08.htm" title="">Section 30.8.28, F=l (lowercase L)</A
>) marks this as final delivery.</P
><p class="para">If any write error occurs, <em class="emphasis">sendmail</EM
> prints the following
error message and continues:</P
><p class="para"><blockquote class="screen"><pre class="screen">I/O error</PRE
></BLOCKQUOTE
></P
><p class="para">Finally, the file's permissions are restored to those that were saved above,
and the file is closed with <em class="emphasis">fclose</EM
>(3).
If the <em class="emphasis">suid</EM
> or
<em class="emphasis">sgid</EM
> bits were stripped because there was a controlling
user, they are restored here.
[4]
If the file didn't originally exist, its permissions become 0666.</P
><blockquote class="footnote"><p class="para">[4] This is because some paranoid systems, such as BSD UNIX, turn off the 
<em class="emphasis">suid</EM
>/<em class="emphasis">sgid</EM
> bits when a file is written to other than by <em class="emphasis">root</EM
>.</P
></BLOCKQUOTE
><p class="para">In general, the file form of an alias is a poor way to save
mail messages to a file.
Instead, the use of a separate
program <em class="emphasis">procmail</EM
>(8) is recommended 
(see <a class="xref" href="ch25_07.htm#SML2-CH-25-SECT-7-3" title="The procmail program">Section 25.7.5.2, "The procmail program"</A
>).<a class="indexterm" name="AUTOID-22622"></A
>&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-24-SECT-2-3">24.2.3 Delivery via Programs</A
></H3
><p class="para"><a class="indexterm" name="SML2-CH-24-IX-DELIVERY-TO-PROGRAMS-PROGRAMS"></A
><a class="indexterm" name="SML2-CH-24-IX-PROGRAMS-DELIVERING-TO"></A
><a class="indexterm" name="AUTOID-22632"></A
>When any of the addresses to the right of a colon in the alias
list begins with a <code class="literal">|</CODE
> character, delivery is made by piping the
mail message through a program.
This is automatic with most configuration files but not with others.
If your configuration file does not automatically recognize
a leading <code class="literal">|</CODE
> character, you will need to add a new rule
near the end of your rule set 0 (see <a class="xref" href="ch29_06.htm#SML2-CH-29-SECT-6-1" title="Rule Set 0">Section 29.6</A
>). For example,</P
><p class="para"><blockquote class="screen"><pre class="screen">R|$+     $@ $#local $: |$1</PRE
></BLOCKQUOTE
></P
><p class="para">Beginning with V8.7 <em class="emphasis">sendmail</EM
>, any delivery agent for which the 
<code class="literal">F=|</CODE
> flag (see <a class="xref" href="ch30_08.htm" title="">Section 30.8.8, F=| (vertical bar)</A
>) is set can also pipe messages through programs.
To disable this ability, simply remove the <code class="literal">F=|</CODE
> flag from all delivery agent
declarations in your configuration file.</P
><p class="para">The forms that a program address can legally take in the
<em class="emphasis">aliases</EM
>(5) file 
(or <em class="emphasis">~/.forward</EM
> file; see <a class="xref" href="ch25_07.htm#SML2-CH-25-SECT-7-3" title="Piping Through Programs">Section 25.7.4, "Piping Through Programs"</A
>) are as follows:</P
><p class="para"><blockquote class="screen"><pre class="screen">|prg
&quot;|prg args&quot;
|&quot;prg args&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">Here, <code class="literal">prg</CODE
> is the full path of the program to be run (the
environment variable PATH is not available).
If command-line arguments are needed for the program, they must
follow <code class="literal">prg</CODE
>, and the entire expression must be quoted.
The leading full quotation mark may either precede or follow
the <code class="literal">|</CODE
>.
If the address is quoted with
full quotation marks, the leading quotation mark is ignored in
determining the leading <code class="literal">|</CODE
> character.</P
><p class="para">To execute the program, <em class="emphasis">sendmail</EM
> executes the command
in the <code class="literal">P=</CODE
> equate of the <code class="literal">prog</CODE
> delivery agent. That
command is one of the following:</P
><p class="para"><blockquote class="screen"><pre class="screen">/bin/sh -c
/bin/smrsh -c</PRE
></BLOCKQUOTE
></P
><p class="para">These tell <em class="emphasis">sendmail</EM
> to run <em class="emphasis">/bin/sh</EM
> (the Bourne shell)
or <em class="emphasis">/bin/smrsh</EM
> (the <em class="emphasis">sendmail</EM
> restricted shell) to
execute the program specified by <code class="literal">prg</CODE
>. The <code class="literal">-c</CODE
>
tells that shell to take any arguments that follow and execute
them as though they were commands typed interactively to the shell.
These arguments are constructed by removing the
leading <code class="literal">|</CODE
> from the program address and appending what remains,
quotation marks and all, to the <code class="literal">P=</CODE
> command. For example,
if an alias looked like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">jim: &quot;|/etc/local/relo jim@otherhost&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">the Bourne shell would be executed with the following command line:</P
><p class="para"><blockquote class="screen"><pre class="screen">/bin/sh -c &quot;/etc/local/relo jim@otherhost&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;The result of all this is that <em class="emphasis">sendmail</EM
> runs the Bourne shell and then
the Bourne shell runs the <em class="emphasis">/etc/local/relo</EM
> program.</P
><p class="para">Mail is delivered under this scheme by attaching the output
of <em class="emphasis">sendmail</EM
> to the standard input of the shell and attaching the standard
output and standard error output of the shell to the input
of <em class="emphasis">sendmail</EM
>. The <em class="emphasis">sendmail</EM
> program simply prints
the mail message to the shell and reads any errors that the shell
prints in return.</P
><p class="para">Although this process appears to be fairly straightforward, there are
many things that can go wrong. Failure usually
results in the mail message being bounced.
&#13;</P
><div class="sect3"><h4 class="sect3"><a class="title" name="SML2-CH-24-SECT-2-3-1">24.2.3.1 Possible failures</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-22686"></A
>To communicate with the <code class="literal">P=</CODE
> program (the Bourne shell),
<em class="emphasis">sendmail</EM
> creates
two communications channels using <em class="emphasis">pipe</EM
>(2). This can fail
because the system is out of file descriptors or because 
the
system file table is full. Failure results in one of the following
errors:&#13;</P
><p class="para"><blockquote class="screen"><pre class="screen">openmailer: pipe (to mailer)
openmailer: pipe (from mailer)</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;Next, <em class="emphasis">sendmail</EM
> executes a <em class="emphasis">fork</EM
>(2). The child 
later becomes the <code class="literal">P=</CODE
> program. This can fail because
the system limit on the maximum allowable number of processes
has been exceeded or because virtual memory has been exhausted.
Failure causes the following error message to be printed:&#13;</P
><p class="para"><blockquote class="screen"><pre class="screen">openmailer: cannot fork</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;In establishing a communications channel, the <em class="emphasis">sendmail</EM
> child process
creates a copy of its standard input file descriptor. This can
fail because the system limit on available file descriptors has
been exceeded. When this happens, the following message is printed.
Note that not all <em class="emphasis">dup</EM
>(2) failures produce error messages.&#13;</P
><p class="para"><blockquote class="screen"><pre class="screen">Cannot dup to zero!</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;Finally, the child transforms itself into the <code class="literal">A=</CODE
> program
with <em class="emphasis">execve</EM
>(2). If that transformation fails, the following error
message is produced, where <em class="emphasis">program</EM
> is <code class="literal">argv[0]</CODE
> for
the <code class="literal">A=</CODE
> program (in this case, usually <em class="emphasis">/bin/sh</EM
>):&#13;</P
><p class="para"><blockquote class="screen"><pre class="screen">Cannot exec <code class="replaceable"><i>program</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">&#13;Failure can be caused by a wide range of problems. If one occurs
and the delivery
agent is <code class="literal">local</CODE
>, the message is queued for a later try.
Otherwise, requeueing occurs
only if the error return value is a transient one
defined in <em class="emphasis">transienterror</EM
>() in <em class="emphasis">conf.c</EM
>.
[5]&#13;</P
><blockquote class="footnote"><p class="para">[5] Because of a bug in all but the IDA and V8 versions, the
message is silently discarded without being requeued or bounced.</P
></BLOCKQUOTE
><p class="para">Programs in the <em class="emphasis">aliases</EM
> file are run with the <code class="literal">prog</CODE
>
delivery agent. As a consequence, that delivery agent should have
the <code class="literal">F=s</CODE
> (strip quotes) flag set.<a class="indexterm" name="AUTOID-22725"></A
>&#13;</P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch24_01.htm" title="24.1 The aliases(5) File"><img src="../gifs/txtpreva.gif" alt="Previous: 24.1 The aliases(5) File" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="sendmail"><img src="../gifs/txthome.gif" alt="sendmail" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch24_03.htm" title="24.3 Write a Delivery Agent Script"><img src="../gifs/txtnexta.gif" alt="Next: 24.3 Write a Delivery Agent Script" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">24.1 The aliases(5) File</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">24.3 Write a Delivery Agent Script</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
