<html><head>
<title>[Chapter 33] 33.8 Alphabetized Reference</TITLE>
<meta name="DC.title" content="sendmail"><meta name="DC.creator" content="Bryan Costales &amp; Eric Allman"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T20:26:11Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-222-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch33_01.htm" title="33. Database Macros"><link rel="prev" href="ch33_07.htm" title="33.7 Pitfalls"><link rel="next" href="ch34_01.htm" title="34. Options"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="sendmail" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="sendmail"><area shape="RECT" coords="467,0,514,18" href="../search/ssrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch33_07.htm" title="33.7 Pitfalls"><img src="../gifs/txtpreva.gif" alt="Previous: 33.7 Pitfalls" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 33<br>Database Macros</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="CHAPTER" href="ch34_01.htm" title="34. Options"><img src="../gifs/txtnexta.gif" alt="Next: 34. Options" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="SML2-CH-33-SECT-8">33.8 Alphabetized Reference</A
></H2
><p class="para"><a class="indexterm" name="SML2-CH-33-IX-DATABASES-CLASSES-FOR"></A
><a class="indexterm" name="SML2-CH-33-IX-CLASSES-DATABASE"></A
>Recall that the <code class="literal">K</CODE
> configuration command (see <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The K Configuration Command">Section 33.3</A
>)
is used like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name class args</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="replaceable"><i>class</I
></CODE
> determines the type of database that will be used.
For example, the class <code class="literal">btree</CODE
> causes the Berkeley <em class="emphasis">db</EM
>(3) to be used,
whereas the class <code class="literal">dequote</CODE
> causes an internal routine of
<em class="emphasis">sendmail</EM
>'s to be called.</P
><p class="para">In this section we present all the classes in alphabetical order.
They are summarized in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Possible K Command Classes">Table 33.3</A
> of <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The class">Section 33.3.2</A
>.
Most interaction with these classes can be watched by using the
<code class="literal">-d38.2</CODE
> debugging switch (see <a class="xref" href="ch37_05.htm" title="">Section 37.5.128</A
>).
Some specialty maps use other debugging switches, which we indicate
where appropriate.</P
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-1">33.8.1 btree</A
></H3
><p class="refpurpose">Berkeley's db form of database</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-38578"></A
>The term btree stands for &quot;balanced tree.&quot; It is a grow-only
form of database. Lookups and insertions are fast, but deletions
do not shrink the database. A good description of this form
of database can be found in 
<em class="emphasis">The Art of Computer Programming, Vol. 3: Sorting and  Searching</EM
>,
D.E. Knuth, 1968, pp. 471-480.
The btree class is available only if <em class="emphasis">sendmail</EM
> was compiled
with <code class="literal">NEWDB</CODE
> defined and the new Berkeley <em class="emphasis">db</EM
> library
linked in.</P
><p class="para">See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Which Class Uses Which Switches">Table 33.5</A
> in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The switches">Section 33.3.4</A
>
for a list of the <code class="literal">K</CODE
> command switches that can be used with this
class and the meaning of each.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-2">33.8.2 bestmx</A
></H3
><p class="refpurpose">Look up the best MX record for a host</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-38596"></A
><a class="indexterm" name="AUTOID-38599"></A
>The <code class="literal">bestmx</CODE
> map class looks up a hostname as the <code class="replaceable"><i>key</I
></CODE
>
and returns the current best MX record as the <code class="replaceable"><i>value</I
></CODE
>.
Internally, a call is made to <em class="emphasis">getmxrr</EM
>() to get a list of
MX records for the host. That list is sorted in order
of the best to the worst, and <code class="literal">bestmx</CODE
> returns the first.
Because <em class="emphasis">bestmx</EM
>
is a class, not a map, you need to declare it with a <code class="literal">K</CODE
> configuration
command before you can use it:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>bestmx bestmx</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">One use for this class might be to see whether a particular host has
a usable MX at all:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kbestmx bestmx
...
R$*&lt; @ $+ &gt; $*                $: $1&lt;@$2&gt;$3 &lt;$(bestmx $2 $: NO $)&gt;
R$*&lt; @ $+ &gt; $* &lt; NO &gt;         $#smtp  $@ $2 $: $1 &lt; @ $2 &gt; $3
R$*&lt; @ $+ &gt; $* &lt; $* &gt;         $: $1&lt;@ $[ $2 $] &gt; $3</PRE
></BLOCKQUOTE
></P
><p class="para">In the first rule we look up the host part of an address (which has already
been focused by rule set 3) with the <code class="literal">bestmx</CODE
> database map.
The result of the lookup is surrounded with angle brackets
and appended to the original address. The second rule looks for
the <code class="literal">NO</CODE
> caused by an unsuccessful lookup (the <code class="literal">$:</CODE
>).
The original address is then
sent with the <code class="literal">smtp</CODE
> delivery agent. If the hostname
inside the appended angle braces is not <code class="literal">NO</CODE
>,
the host part of the original address is canonicalized
with the <code class="literal">$[</CODE
> and <code class="literal">$]</CODE
> operators.</P
><p class="para">This <code class="literal">bestmx</CODE
> class is a special internal one that can take
advantage of only two of the <code class="literal">K</CODE
> command switches: the <code class="literal">-a</CODE
>
(as you saw) and the <code class="literal">-q</CODE
> (to suppress dequoting the key).
This class can be watched with the <code class="literal">-d8</CODE
> debugging switch
(see <a class="xref" href="ch37_05.htm" title="">Section 37.5.30, -d8.1</A
>).</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-3">33.8.3 dbm</A
></H3
><p class="refpurpose">Really ndbm supplied with most versions of UNIX</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-38637"></A
><a class="indexterm" name="AUTOID-38639"></A
>The dbm class, which is really the <em class="emphasis">ndbm</EM
> form of database, is the
traditional form of UNIX database. Data are stored in one file, keys
in another. The data must fit in blocks of fixed sizes, so there is
usually a limit on the maximum size (1 kilobyte or so) on any given
stored datum. The <em class="emphasis">dbm</EM
> class is available only if <em class="emphasis">sendmail</EM
>
was compiled with <code class="literal">NDBM</CODE
> declared (see <a class="xref" href="ch18_08.htm" title="">Section 18.8.24, NDBM</A
>).</P
><p class="para">This is the class of database traditionally used with alias files.
Because of the limit on the size of a datum, you should consider
using one of the <em class="emphasis">db</EM
>(3) <code class="literal">hash</CODE
> or <code class="literal">btree</CODE
> classes instead.</P
><p class="para">See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Which Class Uses Which Switches">Table 33.5</A
> in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The switches">Section 33.3.4</A
>
for a list of the <code class="literal">K</CODE
> command switches that can be used with the
class and the meaning of each switch.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-4">33.8.4 dequote</A
></H3
><p class="refpurpose">A pseudo map for removing quotation marks</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-38662"></A
><a class="indexterm" name="AUTOID-38665"></A
>V8 <em class="emphasis">sendmail</EM
> can remove quotation marks from around
tokens by using the special <em class="emphasis">dequote</EM
> class. Because <em class="emphasis">dequote</EM
>
is a class, not a map, you need to declare it with a <code class="literal">K</CODE
> configuration
command before you can use it:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>unquote dequote</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">This declares a map named <code class="replaceable"><i>unquote</I
></CODE
> of the class <code class="replaceable"><i>dequote</I
></CODE
>.
Once a map name has been declared, the <code class="replaceable"><i>dequote</I
></CODE
> class can be
used in the RHS of rules to remove quotation marks. It is used
with <code class="literal">$(</CODE
> and <code class="literal">$)</CODE
>, just like database lookups:</P
><p class="para"><blockquote class="screen"><pre class="screen">$(unquote <code class="replaceable"><i>tokens</I
></CODE
> $)</PRE
></BLOCKQUOTE
></P
><p class="para">Here, arbitrary <code class="replaceable"><i>tokens</I
></CODE
> are looked up in the database
named <code class="literal">unquote</CODE
>. That database is special because it is
of the class <code class="replaceable"><i>dequote</I
></CODE
>. Instead of really being looked up 

in a
database, <code class="replaceable"><i>tokens</I
></CODE
> will just have any surrounding quotation marks
removed:</P
><p class="para"><blockquote class="screen"><pre class="screen">&quot;A.B.C&quot;           <i class="lineannotation">becomes</I
>   A.B.C
&quot;A&quot;.&quot;B&quot;.&quot;C&quot;       <i class="lineannotation">becomes</I
>   A.B.C
&quot;A B&quot;             <i class="lineannotation">becomes</I
>   &quot;A B&quot;
&quot;A,B&quot;             <i class="lineannotation">becomes</I
>   &quot;A,B&quot;
&quot;A&gt;B&quot;             <i class="lineannotation">becomes</I
>   &quot;A&gt;B&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">The first example shows that surrounding quotation marks are removed.
The second shows that multiple quoted tokens are all de-quoted.
The last three show that <em class="emphasis">sendmail</EM
> refuses to dequote any tokens
that will form an illegal or ambiguous address when dequoted.</P
><p class="para">As an aid to understanding this dequoting process, run
the following two-line configuration file in rule-testing mode:</P
><p class="para"><blockquote class="screen"><pre class="screen">V7
Kdequote dequote</PRE
></BLOCKQUOTE
></P
><p class="para">You can then use the <code class="literal">-bt</CODE
> <code class="literal">/map</CODE
> command to try various
dequoting possibilities:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>/map dequote &quot;A.B.C&quot;</B
></CODE
>
map_lookup: dequote (&quot;A.B.C&quot;) returns A.B.C (0)
&gt; <code class="userinput"><b>/map dequote &quot;A&quot;.&quot;B&quot;.&quot;C&quot;</B
></CODE
>
map_lookup: dequote (&quot;A&quot;.&quot;B&quot;.&quot;C&quot;) returns A.B.C (0)
&gt; <code class="userinput"><b>/map dequote &quot;A B&quot;</B
></CODE
>
map_lookup: dequote (&quot;A B&quot;) no match (0)</PRE
></BLOCKQUOTE
></P
><p class="para">Note that beginning with V8.7, specifying the <code class="literal">-s</CODE
>
switch causes the space character to be replaced with another
character before dequoting (see <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="-s  space replacement character (V8.7 and above)">Section 33.3.4.10</A
>).</P
><p class="para"><blockquote class="screen"><pre class="screen">V7
Kdequote dequote -s+</PRE
></BLOCKQUOTE
></P
><p class="para">In that case the last example above would become the following:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>/map dequote &quot;A B&quot;</B
></CODE
>
map_lookup: dequote (&quot;A B&quot;) returns A+B (0)</PRE
></BLOCKQUOTE
></P
><p class="para">Also note that beginning with V8.8, specifying the <code class="literal">-a</CODE
>
switch causes a suffix of your choice to be appended to a successful
match:</P
><p class="para"><blockquote class="screen"><pre class="screen">V7
Kdequote dequote -a.yes</PRE
></BLOCKQUOTE
></P
><p class="para">In that case the <code class="literal">&quot;A.B.C&quot;</CODE
> example would become the following:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>/map dequote &quot;A.B.C&quot;</B
></CODE
>
map_lookup: dequote (&quot;A.B.C&quot;) returns A.B.C.yes (0)</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;In addition to removing quotes, the <code class="replaceable"><i>dequote</I
></CODE
> class also tokenizes
everything that is returned. It does this because quotes are ordinarily
used to mask the separation characters that delimit tokens.
For example, consider the
<code class="literal">$&amp;</CODE
> operator. It prevents a macro in a rule from being expanded
when the configuration file is read and always returns a single
token, no matter how many tokens it really contains. Consider this
configuration file:</P
><p class="para"><blockquote class="screen"><pre class="screen">V7
DXhost.domain
Kdequote dequote
R$*    $: $&amp;X , $(dequote &quot;&quot; $&amp;X $)</PRE
></BLOCKQUOTE
></P
><p class="para">Here, the macro <code class="literal">X</CODE
> is assigned <code class="literal">host.domain</CODE
> as its value.
The only rule in the file (when <em class="emphasis">sendmail</EM
> is run in rule-testing mode)
prints the expression <code class="literal">$&amp;X</CODE
> to show that it is a single
token, then prints the result of dequoting that same expression.
Note that an empty token needs to be dequoted. Putting quotes around
<code class="literal">$&amp;X</CODE
> itself won't work. The output produced by rule-testing mode
looks like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; 0 foo
rewrite: ruleset  0   input: foo
rewrite: ruleset  0 returns: host.domain , host . domain
&gt;                             <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>            <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>
                             <i class="lineannotation">$X</I
>        <i class="lineannotation">$X dequoted</I
></PRE
></BLOCKQUOTE
></P
><p class="para">No debugging switch is available to watch the actions of the
<code class="literal">dequote</CODE
> class.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-5">33.8.5 hash</A
></H3
><p class="refpurpose">Berkeley's db form of database</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-38753"></A
>The <code class="replaceable"><i>hash</I
></CODE
> class uses a hashing algorithm for storing
data. This approach to a database is described in
<em class="emphasis">A New Hash Package for UNIX</EM
>, by Margo Seltzer (USENIX
Proceedings, Winter 1991). The hash class is available only if
<em class="emphasis">sendmail</EM
> was compiled with <code class="literal">NEWDB</CODE
> defined and the new
Berkeley <em class="emphasis">db</EM
> library linked in.</P
><p class="para">The <code class="literal">hash</CODE
> class is the default that is used with most of the
FEATURES offered by the <em class="emphasis">m4</EM
> technique (see
<a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Specialty Class Switches">Table 33.6</A
> in <a class="xref" href="ch33_06.htm" title="Database Maps and m4">Section 33.6, "Database Maps and m4"</A
>). For example, consider the
following:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kuudomain hash -o /etc/uudomain</PRE
></BLOCKQUOTE
></P
><p class="para">Here, a map named <code class="literal">uudomain</CODE
> is declared to be of class <code class="literal">hash</CODE
>.
The <code class="literal">-o</CODE
> says that the file <em class="emphasis">/etc/uudomain</EM
> is optional.</P
><p class="para">See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Which Class Uses Which Switches">Table 33.5</A
> in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The switches">Section 33.3.4</A
>
for a list of the <code class="literal">K</CODE
> command switches that can be used with this
class and the meaning of each.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-6">33.8.6 hesiod</A
></H3
><p class="refpurpose">MIT network user authentication services</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-38784"></A
>The <code class="literal">hesiod</CODE
> class of map uses the Hesiod system,
a network information system developed as Project Athena.
Support of <em class="emphasis">hesiod</EM
> maps is available only if you declare
HESIOD when compiling <em class="emphasis">sendmail</EM
>. (See <a class="xref" href="ch18_08.htm" title="">Section 18.8.10, HESIOD</A
>
for a fuller description of the Hesiod system.)</P
><p class="para">A <code class="literal">hesiod</CODE
> map is declared like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name </I
></CODE
>hesiod<code class="replaceable"><i> HesiodNameType</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="replaceable"><i>HesiodNameType</I
></CODE
> must be one that is known at your site, such
as <code class="literal">passwd</CODE
> or <code class="literal">service</CODE
>.
An unknown <code class="replaceable"><i>HesiodNameType</I
></CODE
> will yield this error when <em class="emphasis">sendmail</EM
>
begins to run:</P
><p class="para"><blockquote class="screen"><pre class="screen">cannot initialize Hesiod map (<i class="lineannotation">hesiod error number</I
>)</PRE
></BLOCKQUOTE
></P
><p class="para">One example of a lookup might look like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kuid2name hesiod uid
R$+      $: $(uid2name $1 $)</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we declare the map <code class="literal">uid2name</CODE
> using the Hesiod-type
<code class="literal">uid</CODE
>, which converts <em class="emphasis">uid</EM
> numbers into login names. If the
conversion was successful, we use the login name returned; otherwise, we
use the original workspace.</P
><p class="para">See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Which Class Uses Which Switches">Table 33.5</A
> in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The switches">Section 33.3.4</A
>
for a list of the <code class="literal">K</CODE
> command switches that can be used with this
class and the meaning of each.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-7">33.8.7 host</A
></H3
><p class="refpurpose">Internal table used to store and look up hostnames</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-38824"></A
>The <code class="replaceable"><i>host</I
></CODE
> class is a special internal database used
by <em class="emphasis">sendmail</EM
> to help it resolve hostnames. It is fully
described under the <code class="literal">$[</CODE
> and <code class="literal">$]</CODE
> operators in <a class="xref" href="ch33_04.htm#SML2-CH-33-SECT-4-2" title="$[ and $]: A Special Case">Section 33.4.3</A
>.</P
><p class="para">The <code class="literal">-d9</CODE
> debugging switch (see <a class="xref" href="ch37_05.htm" title="">Section 37.5.37, -d9.1</A
>)
can be used to watch the actions caused by this <code class="literal">host</CODE
> class.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-8">33.8.8 implicit</A
></H3
><p class="refpurpose">Search for an aliases database file</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-38843"></A
><a class="indexterm" name="AUTOID-38845"></A
>The <code class="replaceable"><i>implicit</I
></CODE
> class refers specifically to <em class="emphasis">aliases</EM
>(5)
files only. It causes <em class="emphasis">sendmail</EM
> to first try to open a
<em class="emphasis">db</EM
>(3) hash-style alias file, and if that fails or if
NEWDB support was not compiled in, it tries to open a
<em class="emphasis">ndbm</EM
>(3)-style database.
If that fails, <em class="emphasis">sendmail</EM
> reads the <em class="emphasis">aliases</EM
>(5) source file
into its internal symbol table.</P
><p class="para">Although you can declare and use this class in a configuration file,
there is no reason to do so. It is of use only to the internals of
<em class="emphasis">sendmail</EM
>. If <code class="replaceable"><i>implicit</I
></CODE
> fails to open an <em class="emphasis">aliases</EM
>
file (probably because of a faulty <code class="literal">AliasFile</CODE
> (<code class="literal">A</CODE
>) option;
see <a class="xref" href="ch34_08.htm" title="">Section 34.8.1</A
>), <em class="emphasis">sendmail</EM
> will issue the following
error if it is running in verbose mode:</P
><p class="para"><blockquote class="screen"><pre class="screen">WARNING: cannot open alias database <em class="emphasis">bad file name</EM
></PRE
></BLOCKQUOTE
></P
><p class="para">If the source <em class="emphasis">aliases</EM
> file exists but no database form
exists, <em class="emphasis">sendmail</EM
> will read that source file into its
internal symbol table using the <code class="literal">stab</CODE
> class (see <a class="xref" href="#SML2-CH-33-SECT-8-16" title="">Section 33.8.16</A
>).</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-9">33.8.9 ldapx</A
></H3
><p class="refpurpose">The Lightweight Directory Access Protocol</P
>(V8.8 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-38878"></A
><a class="indexterm" name="AUTOID-38880"></A
>LDAP stands for <b class="emphasis.bold">L</B
>ightweight <b class="emphasis.bold">D</B
>irectory <b class="emphasis.bold">A</B
>ccess
<b class="emphasis.bold">P</B
>rotocol and provides access to the X.500 directory. 
The <code class="literal">ldapx</CODE
> class is used to look up items in
that directory service. It is declared like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name</I
></CODE
> ldapx <code class="replaceable"><i>switches</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Lookups via LDAP are entirely defined by the switches specified.
To illustrate, consider the following X.500 entry:</P
><p class="para"><blockquote class="screen"><pre class="screen">cn=Full Name, o=Organization, c=US
sn=Name
uid=yourname
cn=Full Name
commonname=Full Name
mail=yourname@mailhub.your.domain
objectclass=person
objectclass=deptperson</PRE
></BLOCKQUOTE
></P
><p class="para">To look up a login name in this database and have the official
email address for that user returned, you might use a declaration like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kldap ldapx -k&quot;uid=%s&quot; -v&quot;mail&quot; -hldap_host -b&quot;o=Organization, c=US&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">Note that the <code class="literal">-k</CODE
> switch is in the form of a <code class="literal">ldap_search</CODE
>(3)
filter, where the <code class="replaceable"><i>key</I
></CODE
> will replace the <code class="literal">%s</CODE
> and then the
whole expression will be searched for as the <code class="replaceable"><i>key</I
></CODE
>. The <code class="literal">-b</CODE
>
is required to specify the base from which to search. Note that
a base must be selected such that it ensures that <em class="emphasis">sendmail</EM
> will
always get a unique result.</P
><p class="para">The following rule can be used with the above declaration to look
up the preferred mail address for a user:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$* &lt;@ $+ &gt; $*       $: $(ldap $1 $: $1&lt;@$2&gt;$3 $)</PRE
></BLOCKQUOTE
></P
><p class="para">Here we presume that this rule was preceded by a call to rule set 3
to focus on the host part. If the lookup succeeds, the new (unfocused)
address is returned from the <code class="literal">mail=</CODE
> line in the database. Otherwise,
the original address is returned.</P
><p class="para">A few errors can occur during <em class="emphasis">sendmail</EM
>'s startup that indicate a
faulty <code class="literal">K</CODE
> command:</P
><p class="para"><blockquote class="screen"><pre class="screen">LDAP map: -h flag is required
LDAP map: -b flag is required
No return attribute in <i class="lineannotation">map name</I
></PRE
></BLOCKQUOTE
></P
><p class="para">The first two show that those switches are mandatory. The third prints
only to show that the <code class="literal">-v</CODE
> switch is mandatory if the <code class="literal">-o</CODE
>
switch is absent.</P
><p class="para">In addition, each successful lookup can cause a line like the following to
be logged via <em class="emphasis">syslog</EM
>(3):</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="replaceable"><i>qid</I
></CODE
>: ldap <code class="replaceable"><i>key</I
></CODE
> =&gt; <code class="replaceable"><i>value</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Which Class Uses Which Switches">Table 33.5</A
> in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The switches">Section 33.3.4</A
>
for a list of the <code class="literal">K</CODE
> command switches that can be used with this
class and the meaning of each. Also, <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Specialty Class Switches">Table 33.6</A
> lists
several nonstandard switches that are used by this <code class="literal">ldapx</CODE
> class.
Finally, note that the <code class="literal">ldapx</CODE
> class can be used only if LDAPMAP
was defined when <em class="emphasis">sendmail</EM
> was compiled (see <a class="xref" href="ch18_08.htm" title="">Section 18.8.15, LDAPMAP</A
>).</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-10">33.8.10 netinfo</A
></H3
><p class="refpurpose">NeXT Computer's network information services</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-38943"></A
>NetInfo is NeXT's implementation of a network-based information service.
The <code class="replaceable"><i>netinfo</I
></CODE
> class expects a map declaration to be
of the following form:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name</I
></CODE
> netinfo <code class="replaceable"><i>map</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Other switches may be used with this class, and they
have their normal meanings (see <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Which Class Uses Which Switches">Table 33.5</A
> 
in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The switches">Section 33.3.4</A
>).</P
><p class="para">Support of <em class="emphasis">netinfo</EM
> maps is available only if you declare
NETINFO when compiling <em class="emphasis">sendmail</EM
> 
(see <a class="xref" href="ch18_08.htm" title="">Section 18.8.27, NETINFO</A
>).</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-11">33.8.11 nis</A
></H3
><p class="refpurpose">Sun's Network Information Services (NIS)</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-38965"></A
>Sun Microsystems offers a network information service
called NIS. It provides the ability to look up various kinds
of information in network databases. The <code class="literal">nis</CODE
> class allows you
to access that network information by way of rules in rule sets.
You declare an <code class="literal">nis</CODE
> class map like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name </I
></CODE
>nis<code class="replaceable"><i> map</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Here, <code class="replaceable"><i>name</I
></CODE
> is the identifier that you will later use in rule sets.
The <code class="replaceable"><i>map</I
></CODE
> is any <em class="emphasis">nis</EM
> map. Lookups will occur in the
default <em class="emphasis">nis</EM
> domain. If you wish to specify some other domain,
you may append an <code class="literal">@</CODE
> character and the domain name to the <code class="replaceable"><i>map</I
></CODE
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name </I
></CODE
>nis<code class="replaceable"><i> map</I
></CODE
>@<code class="replaceable"><i>domain</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">To illustrate, consider the need to look up the name of the central
mail server for your department. If such a map were called <em class="emphasis">mailservers</EM
>,
you could use the following configuration file line to look up
your domain in that map:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kmailservers nis -o mailservers
...
R$* &lt;@ $+ &gt; $*          $: $1&lt;@$2&gt;$3 &lt;$(mailservers $2 $)&gt;
R$* &lt;@ $+ &gt; $* &lt;$+&gt;     $#smtp $@ $4 $: $1 &lt; @ $2 &gt; $3
...</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we look up the host part of an address (<code class="literal">$2</CODE
>) in the
<code class="literal">mailservers</CODE
> <em class="emphasis">nis</EM
> map. 
The <code class="literal">-o</CODE
> makes the existence of the map optional.
If the host part is found, it is rewritten to be the name of the mail 
server for that host. In the last rule we forward the original
address to that server.</P
><p class="para">Without the <code class="literal">-o</CODE
>, the nonexistence of a map will cause this
error to be logged:</P
><p class="para"><blockquote class="screen"><pre class="screen">Cannot bind to map <code class="replaceable"><i>name</I
></CODE
> in domain <code class="replaceable"><i>domain</I
></CODE
>: <i class="lineannotation">reason here</I
></PRE
></BLOCKQUOTE
></P
><p class="para">If <em class="emphasis">nis</EM
> is not running at all or if <em class="emphasis">sendmail</EM
> cannot bind
to the <code class="replaceable"><i>domain</I
></CODE
> specified or the default domain, the following
error is logged:</P
><p class="para"><blockquote class="screen"><pre class="screen">NIS map <code class="replaceable"><i>name</I
></CODE
> specified, but NIS not running</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">nis</CODE
> class is available only if <em class="emphasis">sendmail</EM
> is compiled with
NIS defined (see <a class="xref" href="ch18_08.htm" title="">Section 18.8.29, NIS</A
>).</P
><p class="para">See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Which Class Uses Which Switches">Table 33.5</A
> in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The switches">Section 33.3.4</A
>
for a list of the <code class="literal">K</CODE
> command switches that can be used with this
class and the meaning of each.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-12">33.8.12 nisplus</A
></H3
><p class="refpurpose">Sun's newer version of NIS</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-39024"></A
>Sun Microsystems's NIS+ is a complete redo of its earlier
<em class="emphasis">nis</EM
> system. The <code class="literal">nisplus</CODE
> class allows you to look up
information using NIS+. The form of that class declaration looks like
this:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name</I
></CODE
> nisplus <code class="replaceable"><i>map.domain</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Here, the <code class="replaceable"><i>map</I
></CODE
> is a NIS+ map name, such as <em class="emphasis">mail_aliases</EM
>.
[7]
If the <code class="replaceable"><i>domain</I
></CODE
> or <code class="replaceable"><i>.domain</I
></CODE
> is missing, the <em class="emphasis">nisplus</EM
> default
domain is used. If the entire <code class="replaceable"><i>map.domain</I
></CODE
> is missing, the default
becomes <em class="emphasis">mail_aliases.org_dir</EM
>. The domain <em class="emphasis">org_dir</EM
> contains
all the systemwide administration tables.</P
><blockquote class="footnote"><p class="para">[7] Note that under NIS+ map names cannot contain a dot, whereas under
NIS they could&nbsp;- for example, <em class="emphasis">mail_aliases</EM
> for NIS+ but
<em class="emphasis">mail.aliases</EM
> for NIS.</P
></BLOCKQUOTE
><p class="para">Any lookup failures that can be retried will automatically be retried up to
five times, with a <em class="emphasis">sleep</EM
>(3) of 2 seconds between each try.
If the <code class="replaceable"><i>map.domain</I
></CODE
> doesn't exist in the local <em class="emphasis">nisplus</EM
>
system, this error is printed when <em class="emphasis">sendmail</EM
> starts:</P
><p class="para"><blockquote class="screen"><pre class="screen">Cannot find table <i class="lineannotation">map</I
>.<i class="lineannotation">domain</I
>: <i class="lineannotation">reason for failure here</I
></PRE
></BLOCKQUOTE
></P
><p class="para">This error is suppressed if the original <code class="literal">K</CODE
> command declaration included
the <code class="literal">-o</CODE
> switch.</P
><p class="para">Two other errors can happen during startup:</P
><p class="para"><blockquote class="screen"><pre class="screen"><i class="lineannotation">map</I
>.<i class="lineannotation">domain</I
>: <i class="lineannotation">reason for failure here</I
> is not a table
nisplus_map_open(<i class="lineannotation">map</I
>): can not find key column <i class="lineannotation">-k column name here</I
></PRE
></BLOCKQUOTE
></P
><p class="para">You can use the <code class="literal">-k</CODE
> switch to specify a <code class="replaceable"><i>key</I
></CODE
> column to look up.
Under <em class="emphasis">nisplus</EM
>, columns are named, so the <code class="literal">-k</CODE
> must be followed by
a valid name, or the last error above will be printed. You can also use
the <code class="literal">-v</CODE
> switch to specify the <code class="replaceable"><i>value</I
></CODE
> column, also a name. If
the <code class="literal">-v</CODE
> is omitted, the last column becomes the default.
See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Which Class Uses Which Switches">Table 33.5</A
> in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The switches">Section 33.3.4</A
>
for a list of the other <code class="literal">K</CODE
> command switches that can be used with this
class and the meaning of each. </P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-13">33.8.13 null</A
></H3
><p class="refpurpose">Provide a never found service</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-39085"></A
>The <code class="literal">null</CODE
> class is an internal database that always returns
a failed lookup. It is useful for replacing other classes to force
failures without errors. Normally, the <code class="literal">null</CODE
> class is used
internally only.</P
><p class="para">Consider a tiny configuration file that does not need the use
of the <em class="emphasis">aliases</EM
> facilities. One way to declare aliases
would be like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">O AliasFile=null:</PRE
></BLOCKQUOTE
></P
><p class="para">This tells <em class="emphasis">sendmail</EM
> to use the <code class="literal">null</CODE
> class for looking
up aliases. Therefore no aliases will ever be found.</P
><p class="para">None of the <code class="literal">K</CODE
> command switches may be used with the <code class="literal">null</CODE
>
class. If you try to use any, they will be silently ignored.
No debugging switch is available to watch this <code class="literal">null</CODE
> class.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-14">33.8.14 program</A
></H3
><p class="refpurpose">Run an external program to look up the key</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-39108"></A
>The <code class="literal">program</CODE
> class allows you to perform lookups via arbitrary
external programs. The form for the declaration of this class looks
like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name</I
></CODE
> program <code class="replaceable"><i>/path arg1 arg2 ...</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="replaceable"><i>/path</I
></CODE
> must be the full pathname to the program.
Relative paths will not work, and attempts to use them
will log the following error
and cause the lookup to fail:</P
><p class="para"><blockquote class="screen"><pre class="screen">NOQUEUE: SYSERR(bcx): <i class="lineannotation">relative name</I
>: cannot exec: No such file or directory</PRE
></BLOCKQUOTE
></P
><p class="para">The program is run under the <em class="emphasis">uid</EM
> and <em class="emphasis">gid</EM
> of the person who ran <em class="emphasis">sendmail</EM
>.
But if that person is <em class="emphasis">root</EM
>, the program is instead run as the user and group
specified by the <code class="literal">DefaultUser</CODE
>(<code class="literal">u</CODE
>) option (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.15, DefaultUser (g)(u)</A
>).</P
><p class="para">The arguments to the program always have the key to be looked up added as a final
argument:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name</I
></CODE
> program <code class="replaceable"><i>/path arg1 arg2 ...</I
></CODE
>
                                    <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>
                                    <i class="lineannotation">key added here</I
></PRE
></BLOCKQUOTE
></P
><p class="para">This is the only way that the key can be passed to the program. The key
will specifically not be piped to the program's standard input.</P
><p class="para">The value (result of the lookup) is read from the program's standard output.
Only the first MAXLINE-1 characters are read (where MAXLINE is
defined in <em class="emphasis">conf.h</EM
>, currently as 2048). The read result is processed
as an address and placed into the workspace (unless the <code class="literal">-m</CODE
> switch
is used with the <code class="literal">K</CODE
> command).</P
><p class="para">To illustrate, consider the need to look up a user's preferred address
in an external relational database:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kilook program /usr/lib/ingres_lookup -d users.database</PRE
></BLOCKQUOTE
></P
><p class="para">This program has been custom written to accept the key as its final argument.
To prevent spurious errors, it exits with a zero value whether the key
is found or not. Any system errors cause it to exit with a value selected from
those defined in <em class="emphasis">&lt;sysexits.h&gt;</EM
> (those recognized by <em class="emphasis">sendmail</EM
>).
Error messages are printed to the standard error output, and the found
value (if there was one) is printed to the standard output.</P
><p class="para">In general, it is better to use one of the database formats known to
<em class="emphasis">sendmail</EM
> than to attempt to look up keys via external
programs. The process of <em class="emphasis">fork</EM
>(2)ing and <em class="emphasis">exec</EM
>(2)ing the
program can become expensive if it is done often, slowing down the
handling of mail.</P
><p class="para">See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Which Class Uses Which Switches">Table 33.5</A
> in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The switches">Section 33.3.4</A
>
for a list of the <code class="literal">K</CODE
> command switches that can be used with this
class and the meaning of each.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-15">33.8.15 sequence</A
></H3
><p class="refpurpose">Search a series of maps</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-39162"></A
>The <code class="literal">sequence</CODE
> class is a more general form of the <code class="literal">implicit</CODE
>
class described for use with alias files. The <code class="literal">sequence</CODE
> class
allows you to declare a single name that will be used to search a
series of databases. It is declared like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name</I
></CODE
> sequence <code class="replaceable"><i>map1 map2 ...</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Here, a <code class="replaceable"><i>key</I
></CODE
> will be looked up first in the map named <code class="replaceable"><i>map1</I
></CODE
>, and
if not found there, it will be looked up in the map named <code class="replaceable"><i>map2</I
></CODE
>. The class of
each of the listed maps should logically relate but need not be the same.
Consider, for example, a rule's LHS that will match
if the workspace contains either a user's login name or the name of a host,
with the hostname taking precedence:</P
><p class="para"><blockquote class="screen"><pre class="screen">Khosts host  -a+ /etc/hosts
Kpasswd user -a- /etc/passwd
Kboth sequence hosts passwd

R$-     $: $(both $1 $)</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we say that the map named <code class="literal">both</CODE
> is of type <code class="literal">sequence</CODE
>.
Any single token in the LHS will be looked up first in the
map named <code class="literal">hosts</CODE
>, and if it is found there the hostname will be
returned with a <code class="literal">+</CODE
> appended. If it is not found in the
<code class="literal">hosts</CODE
> map, it will be next looked up in the <code class="literal">passwd</CODE
>
map. If it is found there, the original workspace will be returned
with a <code class="literal">-</CODE
> appended. If the workspace is not found in either
map, the lookup fails and the workspace remains unchanged.</P
><p class="para">If any map in the series of maps declared with the <code class="literal">K</CODE
> command does
not exist:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kboth sequence hosts passwd badname</PRE
></BLOCKQUOTE
></P
><p class="para">the following error is printed, and that map is ignored:</P
><p class="para"><blockquote class="screen"><pre class="screen">Sequence map <code class="replaceable"><i>both</I
></CODE
>: unknown member map <code class="replaceable"><i>badname</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">If the number of maps that are sequenced exceeds the maximum allowed
(MAXMAPSTACK in <em class="emphasis">conf.h</EM
>, currently 12), the following
error is printed, and the overflow of maps is ignored:</P
><p class="para"><blockquote class="screen"><pre class="screen">Sequence map <code class="replaceable"><i>name</I
></CODE
>: too many member maps (<code class="replaceable"><i>max</I
></CODE
> max)</PRE
></BLOCKQUOTE
></P
><p class="para">None of the <code class="literal">K</CODE
> command switch may be used with the <code class="literal">sequence</CODE
>
class. If you try to use any, they will be wrongly interpreted as
map names.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-16">33.8.16 stab</A
></H3
><p class="refpurpose">Internally load aliases into the symbol table</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-39211"></A
><a class="indexterm" name="AUTOID-39214"></A
><a class="indexterm" name="AUTOID-39217"></A
><a class="indexterm" name="AUTOID-39220"></A
>The <code class="literal">stab</CODE
> class is used internally by <em class="emphasis">sendmail</EM
> to
load the raw <em class="emphasis">aliases</EM
>(5) file into its internal symbol table.
[8]
This is a fallback position that is taken if no database form of aliasing
is found.</P
><blockquote class="footnote"><p class="para">[8] As such it is somewhat misnamed. One might reasonably expect
a class named <code class="literal">stab</CODE
> to provide access to the symbol table,
but alas, it is not so.</P
></BLOCKQUOTE
><p class="para">The <code class="literal">stab</CODE
> class should <em class="emphasis">never</EM
> be used in configuration
files. </P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-17">33.8.17 switch</A
></H3
><p class="refpurpose">Built sequences based on service switch</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-39239"></A
>The <code class="literal">switch</CODE
> class is used internally by <em class="emphasis">sendmail</EM
> to create
<code class="literal">sequence</CODE
> classes of maps based on external service-switch
files. Recall that the lines inside a service-switch file look like this:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="replaceable"><i>service  how how</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">as, for example:</P
><p class="para"><blockquote class="screen"><pre class="screen">aliases   files nis</PRE
></BLOCKQUOTE
></P
><p class="para">This line tells <em class="emphasis">sendmail</EM
> to search for its aliases first in
files then in NIS.</P
><p class="para">To illustrate the <code class="literal">switch</CODE
> class, consider the need to look up
aliases inside rule sets in the same way that <em class="emphasis">sendmail</EM
> looks up
its own aliases.
To do this, you would declare a <code class="literal">switch</CODE
> map, as, for example:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kali switch aliases</PRE
></BLOCKQUOTE
></P
><p class="para">This causes <em class="emphasis">sendmail</EM
> to search for the <code class="replaceable"><i>service</I
></CODE
> named
<code class="literal">aliases</CODE
> in the service-switch file.
In this example it finds such a line, so
for each <code class="replaceable"><i>how</I
></CODE
> that follows the <code class="literal">aliases</CODE
> in that line,
<em class="emphasis">sendmail</EM
> creates a new map with the name <code class="literal">ali</CODE
> followed by a dot
and the <code class="replaceable"><i>how</I
></CODE
>:
[9]</P
><blockquote class="footnote"><p class="para">[9] Your <code class="literal">switch</CODE
> map declaration references the new
maps named <code class="literal">ali.files</CODE
> and <code class="literal">ali.nis</CODE
>.
These must be declared before the <code class="literal">switch</CODE
> map is declared.
Note that <code class="literal">switch</CODE
> map declarations <em class="emphasis">always</EM
> reference 
other map names!</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">aliases   files    <i class="lineannotation">becomes</I
>    ali.files
aliases   nis      <i class="lineannotation">becomes</I
>    ali.nis</PRE
></BLOCKQUOTE
></P
><p class="para">These named maps are then sequenced for you.
Recall that <code class="literal">sequence</CODE
> maps are declared like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name</I
></CODE
> sequence <code class="replaceable"><i>map1 map2,...</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="replaceable"><i>name</I
></CODE
> given to the sequence is <code class="replaceable"><i>ali</I
></CODE
>. In our
example the following sequence is automatically created for you
from your original <code class="literal">switch</CODE
> declaration:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kali sequence ali.files ali.nis</PRE
></BLOCKQUOTE
></P
><p class="para">In rule sets, when you look up aliases with the <code class="literal">ali</CODE
> map:</P
><p class="para"><blockquote class="screen"><pre class="screen">R...        $( ali $1 $)
                <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>
          <i class="lineannotation">the sequence named ali</I
></PRE
></BLOCKQUOTE
></P
><p class="para">you will use the <code class="literal">sequence</CODE
> named <code class="literal">ali</CODE
> that was automatically
built for you from a combination of your original <code class="literal">switch</CODE
> definition
and your service-switch file's <code class="literal">aliases</CODE
> line.
That is, you declare a <code class="literal">switch</CODE
>, but you use a <code class="literal">sequence</CODE
>.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-18">33.8.18 text</A
></H3
><p class="refpurpose">Look up in flat text files</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-39312"></A
>The <code class="literal">text</CODE
> class allows you to look up keys in flat text files.
This technique is vastly less efficient than looking up keys in
real databases, but it can serve as a way to test rules before
implementing them in database form.</P
><p class="para">For the <code class="literal">text</CODE
> map, columns for the key and value are both
measured as an index. That is, the first column is number 0.
To illustrate, consider the following miniconfiguration file
that can be used to check spelling:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kspell text /usr/dict/words
Spell
R$-      $: $( spell $1 $: not in dictionary $)</PRE
></BLOCKQUOTE
></P
><p class="para">The <em class="emphasis">/usr/dict/words</EM
> file contains only a single column of words.
The above rule shows that the key is (by default) the first column (index 0).
And the value is (by default) also the first column (index 0).</P
><p class="para">For more sophisticated applications you can specify the key's column
(with the <code class="literal">-k</CODE
> switch) the value's column (with the <code class="literal">-v</CODE
>
switch) and the column delimiter (with the <code class="literal">-z</CODE
> switch).
To illustrate, consider the need to look up a <em class="emphasis">uid</EM
> in the
<em class="emphasis">/etc/passwd</EM
> file and to return the login name of the user to
whom it belongs:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kgetuid text -k2 -v0 -z: /etc/passwd
R$-      $: $( getuid $1 $)</PRE
></BLOCKQUOTE
></P
><p class="para">The lines of a password file look like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">ftp:*:1092:255:File Transfer Protocol Program:/u/ftp:/bin/sh</PRE
></BLOCKQUOTE
></P
><p class="para">The third column (where the columns are separated by colons) is
the <em class="emphasis">uid</EM
> field. The first is the login name. Note that
the <code class="literal">-k</CODE
> and <code class="literal">-v</CODE
> switches show these fields as
indexes, where the first is 0 and the third is 2.</P
><p class="para">See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Which Class Uses Which Switches">Table 33.5</A
> in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The switches">Section 33.3.4</A
>
for a list of the <code class="literal">K</CODE
> command switches that can be used with this  
class and the meaning of each.
No debugging switch is available to watch this <code class="literal">text</CODE
> class.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-19">33.8.19 userdb</A
></H3
><p class="refpurpose">Look up in the User Database</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-39349"></A
><a class="indexterm" name="AUTOID-39351"></A
><a class="indexterm" name="AUTOID-39354"></A
>The <code class="literal">userdb</CODE
> class allows you to look things up in the User
Database (see <a class="xref" href="ch33_05.htm" title="The User Database">Section 33.5, "The User Database"</A
> for a full description of
the User Database). The <code class="literal">userdb</CODE
> class is declared with the
<code class="literal">K</CODE
> command like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name</I
></CODE
> userdb <code class="replaceable"><i>switches</I
></CODE
> <code class="replaceable"><i>keyword     </I
></CODE
><i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> V8.7 and above</I
></PRE
></BLOCKQUOTE
></P
><p class="para">Here, the <code class="replaceable"><i>keyword</I
></CODE
> is the name of the field to search and is either
<code class="literal">maildrop</CODE
> or <code class="literal">mailname</CODE
> (see <a class="xref" href="ch33_05.htm" title="The User Database">Section 33.5</A
>).
There is no need to list any files or servers with this command. Those should
already have been declared with the <code class="literal">UserDatabaseSpec</CODE
> (<code class="literal">U</CODE
>) option
(see <a class="xref" href="ch34_08.htm" title="">Section 34.8.75</A
>).</P
><p class="para">One possible use for a <code class="literal">userdb</CODE
> map might be to
check for a local account in the <code class="literal">check_rcpt</CODE
> rule set
(see \#sRULESETS_check_rcpt).
In this example, all valid incoming recipient addresses are listed with
the User Database:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kislocal userdb maildrop
Scheck_rcpt
R$*                     $: $&gt;3 $1               focus on host
R$* &lt;@ $+ &gt; $*          $: $1                   discard host
R$+                     $: $(islocal $1 $: nope $)
Rnope                   $#error $@ 5.1.3 $: &quot;Recipient is not local&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Which Class Uses Which Switches">Table 33.5</A
> in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The switches">Section 33.3.4</A
>
for a list of the <code class="literal">K</CODE
> command switches that can be used with this
class and the meaning of each.
The <code class="literal">-d28</CODE
> debugging switch (see <a class="xref" href="ch37_05.htm" title="">Section 37.5.97, -d28.1</A
>) can be used
to watch this <code class="literal">userdb</CODE
> class in action.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-33-SECT-8-20">33.8.20 user</A
></H3
><p class="refpurpose">Look up local passwd information</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-39394"></A
><a class="indexterm" name="AUTOID-39397"></A
>The <code class="literal">user</CODE
> class is used to look up <em class="emphasis">passwd</EM
>(5) information using
<em class="emphasis">getpwent</EM
>(3).  A password entry typically looks like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">ftp:*:1092:255:File Transfer Protocol Program:/u/ftp:/bin/sh</PRE
></BLOCKQUOTE
></P
><p class="para">Here, there are seven fields, each separated from the others by colon
characters. The key is always compared to the first field. The value
returned is (by default) the first field unless you specify another
field with a <code class="literal">-v</CODE
> switch:</P
><p class="para"><blockquote class="screen"><pre class="screen">K<code class="replaceable"><i>name</I
></CODE
> user -v<i class="lineannotation">field</I
></PRE
></BLOCKQUOTE
></P
><p class="para">&#13;Here, <em class="emphasis">field</EM
> can be either a number 1 through 7 or one of the names
<code class="literal">name</CODE
>, <code class="literal">passwd</CODE
>, <code class="literal">uid</CODE
>, <code class="literal">gid</CODE
>, <code class="literal">gecos</CODE
>,
<code class="literal">dir</CODE
>, or <code class="literal">shell</CODE
>, which correspond to the numbers.
For example, to look up usernames and get the full name (<em class="emphasis">gecos</EM
>) field
returned, you could use something like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kgetgecos user -vgecos
...
R$-        $: $( getgecos $1 $)</PRE
></BLOCKQUOTE
></P
><p class="para">Note that this returns the full <em class="emphasis">gecos</EM
> field in its rawest form.
It is not cleaned up to provide a reliable full name, as is the <code class="literal">$x</CODE
>
macro (see <a class="xref" href="ch31_10.htm" title="">Section 31.10.42, $x</A
>).</P
><p class="para">One possible application for the <code class="literal">user</CODE
> class is in conjunction with
the <code class="literal">check_rcpt</CODE
> rule set (see \#sRULESETS_check_rcpt).
In the following we check to see whether a recipient is a local user
and reject the mail if that is not so:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kislocal user
Scheck_rcpt
R$*                     $: $&gt;3 $1               focus on host
R$* &lt;@ $+ &gt; $*          $: $1                   discard host
R$-                     $: $(islocal $1 $: nope $)
Rnope                   $#error $@ 5.1.3 $: &quot;Recipient is not local&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we focus on the host part with rule set 3, then discard all
but the user part in the second rule. The third rule performs
the lookup. If the user is found, that username is returned unchanged.
If, on the other hand, the user is not found, the token <code class="literal">nope</CODE
> is
returned. The last rule rejects any SMTP RCPT command
that contains a nonlocal user part.</P
><p class="para">See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="Which Class Uses Which Switches">Table 33.5</A
> in <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The switches">Section 33.3.4</A
>
for a list of the <code class="literal">K</CODE
> command switches that can be used with this  
class and the meaning of each.<a class="indexterm" name="AUTOID-39437"></A
><a class="indexterm" name="AUTOID-39438"></A
><a class="indexterm" name="AUTOID-39439"></A
><a class="indexterm" name="AUTOID-39440"></A
></P
></DIV
></BLOCKQUOTE
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch33_07.htm" title="33.7 Pitfalls"><img src="../gifs/txtpreva.gif" alt="Previous: 33.7 Pitfalls" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="sendmail"><img src="../gifs/txthome.gif" alt="sendmail" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="CHAPTER" href="ch34_01.htm" title="34. Options"><img src="../gifs/txtnexta.gif" alt="Next: 34. Options" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">33.7 Pitfalls</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">34. Options</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
