<html><head>
<title>[Chapter 33] 33.4 Use Maps with $( and $) in Rules</TITLE>
<meta name="DC.title" content="sendmail"><meta name="DC.creator" content="Bryan Costales &amp; Eric Allman"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T20:25:15Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-222-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch33_01.htm" title="33. Database Macros"><link rel="prev" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="33.3 The K Configuration Command"><link rel="next" href="ch33_05.htm" title="33.5 The User Database"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="sendmail" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="sendmail"><area shape="RECT" coords="467,0,514,18" href="../search/ssrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="33.3 The K Configuration Command"><img src="../gifs/txtpreva.gif" alt="Previous: 33.3 The K Configuration Command" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 33<br>Database Macros</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch33_05.htm" title="33.5 The User Database"><img src="../gifs/txtnexta.gif" alt="Next: 33.5 The User Database" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="SML2-CH-33-SECT-4">33.4 Use Maps with $( and $) in Rules</A
></H2
><p class="para"><a class="indexterm" name="SML2-CH-33-IX-OPERATORS-DOLLAR-OPERATORS-AND-PAREN"></A
>The information in database files is accessed for use in the RHS of
rules. This is the syntax:</P
><p class="para"><blockquote class="screen"><pre class="screen">$( <code class="replaceable"><i>name key </I
></CODE
>$)</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;The <code class="replaceable"><i>key</I
></CODE
> is looked up in the database whose symbolic name
(as declared with the <code class="literal">K</CODE
> configuration command) is <code class="replaceable"><i>name</I
></CODE
>
(see <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The K Configuration Command">Section 33.3</A
>)
If the <code class="replaceable"><i>key</I
></CODE
> is found, the entire expression, including
the <code class="literal">$(</CODE
> and <code class="literal">$)</CODE
>, is replaced with the value from the
database entry for that <code class="replaceable"><i>key</I
></CODE
>. Any <code class="replaceable"><i>suffix</I
></CODE
>, as specified
with the <code class="literal">-a</CODE
> switch (see <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="-a  append tag on successful match (V8.1 and above)">Section 33.3.4.2</A
>)
in the <code class="literal">K</CODE
> configuration declaration for <code class="replaceable"><i>name</I
></CODE
>,
is appended to the data. If the <code class="literal">key</CODE
> is not found, the
entire expression is replaced with <code class="literal">key</CODE
>.
If the <code class="literal">$)</CODE
> is omitted, all tokens up to but excluding
the tab and comment, or
end-of-line if there is no comment, are taken as the key.
To illustrate one use for <code class="literal">$(</CODE
> and <code class="literal">$)</CODE
>,
see the following rule:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$- . uucp      $: $( uucp $1.uucp $)</PRE
></BLOCKQUOTE
></P
><p class="para">and the following <code class="literal">K</CODE
> command:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kuucp hash /etc/uucp.db</PRE
></BLOCKQUOTE
></P
><p class="para">This associates the symbolic name <code class="literal">uucp</CODE
> with a <code class="literal">hash</CODE
>
class file called <code class="literal">/etc/uucp.db</CODE
>. 
If the <em class="emphasis">uucp.db</EM
> database contained entries like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">lady.uucp    lady.localuucp
sonya.uucp   sonya.localuucp</PRE
></BLOCKQUOTE
></P
><p class="para">then a workspace of <code class="literal">lady.uucp</CODE
> would match the LHS, so the
RHS would look up <code class="literal">$1.uucp</CODE
> (thus <code class="literal">lady.uucp</CODE
>) in the
<em class="emphasis">uucp.db</EM
> database. Because <code class="literal">lady.uucp</CODE
> is found, the
entire <code class="literal">$(</CODE
> to <code class="literal">$)</CODE
> RHS expression is replaced with
<code class="literal">lady.localuucp</CODE
> from the database. Any UUCP hosts other
than <code class="literal">lady</CODE
> or <code class="literal">sonya</CODE
> would not be found in the
database, so the RHS expression would become the original workspace,
unchanged.</P
><p class="para"><a class="indexterm" name="AUTOID-38061"></A
>Note that the entire RHS is prefixed with a <code class="literal">$:</CODE
>. 
This prevents <em class="emphasis">sendmail</EM
>
from re-testing with the LHS after the RHS rewrite. If this prefix
were omitted, endless looping could occur.</P
><p class="para">Also note that the <code class="literal">-a</CODE
> switch of the <code class="literal">K</CODE
> command can be used to
simplify the writing of this rule. For example:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kuucp dbm <code class="userinput"><b>-a.localuucp</B
></CODE
> /etc/uuhosts</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">-a</CODE
>
switch tells <em class="emphasis">sendmail</EM
> to append the text <code class="literal">.localuucp</CODE
>
to all successful lookups. Thus the preceding database can be
simplified to look like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">lady.uucp    lady
sonya.uucp   sonya</PRE
></BLOCKQUOTE
></P
><p class="para">But the preceding rule remains the same:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$- . uucp      $: $( uucp $1.uucp $)</PRE
></BLOCKQUOTE
></P
><p class="para">Beyond the simply macros and positional operators that we have shown,
the <code class="replaceable"><i>key</I
></CODE
> part can use other operators and forms of macros.
For example, delayed expansion macros may be useful:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$&amp;s       $: $( uucp $&amp;s $)</PRE
></BLOCKQUOTE
></P
><p class="para">Here, the sender's host is looked up to see whether it is a UUCP host.
The <code class="literal">$&amp;</CODE
> prefix (see <a class="xref" href="ch31_05.htm" title="Use Value as Is with $&amp;">Section 31.5.3, "Use Value as Is with $&amp;"</A
>)
prevents the <code class="literal">s</CODE
> macro from being expanded
as the configuration file is read. Instead, its value will change with
each piece of mail that is processed.</P
><p class="para">Additional examples of database lookups are given with the
individual class descriptions at the end of this chapter.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-33-SECT-4-1">33.4.1 Specify a Default with $:</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-38093"></A
><a class="indexterm" name="AUTOID-38096"></A
><a class="indexterm" name="AUTOID-38099"></A
>V8 <em class="emphasis">sendmail</EM
> offers the <code class="literal">$:</CODE
> operator
as an alternative to the <code class="literal">-a</CODE
> switch (or for use in conjunction
with it).
The <code class="literal">$:</CODE
> operator, when it stands between the <code class="literal">$(</CODE
> and <code class="literal">$)</CODE
>,
specifies a default to use instead of the <code class="replaceable"><i>key</I
></CODE
>, should a lookup fail:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$- . uucp      $: $( uucp $1 $: $1.uucp $)</PRE
></BLOCKQUOTE
></P
><p class="para">Here, the <code class="literal">$-</CODE
> part of the LHS is looked up in the <code class="literal">uucp</CODE
>
database. If it is found, the <code class="literal">$(</CODE
> to <code class="literal">$)</CODE
> of the RHS
expression is replaced by the data from that database. If it is not found,
the <code class="literal">$:</CODE
> causes the expression to be replaced with the <code class="literal">$-</CODE
>
LHS part and a <code class="literal">.uucp</CODE
> suffix (<code class="literal">$1.uucp</CODE
>).</P
><p class="para">This version of our rule further simplifies the contents of
the database file. With this rule, the database file would
contain information such as the following:</P
><p class="para"><blockquote class="screen"><pre class="screen">lady    lady
sonya   sonya</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">-a</CODE
> is still used as before to append a <code class="literal">.localuucp</CODE
>
to each successful match.</P
><p class="para"><blockquote class="screen"><pre class="screen">Kuucp dbm -a.localuucp /etc/uuhosts</PRE
></BLOCKQUOTE
></P
><p class="para">In the RHS expression the <code class="literal">$:</CODE
> must follow the <code class="replaceable"><i>key</I
></CODE
>
or it loses its special meaning:</P
><p class="para"><blockquote class="screen"><pre class="screen">$( <code class="replaceable"><i>name key </I
></CODE
>$: <code class="replaceable"><i>default </I
></CODE
>$)</PRE
></BLOCKQUOTE
></P
><p class="para">If the <code class="literal">$:</CODE
><code class="replaceable"><i>default</I
></CODE
> wrongly precedes the <code class="replaceable"><i>key</I
></CODE
>, 
it is used as the key, lookups fail, and replacements are
not as expected.
If the <code class="literal">$:</CODE
> is present but
the <code class="replaceable"><i>default</I
></CODE
> is missing, a failed lookup returns an empty workspace.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-33-SECT-4-2">33.4.2 Specify Numbered Substitution with $@</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-38144"></A
><a class="indexterm" name="AUTOID-38147"></A
>For more complex database substitutions, V8 <em class="emphasis">sendmail</EM
>
offers the <code class="literal">$@</CODE
> operator for use in the RHS with the <code class="literal">$(</CODE
> and
<code class="literal">$)</CODE
> expression.
There may be multiple
<code class="literal">$@</CODE
> prefixed texts between the <code class="replaceable"><i>key</I
></CODE
>
and the <code class="literal">$:</CODE
> (if present) or the <code class="literal">$)</CODE
>.</P
><p class="para"><blockquote class="screen"><pre class="screen">$(<code class="replaceable"><i>name key </I
></CODE
>$@<code class="replaceable"><i>text1 </I
></CODE
>$@<code class="replaceable"><i>text2 </I
></CODE
>$:<code class="replaceable"><i>default </I
></CODE
>$)</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;Each <code class="literal">$@</CODE
><code class="replaceable"><i>text</I
></CODE
> expression is numbered by position
(from left to right):</P
><p class="para"><blockquote class="screen"><pre class="screen">$(<code class="replaceable"><i>name key </I
></CODE
>$@<code class="replaceable"><i>text1 </I
></CODE
>$@<code class="replaceable"><i>text2 </I
></CODE
>$:<code class="replaceable"><i>default </I
></CODE
>$)
              <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>        <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>
              <i class="lineannotation">1</I
>        <i class="lineannotation">2</I
></PRE
></BLOCKQUOTE
></P
><p class="para">In this numbering scheme the <code class="replaceable"><i>key</I
></CODE
> is always number 0, even
if no <code class="literal">$@</CODE
>'s are listed.</P
><p class="para">These numbers correspond to literal <code class="literal">%</CODE
><code class="replaceable"><i>digit</I
></CODE
> expressions in the
data portion of the database. For example:</P
><p class="para"><blockquote class="screen"><pre class="screen">lady   %0!%1@%2</PRE
></BLOCKQUOTE
></P
><p class="para">When a lookup of the <code class="literal">key</CODE
> in the RHS of the rule is successful,
the returned value is examined for <code class="literal">%</CODE
><code class="replaceable"><i>digit</I
></CODE
> expressions. Each such
expression is replaced by its corresponding <code class="literal">$@</CODE
><code class="replaceable"><i>text</I
></CODE
>
from the rule. In the case of the above database, <code class="literal">%0</CODE
>
would be replaced with <code class="literal">lady</CODE
> (the <code class="replaceable"><i>key</I
></CODE
>), <code class="literal">%1</CODE
>
with <code class="literal">text1</CODE
>, and <code class="literal">%2</CODE
> with <code class="literal">text2</CODE
>.</P
><p class="para">To illustrate, consider the above database entry and the following rule:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$- @ $-.uucp   $: $(uucp $2 $@$1 $@mailhost $:$1.$2.uucp $)</PRE
></BLOCKQUOTE
></P
><p class="para">If the workspace contains the address <em class="emphasis">joe@lady.uucp</EM
>,
the LHS matches. The RHS rewrites only once because
it is prefixed with the <code class="literal">$:</CODE
> operator. The expression
between the <code class="literal">$(</CODE
> and <code class="literal">$)</CODE
> causes the second <code class="literal">$-</CODE
>
from the LHS (the <code class="literal">$2</CODE
>, the <code class="replaceable"><i>key</I
></CODE
>)
to be looked up in the database
whose symbolic name is <code class="literal">uucp</CODE
>. Since <code class="literal">$2</CODE
> references
<code class="literal">lady</CODE
> from the workspace, <code class="literal">lady</CODE
> is found and the
data (<code class="literal">%0!%1@%2</CODE
>) are used to rewrite. The <code class="literal">%0</CODE
> is replaced
by <code class="literal">lady</CODE
> (the <code class="replaceable"><i>key</I
></CODE
> via <code class="literal">$2</CODE
>).
The <code class="replaceable"><i>text</I
></CODE
> for the first <code class="literal">$@</CODE
> (<code class="literal">$1</CODE
> or <code class="literal">joe</CODE
>)
then replaces the <code class="literal">%1</CODE
>. Then the second <code class="replaceable"><i>text</I
></CODE
> for
the second <code class="literal">$@</CODE
> (<code class="literal">mailhost</CODE
>) replaces the <code class="literal">%2</CODE
>.
Thus the address <em class="emphasis">joe@lady.uucp</EM
> is rewritten to become
<em class="emphasis">lady!joe@mailhost</EM
>.</P
><p class="para">If a different host, other than <code class="literal">lady</CODE
>, appeared in the workspace,
this RHS would use the <code class="literal">$:</CODE
><code class="replaceable"><i>default</I
></CODE
> part. Thus the address
<em class="emphasis">joe@foo.uucp</EM
> would become (via the <code class="literal">$:$1.$2.uucp</CODE
>)
<em class="emphasis">joe@foo.uucp</EM
>. That is, any address that is not found
in the database would remain unchanged.</P
><p class="para">If there are more <code class="literal">$@</CODE
><code class="replaceable"><i>text</I
></CODE
> expressions in the RHS than
there are numbers in the value, the excess <code class="literal">$@</CODE
><code class="replaceable"><i>text</I
></CODE
> parts
are ignored. If a <code class="literal">%</CODE
><code class="replaceable"><i>digit</I
></CODE
> in the data references a
nonexistent <code class="literal">$@</CODE
><code class="replaceable"><i>text</I
></CODE
>, it is simply removed during the
rewrite.</P
><p class="para">All <code class="literal">$@</CODE
><code class="replaceable"><i>text</I
></CODE
> expressions must lie between the <code class="replaceable"><i>key</I
></CODE
>
and the <code class="literal">$:</CODE
><code class="replaceable"><i>default</I
></CODE
> (if present). If any follow the
<code class="literal">$:</CODE
><code class="replaceable"><i>default</I
></CODE
>, they become part of the default and cease
to reference any <code class="literal">%</CODE
><code class="replaceable"><i>digits</I
></CODE
>.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-33-SECT-4-3">33.4.3 $[ and $]: A Special Case</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-38258"></A
><a class="indexterm" name="AUTOID-38261"></A
><a class="indexterm" name="AUTOID-38264"></A
>The special database class called <em class="emphasis">host</EM
>
can be declared to modify name-server lookups with <code class="literal">$[</CODE
> and <code class="literal">$]</CODE
>.
The special symbolic name and class pair, <code class="literal">host</CODE
> and <code class="literal">host</CODE
>,
is declared for use with the <code class="literal">$(</CODE
> and <code class="literal">$)</CODE
> operators, like
this:</P
><p class="para"><blockquote class="screen"><pre class="screen">Khost host <code class="replaceable"><i>-a.</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="replaceable"><i>-a</I
></CODE
> switch was discussed earlier in this chapter.
Here, it is sufficient to note how it is used
in resolving fully qualified domain
names with the <code class="literal">$[</CODE
> and <code class="literal">$]</CODE
> operators in the RHS of rules.
Under V8 <em class="emphasis">sendmail</EM
>, <code class="literal">$[</CODE
> and <code class="literal">$]</CODE
>
are a special case of the following database lookup:</P
><p class="para"><blockquote class="screen"><pre class="screen">$(host <code class="replaceable"><i>foo</I
></CODE
> $)</PRE
></BLOCKQUOTE
></P
><p class="para">A successful match will ordinarily append
a dot to a successfully resolved hostname.</P
><p class="para">When a
<em class="emphasis">host</EM
> class is declared with the <code class="literal">K</CODE
> command, any suffix
of the <code class="literal">-a</CODE
> replaces the dot as the character or characters added.
[4]
For example:</P
><blockquote class="footnote"><p class="para">[4] This happens only for V2 and higher configuration files. Below that level,
the dot is not appended unless it is specifically added by the
<code class="literal">-a</CODE
> of the <code class="literal">K</CODE
> command.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">$[ foo $]     <i class="lineannotation">found so rewritten as</I
> foo.domain.

Khost host -a
$[ foo $]     <i class="lineannotation">found so rewritten as</I
> foo.domain

Khost host -a.yes
$[ foo $]     <i class="lineannotation">found so rewritten as</I
> foo.domain.yes</PRE
></BLOCKQUOTE
></P
><p class="para">The first line above shows the default action of the <code class="literal">$[</CODE
> and
<code class="literal">$]</CODE
> operators in the RHS of rules. If <code class="literal">foo</CODE
> can be
fully qualified, its fully qualified name becomes the rewritten
value of the RHS and has a dot appended. The next two lines
show the <code class="literal">-a</CODE
> of <code class="literal">host host</CODE
> with no suffix (note
that with no suffix the <code class="literal">-a</CODE
> is optional).
In this configuration file, the fully qualified name has nothing
(not even a dot) appended. The last two lines show a configuration
file with a <code class="literal">.yes</CODE
> as the suffix. This time, the
fully qualified name has a <code class="literal">.yes</CODE
> appended instead of the
dot.<a class="indexterm" name="AUTOID-38309"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="33.3 The K Configuration Command"><img src="../gifs/txtpreva.gif" alt="Previous: 33.3 The K Configuration Command" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="sendmail"><img src="../gifs/txthome.gif" alt="sendmail" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch33_05.htm" title="33.5 The User Database"><img src="../gifs/txtnexta.gif" alt="Next: 33.5 The User Database" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">33.3 The K Configuration Command</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">33.5 The User Database</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
