<html><head>
<title>[Chapter 19] 19.6 Alphabetized m4 Macros</TITLE>
<meta name="DC.title" content="sendmail"><meta name="DC.creator" content="Bryan Costales &amp; Eric Allman"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T19:18:35Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-222-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch19_01.htm" title="19. V8 m4 Configuration"><link rel="prev" href="ch19_05.htm" title="19.5 Pitfalls"><link rel="next" href="ch20_01.htm" title="20. The checkcompat() Cookbook"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="sendmail" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="sendmail"><area shape="RECT" coords="467,0,514,18" href="../search/ssrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch19_05.htm" title="19.5 Pitfalls"><img src="../gifs/txtpreva.gif" alt="Previous: 19.5 Pitfalls" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 19<br>V8 m4 Configuration</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="CHAPTER" href="ch20_01.htm" title="20. The checkcompat() Cookbook"><img src="../gifs/txtnexta.gif" alt="Next: 20. The checkcompat() Cookbook" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="SML2-CH-19-SECT-6">19.6 Alphabetized m4 Macros</A
></H2
><p class="para">In this section we detail each of the general macros
available when configuring with the <em class="emphasis">m4</EM
> technique.
Here we list them in alphabetical order.</P
><p class="para">This reference is not comprehensive. Options, macros, and delivery
agents, for example,
are described in chapters dedicated to those topics.</P
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-1">19.6.1 BITNET-RELAY</A
></H3
><p class="refpurpose">The BITNET relay</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14237"></A
>The host that will forward BITNET-addressed email.
If not defined, the .BITNET pseudo-domain won't work.
See <a class="xref" href="ch31_10.htm" title="">Section 31.10.5</A
> for a description of this relay
and of the <code class="literal">$B</CODE
> macro.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-2">19.6.2 DECNET-RELAY</A
></H3
><p class="refpurpose">The DECnet relay</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14249"></A
>The host that will forward DECnet addressed email.
If not defined, the .DECNET pseudo-domain won't work,
nor will an address of the form <em class="emphasis">node::user</EM
>.
See <a class="xref" href="ch31_10.htm" title="">Section 31.10.9</A
> for a description of this relay
and of the <code class="literal">$C</CODE
> macro.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-3">19.6.3 DOL</A
></H3
><p class="refpurpose">Insert literal $ in m4 output</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14262"></A
>Ordinarily,
the <code class="literal">$</CODE
> character is interpreted by <em class="emphasis">m4</EM
> inside its <code class="literal">define</CODE
>
expressions.
But for ambitious undertakings, such as designing your own
DOMAIN, FEATURE, or HACK files, you may need to include reference
to a macro or operator (and hence a <code class="literal">$</CODE
>)
inside an <em class="emphasis">m4</EM
> <code class="literal">define</CODE
> expression. 
The way you do this is with the DOL <em class="emphasis">m4</EM
> macro. For example,</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`DOWN', `R DOL(*) &lt; @ $1 &gt; DOL(*)    DOL(1) &lt; @ $2 &gt; DOL(2)')</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we define the <em class="emphasis">m4</EM
> macro named DOWN, which takes two arguments (<code class="literal">$1</CODE
>
and <code class="literal">$2</CODE
>). When used in one of your <code class="literal">.m4</CODE
> files,</P
><p class="para"><blockquote class="screen"><pre class="screen">DOWN(<em class="emphasis">badhost, </EM
><em class="emphasis">outhost)</EM
></PRE
></BLOCKQUOTE
></P
><p class="para">it creates a rule by substituting the above arguments for the
corresponding <code class="literal">$1</CODE
> and <code class="literal">$2</CODE
> in its original definition:</P
><p class="para"><blockquote class="screen"><pre class="screen">R $* &lt; @ outhost &gt; $2</PRE
></BLOCKQUOTE
></P
><p class="para">The DOL <em class="emphasis">m4</EM
> macro in the original definition allowed the insertion
of <code class="literal">$</CODE
> characters (such as <code class="literal">$*</CODE
>) while protecting those
characters from being wrongly interpreted by <em class="emphasis">m4</EM
>.</P
><p class="para">Needless to say, you should <em class="emphasis">never</EM
> redefine the DOL macro.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-4">19.6.4 EXPOSED-USER</A
></H3
><p class="refpurpose">Masquerade all but these</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14302"></A
>Class macro <code class="literal">$=E</CODE
> is used by the V8 configuration file to hold
a list of usernames that should never be masqueraded (even if
masquerade is enabled with the MASQUERADE_AS m4 macro). By default,
the user <em class="emphasis">root</EM
> is always in that class.
There are two ways to add usernames to the class <code class="literal">E</CODE
>.
They can be added individually with the EXPOSED_USER <em class="emphasis">m4</EM
> macro:</P
><p class="para"><blockquote class="screen"><pre class="screen">EXPOSED_USER(<code class="replaceable"><i>user</I
></CODE
>)</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we cause the name <code class="replaceable"><i>user</I
></CODE
> to be appended to the class
<code class="literal">E</CODE
>. This is identical to the following use of LOCAL_CONFIG to add to the class directly:</P
><p class="para"><blockquote class="screen"><pre class="screen">LOCAL_CONFIG
CE user</PRE
></BLOCKQUOTE
></P
><p class="para">If you wish to store the list of nonmasqueradable users in
an external file, you can cause that file to be read with
an <code class="literal">F</CODE
> configuration command (see <a class="xref" href="ch32_01.htm" title="The F Class Command">Section 32.1.2, "The F Class Command"</A
>):</P
><p class="para"><blockquote class="screen"><pre class="screen">LOCAL_CONFIG
FE/usr/local/mail/visible.users</PRE
></BLOCKQUOTE
></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-5">19.6.5 FAX-RELAY</A
></H3
><p class="refpurpose">The FAX relay</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14329"></A
>The host that will forward email faxes.
If not defined, and if you don't have a <code class="literal">fax</CODE
> delivery agent on your
local machine, the .FAX pseudo-domain won't work.
See <a class="xref" href="ch31_10.htm" title="">Section 31.10.15</A
> for a description of this relay
and of the <code class="literal">$F</CODE
> macro. 
Note that if you service faxes locally, you will also need to declare the <em class="emphasis">fax</EM
> delivery
agent with the MAILER() <em class="emphasis">m4</EM
> command instead (see <a class="xref" href="ch19_03.htm#SML2-CH-19-SECT-3-2" title="MAILER()">Section 19.3.2</A
>).</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-6">19.6.6 FEATURE(allmasquerade)</A
></H3
><p class="refpurpose">Masquerade the sender too</P
>(V8.2 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="SML2-CH-19-IX-FEATURE-MACRO-M4"></A
><a class="indexterm" name="AUTOID-14347"></A
><a class="indexterm" name="AUTOID-14351"></A
><a class="indexterm" name="AUTOID-14355"></A
><a class="indexterm" name="AUTOID-14357"></A
>If a MASQUERADE_AS host is defined,
that hostname replaces all sender addresses.
The <code class="literal">allmasquerade</CODE
>
feature causes header recipient addresses to also have that treatment.</P
><p class="para">But note that this feature can be extremely risky and that it should be used only 
if the MASQUERADE_AS host has an <em class="emphasis">aliases</EM
> file that is a 
superset of all <em class="emphasis">aliases</EM
> files and a <em class="emphasis">passwd</EM
> file
that is a superset of all <em class="emphasis">passwd</EM
> files at your site.
To illustrate the risk, consider a situation in which the masquerade host is named
<em class="emphasis">hub.domain</EM
> and mail is being sent from the local
workstation. If a local alias exists, say <em class="emphasis">thishost-users</EM
>,
that does not also exist on the masquerade host, this
<code class="literal">allmasquerade</CODE
> feature will cause the <code class="literal">To:</CODE
> header
to go out as:</P
><p class="para"><blockquote class="screen"><pre class="screen">To: thishostusers@hub.domain</PRE
></BLOCKQUOTE
></P
><p class="para">Here, the address <em class="emphasis">thishostusers</EM
> does not exist on the masquerade host,
and as a consequence, replies to messages containing this header will bounce.</P
><p class="para">The form for the <code class="literal">allmasquerade</CODE
> feature is:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`MASQUERADE_AS', `<code class="replaceable"><i>your.hub.domain</I
></CODE
>')
FEATURE(`allmasquerade')</PRE
></BLOCKQUOTE
></P
><p class="para">Note that MASQUERADE_AS (see <a class="xref" href="#SML2-CH-19-SECT-6-42" title="">Section 19.6.42</A
>) must also be
defined and must contain a fully qualified hostname.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-7">19.6.7 FEATURE(always-add-domain)</A
></H3
><p class="refpurpose">Add the local domain even on local mail</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14388"></A
><a class="indexterm" name="AUTOID-14390"></A
>Normally, header recipient addresses and header and envelope sender addresses
that select the <code class="literal">local</CODE
> or <code class="literal">prog</CODE
> delivery agents
are left as is. If the <code class="literal">always_add_domain</CODE
> feature is defined,
local addresses that lack a host part have an <code class="literal">@</CODE
>
and the MASQUERADE_AS host appended (if it is defined).
If MASQUERADE_AS is not defined, an <code class="literal">@</CODE
> and 
the value of <code class="literal">$j</CODE
> (see <a class="xref" href="ch31_10.htm" title="">Section 31.10.20, $j</A
>) are appended.</P
><p class="para">The form for the <em class="emphasis">always_add_domain</EM
> feature is</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`always_add_domain')</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">always_add_domain</CODE
> feature is safe and recommended. It ensures
that all addresses that are locally delivered will be fully qualified.
See the <code class="literal">allmasquerade</CODE
> feature for a description of the
risks surrounding masquerading addresses.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-8">19.6.8 FEATURE(bestmx-is-local)</A
></H3
><p class="refpurpose">Accept best MX record as local if in $=w</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14415"></A
>The class <code class="literal">w</CODE
> (see <a class="xref" href="ch32_05.htm" title="">Section 32.5.8</A
>) is
recommended for defining which hostnames will be treated
as being equivalent to the local hostname.
That method, however, requires that the
mail administrator manually keep the class up to date.</P
><p class="para"><a class="indexterm" name="AUTOID-14420"></A
>As an alternative, for low- to medium-volume sites, use the <code class="literal">bestmx_is_local</CODE
> feature. When enabled, this feature
looks up each hostname that it finds in the <code class="literal">bestmx</CODE
> internal database
map (see <a class="xref" href="ch33_08.htm" title="">Section 33.8.2, bestmx</A
>). That map returns the best MX
record (if it is known) for that name. That returned record is then
compared to the list of hostnames in class <code class="literal">w</CODE
> to see whether it is
equivalent to the local host. If so, the address is accepted for local
delivery.</P
><p class="para">The form for the <code class="literal">bestmx_is_local</CODE
> feature:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`bestmx_is_local')</PRE
></BLOCKQUOTE
></P
><p class="para">If you wish to limit lookups to a small list of domains, you can add them
as a second argument:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`bestmx_is_local', `<i class="lineannotation">domain1 domain2 etc.</I
>')</PRE
></BLOCKQUOTE
></P
><p class="para">The list of domains is added to the class <code class="literal">$=B</CODE
>. Only hosts
in those domains are allowed to list your site as the best MX
record for use with this feature.</P
><p class="para"><a class="indexterm" name="AUTOID-14438"></A
>Use of this feature is best limited to low-volume sites. Looking up
every address in the <code class="literal">bestmx</CODE
> map can cause numerous DNS
enquiries. At high-volume sites the magnitude of extra DNS
enquiries can adversely tax the system.</P
><p class="para">There is also a risk to this feature. Someone could create an MX record
for your site without your knowledge. Bogus
mail might then be accepted at your site without your permission.</P
><p class="para"><blockquote class="screen"><pre class="screen">bogus.site.com.    IN MX 0 your.real.domain</PRE
></BLOCKQUOTE
></P
><p class="para">Here, mail to <em class="emphasis">bogus.site.com</EM
> would be sent to your site, where the name
<em class="emphasis">bogus.site.com</EM
> would be looked up with the
<code class="literal">bestmx_is_local</CODE
> feature. Your <em class="emphasis">sendmail</EM
> would find itself
listed as MX for <em class="emphasis">bogus.site.com</EM
> and so would accept the
bogus mail and attempt to deliver it locally. If the bogus name were
designed to discredit you, it could be set to
<em class="emphasis">sex.bogus.site.com</EM
> for example, and mail to
<em class="emphasis">root@sex.</EM
> would be delivered to you without your
knowing the reason.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-9">19.6.9 FEATURE(bitdomain)</A
></H3
><p class="refpurpose">Convert BITNET addresses into Internet addresses</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14461"></A
><a class="indexterm" name="AUTOID-14463"></A
><a class="indexterm" name="AUTOID-14465"></A
>Many Internet hosts have BITNET addresses that are separate
from their Internet addresses. For example, the host <em class="emphasis">icsi.berkeley.edu</EM
>
has the registered 
BITNET name <em class="emphasis">ucbicsi</EM
>. If a user tried to reply
to an address such as:</P
><p class="para"><blockquote class="screen"><pre class="screen">user@ucbicsi.bitnet</PRE
></BLOCKQUOTE
></P
><p class="para">that mail would fail. To help with translations from registered BITNET
names to Internet addresses, John Gardiner Myers has 
supplied the <code class="literal">bitdomain</CODE
> program in the <em class="emphasis">contrib</EM
> subdirectory.
It produces output in the form</P
><p class="para"><blockquote class="screen"><pre class="screen">ucbicsi    icsi.berkeley.edu</PRE
></BLOCKQUOTE
></P
><p class="para">that can be put into database form for use with the <code class="literal">K</CODE
>
configuration command. The <code class="literal">bitdomain</CODE
> feature causes rules
to be included in the configuration file that perform the necessary
translation:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$* &lt; @ $+ .BITNET &gt; $*         $: $1 &lt; @ $(bitdomain $2 $: $2.BITNET $) &gt; $3</PRE
></BLOCKQUOTE
></P
><p class="para">Note that this rule requires BITNET addresses to be so identified
with a <code class="literal">.BITNET</CODE
> suffix. If the address, without the suffix, is found
in the <code class="literal">bitdomain</CODE
> database, the Internet equivalent address is
used in its place. (See also the UUCPSMTP <em class="emphasis">m4</EM
> macro and the <code class="literal">domaintable</CODE
> feature.</P
><p class="para">The form of the <code class="literal">bitdomain</CODE
> feature is</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`bitdomain')</PRE
></BLOCKQUOTE
></P
><p class="para">This declaration causes the following <code class="literal">K</CODE
> configuration command
to be included in addition to the above rule:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kbitdomain hash -o /etc/bitdomain.db</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">bitdomain</CODE
> feature is one of those that can take an argument
to specify a different form of or name for the database:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`bitdomain',`dbm -o /etc/bitdomain')</PRE
></BLOCKQUOTE
></P
><p class="para">The extra argument causes the above <code class="literal">K</CODE
> command to be replaced
with the following one:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kbitdomain dbm -o /etc/bitdomain</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">bitdomain</CODE
> feature is safe. You can routinely include it in
all configuration files. The database lookup is performed only if the
<code class="literal">.BITNET</CODE
> suffix is present and the database file exists.</P
><p class="para">&#13;Note that you must also define BITNET_RELAY 
(see <a class="xref" href="ch31_10.htm" title="">Section 31.10.5</A
>) if you want <code class="literal">.BITNET</CODE
>
suffixed mail that is not found in the database to be routed to a relay 
machine. If BITNET_RELAY is not defined, <code class="literal">.BITNET</CODE
>
suffixed mail that is not found in the database is bounced.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-10">19.6.10 FEATURE(domaintable)</A
></H3
><p class="refpurpose">Accept old as equivalent to new domain</P
>(V8.2 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14518"></A
><a class="indexterm" name="AUTOID-14520"></A
><a class="indexterm" name="AUTOID-14523"></A
>Some sites need to use multiple domain names when transitioning from an
old domain to a new one.
The <em class="emphasis">domaintable</EM
> feature enables such transitions to operate smoothly
by rewriting the old domain to the new.
To begin, create a file of the form:</P
><p class="para"><blockquote class="screen"><pre class="screen">other.domain    local.host.domain</PRE
></BLOCKQUOTE
></P
><p class="para">In it the left side of each line has one of possibly many fully qualified hostnames,
and the right side has one of your local hostnames. The <em class="emphasis">makemap</EM
>(1) program
(see <a class="xref" href="ch33_02.htm#SML2-CH-33-SECT-2-1-1" title="Create Files with makemap">Section 33.2, "Create Files with makemap"</A
>) is then used to convert that file into a database.</P
><p class="para">The <code class="literal">domaintable</CODE
> feature causes a rule like this to be included in your configuration
file:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$* &lt; @ $+ &gt; $*                 $: $1 &lt; @ $(domaintable $2 $) &gt; $3</PRE
></BLOCKQUOTE
></P
><p class="para">Here, each host part of an address in rule set 3 is looked up in the
<code class="literal">domaintable</CODE
> map. If it is found, the local name from that map
replaces it, and the address is treated as local.</P
><p class="para">&#13;The <code class="literal">domaintable</CODE
> feature enables this lookup by including a <code class="literal">K</CODE
>
configuration command:&#13;</P
><p class="para"><blockquote class="screen"><pre class="screen">Kdomaintable hash -o /etc/domaintable</PRE
></BLOCKQUOTE
></P
><p class="para">The form of <em class="emphasis">domaintable</EM
> feature is</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`domaintable')</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">domaintable</CODE
> feature is one of those that can take an argument
to specify a different form of or different name for the database:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`domaintable',`dbm -o /etc/domaintable')</PRE
></BLOCKQUOTE
></P
><p class="para">The extra argument causes the above <code class="literal">K</CODE
> command to be replaced
with the following one:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kdomaintable dbm -o /etc/domaintable</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">domaintable</CODE
> feature is safe. You can routinely include it in
all configuration files. The database lookup is performed only if the
database file exists.
(See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="-o  the database file is optional (V8.1 and above)">Section 33.3.4.8, "-o  the database file is optional (V8.1 and above)"</A
> for a description of the <code class="literal">K</CODE
> command's <code class="literal">-o</CODE
>
switch.)</P
><p class="para">Although this feature might appear suitable for a service provider that wishes
to accept mail for client domains, it really is not. Such a service provider should use the
<code class="literal">virtusertable</CODE
> feature instead.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-11">19.6.11 FEATURE(genericstable)</A
></H3
><p class="refpurpose">Transform sender addresses</P
>(V8.8 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14569"></A
><a class="indexterm" name="AUTOID-14571"></A
>The User Database (see <a class="xref" href="ch33_05.htm" title="The User Database">Section 33.5, "The User Database"</A
>) allows recipient addresses to be changed so that
they can be delivered to new hosts. For example, <em class="emphasis">gw@wash.dc.gov</EM
> can
be transformed with the User Database into <em class="emphasis">george@us.edu</EM
>.
The <code class="literal">genericstable</CODE
> provides the same
type of transformation on the sender's address.</P
><p class="para">To begin, create a file of the form</P
><p class="para"><blockquote class="screen"><pre class="screen">user    newuser@new.host.domain</PRE
></BLOCKQUOTE
></P
><p class="para">In it, each line begins with the user part of an address. On the right is
the new address for that sender. One example of a use for this table
might be to make the user <em class="emphasis">news</EM
> always appear as though it
was from the <em class="emphasis">news</EM
> machine:</P
><p class="para"><blockquote class="screen"><pre class="screen">news    news@news.our.domain</PRE
></BLOCKQUOTE
></P
><p class="para">The <em class="emphasis">makemap</EM
>(1) program
(see <a class="xref" href="ch33_02.htm#SML2-CH-33-SECT-2-1-1" title="Create Files with makemap">Section 33.2</A
>) is then used to convert this file into a database:</P
><p class="para"><blockquote class="screen"><pre class="screen">makemap hash <code class="replaceable"><i>file</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">genericstable</CODE
> feature causes a rule like this
to be included in your configuration file:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$+ &lt; @ $=G . &gt;      $: &lt; $(generics $1 $: @ $) &gt; $1 &lt; @ $2 . &gt;</PRE
></BLOCKQUOTE
></P
><p class="para">Here, in rule set 93, any address whose host part is in the class <code class="literal">$=G</CODE
>
has the user part looked up in the <code class="literal">genericstable</CODE
> database.
If it is found, it is rewritten to be the address from the right-hand side
of the original file.
Note that local and non-local hosts can appear in <code class="literal">$=G</CODE
> for use
with this feature. Also note that the members of <code class="literal">$=w</CODE
> are <em class="emphasis">not</EM
>
automatically placed in <code class="literal">$=G</CODE
>.</P
><p class="para">The <code class="literal"><code class="literal">genericstable</CODE
></CODE
> feature enables 
this lookup by including a <code class="literal">K</CODE
> configuration command:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kgenericstable hash -o /etc/genericstable</PRE
></BLOCKQUOTE
></P
><p class="para">The form of <code class="literal">genericstable</CODE
> feature's declaration is</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`genericstable')</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">genericstable</CODE
> feature is one of those that can take an argument
to specify a different form of or a different name for the database:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`genericstable',`dbm -o /etc/genericstable')</PRE
></BLOCKQUOTE
></P
><p class="para">The extra argument causes the above <code class="literal">K</CODE
> command to be replaced
with the following one:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kgenericstable dbm -o /etc/genericstable</PRE
></BLOCKQUOTE
></P
><p class="para">See <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="-o  the database file is optional (V8.1 and above)">Section 33.3.4.8</A
> for a description of the <code class="literal">K</CODE
> command <code class="literal">-o</CODE
>
switch.</P
><p class="para">The <code class="literal">genericstable</CODE
> should be enabled only if you intend to use it.
It causes every sender to be looked up in that database.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-12">19.6.12 FEATURE(limited-masquerade)</A
></H3
><p class="refpurpose">Only masquerade $=M hosts</P
>(V8.8 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14635"></A
><a class="indexterm" name="AUTOID-14637"></A
>Ordinarily, addresses can be masqueraded if they are unqualified (lack a domain part)
or if they match any hostname in <code class="literal">$=w</CODE
>.
Masquerading replaces the hostname
part of an address with
the fully qualified hostname defined by MASQUERADE_AS.</P
><p class="para">Some sites handle mail for multiple domains. For these sites it is
important to recognize all incoming mail as local via <code class="literal">$=w</CODE
>.
On the other hand, only a subset of the hosts in <code class="literal">$=w</CODE
>
should be masqueraded. Consider, for example, the host <em class="emphasis">our.domain</EM
>
that receives mail for the domains <em class="emphasis">his.domain</EM
> and <em class="emphasis">her.domain</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">Cw our.domain his.domain her.domain</PRE
></BLOCKQUOTE
></P
><p class="para">In this scenario we want all but <em class="emphasis">her.domain</EM
> to be masqueraded
as <em class="emphasis">our.domain</EM
>. The way to create such exceptions is with the
<code class="literal">limited_masquerade</CODE
> feature.</P
><p class="para"><a class="indexterm" name="AUTOID-14653"></A
>The <code class="literal">limited_masquerade</CODE
> feature causes masquerading to be based
on <code class="literal">$=M</CODE
> instead of <code class="literal">$=w</CODE
>. You use <code class="literal">limited_masquerade</CODE
>
like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`MASQUERADE_AS', `<code class="replaceable"><i>our.domain</I
></CODE
>')
FEATURE(`limited_masquerade')
LOCAL_CONFIG
Cw our.domain his.domain her.domain
MASQUERADE_DOMAIN(our.domain his.domain)</PRE
></BLOCKQUOTE
></P
><p class="para">MASQUERADE_AS needs to be declared first. Then the <code class="literal">limited_masquerade</CODE
> feature
is declared. Finally, the LOCAL_CONFIG allows two classes
to be declared. The first is the normal <code class="literal">$=w</CODE
>. The second uses
MASQUERADE_DOMAIN to indirectly declare
<code class="literal">$=M</CODE
> and puts a subset of the <code class="literal">$=w</CODE
> hosts in it. Specifically,
the second class omits the <em class="emphasis">her.domain</EM
>.</P
><p class="para">The <code class="literal">limited_masquerade</CODE
> feature causes <em class="emphasis">sendmail</EM
> to masquerade
the hosts in <code class="literal">$=M</CODE
>, instead of the normal masquerading of <code class="literal">$=w</CODE
>.
Note that <code class="literal">$=M</CODE
> is also used to list the domains for the 
<code class="literal">masquerade_entire_domain</CODE
> feature.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-13">19.6.13 FEATURE(local-procmail)</A
></H3
><p class="refpurpose">Use procmail(1) as local delivery agent</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14683"></A
><a class="indexterm" name="AUTOID-14685"></A
>The <em class="emphasis">procmail</EM
> (1) program can handle a user's mail autonomously (for example,
sorting incoming mail into folders based on subject) and can function as
a <em class="emphasis">sendmail</EM
> delivery agent. Some administrators prefer <em class="emphasis">procmail</EM
>(1) in this
latter role over normal UNIX delivery agents. If this is your preference,
you can easily use <em class="emphasis">procmail</EM
>(1) in that role with the
<em class="emphasis">local_procmail</EM
> feature:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`local_procmail')</PRE
></BLOCKQUOTE
></P
><p class="para">The <em class="emphasis">local_procmail</EM
> feature changes the <code class="literal">P=</CODE
>, <code class="literal">F=</CODE
>, and
<code class="literal">A=</CODE
> equates for the <code class="literal">local</CODE
> delivery agent into</P
><p class="para"><blockquote class="screen"><pre class="screen">P=/usr/local/bin/procmail                 <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> see <a class="xref" href="ch30_04.htm" title="">Section 30.4.9, P=</A
></I
>
F=SPfhn                                   <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> see <a class="xref" href="ch30_04.htm" title="">Section 30.4.5, F=</A
></I
>
A=procmail -Y -a $h -d $u                 <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> see <a class="xref" href="ch30_04.htm" title="">Section 30.4.1, A=</A
></I
></PRE
></BLOCKQUOTE
></P
><p class="para">If you have installed <em class="emphasis">procmail</EM
> in a different location, you can specify
that alternative location with a second argument:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`local_procmail', `/admin/mail/bin/procmail')</PRE
></BLOCKQUOTE
></P
><p class="para">If you need to use different <code class="literal">F=</CODE
> flags than those shown, you may
declare new flags with LOCAL_MAILER_FLAGS
(see <a class="xref" href="ch30_04.htm" title="m4 modification of F=">Section 30.4.5.1, "m4 modification of F="</A
>). If you need to specify different command
line arguments, you may do so with LOCAL_MAILER_ARGS
(see <a class="xref" href="ch30_04.htm" title="m4 A= definitions">Section 30.4.1.1, "m4 A= definitions"</A
>).
Both must appear before the feature.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-14">19.6.14 FEATURE(mailertable)</A
></H3
><p class="refpurpose">Database selects new delivery agents</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14724"></A
><a class="indexterm" name="AUTOID-14726"></A
>A <em class="emphasis">mailertable</EM
> is a database that maps <em class="emphasis">host.domain</EM
> names
to special delivery agent and new domain name pairs.
Essentially, it provides a database hook into rule set 0.
The new domain names are used for routing but are not reflected
in the headers of messages.
For example, one mapping in a source text file could be:</P
><p class="para"><blockquote class="screen"><pre class="screen">compuserv.com    smtp:compuserve.com</PRE
></BLOCKQUOTE
></P
><p class="para">The key portion (on the left) must be either a fully qualified
host and domain name, such as <em class="emphasis">lady.bcx.com</EM
>, or a partial
domain specification with a leading dot, such as <em class="emphasis">.bcx.com</EM
>.
On the right
the delivery agent name must be separated from the new domain name by a colon.
The source text file is converted into a database with the 
<em class="emphasis">makemap</EM
>(1) program (see <a class="xref" href="ch33_02.htm#SML2-CH-33-SECT-2-1-1" title="Create Files with makemap">Section 33.2</A
>).
Beginning with V8.8 <em class="emphasis">sendmail</EM
>, the host part can also specify a user:</P
><p class="para"><blockquote class="screen"><pre class="screen">downhost.com     smtp:<code class="userinput"><b>postmaster</B
></CODE
>@mailhub.our.domain</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;The <em class="emphasis">mailertable</EM
> feature causes rules to be included
in your configuration file that look up <em class="emphasis">host.domain</EM
>
names (on the left in the source file) 
in the <em class="emphasis">mailertable</EM
> database:</P
><p class="para"><blockquote class="screen"><pre class="screen">R&lt; $+ &gt; $*                   $: &lt; $(mailertable $1 $) &gt; $2   lookup
R&lt; error : $- $+ &gt; $*        $#error $@ $1 $: $2             check - error?</PRE
></BLOCKQUOTE
></P
><p class="para">Here, the <em class="emphasis">host.domain</EM
> is looked up in the <code class="literal">mailertable</CODE
>
database, and a delivery agent, colon, and domain pair are returned.
If the delivery agent (in <code class="literal">mailertable</CODE
>) is <code class="literal">error</CODE
>,
the <code class="literal">#error</CODE
> delivery agent is called. This allows error messages
to be put into the database, as, for example,</P
><p class="para"><blockquote class="screen"><pre class="screen">badhost    error:nohost mail to badhost is prohibited</PRE
></BLOCKQUOTE
></P
><p class="para">The first token following the <code class="literal">error:</CODE
> is passed in the
<code class="literal">$@</CODE
> part of the <code class="literal">#error</CODE
> delivery agent.
Note that you must use words or <em class="emphasis">&lt;sysexits.h&gt;</EM
> codes here, not DSN
values (such as <code class="literal">3.1.0</CODE
>), because the latter would be wrongly broken up into five tokens.
See <a class="xref" href="ch30_05.htm#SML2-CH-30-SECT-5-2-1" title="The error Delivery Agent">Section 30.5.2, "The error Delivery Agent"</A
> for a full description of the
<code class="literal">#error</CODE
> delivery agent and for tables of useful words and codes for
the <code class="literal">$@</CODE
> part.</P
><p class="para">If the host is found and it is not an <code class="literal">error</CODE
> delivery agent, that
delivery agent is selected. Otherwise, the unresolved <em class="emphasis">host.domain</EM
>
is passed to rule set 90 for further <em class="emphasis">mailertable</EM
> lookups.
Rule set 90 recursively strips the leftmost part of the <em class="emphasis">host.domain</EM
>
away and looks up the result in the <code class="literal">mailertable</CODE
>. This continues
until either a match is found or only a dot is left. Then that dot is looked
up to give you a hook for failed lookups:</P
><p class="para"><blockquote class="screen"><pre class="screen">.     smtp:smarthost</PRE
></BLOCKQUOTE
></P
><p class="para">As a special case, the delivery agent named <code class="literal">local</CODE
> causes slightly different
behavior in that it allows the name of the target user to be listed without a host part:</P
><p class="para"><blockquote class="screen"><pre class="screen">virtual.domain    local:bob</PRE
></BLOCKQUOTE
></P
><p class="para">Here, any mail that is received for the <em class="emphasis">virtual.domain</EM
> is delivered to the user <em class="emphasis">bob</EM
>
on the local machine. If the user part is missing,</P
><p class="para"><blockquote class="screen"><pre class="screen">virtual.domain    local:</PRE
></BLOCKQUOTE
></P
><p class="para">the mail is delivered to the user part of the original address.</P
><p class="para">The form for the <em class="emphasis">mailertable</EM
> feature is:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`mailertable')</PRE
></BLOCKQUOTE
></P
><p class="para">This causes the following database declaration in the configuration file:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kmailertable hash -o /etc/mailertable.db</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;If you wish to use a different form of database
(such as <em class="emphasis">dbm</EM
>), the <em class="emphasis">mailertable</EM
> feature accepts an argument:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`mailertable',`dbm -o /etc/mailertable')</PRE
></BLOCKQUOTE
></P
><p class="para">The <em class="emphasis">mailertable</EM
> feature was inspired by the IDA version of
<em class="emphasis">sendmail</EM
>.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-15">19.6.15 FEATURE(masquerade-entire-domain)</A
></H3
><p class="refpurpose">Masquerade all hosts under a domain</P
>(V8.8 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14807"></A
><a class="indexterm" name="AUTOID-14809"></A
><a class="indexterm" name="AUTOID-14811"></A
>Ordinarily, masquerading transforms any host from a list of hosts
in the class <code class="literal">$=w</CODE
> (see <a class="xref" href="ch32_05.htm" title="">Section 32.5.8</A
>)
into the host defined by MASQUERADE_AS. If domains are also masqueraded with MASQUERADE_DOMAIN, they too are transformed. For example, consider these declarations:</P
><p class="para"><blockquote class="screen"><pre class="screen">MASQUERADE_AS(`our.domain')
MASQUERADE_DOMAIN(`her.domain')</PRE
></BLOCKQUOTE
></P
><p class="para">The first line causes any host part of an address contained in the 
class <code class="literal">$=w</CODE
> to be transformed into <em class="emphasis">our.domain</EM
>.
The second line transforms any domain part of <em class="emphasis">her.domain</EM
>
into <em class="emphasis">our.domain</EM
>.</P
><p class="para">The key point here is that the domain part <em class="emphasis">her.domain</EM
> will
be transformed, whereas hosts under that domain will not be transformed:</P
><p class="para"><blockquote class="screen"><pre class="screen">george@her.domain          <i class="lineannotation"><img src="../chars/rarr.gif" alt="-&gt;"> becomes <img src="../chars/rarr.gif" alt="-&gt;"></I
>    george@our.domain
george@host.her.domain     <i class="lineannotation"><img src="../chars/rarr.gif" alt="-&gt;"> remains <img src="../chars/rarr.gif" alt="-&gt;"></I
>    george@host.her.domain</PRE
></BLOCKQUOTE
></P
><p class="para">If you wish MASQUERADE_DOMAIN to transform all the hosts under the declared
domain, you may use the <code class="literal">masquerade_entire_domain</CODE
> feature:</P
><p class="para"><blockquote class="screen"><pre class="screen">MASQUERADE_AS(`our.domain')
MASQUERADE_DOMAIN(`her.domain')
FEATURE(`masquerade_entire_domain')</PRE
></BLOCKQUOTE
></P
><p class="para">This feature extends masquerading of <em class="emphasis">her.domain</EM
> to include all the hosts
under that domain:</P
><p class="para"><blockquote class="screen"><pre class="screen">george@her.domain          <i class="lineannotation"><img src="../chars/rarr.gif" alt="-&gt;"> becomes <img src="../chars/rarr.gif" alt="-&gt;"></I
>    george@our.domain
george@host.her.domain     <i class="lineannotation"><img src="../chars/rarr.gif" alt="-&gt;"> becomes <img src="../chars/rarr.gif" alt="-&gt;"></I
>    george@our.domain
george@host.sub.her.domain <i class="lineannotation"><img src="../chars/rarr.gif" alt="-&gt;"> becomes <img src="../chars/rarr.gif" alt="-&gt;"></I
>    george@our.domain</PRE
></BLOCKQUOTE
></P
><p class="para">Note that you may masquerade only domains that are <em class="emphasis">under your direct jurisdiction</EM
>
and control. Also note that domain masquerading is intended for actual domains.
Virtual (fictional) domains are better handled with the <code class="literal">virtusertable</CODE
>
feature (see <a class="xref" href="#SML2-CH-19-SECT-6-28" title="">Section 19.6.28</A
>). But note that the
<code class="literal">virtusertable</CODE
> feature handles only incoming mail.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-16">19.6.16 FEATURE(masquerade-envelope)</A
></H3
><p class="refpurpose">Masquerade the envelope too</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14853"></A
><a class="indexterm" name="AUTOID-14855"></A
>Ordinarily, masquerading (see <a class="xref" href="ch19_04.htm#SML2-CH-19-SECT-4-6" title="Masquerading">Section 19.4.4, "Masquerading"</A
>) affects only the headers of email messages,
but sometimes it is also desirable to masquerade the envelope.
[4]
For example, error messages are often returned to the envelope-sender address.
When many hosts are masquerading as a single host, it is often desirable
to have all error messages delivered to that central masquerade host.</P
><blockquote class="footnote"><p class="para">[4] See <a class="xref" href="ch01_07.htm" title="The Envelope">Section 1.7, "The Envelope"</A
> for a description of the envelope and how it differs
from headers.</P
></BLOCKQUOTE
><p class="para">The <code class="literal">masquerade_envelope</CODE
> feature causes masquerading to include
envelope addresses:</P
><p class="para"><blockquote class="screen"><pre class="screen">MASQUERADE_AS(`our.domain')        <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> masquerade headers</I
>
FEATURE(`masquerade_envelope')     <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> also masquerade the envelope</I
></PRE
></BLOCKQUOTE
></P
><p class="para">These <em class="emphasis">mc</EM
> lines cause all envelope addresses (where the host part is declared as part
of class <code class="literal">$=w</CODE
>; see <a class="xref" href="ch32_05.htm" title="">Section 32.5.8</A
>) to be transformed into <em class="emphasis">our.domain</EM
>.
See MASQUERADE_DOMAIN for a way to also masquerade other domains,
and see the <code class="literal">masquerade_entire_domain</CODE
> feature for a way to also masquerade all the hosts under other domains.</P
><p class="para">In general, <code class="literal">masquerade_envelope</CODE
> is recommended for uniform or small
sites. Large or variegated sites may prefer to tailor the envelope on a
subdomain-by-subdomain or host-by-host basis.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-17">19.6.17 FEATURE(nocanonify)</A
></H3
><p class="refpurpose">Don't canonify with $[ and $]</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14884"></A
><a class="indexterm" name="AUTOID-14886"></A
>Ordinarily, as part of rule set 3, <em class="emphasis">sendmail</EM
> tries to canonify (add a domain
to) any hostname that lacks a domain part.<a class="indexterm" name="AUTOID-14890"></A
><a class="indexterm" name="AUTOID-14893"></A
>
It does this by passing the unadorned hostname to the
<code class="literal">$[</CODE
> and <code class="literal">$]</CODE
> operators (see <a class="xref" href="ch28_06.htm#SML2-CH-28-SECT-6-4" title="Canonicalize Hostname: $[ and $]">Section 28.6.6, "Canonicalize Hostname: $[ and $]"</A
>).
The <code class="literal">nocanonify</CODE
> feature prevents <em class="emphasis">sendmail</EM
>
from passing addresses to <code class="literal">$[</CODE
> and <code class="literal">$]</CODE
> for canonicalization.
This is generally suitable for use by sites that 
act only as mail gateways or that have MUAs that do
full canonicalization themselves.</P
><p class="para">The form for the  <code class="literal">nocanonify</CODE
> feature is:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`nocanonify')</PRE
></BLOCKQUOTE
></P
><p class="para">You might also want to use:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`confBIND_OPTS',`-DNSRCH -DEFNAMES')</PRE
></BLOCKQUOTE
></P
><p class="para">to turn off the usual resolver options that perform a similar 
function (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.55, ResolverOptions (I)</A
>).</P
><p class="para">Note that the <code class="literal">nocanonify</CODE
> feature disables only one possible
use of <code class="literal">$[</CODE
> and <code class="literal">$]</CODE
> in the configuration file. If the
<em class="emphasis">nouucp</EM
> feature is omitted
(thereby including UUCP support), addresses
that end in a <code class="literal">.UUCP</CODE
> suffix still have the preceding part
of the address canonified with <code class="literal">$[</CODE
> and <code class="literal">$]</CODE
> even if
the <code class="literal">nocanonify</CODE
> feature was declared.</P
><p class="para">Note that sending out any unqualified addresses can pose a risk.
Be sure to read <a class="xref" href="ch16_05.htm" title="Qualify All Addresses?">Section 16.5, "Qualify All Addresses?"</A
> for a discussion
of why you might not want to use this feature.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-18">19.6.18 FEATURE(nodns)</A
></H3
><p class="refpurpose">Omit DNS support from configuration file</P
>(V8.6)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14931"></A
><a class="indexterm" name="AUTOID-14933"></A
>The V8.6 <em class="emphasis">sendmail</EM
> configuration files usually assumed
that you were using DNS to get host information.
If you did not have DNS available
(for example, if you were on a remote UUCP node),
you could declare that fact:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`nodns')</PRE
></BLOCKQUOTE
></P
><p class="para">This told <em class="emphasis">sendmail</EM
> to assume that DNS was not available.
It did this by <em class="emphasis">not</EM
> setting any of the <em class="emphasis">_res.options</EM
> flag bits.
Note that this was really only a suggestion, because other features
(such as <code class="literal">bestmx_is_local</CODE
> temporarily
set those flag bits and used DNS anyway.</P
><p class="para">Beginning with V8.7 <em class="emphasis">sendmail</EM
>, you should either use the service-switch
file (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.61, ServiceSwitchFile</A
>) to control use of DNS
or compile a sendmail without DNS support (see <a class="xref" href="ch18_08.htm" title="">Section 18.8.23, NAMED-BIND</A
>).</P
><p class="para">Note that the result of a hostname lookup failure differs depending
on whether or not DNS is used. If a hostname is looked up with DNS
and not found, the message will be queued, and the name will be looked up again later.
If the host is looked up in <em class="emphasis">/etc/hosts</EM
>
and the lookup fails, the message bounces.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-19">19.6.19 FEATURE(nouucp)</A
></H3
><p class="refpurpose">Eliminate all UUCP support</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14958"></A
><a class="indexterm" name="AUTOID-14960"></A
>If your site wants nothing to do with UUCP addresses, you
can enable the <code class="literal">nouucp</CODE
> feature. Among the changes this
causes that are the <code class="literal">!</CODE
> character is not recognized
as a separator between hostnames; and all the macros
that relate to UUCP (see <a class="xref" href="ch19_04.htm#SML2-CH-19-SECT-4-6" title="UUCP">Section 19.4.6</A
>) are ignored.
This feature truly means <em class="emphasis">no</EM
> UUCP.</P
><p class="para">You declare <code class="literal">nouucp</CODE
> is like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`nouucp')</PRE
></BLOCKQUOTE
></P
><p class="para">Note that all the other UUCP declarations (such as
UUCP_RELAY) will be ignored if you use <code class="literal">nouucp</CODE
>.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-20">19.6.20 FEATURE(nullclient)</A
></H3
><p class="refpurpose">Relay all mail through a mail host</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-14981"></A
>Some sites have a number of workstations
that never receive mail directly. They are usually 
clustered around a single mail server.
Normally, all clients in a cluster like this
send their mail as though the mail is from the server,
and they relay all mail through that server rather than sending directly.
If you have such a configuration, use</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`nullclient', `server')</PRE
></BLOCKQUOTE
></P
><p class="para">See <a class="xref" href="ch16_01.htm" title="The null.mc File and m4">Chapter 16, <cite class="chapter">The null.mc File and m4</CITE
></A
>, for a lesson in
how to use this feature. Also see the <code class="literal">nocanonify</CODE
> feature, which can also be used with <code class="literal">nullclient</CODE
>.</P
><p class="para">If you wish to prevent the <em class="emphasis">nullclient</EM
> version of <em class="emphasis">sendmail</EM
> from
trying to access <em class="emphasis">aliases</EM
>, add this line to your <code class="literal">.mc</CODE
> file:</P
><p class="para"><blockquote class="screen"><pre class="screen">undefine(`ALIAS_FILE')</PRE
></BLOCKQUOTE
></P
><p class="para">Note that this works only with V8.8 and above <code class="literal">.mc</CODE
> files.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-21">19.6.21 FEATURE(redirect)</A
></H3
><p class="refpurpose">Add support for address.REDIRECT</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15006"></A
><a class="indexterm" name="AUTOID-15008"></A
><a class="indexterm" name="AUTOID-15010"></A
><a class="indexterm" name="AUTOID-15013"></A
>The <code class="literal">redirect</CODE
> feature allows aliases to be set up for retired accounts.
Those aliases bounce with an indication of the new forwarding address. A couple of lines
from such an <em class="emphasis">aliases</EM
>(5) file might look like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">george:   george@new.site.edu.REDIRECT
william:  wc@creative.net.REDIRECT</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">redirect</CODE
> feature causes
mail addressed to <code class="literal">george</CODE
>, for example,
to be bounced with a message like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">551 User not local; please try &lt;george@new.site.edu&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">Note that the message is bounced and not forwarded. No
notification is sent to the recipient's new address.</P
><p class="para">The form of the <code class="literal">redirect</CODE
> feature is</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`redirect')</PRE
></BLOCKQUOTE
></P
><p class="para">This feature adds the pseudo-domain .REDIRECT to class <code class="literal">$=P</CODE
>,
which prevents that suffix from being looked up with DNS.
It then adds rules to rule set 0 that handle this suffix only if
the <code class="literal">{opMode}</CODE
> macro (see <a class="xref" href="ch31_10.htm" title="">Section 31.10.28, ${opMode}</A
>)
has any value other than <code class="literal">i</CODE
> (for <em class="emphasis">initialize aliases</EM
> 
as set 

by the <code class="literal">-bi</CODE
> command line switch, see <a class="xref" href="ch36_01.htm" title="newaliases">Section 36.1.3, "newaliases"</A
>).
The actual bounce is caused by calling the <code class="literal">error</CODE
> delivery agent
with a RHS like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">$# error $@ 5.1.1 $: &quot;551 User not local; please try &quot; &lt;$1@$2&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">5.1.1</CODE
> is a DSN error code (see RFC1893), and the <code class="literal">551</CODE
> is an
SMTP code (see RFC821).</P
><p class="para">To illustrate why the message is bounced rather than forwarded, consider a
fictional MTA that is clever about getting this message:</P
><p class="para"><blockquote class="screen"><pre class="screen">551 User not local; please try &lt;george@new.site.edu&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">Instead of bouncing the outgoing message, the fictional MTA tries to be clever
and to deliver to <em class="emphasis">new.site.edu</EM
>. If <em class="emphasis">new.site.edu</EM
> also responds with
a REDIRECT message, the MTA tries the next host in line.
This is a bad idea for two reasons: First, elaborate loop detection would need to be
designed to catch infinite REDIRECT loops, and second, a down host anywhere
in the sequence would necessitate that the series of connections be made over
and over again until they all succeeded.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-22">19.6.22 FEATURE(smrsh)</A
></H3
><p class="refpurpose">Use smrsh (sendmail restricted shell)</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15058"></A
><a class="indexterm" name="AUTOID-15060"></A
><a class="indexterm" name="AUTOID-15063"></A
>Although <em class="emphasis">sendmail</EM
> tries to be very safe about how it runs
programs from the <em class="emphasis">aliases</EM
>(5) and <em class="emphasis">~/.forward</EM
> files
(see <a class="xref" href="ch24_02.htm#SML2-CH-24-SECT-2-2" title="Delivery via Programs">Section 24.2.3, "Delivery via Programs"</A
>), it still may be vulnerable to
some internal attacks.
To limit the selection of programs that <em class="emphasis">sendmail</EM
> is allowed to
run, V8 <em class="emphasis">sendmail</EM
> now includes source and documentation
for the <em class="emphasis">smrsh</EM
> (<b class="emphasis.bold">s</B
>end<b class="emphasis.bold">m</B
>ail <b class="emphasis.bold">r</B
>estricted <b class="emphasis.bold">sh</B
>ell) program.
See <a class="xref" href="ch22_08.htm#SML2-CH-22-SECT-8-1" title="The smrsh Program">Section 22.8.2, "The smrsh Program"</A
> for a full description of the <em class="emphasis">smrsh</EM
> program.</P
><p class="para"><em class="emphasis">After</EM
> you have compiled, installed, and configured <em class="emphasis">smrsh</EM
>, you
can include support for it in your configuration file with the <code class="literal">smrsh</CODE
> feature:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`smrsh')
MAILER(`local')</PRE
></BLOCKQUOTE
></P
><p class="para">Note that the <code class="literal">smrsh</CODE
> feature must precede the <code class="literal">local</CODE
> delivery
agent declaration. If these lines are reversed, the following error will
print when you run <em class="emphasis">m4</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">*** FEATURE(smrsh) must occur before MAILER(local)</PRE
></BLOCKQUOTE
></P
><p class="para">The default location for the <em class="emphasis">smrsh</EM
> program is <em class="emphasis">/usr/local/etc/smrsh</EM
>.
If you installed <em class="emphasis">smrsh</EM
> in another location, you will need to
add an argument to the <code class="literal">smrsh</CODE
> feature:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`smrsh', `/usr/bin/smrsh\')</PRE
></BLOCKQUOTE
></P
><p class="para">Use of <em class="emphasis">smrsh</EM
> is recommended by CERT, so you are encouraged
to use this feature as often as possible.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-23">19.6.23 FEATURE(notsticky)</A
></H3
><p class="refpurpose">Don't differ user from user@local.host</P
>(V8.1 through V8.6)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15108"></A
><a class="indexterm" name="AUTOID-15110"></A
><a class="indexterm" name="AUTOID-15113"></A
>Mail addressed to a local user
that includes the name of the local host as
part of the address (i.e., local.host)
is delivered locally.
From V8.1 to V8.6 <em class="emphasis">sendmail</EM
>,
if the address has a host part,
lookups in the User Database (see <a class="xref" href="ch33_05.htm" title="The User Database">Section 33.5</A
>) and the
additional processing of rule set 5 (see <a class="xref" href="ch29_07.htm" title="Rule Set 5">Section 29.7, "Rule Set 5"</A
>) are skipped.
Under V8.6,
addresses with just the <code class="replaceable"><i>user</I
></CODE
> part are 
always processed by the User Database and rule set 5.</P
><p class="para">The V8.6 <code class="literal">notsticky</CODE
> feature changes this logic.
If this feature is chosen, all users
are looked up in the User Database, and the
additional processing done by rule set 5 is skipped.</P
><p class="para">Beginning with V8.7, the default is now as if <code class="literal">notsticky</CODE
>
were used, and the <code class="literal">stickyhost</CODE
> feature is used to restore the previous default.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-24">19.6.24 FEATURE(stickyhost)</A
></H3
><p class="refpurpose">Differ user from user@local.host</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15133"></A
>Beginning with V8.7 <em class="emphasis">sendmail</EM
>, addresses with and without
a host part that resolve to local delivery are handled in the same way.
For example, <em class="emphasis">user</EM
> and <em class="emphasis">user@local.host</EM
> are
both looked up with the User Database (see <a class="xref" href="ch33_05.htm" title="The User Database">Section 33.5</A
>) and 
processed by rule set 5 (see <a class="xref" href="ch29_07.htm" title="Rule Set 5">Section 29.7</A
>).
This processing can result in those addresses being forwarded to
other machines.</P
><p class="para">With the <code class="literal">stickyhost</CODE
> feature, you may change this behavior:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`stickyhost')</PRE
></BLOCKQUOTE
></P
><p class="para">By defining <code class="literal">stickyhost</CODE
>, you are telling <em class="emphasis">sendmail</EM
> to
mark addresses that have a local host part as &quot;sticky&quot;:</P
><p class="para"><blockquote class="screen"><pre class="screen">user               <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> not sticky</I
>
user@local.host    <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> sticky</I
></PRE
></BLOCKQUOTE
></P
><p class="para">Sticky hosts tend to be delivered on the local machine. That is,
they are not looked up with the User Database and are not
processed by rule set 5.</P
><p class="para">One use for this feature is to create a domainwide name space. In it,
all addresses without a host part will be forwarded to a central
mail server. Those with a local host part will remain on the local
machine and be delivered in the usual local way.</P
><p class="para">Note that this is opposite the behavior of the former <code class="literal">notsticky</CODE
>
feature of V8.6.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-25">19.6.25 FEATURE(use-ct-file)</A
></H3
><p class="refpurpose">Use /etc/sendmail.ct for a list of trusted users</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15163"></A
><a class="indexterm" name="AUTOID-15165"></A
><a class="indexterm" name="AUTOID-15167"></A
><a class="indexterm" name="AUTOID-15170"></A
><a class="indexterm" name="AUTOID-15173"></A
><a class="indexterm" name="AUTOID-15175"></A
>V6 <em class="emphasis">sendmail</EM
> removed the concept of trusted users
(see <a class="xref" href="ch22_08.htm#SML2-CH-22-SECT-8-1" title="Security Features">Section 22.8, "Security Features"</A
>). V8.7 reintroduced trusted users, but
in a different form from that used by V5 <em class="emphasis">sendmail</EM
>.
Now, trusted users are those who may run <em class="emphasis">sendmail</EM
>
with the <code class="literal">-f</CODE
> switch (see <a class="xref" href="ch36_07.htm" title="">Section 36.7.21, -f and -r</A
>) without generating an
authentication warning (see <a class="xref" href="ch35_10.htm" title="">Section 35.10.35, X-Authentication-Warning:</A
>):</P
><p class="para"><blockquote class="screen"><pre class="screen">X-Authentication-Warning: <code class="replaceable"><i>host</I
></CODE
>: <code class="replaceable"><i>user</I
></CODE
> set sender to <code class="replaceable"><i>other</I
></CODE
> using -f</PRE
></BLOCKQUOTE
></P
><p class="para">To prevent this warning, the <code class="replaceable"><i>user</I
></CODE
> should be added to
the class <code class="literal">$=t</CODE
> (see <a class="xref" href="ch32_05.htm" title="">Section 32.5.7, $=t</A
>). There are three ways to do
this. You may use the <code class="literal">T</CODE
> configuration command:</P
><p class="para"><blockquote class="screen"><pre class="screen">T<code class="replaceable"><i>user</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Or you may use the class command:</P
><p class="para"><blockquote class="screen"><pre class="screen">Ct<code class="replaceable"><i>user</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Or you may use the <code class="literal">use_ct_file</CODE
> and add <code class="replaceable"><i>user</I
></CODE
> to
the <em class="emphasis">/etc/sendmail.ct</EM
> file. To use this latter approach,
declare the following in your <em class="emphasis">mc</EM
> file:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`use_ct_file')</PRE
></BLOCKQUOTE
></P
><p class="para">If you want to locate the <em class="emphasis">/etc/sendmail.ct</EM
> in a different
place or give it a different name, you may do so with this
declaration:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`confCT_FILE', `/etc/mail/trusted.list')</PRE
></BLOCKQUOTE
></P
><p class="para">Note that the file must exist before <em class="emphasis">sendmail</EM
> is started, or
it will complain:</P
><p class="para"><blockquote class="screen"><pre class="screen">fileclass: cannot open /etc/mail/trusted.list: No such file or directory</PRE
></BLOCKQUOTE
></P
><p class="para">If you want the file to optionally exist,
you may add a <code class="literal">-o</CODE
> (see <a class="xref" href="ch32_01.htm" title="The F Class Command">Section 32.1.2</A
>) to the
conf-CT_FILE definition:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`confCT_FILE', `-o /etc/sendmail.ct')</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we don't rename the file: we make the default
file's presence optional.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-26">19.6.26 FEATURE(use-cw-file)</A
></H3
><p class="refpurpose">Use /etc/sendmail.cw for local hostnames</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15230"></A
><a class="indexterm" name="AUTOID-15232"></A
><a class="indexterm" name="AUTOID-15234"></A
>The <code class="literal">use_cw_file</CODE
> feature causes the file
<em class="emphasis">/etc/sendmail.cw</EM
> to be read to obtain alternative
names for the local host.  One use for such a file
might be to declare a list of hosts for which the
local host is acting as the MX recipient.
The <code class="literal">use_cw_file</CODE
> is used like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`use_cw_file')</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;This feature causes the following <code class="literal">F</CODE
> configuration
command (see <a class="xref" href="ch32_01.htm" title="The F Class Command">Section 32.1.2</A
>) to appear in the configuration file:</P
><p class="para"><blockquote class="screen"><pre class="screen">Fw/etc/sendmail.cw</PRE
></BLOCKQUOTE
></P
><p class="para">The actual filename can be changed from <em class="emphasis">/etc/sendmail.cw</EM
> (the default)

by defining the <code class="literal">confCW_FILE</CODE
> macro:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`confCW_FILE', `-o /etc/mail/sendmail.cw')</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we both rename the file and make its presence optional by
adding the <code class="literal">-o</CODE
> switch (see <a class="xref" href="ch32_01.htm" title="The F Class Command">Section 32.1.2</A
>).</P
><p class="para">If the local host is known by only a few names,
an alternative is to instead include the following <code class="literal">C</CODE
>
configuration command (see <a class="xref" href="ch32_01.htm" title="The C Class Command">Section 32.1.1, "The C Class Command"</A
>) in place
of the above feature:</P
><p class="para"><blockquote class="screen"><pre class="screen">Cw<code class="replaceable"><i>name1 name2</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Here, <code class="replaceable"><i>name1</I
></CODE
> and <code class="replaceable"><i>name2</I
></CODE
> are alternative names for the local host.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-27">19.6.27 FEATURE(uucpdomain)</A
></H3
><p class="refpurpose">Convert UUCP hosts via a database</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15271"></A
>The <em class="emphasis">uucpdomain</EM
> feature is similar to <em class="emphasis">bitdomain</EM
> but
is used to translate addresses of the form</P
><p class="para"><blockquote class="screen"><pre class="screen">user@host.UUCP</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-15278"></A
>into the <code class="literal">!</CODE
> path form or routing used by UUCP.
The database for this would contain, for example, key and data
pairs like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">host     a!b!c!host</PRE
></BLOCKQUOTE
></P
><p class="para">This source text file is converted into a database with the
<em class="emphasis">makemap</EM
>(1) program (see <a class="xref" href="ch33_02.htm#SML2-CH-33-SECT-2-1-1" title="Create Files with makemap">Section 33.2</A
>).
But note that no software is supplied to transform
the UIUC <em class="emphasis">pathalias</EM
>(1) program's output into a form that is suitable for this database.</P
><p class="para">The way you declare <code class="literal">uucpdomain</CODE
> is like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`uucpdomain')</PRE
></BLOCKQUOTE
></P
><p class="para">This causes a rule like this to be added to rule set 3:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$* &lt; @ $+ .UUCP &gt; $*           $: $1 &lt; @ $(uudomain $2 $: $2.UUCP $) &gt; $3</PRE
></BLOCKQUOTE
></P
><p class="para">Here, the host in the pseudo-domain .UUCP is looked up in the
database <code class="literal">uudomain</CODE
>. The <code class="literal">uucpdomain</CODE
> feature also creates
the declaration for that database:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kuudomain hash -o /etc/uudomain</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;If you wish to use a different form of database or a different location for
the database file, you may do so by adding an argument to the feature
declaration:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`uucpdomain', `dbm -o /etc/mail/uudomain')</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we tell <em class="emphasis">sendmail</EM
> that we will be using the NDBM form
of database instead of the original NEWDB form (see <a class="xref" href="ch33_01.htm" title="Enable at Compile Time">Section 33.1, "Enable at Compile Time"</A
>).
We also relocated the file into the <em class="emphasis">/etc/mail</EM
> directory.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-28">19.6.28 FEATURE(virtusertable)</A
></H3
><p class="refpurpose">Support for virtual domains</P
>(V8.8 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15314"></A
><a class="indexterm" name="AUTOID-15316"></A
>A <code class="literal">virtusertable</CODE
> is a database that maps virtual (possibly nonexistent)
domains into new addresses.
Essentially, it gives you a database hook into the early part of rule set 0.
Note that this only reroutes delivery. It does not change mail headers.</P
><p class="para">By way of example, consider one mapping in a source text file:</P
><p class="para"><blockquote class="screen"><pre class="screen">info@stuff.for.sale.com       bob
info@stuff.wanted.com         hans@remote.host
@fictional.com                user@another.host</PRE
></BLOCKQUOTE
></P
><p class="para">The key portion (on the left) must be either a full address
(user, host, and domain name), as in the first two lines,
or an address with the user part missing, as in the last line.
This source text file is converted into a database with the 
<em class="emphasis">makemap</EM
>(1) program (see <a class="xref" href="ch33_02.htm#SML2-CH-33-SECT-2-1-1" title="Create Files with makemap">Section 33.2</A
>).</P
><p class="para">The first two lines illustrate a full address for the key. The first line
will be delivered to a local user (<em class="emphasis">bob</EM
>) the second to a remote user
(<em class="emphasis">hans@remote.host</EM
>).
The third line file shows how all mail to a virtual domain (<em class="emphasis">fictional.com</EM
>)
can be delivered to a single address, no matter what the user part is.</P
><p class="para">Note that <em class="emphasis">sendmail</EM
> does a single lookup, so one line may not
reference another. The following won't work:</P
><p class="para"><blockquote class="screen"><pre class="screen">info@stuff.for.sale.com       forsale@fictional.com
@fictional.com                user@another.host</PRE
></BLOCKQUOTE
></P
><p class="para">Here, mail to <em class="emphasis">info@stuff.for.sale.com</EM
> will be delivered to <em class="emphasis">forsale@fictional.com</EM
>,
not to <em class="emphasis">user@another.host</EM
>.</P
><p class="para">Also note that virtual domains in the key (such as
<code class="literal">@fictional.com</CODE
>) must be added to class <code class="literal">w</CODE
>
in order for them to be recognized as local.</P
><p class="para">You declare the <code class="literal">virtusertable</CODE
> like this in your <em class="emphasis">mc</EM
> file:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`virtusertable')</PRE
></BLOCKQUOTE
></P
><p class="para">This causes the following database declaration
to appear in the configuration file:</P
><p class="para"><blockquote class="screen"><pre class="screen">Kvirtusertable hash -o /etc/virtusertable</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;If you wish to use a different form of database
(such as <em class="emphasis">dbm</EM
>) or a different location, the <code class="literal">virtusertable</CODE
> feature accepts an argument:</P
><p class="para"><blockquote class="screen"><pre class="screen">FEATURE(`virtusertable',`dbm -o /etc/mail/virtusertable')</PRE
></BLOCKQUOTE
></P
><p class="para">If the value (the right-hand side in <code class="literal">virtusertable</CODE
>) is <code class="literal">error:</CODE
>,
the <code class="literal">#error</CODE
> delivery agent is called. This allows error messages
to be put into the database, as, for example,</P
><p class="para"><blockquote class="screen"><pre class="screen">info@for.sale.com    error:nouser We no longer sell things here</PRE
></BLOCKQUOTE
></P
><p class="para">The text following the <code class="literal">error:</CODE
> is passed to the <code class="literal">#error</CODE
> delivery agent
like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">Rerror : $- $+       $#error $@ $1 $: $2</PRE
></BLOCKQUOTE
></P
><p class="para">Thus the first token following the <code class="literal">error:</CODE
> is passed in the
<code class="literal">$@</CODE
> part. Note that you must use words here, not DSN
values (such as <code class="literal">3.1.0</CODE
>), because the latter would be wrongly broken up into five tokens.
See <a class="xref" href="ch30_05.htm#SML2-CH-30-SECT-5-2-1" title="The error Delivery Agent">Section 30.5.2</A
> for a full description of the 
<code class="literal">#error</CODE
> delivery agent and for tables of useful words for
the <code class="literal">$@</CODE
> part.</P
><p class="para"><a class="indexterm" name="AUTOID-15373"></A
></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-29">19.6.29 HACK</A
></H3
><p class="refpurpose">Temporary customizations</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15382"></A
><a class="indexterm" name="AUTOID-15384"></A
><a class="indexterm" name="AUTOID-15386"></A
><a class="indexterm" name="AUTOID-15388"></A
>Some things just can't be called features.  To make this clear,
they go in the <em class="emphasis">_CF_DIR_/hack</EM
> directory (see <a class="xref" href="ch19_02.htm" title="Maintain local files with _CF_DIR_">Section 19.2.1, "Maintain local files with _CF_DIR_"</A
>)
and are referenced using the HACK macro. They tend to be site-dependent. </P
><p class="para"><blockquote class="screen"><pre class="screen">HACK(cssubdomain)</PRE
></BLOCKQUOTE
></P
><p class="para">This illustrates use of
the Berkeley-dependent <code class="literal">cssubdomain</CODE
> hack (that makes
<em class="emphasis">sendmail</EM
> accept local names in either <em class="emphasis">Berkeley.EDU</EM
> or <em class="emphasis">CS.Berkeley.EDU</EM
>).</P
><p class="para">Another way to think of a hack is as a transient feature. Create and
use HACK as a temporary solution to a temporary problem. If a solution
becomes permanent, move it to the FEATURE directory (see <a class="xref" href="ch19_03.htm#SML2-CH-19-SECT-3-2" title="FEATURE()">Section 19.3.4</A
>) and reference
it there.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-30">19.6.30 LOCAL-CONFIG</A
></H3
><p class="refpurpose">Add general information and rules</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15410"></A
>The LOCAL_CONFIG macro allows custom configuration lines to be inserted
by using the <em class="emphasis">mc</EM
> file. The inserted lines are carried literally into the output and
appear in the resulting configuration file just before the rules.</P
><p class="para"><blockquote class="screen"><pre class="screen">LOCAL_CONFIG
FE/usr/local/mail/visible.users
Khostmap hash /etc/hostmap.db</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;In this example the class <code class="literal">$=E</CODE
> has additional names read
from the file <em class="emphasis">visible.users</EM
>, and the <em class="emphasis">hostmap</EM
> database
is declared.</P
><p class="para">New rule sets can be inserted with LOCAL_CONFIG. For V8.7 and above we recommend
using symbolic names to avoid collision with rule set numbers used
by <em class="emphasis">sendmail</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">LOCAL_CONFIG
Sfoo
<i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> custom rules here</I
></PRE
></BLOCKQUOTE
></P
><p class="para">See the discussion of diversions (see <a class="xref" href="ch19_01.htm" title="m4 diversions">Section 19.1.4, "m4 diversions"</A
>) to cause LOCAL_CONFIG
lines to output in a predetermined order.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-31">19.6.31 LOCAL-RELAY</A
></H3
><p class="refpurpose">Relay for unqualified user (deprecated)</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15434"></A
><a class="indexterm" name="AUTOID-15437"></A
><a class="indexterm" name="AUTOID-15440"></A
><a class="indexterm" name="AUTOID-15442"></A
>Unless you specify otherwise, any address that is a username
without any <em class="emphasis">@host</EM
> part is delivered using the
<code class="literal">local</CODE
> delivery agent. If you prefer to have all such
mail handled by a different machine, you may define that other
machine with the LOCAL_RELAY <em class="emphasis">m4</EM
> macro.</P
><p class="para">Note that a relay is different from the knowledgeable hub defined
with MAIL_HUB. (See later in this section for an illustration of how MAIL_HUB and LOCAL_RELAY
interact.)</P
><p class="para">This macro is deprecated because it doesn't work well with some MUAs
(for example, <em class="emphasis">mh</EM
>(1)). This is because some MUAs
put a host part on all addresses even if only the user part was specified.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-32">19.6.32 LOCAL-RULE-0</A
></H3
><p class="refpurpose">Add rules to rule set 0</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15459"></A
><a class="indexterm" name="AUTOID-15461"></A
>In rule set 0, after the <code class="literal">local</CODE
> delivery agent has
been selected and before the <code class="literal">uucp</CODE
>, <code class="literal">smtp</CODE
>, and
the like have been selected, you can insert custom delivery
agents of your own. To do this, use the LOCAL_RULE_0 macro:</P
><p class="para"><blockquote class="screen"><pre class="screen">LOCAL_RULE_0
# We service lady via an mx record.
R$+ &lt; @ lady.Berkeley.EDU. &gt;         $#uucp $@ lady $: $1</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we introduce a new rule to select a delivery agent. The host
<em class="emphasis">lady</EM
> is a UUCP host for which we accept mail via an
MX record.</P
><p class="para">Note that LOCAL_RULE_0 fits into flow of rules through
rule set 0 like this:</P
><blockquote class="blockquote"><p class="para"><ol class="orderedlist"><li class="listitem"><p class="para"><em class="emphasis">1.</EM
> Basic canonicalization (list syntax, delete local host, etc.)</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">2.</EM
> LOCAL_RULE_0</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">3.</EM
> UUCP, BITNET_RELAY (see <a class="xref" href="ch31_10.htm" title="">Section 31.10.5</A
>), etc.</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">4.</EM
> LOCAL_NET_CONFIG (see <a class="xref" href="#SML2-CH-19-SECT-6-37" title="">Section 19.6.37</A
>)</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">5.</EM
> SMART_HOST (see <a class="xref" href="#SML2-CH-19-SECT-6-47" title="">Section 19.6.47</A
>)</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">6.</EM
> SMTP, local, etc. delivery agents</P
></LI
></OL
></P
></BLOCKQUOTE
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-33">19.6.33 LOCAL-RULE-1</A
></H3
><p class="refpurpose">Add rules to rule set 1</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para">See LOCAL-RULE-2.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-34">19.6.34 LOCAL-RULE-2</A
></H3
><p class="refpurpose">Add rules to rule set 2</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15512"></A
><a class="indexterm" name="AUTOID-15514"></A
><a class="indexterm" name="AUTOID-15517"></A
>Rule sets 1 and 2 are normally empty and not included in the configuration
file created from your <em class="emphasis">mc</EM
> file. Rule set 1 processes
all sender addresses (see <a class="xref" href="ch29_09.htm" title="Rule Set 1">Section 29.9, "Rule Set 1"</A
>), and rule set 2 processes all
recipient addresses (see <a class="xref" href="ch29_08.htm" title="Rule Set 2">Section 29.8, "Rule Set 2"</A
>). These <em class="emphasis">m4</EM
> macros are used just like
LOCAL_RULE_0, above but they introduce rules that would otherwise
be omitted, rather than adding rules to an existing rule set.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-35">19.6.35 LOCAL-RULE-3</A
></H3
><p class="refpurpose">Add rules to rule set 3</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15532"></A
>All addresses are first rewritten by rule set 3 (see <a class="xref" href="ch29_04.htm#SML2-CH-29-SECT-4-5" title="Rule Set 3">Section 29.4, "Rule Set 3"</A
>).
For complex configuration needs, you can define special rules and
cause them to be added to rule set 3. New rules are added
to the end of rule set 3 by way of rule set 6. That is, each
final decision in rule set 3 (denoted by a <code class="literal">$@</CODE
> in the RHS)
calls rule set 96 (with <code class="literal">$&gt;96</CODE
>) before returning.</P
><p class="para">The m4 macro LOCAL_RULE_3 is used to introduce new rules that 
can be used in canonicalizing the hostnames.
Note that any modifications made here are reflected in the header.</P
><p class="para">One suggested use for LOCAL_RULE_3 is to convert old UUCP hostnames
into domain addresses using the <em class="emphasis">m4</EM
> UUCPSMTP macro.
For example,</P
><p class="para"><blockquote class="screen"><pre class="screen">LOCAL_RULE_3
UUCPSMTP(decvax,   decvax.dec.com)
UUCPSMTP(research, research.att.com)</PRE
></BLOCKQUOTE
></P
><p class="para">This causes the following address transformations:</P
><p class="para"><blockquote class="screen"><pre class="screen">decvax!user    <i class="lineannotation">becomes <img src="../chars/rarr.gif" alt="-&gt;"></I
>     user@decvax.dec.com
research!user  <i class="lineannotation">becomes <img src="../chars/rarr.gif" alt="-&gt;"></I
>     user@research.att.com</PRE
></BLOCKQUOTE
></P
><p class="para">Another suggested use for LOCAL_RULE_3 is to introduce a new
rule to look up hostnames in a locally customized database:</P
><p class="para"><blockquote class="screen"><pre class="screen">LOCAL_RULE_3
R$*&lt;@$+&gt;$*       $:$1&lt;@ $(hostmap $2 $) &gt;$3</PRE
></BLOCKQUOTE
></P
><p class="para">The declaration and definition of local database maps with the 
<code class="literal">K</CODE
> configuration command (see <a class="xref" href="ch33_03.htm#SML2-CH-33-SECT-3-4-2" title="The K Configuration Command">Section 33.3, "The K Configuration Command"</A
>) should
appear in the LOCAL_CONFIG section.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-36">19.6.36 LOCAL-RULESETS</A
></H3
><p class="refpurpose">Group local rules with others</P
>(V8.8 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15562"></A
>Prior to V8.8 <em class="emphasis">sendmail</EM
>, you had to use the <code class="literal">divert9</CODE
>
<em class="emphasis">m4</EM
> directive to force your new rule set declarations to
be emitted alongside the normal <em class="emphasis">m4</EM
>-generated rules sets.
Beginning with V8.8, that bit of &quot;black magic&quot; has been removed.</P
><p class="para">The LOCAL_RULESETS <em class="emphasis">m4</EM
> command causes all the rule sets
and rules that follow it to be emitted into your configuration
file along with all the rules that are automatically generated.
You use it like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">LOCAL_RULESETS
<i class="lineannotation">your new rule sets and rules here</I
></PRE
></BLOCKQUOTE
></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-37">19.6.37 LOCAL-NET-CONFIG</A
></H3
><p class="refpurpose">Add rules for SMART-HOST</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15581"></A
><a class="indexterm" name="AUTOID-15583"></A
><a class="indexterm" name="AUTOID-15585"></A
><a class="indexterm" name="AUTOID-15588"></A
>One possible setup for mail is to allow hosts on the local network
to deliver directly to each other but for all other mail to
be sent to a &quot;smart host&quot; that forwards it offsite.
Commonly, such arrangements are used by sites with inhouse
networks that have access to the outside world only through a UUCP link.
For such sites you can use LOCAL_NET_CONFIG:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`SMART_HOST', `uucp-new:uunet')
LOCAL_NET_CONFIG
R$* &lt; @ $* .$m. &gt; $*     $#smtp $@ $2.$m $: $1 &lt; @ $2.$m &gt; $3</PRE
></BLOCKQUOTE
></P
><p class="para">Here, SMART_HOST
is first defined as <code class="literal">uucp-new:uunet</CODE
> (send to
the host <em class="emphasis">uunet</EM
> with the <code class="literal">uucp-new</CODE
> delivery agent).
The LOCAL_NET_CONFIG then introduces a rule
that causes all names that end in your domain name (<code class="literal">$m</CODE
>) 
to be delivered via the <code class="literal">smtp</CODE
> delivery agent.
Any other addresses fall through to be handled by the SMART_HOST
rules.</P
><p class="para">SMART_HOST can be a network-connected gateway too. Just use <code class="literal">smtp</CODE
>
in place of <code class="literal">uucp-new</CODE
> in the SMART_HOST definition, and the name
of the gateway.</P
><p class="para">Note that LOCAL_NET_CONFIG fits into the flow of rules through rule set 0 like this:</P
><blockquote class="blockquote"><p class="para"><ol class="orderedlist"><li class="listitem"><p class="para"><em class="emphasis">1.</EM
> Basic canonicalization (list syntax, delete local host, etc.)</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">2.</EM
> LOCAL_RULE_0 (see <a class="xref" href="#SML2-CH-19-SECT-6-32" title="">Section 19.6.32</A
>)</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">3.</EM
> FEATURE(mailertable) (see <a class="xref" href="#SML2-CH-19-SECT-6-14" title="">Section 19.6.14</A
>)</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">4.</EM
> UUCP, BITNET_RELAY (see <a class="xref" href="ch31_10.htm" title="">Section 31.10.5</A
>), etc.</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">5.</EM
> LOCAL_NET_CONFIG (see <a class="xref" href="#SML2-CH-19-SECT-6-37" title="">Section 19.6.37</A
>)</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">6.</EM
> SMART_HOST (see <a class="xref" href="#SML2-CH-19-SECT-6-47" title="">Section 19.6.47</A
>)</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">7.</EM
> SMTP, local, etc. delivery agents</P
></LI
></OL
></P
></BLOCKQUOTE
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-38">19.6.38 LOCAL-USER</A
></H3
><p class="refpurpose">Users that must be delivered locally</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15640"></A
><a class="indexterm" name="AUTOID-15642"></A
><a class="indexterm" name="AUTOID-15645"></A
><a class="indexterm" name="AUTOID-15649"></A
><a class="indexterm" name="AUTOID-15652"></A
>Some unqualified (without an <em class="emphasis">@host</EM
> part) usernames 
need to be delivered on the local machine even if LOCAL_RELAY is defined. The user <em class="emphasis">root</EM
> is one such
example. By remaining local, aliasing is allowed to take place.</P
><p class="para">The LOCAL_USER <em class="emphasis">m4</EM
> macro is used to add additional usernames
to the list of local users. Note that <em class="emphasis">root</EM
> is
always a member of that list.</P
><p class="para"><blockquote class="screen"><pre class="screen">LOCAL_USER(<code class="replaceable"><i>operator</I
></CODE
>)</PRE
></BLOCKQUOTE
></P
><p class="para">This causes the name <code class="replaceable"><i>operator</I
></CODE
> to be appended to the list
of local users.
That list is stored in the class <code class="literal">$=L</CODE
>.
The disposition of local usernames that include the name of
the local host is determined by
the <code class="literal">stickyhost</CODE
> feature.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-39">19.6.39 LUSER-RELAY</A
></H3
><p class="refpurpose">Relay for local looking usernames</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15676"></A
>The host that handles usernames that appear to be local even though
they are not.
See <a class="xref" href="ch31_10.htm" title="">Section 31.10.23</A
> for a discussion of this relay.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-40">19.6.40 MAILER-DEFINITIONS</A
></H3
><p class="refpurpose">Define custom delivery agents</P
>(V8.8 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15687"></A
><a class="indexterm" name="AUTOID-15689"></A
>Prior to V8.8 <em class="emphasis">sendmail</EM
> you had to use a <code class="literal">divert(7)</CODE
> statement
to force your new delivery agent definitions to be grouped with
all the other delivery agent definitions. Beginning with V8.8,
this bit of &quot;black magic&quot; has been removed.</P
><p class="para">To force your new delivery agent definitions to be grouped with
the others delivery agent definitions, use the MAILER_DEFINITIONS
<em class="emphasis">m4</EM
> command:</P
><p class="para"><blockquote class="screen"><pre class="screen">MAILER_DEFINITIONS
<i class="lineannotation">your new delivery agent definitions here</I
></PRE
></BLOCKQUOTE
></P
><p class="para">See <a class="xref" href="ch30_03.htm" title="Tuning Without an Appropriate Keyword">Section 30.3.1, "Tuning Without an Appropriate Keyword"</A
> for an example of
this <em class="emphasis">m4</EM
> command.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-41">19.6.41 MAIL-HUB</A
></H3
><p class="refpurpose">All local delivery on a local server</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15709"></A
><a class="indexterm" name="AUTOID-15711"></A
><a class="indexterm" name="AUTOID-15714"></A
>One scheme for handling mail is to maintain one mail spool directory
centrally and to mount that directory remotely on all clients.
To avoid file locking problems, delivery to such a spool should
be performed only on the central server. The MAIL_HUB macro
allows you to specify that all local mail be forwarded
to the central server for delivery. The point is to let unqualified
names be forwarded through a machine with a large <em class="emphasis">aliases</EM
> file.</P
><p class="para">If you define both LOCAL_RELAY
and MAIL_HUB, unqualified names and names in class <code class="literal">L</CODE
> are sent to
the LOCAL_RELAY and other local names are sent to MAIL_HUB.
To illustrate,
consider the result of various combinations for the user <em class="emphasis">you</EM
>
on the machine <em class="emphasis">here.our.site</EM
>.</P
><p class="para">If LOCAL_RELAY is defined as <em class="emphasis">relay.our.site</EM
> and MAIL_HUB is
not defined, mail addressed to <em class="emphasis">you</EM
> are forwarded
to <em class="emphasis">relay.our.site</EM
>, but mail addressed to <em class="emphasis">you@here.our.site</EM
>
is delivered locally.</P
><p class="para">If MAIL_HUB is defined as <em class="emphasis">hub.our.site</EM
> and LOCAL_RELAY is
not defined, mail addressed to <em class="emphasis">you</EM
>  and mail addressed 
to <em class="emphasis">you@here.our.site</EM
> is forwarded to <em class="emphasis">hub.our.site</EM
>
for delivery.</P
><p class="para">If both LOCAL_RELAY and MAIL_HUB are defined as above, mail
addressed to <em class="emphasis">you</EM
>
is sent to <em class="emphasis">relay.our.site</EM
> for delivery, and mail addressed to
<em class="emphasis">you@here.our.site</EM
> is forwarded to <em class="emphasis">hub.our.site</EM
>.</P
><p class="para">If you want all outgoing mail to go to a central machine, use SMART_HOST too.</P
><p class="para">Note that LOCAL_RELAY and MAIL_HUB act identically (except
that MAIL_HUB takes precedence) unless the <code class="literal">stickyhost</CODE
> feature is used.
Also note that the <code class="literal">nullclient</CODE
> feature can be used if you want all mail to be forwarded to a central machine.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-42">19.6.42 MASQUERADE-AS</A
></H3
><p class="refpurpose">Masquerade as the server</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15749"></A
><a class="indexterm" name="AUTOID-15751"></A
>At sites with one central mail server (see MAIL_HUB, it can be advantageous 
for mail from the clients to appear as though it is
from the hub. This simplifies mail administration in that
all users have the same machine address no matter which
workstations they use. You can cause a workstation to masquerade
as the server (or as another host) by using the MASQUERADE_AS
<em class="emphasis">m4</EM
> macro:</P
><p class="para"><blockquote class="screen"><pre class="screen">MASQUERADE_AS(<em class="emphasis">server)</EM
></PRE
></BLOCKQUOTE
></P
><p class="para">&#13;This causes outgoing mail to be labeled as coming from the
<em class="emphasis">server</EM
> (rather than from the value in <code class="literal">$j</CODE
> see <a class="xref" href="ch31_10.htm" title="">Section 31.10.20</A
>).
The new label is in all but the <code class="literal">Received:</CODE
> (see <a class="xref" href="ch35_10.htm" title="">Section 35.10.25, Received:</A
>)
and <code class="literal">Message-ID:</CODE
> (see <a class="xref" href="ch35_10.htm" title="">Section 35.10.19, Message-ID:</A
>) headers.</P
><p class="para">Some users (such as <em class="emphasis">root</EM
>) should never be masqueraded
because one always needs to know their machine of origin.
Such users are declared by using the EXPOSED_USER <em class="emphasis">m4</EM
> macro.
Note that <em class="emphasis">root</EM
> is always exposed.</P
><p class="para">If you wish to have recipient addresses also masqueraded,
cautiously use the <em class="emphasis">allmasquerade</EM
> feature.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-43">19.6.43 MASQUERADE-DOMAIN</A
></H3
><p class="refpurpose">Masquerade other domains</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15779"></A
><a class="indexterm" name="AUTOID-15781"></A
>Ordinarily, MASQUERADE_AS enables only hosts in the local
domain, to be transformed into the masquerading host.
If you wish to masquerade a domain other than your local one, you
can use the MASQUERADE_DOMAIN macro:</P
><p class="para"><blockquote class="screen"><pre class="screen">MASQUERADE_DOMAIN(`<code class="replaceable"><i>other.domain</I
></CODE
>')</PRE
></BLOCKQUOTE
></P
><p class="para">Essentially, all that MASQUERADE_DOMAIN does is to assign its
argument to the class <code class="literal">$=M</CODE
>, so you can list multiple domains
in a single MASQUERADE_DOMAIN statement:</P
><p class="para"><blockquote class="screen"><pre class="screen">MASQUERADE_DOMAIN(`<code class="replaceable"><i>domain1 domain2 domain3</I
></CODE
>')
CM domain1 domain2 domain3                                 <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> the same</I
></PRE
></BLOCKQUOTE
></P
><p class="para">Note that MASQUERADE_DOMAIN masquerades only the domain and
<em class="emphasis">not</EM
> any hosts under that domain. If you wish to masquerade
all hosts under a domain (including the domain itself), see
the <code class="literal">masquerade_entire_domain</CODE
> feature. </P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-44">19.6.44 MASQUERADE-DOMAIN-FILE</A
></H3
><p class="refpurpose">Masquerade other domains</P
>(V8.6 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15804"></A
><a class="indexterm" name="AUTOID-15806"></A
>In masquerading other domains, as with MASQUERADE_DOMAIN above,
it may prove advantageous to store the list of masqueraded domains
in an external file. The MASQUERADE_DOMAIN_FILE macro allows you to do
just that:</P
><p class="para"><blockquote class="screen"><pre class="screen">MASQUERADE_DOMAIN_FILE(`/etc/mail/domains')</PRE
></BLOCKQUOTE
></P
><p class="para">Essentially, all that MASQUERADE_DOMAIN_FILE does is to
assign its argument to the class <code class="literal">$=M</CODE
> via an <code class="literal">F</CODE
>
configuration command:</P
><p class="para"><blockquote class="screen"><pre class="screen">MASQUERADE_DOMAIN_FILE(`-o /etc/mail/domains')   
FM -o /etc/mail/domains                               <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> the same</I
></PRE
></BLOCKQUOTE
></P
><p class="para">Here, we added a <code class="literal">-o</CODE
> to make the existence of the file optional.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-45">19.6.45 SITE</A
></H3
><p class="refpurpose">Declare sites for SITECONFIG (obsolete)</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15827"></A
><a class="indexterm" name="AUTOID-15829"></A
>UUCP connections are declared inside the SITECONFIG file
with the SITE macro. That macro just takes a list of one
or more UUCP hostnames:</P
><p class="para"><blockquote class="screen"><pre class="screen">SITE(lady)
SITE(sonya grimble)</PRE
></BLOCKQUOTE
></P
><p class="para">Each listed host is added to the class that was defined as
the third argument to the SITECONFIG declaration. </P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-46">19.6.46 SITECONFIG</A
></H3
><p class="refpurpose">Local UUCP connections (obsolete)</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15843"></A
>The SITECONFIG <em class="emphasis">m4</EM
> macro (now obsolete but retained
for backward compatibility) is 
useful for maintaining lists of UUCP
connections. There are two types of connections: those connected
to the local host and those connected to another host.
The first type is declared with SITECONFIG like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">SITECONFIG(`<code class="replaceable"><i>file</I
></CODE
>',`<code class="replaceable"><i>host</I
></CODE
>',`<code class="replaceable"><i>class</I
></CODE
>')</PRE
></BLOCKQUOTE
></P
><p class="para">Here, <code class="replaceable"><i>file</I
></CODE
> is the name of a file (without the <em class="emphasis">.m4</EM
>
suffix) that is in the directory <em class="emphasis">_CF_DIR_/cf/siteconfig</EM
>.
That file contains a list of SITE declarations (described soon).
The <em class="emphasis">host</EM
> is the UUCP node name of the local host.
The <em class="emphasis">class</EM
> is the name (one letter) of a class that
holds the list of UUCP connections. For example,</P
><p class="para"><blockquote class="screen"><pre class="screen">SITECONFIG(`uucp.arpa',`arpa',`U')</PRE
></BLOCKQUOTE
></P
><p class="para">Here, the file <em class="emphasis">_CF_DIR_/cf/siteconfig/uucp.arpa.m4</EM
> contains
a list of UUCP hosts directly connected to the machine <em class="emphasis">arpa</EM
>.
This declaration would be used only in the machine <em class="emphasis">arpa</EM
>'s <em class="emphasis">mc</EM
> file.
The list of UUCP hosts is added to the class macro <code class="literal">$=U</CODE
>.
The letters available for local connections are <code class="literal">U</CODE
> (for <code class="literal">uucp-old</CODE
>),
<code class="literal">Y</CODE
> (for <code class="literal">uucp-new</CODE
>), and <code class="literal">Z</CODE
> (for <code class="literal">uucp-uudom</CODE
>).</P
><p class="para">A second form of the SITECONFIG <em class="emphasis">m4</EM
> macro is the one used by
hosts other than the one with the direct UUCP connections.
It is just like the above one but with the full canonical
name of the <em class="emphasis">host</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">SITECONFIG(`uucp.arpa',`arpa.Berkeley.EDU',`W')</PRE
></BLOCKQUOTE
></P
><p class="para">This also reads the file <em class="emphasis">uucp.arpa.m4</EM
> but instead
of causing UUCP connections to be made locally, it forwards
them to the host <em class="emphasis">arpa.Berkeley.EDU</EM
>.</P
><p class="para">The hostname that is the second argument is assigned to the
<code class="literal">$W</CODE
> macro.
The class <code class="literal">$=W</CODE
> is set aside to hold lists of hosts
that appear locally
connected. This class is also used with the SITE macro.
The letters that are available for remote sites are <code class="literal">V</CODE
>, <code class="literal">W</CODE
>, and <code class="literal">X</CODE
>.</P
><p class="para">If nothing is specified, the class becomes <code class="literal">Y</CODE
>. If class
<code class="literal">U</CODE
> is specified in the third parameter, the second parameter
is assumed to be the UUCP name of the local site, rather than
the name of a remote site. In this latter case, the specified local
name has a .UUCP appended, and the result is added to class
<code class="literal">$=w</CODE
>.</P
><p class="para">Note that SITECONFIG won't work if you disable UUCP
with  the <em class="emphasis">nouucp</EM
> feature.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-47">19.6.47 SMART-HOST</A
></H3
><p class="refpurpose">The ultimate relay</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15899"></A
><a class="indexterm" name="AUTOID-15901"></A
><a class="indexterm" name="AUTOID-15904"></A
><a class="indexterm" name="AUTOID-15906"></A
>Some sites can deliver local mail to the local network but
cannot look up hosts on the Internet with DNS. Usually, such
sites are connected to the outside world with UUCP. To ensure
delivery of all mail, such sites need to forward all nonlocal
mail over the UUCP link to a <em class="emphasis">smart</EM
> (or well-connected) host.</P
><p class="para">You can enable this behavior by defining SMART_HOST:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`SMART_HOST\', uucp-dom:supporthost)</PRE
></BLOCKQUOTE
></P
><p class="para">Here, Internet mail will be forwarded to the host <em class="emphasis">supporthost</EM
>
using the <code class="literal">uucp-dom</CODE
> delivery agent. For information about
other ways to use SMART_HOST, see the file <em class="emphasis">cf/README</EM
>.
Note that the value in SMART_HOST is assigned to
<code class="literal">$S</CODE
> (see <a class="xref" href="ch31_10.htm" title="">Section 31.10.34, $S</A
>) for later use in rules.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-48">19.6.48 UUCP-RELAY</A
></H3
><p class="refpurpose">The UUCP relay</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15927"></A
><a class="indexterm" name="AUTOID-15929"></A
>If your site handles UUCP traffic, it can be in one of two
forms. Either a given host has direct UUCP connections or it
does not. If it does not, then you may wish to have all UUCP
mail forwarded to a host that can handle UUCP. This is done
by defining a UUCP_RELAY, which is done just as you would define
any other relay (as described in <a class="xref" href="ch19_04.htm#SML2-CH-19-SECT-4-6" title="Relays">Section 19.4.5</A
>).</P
><p class="para">If your machine or site does not support UUCP, consider disabling
all UUCP with the <code class="literal">nouucp</CODE
> feature.</P
><p class="para">If your machine has directly connected UUCP hosts, you might wish
to use one of or more of the UUCP techniques. But before doing
so, be sure to declare the <code class="literal">uucp</CODE
> delivery agent
(see <a class="xref" href="ch19_03.htm#SML2-CH-19-SECT-3-2" title="MAILER()">Section 19.3.2</A
>).</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-49">19.6.49 UUCPSMTP</A
></H3
><p class="refpurpose">Individual UUCP to network translations</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15945"></A
>If your site has hosts that used to be UUCP sites but
are now on the network, you may intercept and rewrite the old
address into the new network address. For example, mail to the
machine <em class="emphasis">wash</EM
> used to be addressed as <em class="emphasis">wash!user</EM
>.
Now, 

however, <em class="emphasis">wash</EM
> is on the network, and the mail
should be addressed as <em class="emphasis">user@wash.dc.gov</EM
>.</P
><p class="para">The UUCPSMTP <em class="emphasis">m4</EM
> macro provides the means to specify a UUCP
to network translation for specific hosts. The above example
would be declared like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">UUCPSMTP(`wash',`wash.dc.gov')</PRE
></BLOCKQUOTE
></P
><p class="para">The UUCPSMTP <em class="emphasis">m4</EM
>
macro should be used only under LOCAL_RULE_3.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-19-SECT-6-50">19.6.50 VERSIONID</A
></H3
><p class="refpurpose">Version of the mc file</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-15965"></A
><a class="indexterm" name="AUTOID-15967"></A
><a class="indexterm" name="AUTOID-15970"></A
>The VERSIONID <em class="emphasis">m4</EM
> macro is used to insert an identifier into each <em class="emphasis">.mc</EM
>
and <em class="emphasis">.m4</EM
> file that becomes a part of your
final <em class="emphasis">.cf</EM
> file. Each of the files that is supplied with <em class="emphasis">sendmail</EM
>
already has such an identifier. 
You should include a similar identifier
in each of your <em class="emphasis">.mc</EM
> files. 
.ds dollar $</P
><p class="para"><blockquote class="screen"><pre class="screen">VERSIONID(`<i class="lineannotation">\*[dollar]Revision\*[dollar]</I
>')</PRE
></BLOCKQUOTE
></P
><p class="para">Here, the VERSIONID macro is being used to insert an RCS-style revision
number. The <em class="emphasis">\*[dollar]Revision\*[dollar]</EM
> becomes an actual version number
when the file is checked in with <em class="emphasis">ci</EM
>(1). Arbitrary text
may appear between the single quotes. You may use RCS, SCCS,
or any other kind of revision identification system. The text
may not contain a newline because the text appears in
the <em class="emphasis">.cf</EM
> file as a comment:</P
><p class="para"><blockquote class="screen"><pre class="screen">#####  <em class="emphasis">\*[dollar]Revision: 1.5\*[dollar] #####</EM
></PRE
></BLOCKQUOTE
></P
><p class="para">Use of VERSIONID and revision control in general is recommended.<a class="indexterm" name="AUTOID-15989"></A
><a class="indexterm" name="AUTOID-15990"></A
><a class="indexterm" name="AUTOID-15991"></A
></P
></DIV
></BLOCKQUOTE
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch19_05.htm" title="19.5 Pitfalls"><img src="../gifs/txtpreva.gif" alt="Previous: 19.5 Pitfalls" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="sendmail"><img src="../gifs/txthome.gif" alt="sendmail" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="CHAPTER" href="ch20_01.htm" title="20. The checkcompat() Cookbook"><img src="../gifs/txtnexta.gif" alt="Next: 20. The checkcompat() Cookbook" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">19.5 Pitfalls</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">20. The checkcompat() Cookbook</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
