<html><head>
<title>[Chapter 31] 31.10 Alphabetized Reference</TITLE>
<meta name="DC.title" content="sendmail"><meta name="DC.creator" content="Bryan Costales &amp; Eric Allman"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T20:13:08Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-222-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch31_01.htm" title="31. Defined Macros"><link rel="prev" href="ch31_09.htm" title="31.9 Pitfalls"><link rel="next" href="ch32_01.htm" title="32. Class Macros"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="sendmail" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="sendmail"><area shape="RECT" coords="467,0,514,18" href="../search/ssrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch31_09.htm" title="31.9 Pitfalls"><img src="../gifs/txtpreva.gif" alt="Previous: 31.9 Pitfalls" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 31<br>Defined Macros</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="CHAPTER" href="ch32_01.htm" title="32. Class Macros"><img src="../gifs/txtnexta.gif" alt="Next: 32. Class Macros" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="SML2-CH-31-SECT-10">31.10 Alphabetized Reference</A
></H2
><p class="para">The <em class="emphasis">sendmail</EM
> program reserves all lowercase
letters, punctuation characters, and digits for its own use. For multicharacter
names it reserves all those that begin with an underscore or
a lowercase letter.
<a class="xref" href="#SML2-CH-31-TAB-6" title="Reserved Macros">Table 31.7</A
>
lists all the macro names that have special internal meaning
to <em class="emphasis">sendmail</EM
>.
Included in this list are macros that are used by the <em class="emphasis">m4</EM
>
configuration technique.
[9]</P
><blockquote class="footnote"><p class="para">[9] Note that these are the exception to the usual rule in that
they are all uppercase letters. In a way this makes sense, because
they are being used by the configuration file, not by the internals
of the <em class="emphasis">sendmail</EM
> program.</P
></BLOCKQUOTE
><table class="table"><caption class="table"><a class="title" name="SML2-CH-31-TAB-6">Table 31.7: Reserved Macros</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Macro</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Description</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$_</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-1" title="">Section 31.10.1</A
></TD
><td class="entry" rowspan="1" colspan="1">RFC1413-validation &amp; IP source route (V8.1 and above)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$a</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-2" title="">Section 31.10.2</A
></TD
><td class="entry" rowspan="1" colspan="1">The origin date in RFC822 format</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$b</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-3" title="">Section 31.10.3</A
></TD
><td class="entry" rowspan="1" colspan="1">The current date in RFC822 format</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">${bodytype}</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-4" title="">Section 31.10.4</A
></TD
><td class="entry" rowspan="1" colspan="1">The ESMTP BODY parameter</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$B</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-5" title="">Section 31.10.5</A
></TD
><td class="entry" rowspan="1" colspan="1">The BITNET relay</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$c</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-6" title="">Section 31.10.6, $c</A
></TD
><td class="entry" rowspan="1" colspan="1">The hop count</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">${client_addr}</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-7" title="">Section 31.10.7</A
></TD
><td class="entry" rowspan="1" colspan="1">The connecting host's IP address</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">${client_name}</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-8" title="">Section 31.10.8</A
></TD
><td class="entry" rowspan="1" colspan="1">The connecting host's canonical name</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$C</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-9" title="">Section 31.10.9</A
></TD
><td class="entry" rowspan="1" colspan="1">The hostname of the DECnet relay (m4 technique)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$d</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-10" title="">Section 31.10.10</A
></TD
><td class="entry" rowspan="1" colspan="1">The current date in UNIX <em class="emphasis">ctime</EM
>(3)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$e</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="ch34_08.htm" title="">Section 34.8.65</A
></TD
><td class="entry" rowspan="1" colspan="1">SMTP greeting message (V8.6 and earlier)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">${envid}</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-12" title="">Section 31.10.12</A
></TD
><td class="entry" rowspan="1" colspan="1">The original DSN envelope ID (V8.8 and above)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$E</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-13" title="">Section 31.10.13</A
></TD
><td class="entry" rowspan="1" colspan="1">X.400 relay (unused) (m4 technique)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$f</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-14" title="">Section 31.10.14, $f</A
></TD
><td class="entry" rowspan="1" colspan="1">The sender's address</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$F</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-15" title="">Section 31.10.15</A
></TD
><td class="entry" rowspan="1" colspan="1">FAX relay (m4 technique)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$g</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-16" title="">Section 31.10.16</A
></TD
><td class="entry" rowspan="1" colspan="1">The sender's address relative to recipient</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$h</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-17" title="">Section 31.10.17, $h</A
></TD
><td class="entry" rowspan="1" colspan="1">Host part of the recipient address</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$H</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-18" title="">Section 31.10.18</A
></TD
><td class="entry" rowspan="1" colspan="1">The mail hub (m4 technique)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$i</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-19" title="">Section 31.10.19, $i</A
></TD
><td class="entry" rowspan="1" colspan="1">The queue identifier</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$j</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-20" title="">Section 31.10.20</A
></TD
><td class="entry" rowspan="1" colspan="1">Official canonical name</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$k</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-21" title="">Section 31.10.21</A
></TD
><td class="entry" rowspan="1" colspan="1">UUCP node name (V8.1 and above)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$l</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="ch34_08.htm" title="">Section 34.8.72</A
></TD
><td class="entry" rowspan="1" colspan="1">UNIX <code class="literal">From</CODE
> format (V8.6 and earlier)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$L</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-23" title="">Section 31.10.23</A
></TD
><td class="entry" rowspan="1" colspan="1">Local user relay (m4 technique)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$m</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-24" title="">Section 31.10.24</A
></TD
><td class="entry" rowspan="1" colspan="1">The DNS domain name (V8.1 and above)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$M</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-25" title="">Section 31.10.25</A
></TD
><td class="entry" rowspan="1" colspan="1">Who we are masquerading as (m4 technique)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$n</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-26" title="">Section 31.10.26</A
></TD
><td class="entry" rowspan="1" colspan="1">Error message sender</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$o</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="ch34_08.htm" title="">Section 34.8.45</A
></TD
><td class="entry" rowspan="1" colspan="1">Token separation characters (V8.6 and earlier)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">${opMode}</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-28" title="">Section 31.10.28</A
></TD
><td class="entry" rowspan="1" colspan="1">The startup operating mode (V8.7 and above)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$p</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-29" title="">Section 31.10.29, $p</A
></TD
><td class="entry" rowspan="1" colspan="1">The <em class="emphasis">sendmail</EM
> process ID</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$q</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-30" title="">Section 31.10.30</A
></TD
><td class="entry" rowspan="1" colspan="1">Default form of the sender address (V8.6 and earlier)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$r</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-31" title="">Section 31.10.31</A
></TD
><td class="entry" rowspan="1" colspan="1">The protocol used</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$R</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-32" title="">Section 31.10.32</A
></TD
><td class="entry" rowspan="1" colspan="1">The relay for unqualified names (m4 technique)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$s</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-33" title="">Section 31.10.33</A
></TD
><td class="entry" rowspan="1" colspan="1">Sender host's name</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$S</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-34" title="">Section 31.10.34</A
></TD
><td class="entry" rowspan="1" colspan="1">The Smart Host (m4 technique)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$t</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-35" title="">Section 31.10.35</A
></TD
><td class="entry" rowspan="1" colspan="1">Current time in seconds</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$u</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-36" title="">Section 31.10.36, $u</A
></TD
><td class="entry" rowspan="1" colspan="1">Recipient's username</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$U</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-37" title="">Section 31.10.37</A
></TD
><td class="entry" rowspan="1" colspan="1">The UUCP name to override $k</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$v</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-38" title="">Section 31.10.38</A
></TD
><td class="entry" rowspan="1" colspan="1">The <em class="emphasis">sendmail</EM
> program's version</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$V</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-39" title="">Section 31.10.39</A
></TD
><td class="entry" rowspan="1" colspan="1">The UUCP relay (for class <code class="literal">$=V</CODE
>) (m4 technique)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$w</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-40" title="">Section 31.10.40</A
></TD
><td class="entry" rowspan="1" colspan="1">The short name of this host</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$W</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-41" title="">Section 31.10.41</A
></TD
><td class="entry" rowspan="1" colspan="1">The UUCP relay (for class <code class="literal">$=W</CODE
>) (m4 technique)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$x</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-42" title="">Section 31.10.42</A
></TD
><td class="entry" rowspan="1" colspan="1">The full name of the sender</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$X</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-43" title="">Section 31.10.43</A
></TD
><td class="entry" rowspan="1" colspan="1">The UUCP relay (for class <code class="literal">$=X</CODE
>) (m4 technique)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$y</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-44" title="">Section 31.10.44, $y</A
></TD
><td class="entry" rowspan="1" colspan="1">Name of the controlling TTY</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$Y</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-45" title="">Section 31.10.45</A
></TD
><td class="entry" rowspan="1" colspan="1">The UUCP relay for unclassified hosts</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$z</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-46" title="">Section 31.10.46, $z</A
></TD
><td class="entry" rowspan="1" colspan="1">Recipient's home directory</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">$Z</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><a class="xref" href="#SML2-CH-31-SECT-10-47" title="">Section 31.10.47</A
></TD
><td class="entry" rowspan="1" colspan="1">The version of this m4 configuration (m4 technique)</TD
></TR
></TBODY
></TABLE
><p class="para">The following pages present a complete reference for each reserved
macro. They are presented in alphabetical order
for ease of lookup, rather than in the order in which they typically appear
in configuration files.</P
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-1">31.10.1 $-</A
></H3
><p class="refpurpose">RFC1413-validation and IP source route</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34205"></A
><a class="indexterm" name="AUTOID-34207"></A
>RFC1413, <em class="emphasis">Identification Protocol</EM
>, describes a method
for identifying the user and host that initiate network connections.
[10]
It relies on the originating host, which must be running the 
<em class="emphasis">identd</EM
>(8) daemon.</P
><blockquote class="footnote"><p class="para">[10] Bugs in Ultrix and OSF/1 (and maybe others) break the <em class="emphasis">ident</EM
>
protocol. For an explanation, see <em class="emphasis">conf.h</EM
>.</P
></BLOCKQUOTE
><p class="para">When the V8 <em class="emphasis">sendmail</EM
> daemon receives a network connection
request (and if <code class="literal">Timeout.ident</CODE
> option, see <a class="xref" href="ch34_08.htm" title="Timeout.ident">Section 34.8.70.10, "Timeout.ident"</A
>,
is nonzero),
it attempts to connect to the originating host's <em class="emphasis">identd</EM
> service.
If the originating host supports identification, <em class="emphasis">sendmail</EM
>
reads the login name of the user who initiated the connection.
The <em class="emphasis">sendmail</EM
> program then appends an <code class="literal">@</CODE
> and the
name of the originating host to it. If the name of the originating host
is an IP number in square brackets, <em class="emphasis">sendmail</EM
> attempts to convert
the number to a hostname. The final result, in the form <em class="emphasis">user@host</EM
>,
is assigned to <code class="literal">$_</CODE
>.</P
><p class="para">When <em class="emphasis">sendmail</EM
> is run on the local machine, it sets <code class="literal">$_</CODE
>
to be the name of the user that corresponds to the <em class="emphasis">uid</EM
>
of the process that ran <em class="emphasis">sendmail</EM
>. It gets that name by
calling <em class="emphasis">getpwuid</EM
>(3). If the call fails, the name is set 
to the string:</P
><p class="para"><blockquote class="screen"><pre class="screen">Unknown UID: <code class="replaceable"><i>num</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Here, <code class="replaceable"><i>num</I
></CODE
> is the <em class="emphasis">uid</EM
> for which a login name could
not be found.</P
><p class="para">Next, an <code class="literal">@</CODE
> and the name of the local
machine are appended to the name, and the result is assigned to <code class="literal">$_</CODE
>.</P
><p class="para">Beginning with V8.7 <em class="emphasis">sendmail</EM
>, attempts at IP source routing can
also be stored in this macro. If <em class="emphasis">sendmail</EM
>
was compiled with IP_SRCROUTE defined,
that IP source routing information will be added to <code class="literal">$_</CODE
> after
the user and host described above. The format of this additional
information is described in <a class="xref" href="ch18_08.htm" title="">Section 18.8.13, IP-SRCROUTE</A
>.</P
><p class="para">The <code class="literal">$_</CODE
> macro is not used by <em class="emphasis">sendmail</EM
>. Rather, it is
offered as a means for the administrator to use authentication
information. One possibility would be to include it in the
<code class="literal">Received:</CODE
> header:</P
><p class="para"><blockquote class="screen"><pre class="screen">HReceived: $?sfrom $s $.<code class="userinput"><b>$?_($_) $.</B
></CODE
>by $j ($v/$Z) id $i; $b</PRE
></BLOCKQUOTE
></P
><p class="para">Another possibility is to customize <em class="emphasis">checkcompat</EM
>() in <em class="emphasis">conf.c</EM
>.
One might, for example, wish to reject
any mail in which the host part of <code class="literal">$_</CODE
> does not match the
contents of <code class="literal">$s</CODE
> (see <a class="xref" href="#SML2-CH-31-SECT-10-33" title="">Section 31.10.33</A
>).
<a class="xref" href="ch20_02.htm#SML2-CH-20-SECT-2-2" title="Verify identd Information">Section 20.2.4, "Verify identd Information"</A
> shows an
example of how to code this.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-2">31.10.2 $a</A
></H3
><p class="refpurpose">The origin date in RFC822 format</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34269"></A
>The <code class="literal">$a</CODE
> macro holds the origin date of
a mail message (the date and time that the original message
was sent).
It holds a date in ARPAnet format,
defined in RFC822, section 5.1, and amended by RFC1123, section 5.2.14.</P
><p class="para">The <em class="emphasis">sendmail</EM
> program obtains that date in one of the following four ways:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">When <em class="emphasis">sendmail</EM
> first begins to run, it presets several
date-oriented macros internally to the current date and time.
Among those are the macros <code class="literal">$t</CODE
>,
<code class="literal">$d</CODE
>, <code class="literal">$b</CODE
>,
and <code class="literal">$a</CODE
>. 

This initialization is done after
the configuration file is read, so all but <code class="literal">$b</CODE
>
may be given initial values in that file.</P
></LI
><li class="listitem"><p class="para">Whenever <em class="emphasis">sendmail</EM
> collects information from the stored header of
a message (whether after message collection, during processing of the
queue, or when saving to the queue), it sets the value of <code class="literal">$a</CODE
>.
If a <code class="literal">Posted-Date:</CODE
> header exists, the
date from that line is used. Otherwise, if a <code class="literal">Date:</CODE
> header exists, that date is used.
Note that no check is made by <em class="emphasis">sendmail</EM
> to ensure that the date in
<code class="literal">$a</CODE
> is indeed in RFC822 format. Of necessity it must trust
that the originating program has adhered to that standard.</P
></LI
><li class="listitem"><p class="para">When <em class="emphasis">sendmail</EM
> notifies the user of an error, it takes the
origin date from <code class="literal">$b</CODE
> (the current date in RFC822 format,
and places that value into <code class="literal">$a</CODE
>.</P
></LI
></UL
><p class="para"><code class="literal">$a</CODE
> is chiefly intended for use in configuration-file header definitions. It may also be used in delivery agent
<code class="literal">A=</CODE
> equates (argument vectors), although it is of little
value in that case.</P
><p class="para"><code class="literal">$a</CODE
> is transient. If defined in the configuration
file or in the command line, that definition may be ignored by <em class="emphasis">sendmail</EM
>.
.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-3">31.10.3 $b</A
></H3
><p class="refpurpose">The current date in RFC822 format</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34310"></A
><a class="indexterm" name="AUTOID-34312"></A
>The <code class="literal">$b</CODE
> macro contains the current date in ARPAnet format,
as defined in RFC822, section 5.1, and amended by RFC1123, section 5.2.14.</P
><p class="para">Because <code class="literal">$b</CODE
> holds the current date and time, <em class="emphasis">sendmail</EM
>
frequently updates the value in that macro.
When <em class="emphasis">sendmail</EM
> first starts to run, it places the current date
and time into <code class="literal">$b</CODE
>. Thereafter, each time an SMTP
connection is made and each time the queue is processed, the value
of the date and time in that macro is updated.</P
><p class="para">If the system call to <em class="emphasis">time</EM
>(3) should fail, the value stored in
<code class="literal">$b</CODE
> becomes Wed Dec 31 15:59:59 1969,
[11]
and no other indication of an error is given.</P
><blockquote class="footnote"><p class="para">[11] The actual time depends on the local time zone.</P
></BLOCKQUOTE
><p class="para"><code class="literal">$b</CODE
> is chiefly intended for use in configuration-file
header definitions that require ARPAnet format
(such as <code class="literal">Received:</CODE
>, see <a class="xref" href="ch35_10.htm" title="">Section 35.10.25, Received:</A
>).
It may also be used in delivery agent
<code class="literal">A=</CODE
> equates (argument vectors), although it is of little
value in that case.</P
><p class="para"><code class="literal">$b</CODE
> is transient. If it is defined in the configuration
file or in the command line, that definition may be ignored by <em class="emphasis">sendmail</EM
>.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-4">31.10.4 ${bodytype}</A
></H3
><p class="refpurpose">The ESMTP BODY parameter</P
>(V8.8 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34344"></A
><a class="indexterm" name="AUTOID-34347"></A
><a class="indexterm" name="AUTOID-34349"></A
>MIME (multimedia) support in V8 <em class="emphasis">sendmail</EM
> has been coupled
to ESMTP (Extended SMTP) of the new BODY parameter for the
MAIL command. That parameter tells <em class="emphasis">sendmail</EM
> whether it
is dealing with 7-bit or 8-bit MIME data:</P
><p class="para"><blockquote class="screen"><pre class="screen">MAIL From: &lt;<code class="replaceable"><i>address</I
></CODE
>&gt; <code class="userinput"><b>BODY=7BIT</B
></CODE
>
MAIL From: &lt;<code class="replaceable"><i>address</I
></CODE
>&gt; <code class="userinput"><b>BODY=8BITMIME</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The parameter specified for the BODY 
(7BIT or 8BITMIME)
is the value stored in the <code class="literal">${bodytype}</CODE
> macro. </P
><p class="para">The <code class="literal">${bodytype}</CODE
> macro is intended to be used as part of the delivery
agent's <code class="literal">A=</CODE
> equate (see <a class="xref" href="ch30_04.htm" title="">Section 30.4.1, A=</A
>).
It provides a means to pass this information
to delivery agent programs as part of their command lines.</P
><p class="para"><code class="literal">${bodytype}</CODE
> is transient. If defined in the configuration
file or in the command line, that definition may be ignored by <em class="emphasis">sendmail</EM
>.
Note that the <code class="literal">-B</CODE
> command-line switch (see <a class="xref" href="ch36_07.htm" title="">Section 36.7.1, -B</A
>)
can be used to specify a value to be stored in <code class="literal">${bodytype}</CODE
>, but that
value too is transient.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-5">31.10.5 $B</A
></H3
><p class="refpurpose">The BITNET relay</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34380"></A
><a class="indexterm" name="AUTOID-34382"></A
>When configuring with the <em class="emphasis">m4</EM
> technique, you can specify 
a host that will transfer mail between the Internet and BITNET.
Mail to BITNET may then be sent by appending the
pseudo-domain <code class="literal">.BITNET</CODE
> to an address. For example,</P
><p class="para"><blockquote class="screen"><pre class="screen">user@ucbicsi.BITNET</PRE
></BLOCKQUOTE
></P
><p class="para">Here, <code class="literal">ucbicsi</CODE
> is a BITNET host.</P
><p class="para">To allow your configuration file to handle this form of address,
you need to declare the name of your BITNET relay
using the BITNET_RELAY keyword:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`BITNET_RELAY', `<code class="replaceable"><i>relayhost</I
></CODE
>')dnl</PRE
></BLOCKQUOTE
></P
><p class="para">This statement causes the rule for BITNET to be included in
your configuration file and causes <code class="replaceable"><i>relayhost</I
></CODE
>
to be assigned as the value of <code class="literal">$B</CODE
>.
(See <a class="xref" href="ch19_04.htm#SML2-CH-19-SECT-4-6" title="Relays">Section 19.4.5, "Relays"</A
> for a description of how to include a delivery
agent specification with <code class="replaceable"><i>relayhost</I
></CODE
>.)</P
><p class="para">See also <code class="literal">bitdomain</CODE
> FEATURE (see <a class="xref" href="ch19_06.htm" title="">Section 19.6.9, FEATURE(bitdomain)</A
>)
for a way to convert BITNET addresses to Internet addresses
for hosts that have both.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-6">31.10.6 $c</A
></H3
><p class="refpurpose">The hop count</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34411"></A
><a class="indexterm" name="AUTOID-34413"></A
><a class="indexterm" name="AUTOID-34417"></A
>The <code class="literal">c</CODE
> macro is used to store the number of times a mail
message has been forwarded from site to site. It is a count of the
number of <code class="literal">Received:</CODE
>,
<code class="literal">Via:</CODE
>, and <code class="literal">Mail-From:</CODE
> header lines in a message.</P
><p class="para">The value in <code class="literal">$c</CODE
> is not used by <em class="emphasis">sendmail</EM
>. Rather,
it is made available for use in configuration-file header line
definitions. When calculating the hop count for comparison
to the <code class="literal">MaxHopCount</CODE
> (<code class="literal">h</CODE
>) option (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.36, MaxHopCount (h)</A
>), <em class="emphasis">sendmail</EM
>
uses internal variables.</P
><p class="para"><code class="literal">$c</CODE
> is transient. If defined in the configuration
file or in the command line, that definition may be ignored by <em class="emphasis">sendmail</EM
>.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-7">31.10.7 ${client-addr}</A
></H3
><p class="refpurpose">The connecting host's IP address</P
>(V8.8 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34442"></A
><a class="indexterm" name="AUTOID-34444"></A
><a class="indexterm" name="AUTOID-34447"></A
>The <code class="literal">${client_addr}</CODE
> macro is assigned its value when a host connects
to the running daemon. The value assigned is the IP address
of that connecting host and is the same as the IP address
stored in the <code class="literal">$_</CODE
> macro,
but without the surrounding square brackets and other non-IP information.</P
><p class="para">The <code class="literal">${client_addr}</CODE
> macro can be useful in the 
<code class="literal">check_rcpt</CODE
> (see <a class="xref" href="ch29_10.htm#SML2-CH-29-SECT-10-1" title="The check_mail Rule Set">Section 29.10.1, "The check_mail Rule Set"</A
>)
and <code class="literal">check_mail</CODE
> (see <a class="xref" href="ch29_10.htm#SML2-CH-29-SECT-10-1" title="The check_rcpt Rule Set">Section 29.10.2, "The check_rcpt Rule Set"</A
>)
rule sets. It can, for example, be used
detect whether an external host is trying to send external mail through
your outgoing firewall machine.</P
><p class="para"><blockquote class="screen"><pre class="screen">D{ourdomain}123.45.6
Scheck_mail
R$*                 $: $(dequote &quot;&quot; $&amp;{client_addr} $)
R${ourdomain}.$-    $@ Okay our domain
R$*                 $#error $@ 5.7.1 $: &quot;cannot send out from the outside&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">Here, the first rule transfers the value of  <code class="literal">${client_addr}</CODE
> into
the workspace. The <code class="literal">$&amp;</CODE
> prefix (see <a class="xref" href="ch31_05.htm" title="Use Value as Is with $&amp;">Section 31.5.3, "Use Value as Is with $&amp;"</A
>)
prevents that macro from wrongly
being expanded when the configuration file is read. The second
rule compares the domain part of your IP domain (that of
your internal network) to the workspace.
If they match, the connection is from a host in your internal domain space.
If not, an error is generated in response to the SMTP MAIL command.</P
><p class="para">Note that this rule set rejects all mail coming from outside your network,
which may be overkill (depending, of course, on what you want).
It is really useful only at sites that have two firewalls, one for
incoming traffic and one for outgoing traffic. This rule set might go on the
outgoing firewall.</P
><p class="para"><code class="literal">${client_addr}</CODE
> is transient. If it is defined in the configuration
file or in the command line, that definition may be ignored by <em class="emphasis">sendmail</EM
>.
Note that <code class="literal">${client_addr}</CODE
> is <em class="emphasis">not</EM
> guaranteed to be available
in the <code class="literal">check_compat</CODE
> rule set (see <a class="xref" href="ch29_10.htm#SML2-CH-29-SECT-10-1" title="The check_compat Rule Set">Section 29.10.4, "The check_compat Rule Set"</A
>)
or in the <code class="literal">check_relay</CODE
> rule set (see <a class="xref" href="ch29_10.htm#SML2-CH-29-SECT-10-1" title="The check_relay Rule Set">Section 29.10.3, "The check_relay Rule Set"</A
>).</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-8">31.10.8 ${client-name}</A
></H3
><p class="refpurpose">The connecting host's canonical name</P
>(V8.8 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34483"></A
><a class="indexterm" name="AUTOID-34485"></A
><a class="indexterm" name="AUTOID-34488"></A
><a class="indexterm" name="AUTOID-34491"></A
>The <code class="literal">${client_name}</CODE
> macro is assigned its value when a host connects
to the running daemon. This macro holds as its value, the canonical
hostname of that connecting host, which is the same as the hostname
stored in the <code class="literal">$_</CODE
> macro.</P
><p class="para">The <code class="literal">${client_name}</CODE
> macro is useful in the 
<code class="literal">check_rcpt</CODE
> (see <a class="xref" href="ch29_10.htm#SML2-CH-29-SECT-10-1" title="The check_mail Rule Set">Section 29.10.1</A
>)
and <code class="literal">check_mail</CODE
> (see <a class="xref" href="ch29_10.htm#SML2-CH-29-SECT-10-1" title="The check_rcpt Rule Set">Section 29.10.2</A
>)
rule sets. It can, for example, be used 
to see whether the connecting host is your firewall machine:</P
><p class="para"><blockquote class="screen"><pre class="screen">D{firewall}fw.our.domain
Scheck_mail
R$*                     $: $(dequote &quot;&quot; $&amp;{client_name} $)
R${firewall}            $@ Okay our firewall machine
R$*                     $#error $@ 5.7.1 $: &quot;can only accept from our firewall&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">Here, the first rule transfers the value of  <code class="literal">${client_name}</CODE
> into
the workspace. The <code class="literal">$&amp;</CODE
> prefix (see <a class="xref" href="ch31_05.htm" title="Use Value as Is with $&amp;">Section 31.5.3</A
>)
prevents that macro from wrongly
being expanded when the configuration file is read. The second
rule compares the name of the firewall to that workspace.
If they match, the connecting host was indeed the firewall machine.</P
><p class="para"><code class="literal">${client_name}</CODE
> is transient. If it is defined in the configuration
file or in the command line, that definition may be ignored by <em class="emphasis">sendmail</EM
>.
Note that <code class="literal">${client_name}</CODE
> is <em class="emphasis">not</EM
> guaranteed to be available
in the <code class="literal">check_compat</CODE
> rule set (see <a class="xref" href="ch29_10.htm#SML2-CH-29-SECT-10-1" title="The check_compat Rule Set">Section 29.10.4</A
>) or in the <code class="literal">check_relay</CODE
> rule set (see <a class="xref" href="ch29_10.htm#SML2-CH-29-SECT-10-1" title="The check_relay Rule Set">Section 29.10.3</A
>).</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-9">31.10.9 $C</A
></H3
><p class="refpurpose">The DECnet relay</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34526"></A
><a class="indexterm" name="AUTOID-34528"></A
><a class="indexterm" name="AUTOID-34531"></A
>DECnet addresses are of the form <em class="emphasis">node::user</EM
>.
They can be handled by defining a host that will relay them
into your DECnet network. 
Using the <em class="emphasis">m4</EM
> technique, you enable DECnet like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`DECNET_RELAY', `<code class="replaceable"><i>relay_host</I
></CODE
>')dnl</PRE
></BLOCKQUOTE
></P
><p class="para">Mail addressed to <em class="emphasis">node::user</EM
> will then be forwarded
to <code class="replaceable"><i>relay_host</I
></CODE
>, as will any Internet-style addresses
that end in the pseudo-domain <code class="literal">.DECNET</CODE
>, such as
<em class="emphasis">user@domain.DECNET</EM
>.
<code class="literal">$C</CODE
> holds the name of the <code class="replaceable"><i>relay_host</I
></CODE
>.
(See <a class="xref" href="ch19_04.htm#SML2-CH-19-SECT-4-6" title="Relays">Section 19.4.5</A
> for a description of how to include a delivery
agent specification with <code class="replaceable"><i>relay_host</I
></CODE
>.)</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-10">31.10.10 $d</A
></H3
><p class="refpurpose">The current date in UNIX ctime(3) format</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34557"></A
><a class="indexterm" name="AUTOID-34561"></A
>The <code class="literal">$d</CODE
> macro holds the current date and time.
<code class="literal">$d</CODE
> is given its value at the same
time <code class="literal">$a</CODE
> is defined. The only difference
between the two is that <code class="literal">$a</CODE
> contains the date in
RFC822 format, whereas <code class="literal">$d</CODE
> contains the same
date in UNIX <em class="emphasis">ctime</EM
>(3) format.</P
><p class="para">The form of a date in <em class="emphasis">ctime</EM
>(3) format is generally
[12]</P
><blockquote class="footnote"><p class="para">[12] The format produced by <em class="emphasis">ctime</EM
>(3) varies depending on the
area of the world.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">Sun Dec 26 01:03:52 1999\n </PRE
></BLOCKQUOTE
></P
><p class="para">When <em class="emphasis">sendmail</EM
> stores this form of date into <code class="literal">$d</CODE
>,
it converts the trailing newline (the <code class="literal">\n</CODE
>) into a zero, thus
stripping the newline from the date.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-11">31.10.11 $e</A
></H3
><p class="refpurpose">The SMTP greeting message</P
>(V8.6 and earlier)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34589"></A
><a class="indexterm" name="AUTOID-34591"></A
><a class="indexterm" name="AUTOID-34593"></A
><a class="indexterm" name="AUTOID-34595"></A
>Prior to V8.7 <em class="emphasis">sendmail</EM
> 
the <code class="literal">$e</CODE
> macro was used to hold the SMTP greeting message.
That role has been taken over by the <code class="literal">SmtpGreetingMessage</CODE
>
option. See <a class="xref" href="ch34_08.htm" title="">Section 34.8.65</A
> for a description of
both this <code class="literal">$e</CODE
> macro and that new option.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-12">31.10.12 ${envid}</A
></H3
><p class="refpurpose">The original DSN envelope ID</P
>(V8.8 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34612"></A
><a class="indexterm" name="AUTOID-34614"></A
><a class="indexterm" name="AUTOID-34617"></A
>RFC1891 specifies that the keyword ENVID may be given
to the MAIL ESMTP command:</P
><p class="para"><blockquote class="screen"><pre class="screen">MAIL From: &lt;<code class="replaceable"><i>address</I
></CODE
>&gt; ENVID=<code class="replaceable"><i>envelopeID</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">ENVID is used to propagate a consistent envelope identifier
(distinct from the <code class="literal">Message-ID:</CODE
> header; see <a class="xref" href="ch35_10.htm" title="">Section 35.10.19, Message-ID:</A
>), that
will be permanently associated with the message. The <code class="literal">envelopeID</CODE
>
may contain any ASCII characters between <code class="literal">!</CODE
> and <code class="literal">~</CODE
>,
except <code class="literal">+</CODE
> and <code class="literal">=</CODE
>.
Any characters outside that range must be encoded by prefixing 
an uppercase, two-digit, hexadecimal representation of it with a plus.
For example, an <code class="literal">envelopeID</CODE
> composed of the letter <code class="literal">X</CODE
>
followed by a delete character would be encoded like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">X+7F</PRE
></BLOCKQUOTE
></P
><p class="para">When mail is received over an SMTP channel and an ENVID
identifier is specified, that identifier is saved as part of the envelope
information.
The value of the
ENVID identifier is saved in and restored from the <code class="literal">qf</CODE
> file's <code class="literal">Z</CODE
> line
(see <a class="xref" href="ch23_09.htm" title="">Section 23.9.17, Z line</A
>). For bounced mail, the ENVID identifier is printed
with the <code class="literal">Original-Envelope-Id:</CODE
> DSN header
(see RFC1894) as part of the DSN MIME body.
Beginning with V8.8 <em class="emphasis">sendmail</EM
>, an ENVID identifier can also be assigned to a message with
the <code class="literal">-V</CODE
> command-line switch (see <a class="xref" href="ch36_07.htm" title="">Section 36.7.40, -V</A
>).</P
><p class="para">When mail is delivered, the value of the envelope's  ENVID identifier is
saved in the <code class="literal">${envid}</CODE
> macro. That macro is available for use with
delivery agents that understand DSN.</P
><p class="para"><code class="literal">${envid}</CODE
> is transient. If it is defined in the configuration
file or in the command line, that definition may be ignored by <em class="emphasis">sendmail</EM
>.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-13">31.10.13 $E</A
></H3
><p class="refpurpose">X.400 relay</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34658"></A
><a class="indexterm" name="AUTOID-34660"></A
>The <code class="literal">$E</CODE
> macro is reserved for the future use of the <em class="emphasis">m4</EM
>
technique. It will be used to hold the name of the X.400 relay.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-14">31.10.14 $f</A
></H3
><p class="refpurpose">The sender's address</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34673"></A
><a class="indexterm" name="AUTOID-34675"></A
>The <code class="literal">$f</CODE
> macro is used to hold the address of the sender. That
address can be obtained by <em class="emphasis">sendmail</EM
> from any of a variety of
places:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">During an SMTP conversation the sending host specifies the address
of the sender by issuing a MAIL SMTP command.</P
></LI
><li class="listitem"><p class="para">Trusted users are those declared as part of the <code class="literal">t</CODE
> class (see <a class="xref" href="ch32_05.htm" title="">Section 32.5.7, $=t</A
>).
[13]
Those users, and programs running under the identity of those users,
may specify the address of the sender by using the <code class="literal">-f</CODE
> command-line
switch when running <em class="emphasis">sendmail</EM
>.</P
><blockquote class="footnote"><p class="para">[13] Prior to V8.1 this was set with a <code class="literal">T</CODE
> configuration command.
This feature was eliminated in versions V8.1 through V8.6 and restored in V8.7.</P
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">In processing a message from the queue, the sender's address is
taken from the <code class="literal">qf</CODE
> file's <code class="literal">S</CODE
> line.</P
></LI
><li class="listitem"><p class="para">In processing bounced mail, the sender becomes the name specified
by the value of <code class="literal">$n</CODE
>, usually <em class="emphasis">mailer-daemon</EM
>.</P
></LI
><li class="listitem"><p class="para">In the absence of the above, <em class="emphasis">sendmail</EM
> tries to use the
user identity of the invoking program to determine the sender.</P
></LI
></UL
><p class="para">Once <em class="emphasis">sendmail</EM
> has determined the sender (possibly aliased), it rewrites the address found with rule sets
3, 1, and 4. The rewritten address is then made the value of <code class="literal">$f</CODE
>.</P
><p class="para">&#13;<code class="literal">$f</CODE
> is intended for use in both configuration-file header 
commands and delivery agent <code class="literal">A=</CODE
> equates.
<code class="literal">$f</CODE
> differs from <code class="literal">$g</CODE
>
in that <code class="literal">$g</CODE
> undergoes
additional processing to produce a true return address.
When <em class="emphasis">sendmail</EM
> queues a mail message and when it processes the queue,
the values in <code class="literal">$f</CODE
> and <code class="literal">$g</CODE
> are identical.</P
><p class="para"><code class="literal">$f</CODE
> is transient. If it is defined in the configuration
file or in the command line, that definition may be ignored by <em class="emphasis">sendmail</EM
>.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-15">31.10.15 $F</A
></H3
><p class="refpurpose">The FAX relay</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34728"></A
><a class="indexterm" name="AUTOID-34730"></A
><a class="indexterm" name="AUTOID-34732"></A
>At many sites, faxes can be sent via email. When the host
that dispatches those faxes is not the local host, you need
to relay FAX mail to the host that can dispatch faxes.
This ability is enabled by defining that relay host with
the <em class="emphasis">m4</EM
> technique:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`FAX_RELAY', `<code class="replaceable"><i>relay_host</I
></CODE
>')dnl</PRE
></BLOCKQUOTE
></P
><p class="para">This causes all mail that ends with the pseudo domain <code class="literal">.FAX</CODE
>
to be forwarded to <code class="replaceable"><i>relay_host</I
></CODE
>. It also assigns the value
<code class="replaceable"><i>relay_host</I
></CODE
> to <code class="literal">$F</CODE
>.
(See <a class="xref" href="ch19_04.htm#SML2-CH-19-SECT-4-6" title="Relays">Section 19.4.5</A
> for a description of how to include a delivery
agent specification with <code class="replaceable"><i>relay_host</I
></CODE
>.)</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-16">31.10.16 $g</A
></H3
><p class="refpurpose">The sender's address relative to recipient</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34754"></A
><a class="indexterm" name="AUTOID-34756"></A
>The <code class="literal">$g</CODE
> macro is identical to <code class="literal">$f</CODE
>
except that it undergoes additional rule-set processing
to translate it into a full return address. During delivery the
sender's address is processed by rule sets 3, 1, and 4 and then
placed into <code class="literal">$f</CODE
>. That rewritten address is
further processed by 3 and 1 again, then custom rewritten by
the rule set specified in the <code class="literal">S=</CODE
> equate of the delivery agent.
Finally, it is rewritten by rule set 4, and the result is placed into <code class="literal">$g</CODE
>.</P
><p class="para"><code class="literal">$g</CODE
> holds the official return address for the
sender. As such, it should be used in the <code class="literal">From:</CODE
> 
and <code class="literal">Return-Path:</CODE
> header definitions.</P
><p class="para">The <code class="literal">S=</CODE
> equate for each delivery agent must perform all necessary
translations to produce a value for <code class="literal">$g</CODE
> that is correct.
Because the form of a correct return address varies depending on
the delivery agent, other rule sets should generally not be
used for this translation.</P
><p class="para">Ordinarily, RFC822 comments (see <a class="xref" href="ch35_03.htm#SML2-CH-35-SECT-3-2" title="Comments in the Header Field">Section 35.3.4, "Comments in the Header Field"</A
>)
are restored when <code class="literal">$g</CODE
> is used in headers. To omit those comments (perhaps
for security reasons), you may use
the <code class="literal">F=c</CODE
> delivery agent flag (see <a class="xref" href="ch30_08.htm" title="">Section 30.8.14, F=c</A
>).&#13;</P
><p class="para"><code class="literal">$g</CODE
> is transient. If it is defined in the configuration
file or in the command line, that definition may be ignored by <em class="emphasis">sendmail</EM
>.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-17">31.10.17 $h</A
></H3
><p class="refpurpose">Host part of the recipient address</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34788"></A
><a class="indexterm" name="AUTOID-34790"></A
><a class="indexterm" name="AUTOID-34793"></A
>Rule set 0 (see <a class="xref" href="ch29_06.htm#SML2-CH-29-SECT-6-1" title="Rule Set 0">Section 29.6, "Rule Set 0"</A
>) is used to resolve the recipient address into a triple:
the delivery agent (with <code class="literal">$#</CODE
>), the host part of the address
(with <code class="literal">$@</CODE
>), and the recipient user's name (with <code class="literal">$:</CODE
>).
The host part, from the <code class="literal">$@</CODE
>, is made the value of <code class="literal">$h</CODE
>.
Once <code class="literal">$h</CODE
>'s value has been set, it undergoes no
further rule-set parsing.</P
><p class="para"><code class="literal">$h</CODE
> is intended for use in the <code class="literal">A=</CODE
> equate (see <a class="xref" href="ch30_04.htm" title="">Section 30.4.1</A
>)
of delivery agent definitions.
Normally, it is converted to all lowercase before use, but that
conversion can be suppressed with the <code class="literal">F=h</CODE
> delivery agent
flag (see <a class="xref" href="ch30_08.htm" title="">Section 30.8.23, F=h</A
>).</P
><p class="para"><code class="literal">$h</CODE
> is transient. If defined in the configuration
file or in the command line, that definition may be ignored by <em class="emphasis">sendmail</EM
>.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-18">31.10.18 $H</A
></H3
><p class="refpurpose">The mail hub</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34821"></A
><a class="indexterm" name="AUTOID-34824"></A
>The <em class="emphasis">m4</EM
> nullclient feature (see <a class="xref" href="ch19_06.htm" title="">Section 19.6.20, FEATURE(nullclient)</A
>)
causes all mail to be sent to a central hub machine for handling.
Part of what it does is to define the <em class="emphasis">m4</EM
> macro
MAIL_HUB:<a class="indexterm" name="AUTOID-34829"></A
></P
><p class="para"><blockquote class="screen"><pre class="screen">define(`MAIL_HUB', `<code class="replaceable"><i>hub</I
></CODE
>')dnl</PRE
></BLOCKQUOTE
></P
><p class="para">This also causes <code class="literal">$H</CODE
> to be defined as <code class="replaceable"><i>hub</I
></CODE
>. If
<code class="literal">$H</CODE
> has a value, and if <code class="literal">$R</CODE
> (the LOCAL_RELAY, see <a class="xref" href="#SML2-CH-31-SECT-10-32" title="">Section 31.10.32</A
>)
does not, all local email is forwarded to <code class="replaceable"><i>hub</I
></CODE
>. If <code class="literal">$R</CODE
>
is defined it takes precedence over <code class="literal">$H</CODE
> for some mail.
See <a class="xref" href="ch19_06.htm" title="">Section 19.6.41, MAIL-HUB</A
> for a description of MAIL_HUB
and how it interacts with LOCAL_RELAY.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-19">31.10.19 $i</A
></H3
><p class="refpurpose">The queue identifier</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34853"></A
>Each queued message is identified by a unique identifier (see <a class="xref" href="ch23_02.htm#SML2-CH-23-SECT-2-5" title="The Queue Identifier">Section 23.2.1, "The Queue Identifier"</A
>).
The <code class="literal">$i</CODE
> macro contains as its value that identifier.
Prior to V8.6 <em class="emphasis">sendmail</EM
>, <code class="literal">$i</CODE
> had a value assigned to it
only when a file was first placed into the queue.
Beginning with V8.6 <em class="emphasis">sendmail</EM
>, <code class="literal">$i</CODE
> is also given a value when the queue file
is processed.</P
><p class="para"><code class="literal">$i</CODE
> is not used by <em class="emphasis">sendmail</EM
> internally.
It should be trusted for use only in the <code class="literal">Received:</CODE
> and
<code class="literal">Message-ID:</CODE
> headers.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-20">31.10.20 $j</A
></H3
><p class="refpurpose">Our official canonical name</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34875"></A
><a class="indexterm" name="AUTOID-34878"></A
><a class="indexterm" name="AUTOID-34881"></A
><a class="indexterm" name="AUTOID-34885"></A
>The <code class="literal">j</CODE
> macro is used to hold the fully qualified domain
name of the local machine.
It <em class="emphasis">must</EM
> be defined in the configuration file.
[14]</P
><blockquote class="footnote"><p class="para">[14] Except in V8 <em class="emphasis">sendmail</EM
>, where <code class="literal">$j</CODE
> is automatically defined
to be the fully qualified canonical name of the local host.
However, it is still possible to redefine <code class="literal">$j</CODE
> if necessary, for example,
if <em class="emphasis">sendmail</EM
> cannot figure out your fully qualified canonical name or if your machine has multiple network interfaces and <em class="emphasis">sendmail</EM
> chooses the name associated with the wrong interface.</P
></BLOCKQUOTE
><p class="para">A fully qualified domain name is one that begins with the local
hostname, which is followed by a dot and all the components
of the local domain.</P
><p class="para">The hostname part is the name of the local
machine. That name is defined at boot time in
ways that vary with the version of UNIX. </P
><p class="para">The local domain refers to the DNS domain, not to the NIS domain.
If DNS is running, the domain is defined in the <em class="emphasis">/etc/resolv.conf</EM
>
file, for example,</P
><p class="para"><blockquote class="screen"><pre class="screen">domain wash.dc.gov</PRE
></BLOCKQUOTE
></P
><p class="para">At many sites the local hostname is already fully qualified. To tell
whether your site uses just the local hostname,
run <em class="emphasis">sendmail</EM
> with a <code class="literal">-d0.4</CODE
> switch:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>/usr/lib/sendmail -d0.4 -bt &lt; /dev/null</B
></CODE
>
<i class="lineannotation">... some output here</I
>
canonical name: wash            <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> not fully qualified</I
>
canonical name: wash.dc.gov     <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> fully qualified</I
></PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">j</CODE
> macro is used in two ways by <em class="emphasis">sendmail</EM
>. Because
<code class="literal">$j</CODE
> holds the fully qualified domain name, <em class="emphasis">sendmail</EM
>
uses that name to avoid making SMTP connections to itself. It also
uses that name in all phases of SMTP conversations that require the
local machine's identity. 
One indication of an improperly formed <code class="literal">$j</CODE
>
is the following SMTP error:</P
><p class="para"><blockquote class="screen"><pre class="screen">553 wash.dc.gov.dc.gov host name configuration error</PRE
></BLOCKQUOTE
></P
><p class="para">Here, <code class="literal">$j</CODE
> was wrongly defined by adding the local domain to
a <code class="literal">$w</CODE
> that already included that domain:</P
><p class="para"><blockquote class="screen"><pre class="screen"># Our domain
DDdc.gov
# Our fully qualified name
Dj$w.$D</PRE
></BLOCKQUOTE
></P
><p class="para">One way to tell whether <code class="literal">$j</CODE
> contains the correct value is
to send mail to yourself. Examine the <code class="literal">Received:</CODE
> headers.
The name of the local host must be fully qualified where it appears
in them:</P
><p class="para"><blockquote class="screen"><pre class="screen">Received: by wash.dc.gov    <em class="emphasis">...other text here</EM
>
             <img src="../chars/uarr.gif" alt="-^">
             <i class="lineannotation">must be a fully qualified domain name</I
></PRE
></BLOCKQUOTE
></P
><p class="para"><code class="literal">$j</CODE
> is also used: in the
<code class="literal">Message-Id:</CODE
> header definition;
and as the canonical host-name following
.IX HELO
the HELO or EHLO command.</P
><p class="para">For all but V8 <em class="emphasis">sendmail</EM
>,
<code class="literal">$j</CODE
> <em class="emphasis">must</EM
> be defined in the configuration file.
For V8 it is automatically defined.
It must <em class="emphasis">never</EM
> be defined in the command line.
<code class="literal">$j</CODE
> must appear at the beginning of
the definition of the <code class="literal">SmtpGreetingMessage</CODE
>
option (formerly <code class="literal">$e</CODE
>, see <a class="xref" href="ch34_08.htm" title="">Section 34.8.65</A
>).
In using SunOS <em class="emphasis">sendmail.mx</EM
>, <code class="literal">$w</CODE
> must also
be the fully qualified domain name.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-21">31.10.21 $k</A
></H3
><p class="refpurpose">Our UUCP node name</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-34954"></A
><a class="indexterm" name="AUTOID-34956"></A
>The UUCP suite of software gets the name of the local host from
the <em class="emphasis">uname</EM
>(2) system call, whereas <em class="emphasis">sendmail</EM
> gets
the name of the local host from the <em class="emphasis">gethostbyname</EM
>(3) system
call. For <em class="emphasis">sendmail</EM
> to easily handle UUCP addresses,
V8 <em class="emphasis">sendmail</EM
> also makes use of the <em class="emphasis">uname</EM
>(2) function.</P
><p class="para">First the host part of the fully qualified name returned
by <em class="emphasis">gethostbyname</EM
>(3) is saved as the first string in the
class <code class="literal">$=w</CODE
>. Then <em class="emphasis">uname</EM
>(2) is called. If the call succeeds,
the macro <code class="literal">$k</CODE
> and the class <code class="literal">k</CODE
> are both given the
<em class="emphasis">nodename</EM
> value returned. If the call fails, both are given
the same hostname value that was given to the <code class="literal">$j</CODE
>.
If the system does not have <em class="emphasis">uname</EM
>(2) available (if HASUNAME
was <em class="emphasis">not</EM
> defined when <em class="emphasis">sendmail</EM
> was compiled; see <a class="xref" href="ch18_08.htm" title="">Section 18.8.9, HAS...</A
>),
<em class="emphasis">sendmail</EM
> simulates it. The <em class="emphasis">sendmail</EM
> program's internal
replacement for <em class="emphasis">uname</EM
> begins by reading <em class="emphasis">/etc/whoami</EM
>. If that file does
not exist or cannot be read, <em class="emphasis">sendmail</EM
> scans
<em class="emphasis">/usr/include/whoami.h</EM
> for a line beginning <code class="literal">#define
sysname</CODE
>. If that fails and if <em class="emphasis">sendmail</EM
> was compiled with
TRUST_POPEN
[15]
defined (see <a class="xref" href="ch18_08.htm" title="">Section 18.8.51, TRUST-POPEN</A
>),
<em class="emphasis">sendmail</EM
> executes the following command and reads its output
as the UUCP node name:</P
><blockquote class="footnote"><p class="para">[15] TRUST_POPEN is a security risk. Instead of defining it, consider
creating an <em class="emphasis">/etc/whoami</EM
> file and populating it or defining
<code class="literal">$k</CODE
> directly in your configuration file.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">uname -l</PRE
></BLOCKQUOTE
></P
><p class="para">If all these fail, <code class="literal">$k</CODE
> is set to be the same
as <code class="literal">$j</CODE
>.</P
><p class="para"><code class="literal">$k</CODE
> is assigned its value when <em class="emphasis">sendmail</EM
> first
begins to run. It can be given a new value either in the configuration
file or from the command line.
The <code class="literal">-d0.22</CODE
> debugging switch (see <a class="xref" href="ch37_05.htm" title="">Section 37.5.6, -d0.22</A
>)
can be used to watch <em class="emphasis">uname</EM
>() fail.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-22">31.10.22 $l (lowercase L)</A
></H3
><p class="refpurpose">The From format</P
>(V8.6 and earlier)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35011"></A
><a class="indexterm" name="AUTOID-35013"></A
>Prior to V8.7 <em class="emphasis">sendmail</EM
>,
the <code class="literal">l</CODE
> macro was used to define the look of the five 
character &quot;<code class="literal">From&nbsp;</CODE
>&quot;
header, and the format of the line was used to separate one message
from another in a file of many mail messages.
This role has been assumed by the <code class="literal">UnixFromLine</CODE
>
option. See <a class="xref" href="ch34_08.htm" title="">Section 34.8.72</A
> for a description of
both this <code class="literal">l</CODE
> macro and that new option.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-23">31.10.23 $L</A
></H3
><p class="refpurpose">The Unknown Local User relay</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35031"></A
><a class="indexterm" name="AUTOID-35033"></A
><a class="indexterm" name="AUTOID-35036"></A
><a class="indexterm" name="AUTOID-35038"></A
><a class="indexterm" name="AUTOID-35041"></A
>A local user is one who evaluates to delivery on the local
machine, even after aliasing. By defining
LUSER_RELAY:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`LUSER_RELAY', `<code class="replaceable"><i>relay_host</I
></CODE
>')dnl</PRE
></BLOCKQUOTE
></P
><p class="para">any username that is not found in the <em class="emphasis">passwd</EM
>(5) file
will be forwarded to <code class="replaceable"><i>relay_host</I
></CODE
>. This check is made
after aliasing but before processing of the <em class="emphasis">~/.forward</EM
> file.
The <code class="replaceable"><i>relay_host</I
></CODE
> is assigned to the <code class="literal">$L</CODE
> macro. The <em class="emphasis">m4</EM
>
technique then adds rules to rule set 5 of the configuration file that cause
the user to be looked up with the <code class="literal">user</CODE
> database class (see the <code class="literal">name</CODE
>
keyword for that class in <a class="xref" href="ch33_08.htm" title="">Section 33.8.20, user</A
>). If the user's name is not
found, the message is forwarded to the host defined by <code class="literal">$L</CODE
>.
(See <a class="xref" href="ch19_04.htm#SML2-CH-19-SECT-4-6" title="Relays">Section 19.4.5</A
> for a description of how to include a delivery
agent specification with <code class="replaceable"><i>relay_host</I
></CODE
>.)</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-24">31.10.24 $m</A
></H3
><p class="refpurpose">Domain part of hostname</P
>(V8.1 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35068"></A
><a class="indexterm" name="AUTOID-35070"></A
><a class="indexterm" name="AUTOID-35074"></A
><a class="indexterm" name="AUTOID-35078"></A
>Under V8 <em class="emphasis">sendmail</EM
>
[16]
the <code class="literal">$m</CODE
> macro is used to store
the domain part of the local host's fully qualified name.
A fully qualified name begins with the local
hostname followed by a dot and all the components
of the local DNS domain. </P
><blockquote class="footnote"><p class="para">[16] <code class="literal">$m</CODE
> is the NIS domain for pre-V8 versions of Sun
<em class="emphasis">sendmail</EM
>, and <code class="literal">$m</CODE
> is the original user address for
IDA <em class="emphasis">sendmail</EM
>.</P
></BLOCKQUOTE
><p class="para">The value in <code class="literal">$m</CODE
> is derived from <code class="literal">$w</CODE
>.
When V8 <em class="emphasis">sendmail</EM
> first starts to run, it calls <em class="emphasis">gethostname</EM
>(3)
to get the name of the local machine. If that call fails, it sets
that local name to be <em class="emphasis">localhost</EM
>. Then <em class="emphasis">sendmail</EM
>
calls <em class="emphasis">gethostbyname</EM
>(3) to find the official name for
the local host, which is assigned to <code class="literal">$w</CODE
>
as that macro's initial value. V8 <em class="emphasis">sendmail</EM
> then
looks for the leftmost dot in <code class="literal">$w</CODE
>. If it finds one,
everything from the first character following that dot to the
end of the name then becomes the value for <code class="literal">$m</CODE
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">host.domain
     <img src="../chars/uarr.gif" alt="-^">
     <i class="lineannotation">domain part made the value of $m</I
></PRE
></BLOCKQUOTE
></P
><p class="para"><code class="literal">$m</CODE
> is initialized before the configuration file
is read. Consequently, it may be redefined in the configuration file or
as a part of the command line.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-25">31.10.25 $M</A
></H3
><p class="refpurpose">Whom we are masquerading as</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35115"></A
><a class="indexterm" name="AUTOID-35117"></A
>When you define MASQUERADE_AS using the <em class="emphasis">m4</EM
> configuration
technique, you both enable masquerading (see <a class="xref" href="ch19_06.htm" title="">Section 19.6.42, MASQUERADE-AS</A
>)
and assign that hostname to this <code class="literal">$M</CODE
> macro.
Note that defining <code class="literal">$M</CODE
> will not enable masquerading. You must
use the MASQUERADE_AS <em class="emphasis">m4</EM
> configuration command to 
enable this service.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-26">31.10.26 $n</A
></H3
><p class="refpurpose">The error message sender</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35133"></A
><a class="indexterm" name="AUTOID-35135"></A
>The <code class="literal">$n</CODE
> macro contains the name of the
person from whom failed mail is returned. Traditionally, that value
is the name <em class="emphasis">mailer-daemon</EM
>.</P
><p class="para">When delivery fails and notification of that failure is being prepared
to be sent to the originating sender, <em class="emphasis">sendmail</EM
> &quot;fakes up&quot;
a header. That header prepends the original header (and any included
error messages). The sender of the error mail message (and the
sender in the envelope) is taken from <code class="literal">$n</CODE
>.</P
><p class="para">The <code class="literal">n</CODE
> macro must contain either a real user's name or
a name that resolves to a real user through aliasing. If <em class="emphasis">sendmail</EM
>
cannot resolve <code class="literal">$n</CODE
> to a real user, the following message
is logged, and the returned error mail
message is saved in <em class="emphasis">/usr/tmp/dead.letter</EM
> (see <a class="xref" href="ch18_08.htm" title="">Section 18.8.34, PATH...</A
>):</P
><p class="para"><blockquote class="screen"><pre class="screen">Can't parse myself!</PRE
></BLOCKQUOTE
></P
><p class="para">When an error mail message is sent, <code class="literal">$f</CODE
> (see <a class="xref" href="#SML2-CH-31-SECT-10-14" title="">Section 31.10.14</A
>)
is given the value of <code class="literal">$n</CODE
>.
Prior to V8.7, <code class="literal">$n</CODE
> <em class="emphasis">must</EM
> be defined in the configuration file.
Beginning with V8.7 <em class="emphasis">sendmail</EM
>, <code class="literal">$n</CODE
> is automatically
defined as MAILER-DAEMON when <em class="emphasis">sendmail</EM
> first starts up.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-27">31.10.27 $o</A
></H3
><p class="refpurpose">Token separation operators</P
>(V8.6 and earlier)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35169"></A
><a class="indexterm" name="AUTOID-35171"></A
><a class="indexterm" name="AUTOID-35174"></A
><a class="indexterm" name="AUTOID-35176"></A
>Prior to V8.7
the <code class="literal">$o</CODE
> macro stored as its value a sequence
of characters, any one of which could be used to separate the components
of an address into tokens (see <a class="xref" href="ch08_03.htm" title="Rule Sets">Section 8.3, "Rule Sets"</A
>).
That role has been taken over by the V8.7 <code class="literal">OperatorChars</CODE
> option
(see <a class="xref" href="ch34_08.htm" title="">Section 34.8.45</A
>).</P
><p class="para">For backward compatibility the <code class="literal">$o</CODE
> macro is still honored by V8.7
<em class="emphasis">sendmail</EM
> in pre-version 7 configuration files (see <a class="xref" href="ch27_05.htm#SML2-CH-27-SECT-5-1" title="The V Configuration Command">Section 27.5, "The V Configuration Command"</A
>).</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-28">31.10.28 ${opMode}</A
></H3
><p class="refpurpose">The startup operating mode</P
>(V8.7 and above)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35196"></A
><a class="indexterm" name="AUTOID-35198"></A
><a class="indexterm" name="AUTOID-35200"></A
>Beginning with V8.7, the <code class="literal">${opMode}</CODE
> holds as its value
the operating mode that <em class="emphasis">sendmail</EM
> was started with.
The operating mode is set with the <code class="literal">-b</CODE
> command line
switch (see <a class="xref" href="ch36_07.htm" title="">Section 36.7.2, -b</A
>). For example, if <em class="emphasis">sendmail</EM
> were
started as a daemon with <code class="literal">-bd</CODE
>, the value in <code class="literal">${opMode}</CODE
>
would become <code class="literal">d</CODE
>.</P
><p class="para">Once set, <code class="literal">${opMode}</CODE
> retains its initial value as long as
<em class="emphasis">sendmail</EM
> runs. It can be changed only by defining it
in the configuration file. Currently, <code class="literal">${opMode}</CODE
> is
used only in rule sets by the <em class="emphasis">m4</EM
> <code class="literal">redirect</CODE
> FEATURE 
(see <a class="xref" href="ch19_06.htm" title="">Section 19.6.21, FEATURE(redirect)</A
>).</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-29">31.10.29 $p</A
></H3
><p class="refpurpose">The sendmail process id</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35227"></A
><a class="indexterm" name="AUTOID-35229"></A
><a class="indexterm" name="AUTOID-35233"></A
>The <code class="literal">p</CODE
> macro contains the process ID of the <em class="emphasis">sendmail</EM
>
that executes the delivery agent. Every process (running program)
under UNIX has a unique identification number associated with
it (a process ID). Process IDs are necessary to differentiate
one incantation of a program from another. The <em class="emphasis">sendmail</EM
>
program <em class="emphasis">fork</EM
>(2)'s often to
perform tasks (like delivery) while performing other tasks
(such as listening for incoming SMTP connections). All copies
share the name <em class="emphasis">sendmail</EM
>; each has a unique process ID number.</P
><p class="para"><code class="literal">$p</CODE
> is intended for use in header definitions but may
also be used in the <code class="literal">A=</CODE
> equate (see <a class="xref" href="ch30_04.htm" title="">Section 30.4.1</A
>)
of delivery agents. </P
><p class="para"><code class="literal">$p</CODE
> is transient. If it is defined in the configuration
file or in the command line, that definition may be ignored by <em class="emphasis">sendmail</EM
>.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-30">31.10.30 $q</A
></H3
><p class="refpurpose">The default format of the sender's address</P
>(V8.6 and earlier)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35258"></A
><a class="indexterm" name="AUTOID-35260"></A
><a class="indexterm" name="AUTOID-35263"></A
><a class="indexterm" name="AUTOID-35266"></A
>Prior to V8.7
the <code class="literal">q</CODE
> macro was used to specify the form that the
sender's address would take in header definitions. It was most
often used in the <code class="literal">From:</CODE
> and <code class="literal">Resent-From:</CODE
>
header lines.</P
><p class="para">The definition of <code class="literal">$q</CODE
> had to adhere to the standard form 
of addresses as defined by RFC822. It had to contain just an
address or an address and a comment. The traditional definitions
of <code class="literal">$q</CODE
> were</P
><p class="para"><blockquote class="screen"><pre class="screen">Dq&lt;$g&gt;        <em class="emphasis"><img src="../chars/larr.gif" alt="&lt;-"> as &lt;george@wash.dc.gov&gt;</EM
>
Dq$g          <em class="emphasis"><img src="../chars/larr.gif" alt="&lt;-"> as george@wash.dc.gov</EM
>

Dq$x &lt;$g&gt;     <em class="emphasis"><img src="../chars/larr.gif" alt="&lt;-"> as George Washington &lt;george@wash.dc.gov&gt;</EM
>
Dq$g ($x)     <em class="emphasis"><img src="../chars/larr.gif" alt="&lt;-"> as george@wash.dc.gov (George Washington)</EM
></PRE
></BLOCKQUOTE
></P
><p class="para">The full name is not always known and so <code class="literal">$x</CODE
> can be
undefined &nbsp;- pty). As a consequence, when the full name was
included in the <code class="literal">q</CODE
> macro definition, it was often
wrapped in a conditional test:</P
><p class="para"><blockquote class="screen"><pre class="screen">Dq$g$?x ($x)$.
Dq$?x$x $.&lt;$g&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">Of these the second form was recommended for clients that forward
all mail to a central mail-handling machine. If the full name
was unknown locally, the header and envelope were identical
and bracketed:</P
><p class="para"><blockquote class="screen"><pre class="screen">From: &lt;user@slave.domain&gt;         <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> header</I
>
MAIL From: &lt;user@slave.domain&gt;    <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> envelope</I
></PRE
></BLOCKQUOTE
></P
><p class="para">At the central mail-handling machine, 
both versions of the <code class="literal">From:</CODE
> address were recognized
as identical (only if the address was bracketed).
As a consequence, the central machine
deleted and recreated the <code class="literal">From:</CODE
> line and added the full name if known.</P
><p class="para">Prior to V8.7, <code class="literal">$q</CODE
> had to be defined in the configuration file because
it was used to define the fields of the <code class="literal">Resent-From:</CODE
>
and <code class="literal">From:</CODE
> headers (see <a class="xref" href="ch35_10.htm" title="">Section 35.10.14, From:</A
>). Beginning with V8.7 <em class="emphasis">sendmail</EM
>,
those headers are defined by using the <code class="literal">$g</CODE
> and <code class="literal">$x</CODE
> macros directly.
For example,</P
><p class="para"><blockquote class="screen"><pre class="screen">H?F?Resent-From: $?x$x &lt;$g&gt;$|$g$.
H?F?From: $?x$x &lt;$g&gt;$|$g$.</PRE
></BLOCKQUOTE
></P
><p class="para">To redefine them, you must either edit your configuration file or add new definitions
to the LOCAL_CONFIG section of your <code class="literal">mc</CODE
> file (see <a class="xref" href="ch19_06.htm" title="">Section 19.6.30, LOCAL-CONFIG</A
>):</P
><p class="para"><blockquote class="screen"><pre class="screen">LOCAL_CONFIG
divert(9)
H?F?From: $?x$x $.&lt;$g&gt;
divert(0)</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">divert</CODE
>() statements force the new header definitions to follow
the default definitions, thus replacing them.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-31">31.10.31 $r</A
></H3
><p class="refpurpose">The protocol used</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35319"></A
><a class="indexterm" name="AUTOID-35321"></A
><a class="indexterm" name="AUTOID-35324"></A
>The <code class="literal">$r</CODE
> macro stores the name of the protocol that is used when
a mail message is first received. If mail is received via SMTP or
ESMTP, <code class="literal">$r</CODE
> is set accordingly. Incoming UUCP mail
sets <code class="literal">$r</CODE
> to &quot;UUCP&quot; (using the <code class="literal">-p</CODE
> switch).
With V8.7, bounced mail will now assign <code class="literal">$r</CODE
> the value &quot;internal.&quot;</P
><p class="para"><code class="literal">$r</CODE
> is intended for use in the <code class="literal">Received:</CODE
> header definition:</P
><p class="para"><blockquote class="screen"><pre class="screen">HReceived: $?sfrom $s $.by $j$?r with $r$. id $i</PRE
></BLOCKQUOTE
></P
><p class="para">The value in <code class="literal">$r</CODE
> is saved to the <code class="literal">qf</CODE
> file
when the mail message is queued, and it is restored to <code class="literal">$r</CODE
> when the queue
is later processed.</P
><p class="para"><code class="literal">$r</CODE
> is transient. It may be defined on the command line
but should not be defined in the configuration file.
Under V8 the <code class="literal">-p</CODE
> switch (see <a class="xref" href="ch36_07.htm" title="">Section 36.7.32</A
>)
is the recommended way to assign a value
to <code class="literal">$r</CODE
>.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-32">31.10.32 $R</A
></H3
><p class="refpurpose">The relay for unqualified names</P
>(m4 technique, deprecated)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35355"></A
><a class="indexterm" name="AUTOID-35357"></A
><a class="indexterm" name="AUTOID-35360"></A
><a class="indexterm" name="AUTOID-35362"></A
>Using the <em class="emphasis">m4</EM
> configuration technique, the <code class="literal">$R</CODE
> macro
stores the hostname defined by LOCAL_RELAY (see <a class="xref" href="ch19_06.htm" title="">Section 19.6.31, LOCAL-RELAY</A
>).
If <code class="literal">$H</CODE
> has a value and if <code class="literal">$R</CODE
>
does not, all local email is forwarded to <code class="replaceable"><i>hub</I
></CODE
> defined for <code class="literal">$H</CODE
>.
If <code class="literal">$R</CODE
> is defined, it takes precedence over <code class="literal">$H</CODE
> for some mail.
See <a class="xref" href="ch19_06.htm" title="">Section 19.6.41</A
> for a description of MAIL_HUB
and how it interacts with LOCAL_RELAY.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-33">31.10.33 $s</A
></H3
><p class="refpurpose">The sender host's name</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35384"></A
><a class="indexterm" name="AUTOID-35386"></A
><a class="indexterm" name="AUTOID-35390"></A
>The <code class="literal">$s</CODE
> macro contains the name of the sender's
machine (host). <code class="literal">$s</CODE
> is given the name of the local host
as its value when <em class="emphasis">sendmail</EM
> starts, unless the <code class="literal">-p</CODE
>
command line switch (see <a class="xref" href="ch36_07.htm" title="">Section 36.7.32</A
>) is used, 
in which case <code class="literal">$s</CODE
> is given the value specified by that switch. 
Thereafter, <code class="literal">$s</CODE
> is given a new value by <em class="emphasis">sendmail</EM
>
only if the mail message was received via SMTP.
For bounced mail, the <code class="literal">$s</CODE
> value is always <code class="literal">localhost</CODE
>.</P
><p class="para">The <code class="literal">s</CODE
> macro is intended for use in the <code class="literal">Received:</CODE
>
header definition:</P
><p class="para"><blockquote class="screen"><pre class="screen">HReceived: $?sfrom $s $.by $j$?r with $r$. id $i</PRE
></BLOCKQUOTE
></P
><p class="para">The phrase <code class="literal">from </CODE
><em class="emphasis">host</EM
> will be included in this
header line if <code class="literal">$s</CODE
> has any value. Here, <em class="emphasis">host</EM
>
is the name of the sending machine.</P
><p class="para">The value in <code class="literal">$s</CODE
> is saved to the <code class="literal">qf</CODE
> file
when the mail message is queued and restored to <code class="literal">$s</CODE
>
when the queue is later processed. </P
><p class="para"><code class="literal">$s</CODE
> is transient. It may be defined on the command line
but should not be defined in the configuration file.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-34">31.10.34 $S</A
></H3
><p class="refpurpose">The Smart Host</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35428"></A
><a class="indexterm" name="AUTOID-35430"></A
><a class="indexterm" name="AUTOID-35432"></A
><a class="indexterm" name="AUTOID-35435"></A
>Using the <em class="emphasis">m4</EM
> configuration technique the <code class="literal">$S</CODE
> macro
stores the hostname defined by SMART_HOST  (see <a class="xref" href="ch19_06.htm" title="">Section 19.6.47, SMART-HOST</A
>).
The smart host is the name of the host that can deliver all mail that the
local host cannot. <code class="literal">$S</CODE
> is most often used with UUCP
sites to get DNS mail to the outside world.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-35">31.10.35 $t</A
></H3
><p class="refpurpose">The current time in seconds</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35450"></A
>The <code class="literal">$t</CODE
> macro contains the current date and time
represented as an integer.
The value of <code class="literal">$t</CODE
> is set in two places:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">When <em class="emphasis">sendmail</EM
> first begins to run, it presets several
date-oriented macros internally to the date and time it was
run. Among those are the <code class="literal">$a</CODE
>,
<code class="literal">$d</CODE
>, <code class="literal">$b</CODE
>,
and <code class="literal">$t</CODE
> macros. This initialization is done after
the configuration file is read.</P
></LI
><li class="listitem"><p class="para">Each time a new envelope is created, 
the <code class="literal">$d</CODE
>, <code class="literal">$b</CODE
>,
and <code class="literal">$t</CODE
> macros are given a default that is
the current time.</P
></LI
></UL
><p class="para"><code class="literal">$t</CODE
> is intended for use in configuration-file header definitions.
<code class="literal">$t</CODE
> is transient. If it is defined in the configuration
file or in the command line, that definition may be ignored by <em class="emphasis">sendmail</EM
>.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-36">31.10.36 $u</A
></H3
><p class="refpurpose">The recipient's username</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35480"></A
><a class="indexterm" name="AUTOID-35484"></A
><a class="indexterm" name="AUTOID-35488"></A
>Rule set 0 (see <a class="xref" href="ch29_06.htm#SML2-CH-29-SECT-6-1" title="Rule Set 0">Section 29.6</A
>) is used to resolve the recipient address into a triple:
the delivery agent (with <code class="literal">$#</CODE
>), the host part of the address
(with <code class="literal">$@</CODE
>), and the recipient's username (with <code class="literal">$:</CODE
>).
The recipient's username is then processed by rule set 2 (the generic
rule set for all recipient addresses), then by the rule set indicated
by the <code class="literal">R=</CODE
> equate of the delivery agent (the custom recipient
address processing), and finally by rule set 4 (postprocessing for
all addresses).</P
><p class="para">If the delivery agent has the <code class="literal">F=A</CODE
> flag set
(see <a class="xref" href="ch30_08.htm" title="">Section 30.8.12, F=A</A
>), that rewritten recipient's username 
is looked up in the <em class="emphasis">aliases</EM
> file and replaced with its alias if
one exists. 
If it is not replaced and if the <code class="literal">F=5</CODE
> flag (see <a class="xref" href="ch30_08.htm" title="">Section 30.8.3, F=5</A
>) is set,
the address is rewritten by rule set 5
to possibly pick a new delivery agent and repeat this process.
[17]</P
><blockquote class="footnote"><p class="para">[17] Prior to V8.7 this behavior was all tied to the <code class="literal">local</CODE
>
delivery agent.</P
></BLOCKQUOTE
><p class="para">After aliasing, the rewritten recipient's username is then
assigned to <code class="literal">$u</CODE
>.
If the delivery agent's <code class="literal">F=w</CODE
> flag (see <a class="xref" href="ch30_08.htm" title="">Section 30.8.43, F=w</A
>) is set,
[18]
the value of <code class="literal">$u</CODE
> is then used
to look up information about that user with <em class="emphasis">getpwent</EM
>(3).
The user's home directory from <em class="emphasis">pw_dir</EM
>
is made the value of the <code class="literal">$z</CODE
> and used to access that
user's <em class="emphasis">~/.forward</EM
> and <em class="emphasis">dead.letter</EM
> files.</P
><blockquote class="footnote"><p class="para">[18] Prior to V8.7, looking up the user's home directory was tied to the <code class="literal">local</CODE
>
delivery agent.</P
></BLOCKQUOTE
><p class="para">For all delivery agents the final value of <code class="literal">$u</CODE
> may
be used as a component of the delivery agent's <code class="literal">A=</CODE
> (see <a class="xref" href="ch30_04.htm" title="">Section 30.4.1</A
>)
equate. For example,</P
><p class="para"><blockquote class="screen"><pre class="screen">A=uux - $h!rmail ($u)</PRE
></BLOCKQUOTE
></P
><p class="para">Note that <code class="literal">$u</CODE
> is special (see <a class="xref" href="ch30_04.htm" title="$u in A=">Section 30.4.1.3, "$u in A="</A
>)
in delivery agent <code class="literal">A=</CODE
> equates.
If it is absent, <em class="emphasis">sendmail</EM
> speaks SMTP. If it is present <em class="emphasis">and</EM
>
the <code class="literal">F=m</CODE
> flag (see <a class="xref" href="ch30_08.htm" title="">Section 30.8.30, F=m</A
>) is also pres-nt, the argument
containing <code class="literal">$u</CODE
> is repeated as many times as there are recipients.</P
><p class="para">In V8 <em class="emphasis">sendmail</EM
>, <code class="literal">$u</CODE
> is also set to the original
recipient (prior to aliasing) 
while the message headers are first being read.
Therefore the original recipient information is available for use
in the <code class="literal">Received:</CODE
> header line.
[19]</P
><blockquote class="footnote"><p class="para">[19] In this use, V8's <code class="literal">$u</CODE
> is similar to IDA's <code class="literal">$m</CODE
>.</P
></BLOCKQUOTE
><p class="para"><code class="literal">$u</CODE
> is transient. If it is defined in the configuration
file or in the command line, that definition is ignored by <em class="emphasis">sendmail</EM
>.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-37">31.10.37 $U</A
></H3
><p class="refpurpose">The UUCP name to override $k</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35552"></A
><a class="indexterm" name="AUTOID-35554"></A
><a class="indexterm" name="AUTOID-35557"></A
><a class="indexterm" name="AUTOID-35560"></A
>When configuring with the <em class="emphasis">m4</EM
> technique, you can include
support for UUCP by using the MAILER(uucp)
command (see <a class="xref" href="ch19_03.htm#SML2-CH-19-SECT-3-2" title="MAILER()">Section 19.3.2, "MAILER()"</A
>) in your <code class="literal">mc</CODE
> file.
With that support, you can override the use of <code class="literal">$k</CODE
> (see <a class="xref" href="#SML2-CH-31-SECT-10-21" title="">Section 31.10.21</A
>)
with a hostname of your choosing when prefixing a string of hosts
with the local hostname:</P
><p class="para"><blockquote class="screen"><pre class="screen">here!lady!sonya!user
<i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>
<i class="lineannotation">insert local host name here</I
></PRE
></BLOCKQUOTE
></P
><p class="para">If <code class="literal">$U</CODE
> has a value, its value will be inserted. If it lacks
a value, <code class="literal">$k</CODE
> will be inserted.</P
><p class="para"><code class="literal">$U</CODE
> can be useful when several hosts provide UUCP
services. It can be defined in your DOMAIN() file (see <a class="xref" href="ch19_03.htm#SML2-CH-19-SECT-3-2" title="DOMAIN()">Section 19.3.3, "DOMAIN()"</A
>)
as a single name so that all outgoing UUCP mail will appear
as though it is from a common host.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-38">31.10.38 $v</A
></H3
><p class="refpurpose">The version of sendmail</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35586"></A
><a class="indexterm" name="AUTOID-35589"></A
>The <code class="literal">v</CODE
> macro contains the current version of the
<em class="emphasis">sendmail</EM
> program, taken from the <code class="literal">Version</CODE
>
variable that is initialized in <em class="emphasis">version.c</EM
> of the <em class="emphasis">sendmail</EM
>
source. In general, it is the SCCS revision number of the source.
<code class="literal">$v</CODE
> is used in defining the <code class="literal">SmtpGreetingMessage</CODE
> (<code class="literal">$e</CODE
>)
option (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.65</A
>) and in 
<code class="literal">Received:</CODE
> header lines (see <a class="xref" href="ch35_10.htm" title="">Section 35.10.25</A
>).</P
><p class="para">The value given to <code class="literal">$v</CODE
> can vary with the vendor.
There is currently no standard for identifying variations on
the <em class="emphasis">sendmail</EM
> program. Clearly, <code class="literal">$v</CODE
> may not contain
a true picture.</P
><p class="para"><code class="literal">$v</CODE
> is internally defined when <em class="emphasis">sendmail</EM
> starts
up. It may be redefined in the configuration file or as part
of the command line.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-39">31.10.39 $V</A
></H3
><p class="refpurpose">UUCP relay for class $=V</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35618"></A
><a class="indexterm" name="AUTOID-35621"></A
><code class="literal">$V</CODE
> holds as its value the name of the host that will
handle all UUCP mail for the class <code class="literal">$=V</CODE
>.
See <a class="xref" href="ch19_06.htm" title="">Section 19.6.46, SITECONFIG</A
> for a discussion of UUCP relays
in general and how this macro relates to <code class="literal">$W</CODE
>, <code class="literal">$X</CODE
>,
and <code class="literal">$Y</CODE
> macros.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-40">31.10.40 $w</A
></H3
><p class="refpurpose">The short name of this host</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35637"></A
><a class="indexterm" name="AUTOID-35641"></A
><a class="indexterm" name="AUTOID-35645"></A
><a class="indexterm" name="AUTOID-35649"></A
>When <em class="emphasis">sendmail</EM
> first starts to run, it calls <em class="emphasis">gethostname</EM
>(3)
to get the name of the local machine. If that call fails, it sets
that local name to be <code class="literal">localhost</CODE
>. Then
<em class="emphasis">gethostbyname</EM
>(3) is called to find the official name for
the local host. If that call fails, the official name for the
local host remains unchanged.
The official name for the local host is assigned to <code class="literal">$j</CODE
>.</P
><p class="para">If the <code class="literal">V</CODE
> command's version (see <a class="xref" href="ch27_05.htm#SML2-CH-27-SECT-5-1" title="The V Configuration Command">Section 27.5</A
>) is 5 or higher,
V8 <em class="emphasis">sendmail</EM
> discards the domain and assigns the result to <code class="literal">$w</CODE
> 
(the short name):</P
><p class="para"><blockquote class="screen"><pre class="screen">here.us.edu
    <em class="emphasis"><img src="../chars/uarr.gif" alt="-^"></EM
>
    <i class="lineannotation">from here to end of name discarded</I
></PRE
></BLOCKQUOTE
></P
><p class="para">If the version is 4 or less, <code class="literal">$w</CODE
> is assigned the fully qualified name
(and is identical to <code class="literal">$j</CODE
>).</P
><p class="para"><code class="literal">$w</CODE
> is then appended to class <code class="literal">$=w</CODE
> (see <a class="xref" href="ch32_05.htm" title="">Section 32.5.8</A
>).
<code class="literal">$=w</CODE
> is used internally by <em class="emphasis">sendmail</EM
> to
screen all MX records that are found in delivering mail over the network.
[20]
Each such record is compared
in a case-insensitive fashion to <code class="literal">$=w</CODE
>. If there is a match,
that MX record and all additional MX records of lower priority are
skipped. This prevents <em class="emphasis">sendmail</EM
> from mistakenly connecting to
itself.</P
><blockquote class="footnote"><p class="para">[20] Prior to V8, only <code class="literal">$w</CODE
> was checked.</P
></BLOCKQUOTE
><p class="para">Any of the following errors (or variations on them) indicate that <code class="literal">$=w</CODE
>,
<code class="literal">$w</CODE
>, or <code class="literal">$j</CODE
> may contain a faulty value, most likely from
a bad configuration file declaration:</P
><p class="para"><blockquote class="screen"><pre class="screen">553 <code class="replaceable"><i>host</I
></CODE
> config error: mail loops back to myself
553 Local configuration error, host name not recognized as local
553 <code class="replaceable"><i>host</I
></CODE
> host name configuration error</PRE
></BLOCKQUOTE
></P
><p class="para">Note that if <code class="literal">$w</CODE
> is pulled from the name server
and the host is running BIND,
and a cache is being downloaded, <code class="literal">$w</CODE
>
could be periodically unresolved. In this instance, <em class="emphasis">sendmail</EM
>
sleeps and retries the lookup.</P
><p class="para"><code class="literal">$w</CODE
> is defined when <em class="emphasis">sendmail</EM
> starts up.
It may be redefined in the configuration file or as part of the
command line.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-41">31.10.41 $W</A
></H3
><p class="refpurpose">UUCP relay for class $=W</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35703"></A
><a class="indexterm" name="AUTOID-35706"></A
><code class="literal">$W</CODE
> holds as its value the name of the host that will
handle all UUCP mail for the class <code class="literal">$=W</CODE
>.
See <a class="xref" href="ch19_06.htm" title="">Section 19.6.46</A
> for a discussion of UUCP relays
in general and how this macro relates to <code class="literal">$V</CODE
>, <code class="literal">$X</CODE
>,
and <code class="literal">$Y</CODE
> macros.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-42">31.10.42 $x</A
></H3
><p class="refpurpose">The full name of the sender</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35722"></A
><a class="indexterm" name="AUTOID-35724"></A
><a class="indexterm" name="AUTOID-35728"></A
>The <code class="literal">$x</CODE
> macro holds the full name of the sender.
When <em class="emphasis">sendmail</EM
> processes a mail message for delivery, it
rewrites the sender's address using rule sets 3 and 0 so that it
can determine whether the sender is local. If the sender is local,
rule set 0 provides the sender's login name with the <code class="literal">$:</CODE
>
operator. Then, if the delivery agent's <code class="literal">F=w</CODE
> flag (see <a class="xref" href="ch30_08.htm" title="">Section 30.8.43</A
>) is set,
[21]
<em class="emphasis">sendmail</EM
> calls <em class="emphasis">getpwent</EM
>(3) using that
login name as the argument. If the login name is known, <em class="emphasis">getpwent</EM
>(3)
returns the sender's full name in its <em class="emphasis">pw_gecos</EM
> field.
The <em class="emphasis">sendmail</EM
> program then processes that <em class="emphasis">pw_gecos</EM
> field,
throwing away phone numbers and the like and converting the <code class="literal">&amp;</CODE
>
character where necessary. The result, usually fairly close to the
sender's full name, is the value assigned to the <code class="literal">x</CODE
> macro.</P
><blockquote class="footnote"><p class="para">[21] Prior to V8.7 this behavior was tied to the <code class="literal">local</CODE
> delivery agent.</P
></BLOCKQUOTE
><p class="para">Under certain circumstances, <em class="emphasis">sendmail</EM
>
places a different value in <code class="literal">$x</CODE
>:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">When <em class="emphasis">sendmail</EM
> first starts to run, it sets the full name to
be the value of the NAME environmental variable. The <code class="literal">-F</CODE
>
command-line switch (see <a class="xref" href="ch36_07.htm" title="">Section 36.7.20, -F</A
>) can overwrite
that variable. If the operating mode is <code class="literal">-q</CODE
> (see
<a class="xref" href="ch23_06.htm#SML2-CH-23-SECT-6-1" title="Periodically with -q">Section 23.6.1, "Periodically with -q"</A
>) or <code class="literal">-bd</CODE
> (see <a class="xref" href="ch36_07.htm" title="">Section 36.7.5, -bd</A
>),
the full name is reset to NULL.
When mail is sent, this value is assigned to <code class="literal">$x</CODE
>.</P
></LI
><li class="listitem"><p class="para">In processing the headers of a message, if <em class="emphasis">sendmail</EM
> finds
a <code class="literal">Full-Name:</CODE
> header (see <a class="xref" href="ch35_10.htm" title="">Section 35.10.15, Full-Name:</A
>),
it assigns the text of that header to the <code class="literal">$x</CODE
> macro.</P
></LI
><li class="listitem"><p class="para">In sending a failed mail message, the login name of the sender
is taken from <code class="literal">$n</CODE
>, and the full name is set to be</P
></LI
></UL
><p class="para"><blockquote class="screen"><pre class="screen">Mail Delivery Subsystem</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">$x</CODE
> macro is intended for use in header definitions.
If used in the <code class="literal">From:</CODE
> header definition, the sender's
full name will then also appear in the SMTP envelope <em class="emphasis">mail</EM
> line.</P
><p class="para">Note that unusual <em class="emphasis">gecos</EM
> fields in the password file can
cause pre-V8 mail to fail. 
Consider the following <em class="emphasis">passwd</EM
>(5) entry:</P
><p class="para"><blockquote class="screen"><pre class="screen">happy:123:456:Happy Guy ;-),Ext 789,,:/u/happy:/bin/sh</PRE
></BLOCKQUOTE
></P
><p class="para">The <em class="emphasis">gecos</EM
> field here will be parsed by all but
V8 <em class="emphasis">sendmail</EM
> into
a value for <code class="literal">$x</CODE
> that can yield a faulty header&nbsp;- one
with unbalanced parentheses:</P
><p class="para"><blockquote class="screen"><pre class="screen">From: happy@our.domain (Happy Guy ;-))</PRE
></BLOCKQUOTE
></P
><p class="para">V8 <em class="emphasis">sendmail</EM
> accepts only characters
up to the first comma, semicolon, or percent as part of the
full name and quotes the result, thus avoiding this problem.</P
><p class="para"><code class="literal">$x</CODE
> is transient. If it is defined in the configuration
file or the command line, that definition will be ignored by <em class="emphasis">sendmail</EM
>.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-43">31.10.43 $X</A
></H3
><p class="refpurpose">UUCP relay for class $=X</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35801"></A
><a class="indexterm" name="AUTOID-35804"></A
><code class="literal">$X</CODE
> holds as its value the name of the host that will
handle all UUCP mail for the class <code class="literal">$=X</CODE
>.
See <a class="xref" href="ch19_06.htm" title="">Section 19.6.46</A
> for a discussion of UUCP relays
in general and how this macro relates to <code class="literal">$V</CODE
>, <code class="literal">$W</CODE
>,
and <code class="literal">$Y</CODE
> macros.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-44">31.10.44 $y</A
></H3
><p class="refpurpose">Name of the controlling tty</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35821"></A
><a class="indexterm" name="AUTOID-35823"></A
><a class="indexterm" name="AUTOID-35826"></A
>The <code class="literal">$y</CODE
> macro holds the name of the controlling
terminal device, if there is one. The controlling terminal is
determined by first calling <em class="emphasis">ttyname</EM
>(3) with the <em class="emphasis">sendmail</EM
>
program's standard error output as an argument. If <em class="emphasis">ttyname</EM
>(3)
returns the name of a terminal device (such as <code class="literal">/dev/ttya</CODE
>),
<em class="emphasis">sendmail</EM
> strips everything up to and including the last <code class="literal">/</CODE
>
character and stores the result into <code class="literal">$y</CODE
>.</P
><p class="para"><code class="literal">$y</CODE
> is intended for use in debugging <em class="emphasis">sendmail</EM
>
problems. It is not used internally by <em class="emphasis">sendmail</EM
>. In determining
whether or not it can write to a user's terminal screen, <em class="emphasis">sendmail</EM
>
calls <em class="emphasis">ttyname</EM
>(3) separately on its standard input, output,
and error output without updating <code class="literal">$y</CODE
>.</P
><p class="para">Note that the device name in <code class="literal">$y</CODE
> depends on the implementation
of <em class="emphasis">ttyname</EM
>(3). Under BSD UNIX, all terminals are in <em class="emphasis">/dev</EM
>,
whereas under other versions of UNIX they may be in subdirectories
such as <em class="emphasis">/dev/ttys</EM
>.
Also note that <code class="literal">$y</CODE
> is only defined if TTYNAME
is defined (see <a class="xref" href="ch18_08.htm" title="">Section 18.8.52, TTYNAME</A
>) when <em class="emphasis">sendmail</EM
> is compiled.</P
><p class="para"><code class="literal">$y</CODE
> is transient. If it is defined in the configuration
file or the command line, that definition will be ignored by <em class="emphasis">sendmail</EM
>.
Finally, note that <code class="literal">$y</CODE
> is set only when mail is being sent and
so is of most value in headers.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-45">31.10.45 $Y</A
></H3
><p class="refpurpose">UUCP relay for unclassified hosts</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35864"></A
><a class="indexterm" name="AUTOID-35866"></A
><code class="literal">$Y</CODE
> holds as its value the name of the host that will
handle all UUCP mail that was not otherwise handled by
class <code class="literal">$=V</CODE
>, <code class="literal">$=W</CODE
>, or <code class="literal">$=X</CODE
>.
See <a class="xref" href="ch19_06.htm" title="">Section 19.6.46</A
> for a discussion of UUCP relays
in general and how this macro relates to <code class="literal">$V</CODE
>, <code class="literal">$W</CODE
>,
and <code class="literal">$X</CODE
> macros.</P
><p class="para"></P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-46">31.10.46 $z</A
></H3
><p class="refpurpose">The recipient's home directory</P
>(All versions)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35886"></A
><a class="indexterm" name="AUTOID-35889"></A
><a class="indexterm" name="AUTOID-35891"></A
><a class="indexterm" name="AUTOID-35894"></A
>The <code class="literal">$z</CODE
> macro holds the location of the local user's home directory.
This macro is given a value only if the delivery agent
has the <code class="literal">F=w</CODE
> flag set (see <a class="xref" href="ch30_08.htm" title="">Section 30.8.43</A
>)
[22]
and if delivery is to a user (rather than a file or a program). The home
directory is taken from the <em class="emphasis">pw_dir</EM
> field as returned
by <em class="emphasis">getpwent</EM
>(3).</P
><blockquote class="footnote"><p class="para">[22] Prior to V8.7 this behavior was tied to the <code class="literal">local</CODE
> delivery agent.</P
></BLOCKQUOTE
><p class="para">The <em class="emphasis">sendmail</EM
> program uses <code class="literal">$z</CODE
> to
access a user's <em class="emphasis">~/.forward</EM
> file and to save failed
mail to a user's <em class="emphasis">dead-letter</EM
> file.</P
><p class="para"><code class="literal">$z</CODE
> can be passed in the <code class="literal">A=</CODE
> equate to
a custom written <code class="literal">local</CODE
> delivery agent. One reason
to do so would be to deliver mail to a user's home directory,
rather than to a central spool directory.
<code class="literal">$z</CODE
> is also very useful with the <code class="literal">ForwardPath</CODE
> (<code class="literal">J</CODE
>) option
(see <a class="xref" href="ch34_08.htm" title="">Section 34.8.27, ForwardPath (J)</A
>).</P
><p class="para"><code class="literal">$z</CODE
> is transient. If it is defined in the configuration
file or the command line, that definition will be ignored by <em class="emphasis">sendmail</EM
>.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="refentry"><div class="refnamediv"><h3 class="refname"><a class="refname" name="SML2-CH-31-SECT-10-47">31.10.47 $Z</A
></H3
><p class="refpurpose">Version of the m4 configuration</P
>(m4 technique)</DIV
><blockquote><div class="refsect1"><p class="para"><a class="indexterm" name="AUTOID-35928"></A
><a class="indexterm" name="AUTOID-35930"></A
><a class="indexterm" name="AUTOID-35933"></A
>When you are configuring with the <em class="emphasis">m4</EM
> technique, the version of the configuration
file can be augmented by defining confCF_VERSION in your <code class="literal">mc</CODE
> file:</P
><p class="para"><blockquote class="screen"><pre class="screen">define(`confCF_VERSION', `<code class="replaceable"><i>ver</I
></CODE
>')dnl</PRE
></BLOCKQUOTE
></P
><p class="para">This statement causes the value <code class="replaceable"><i>ver</I
></CODE
> to be appended to the default
value in <code class="literal">$Z</CODE
>. A forward slash character will separate the two.
The default value in <code class="literal">$Z</CODE
> varies depending on your <em class="emphasis">sendmail</EM
>
version. If your version were V8.8.4, the above <em class="emphasis">m4</EM
>
definition would yield the following macro definition:</P
><p class="para"><blockquote class="screen"><pre class="screen">DZ8.8.4/<code class="replaceable"><i>ver</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para"><code class="literal">$Z</CODE
> is generally used as
part of the <code class="literal">SmtpGreetingMessage</CODE
> (<code class="literal">$e</CODE
>)
option's declaration (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.65</A
>):</P
><p class="para"><blockquote class="screen"><pre class="screen">O SmtpGreetingMessage=$j Sendmail $v/$Z; $b</PRE
></BLOCKQUOTE
></P
><p class="para">Note that this version is different from the version declared
with the VERSIONID <em class="emphasis">m4</EM
> macro (see <a class="xref" href="ch19_06.htm" title="">Section 19.6.50, VERSIONID</A
>). 
Also note that this is the configuration file version, rather than the version of the <em class="emphasis">sendmail</EM
> program as stored in <code class="literal">$v</CODE
>.</P
><p class="para">Prior to V8 <em class="emphasis">sendmail</EM
> the configuration file version was
stored in <code class="literal">$V</CODE
>.<a class="indexterm" name="AUTOID-35965"></A
></P
></DIV
></BLOCKQUOTE
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch31_09.htm" title="31.9 Pitfalls"><img src="../gifs/txtpreva.gif" alt="Previous: 31.9 Pitfalls" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="sendmail"><img src="../gifs/txthome.gif" alt="sendmail" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="CHAPTER" href="ch32_01.htm" title="32. Class Macros"><img src="../gifs/txtnexta.gif" alt="Next: 32. Class Macros" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">31.9 Pitfalls</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">32. Class Macros</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
