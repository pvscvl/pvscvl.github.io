<html><head>
<title>[Chapter 21] 21.3 Set Up MX Records</TITLE>
<meta name="DC.title" content="sendmail"><meta name="DC.creator" content="Bryan Costales &amp; Eric Allman"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T19:28:23Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-222-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch21_01.htm" title="21. DNS and sendmail"><link rel="prev" href="ch21_02.htm#SML2-CH-21-SECT-2-4" title="21.2 How sendmail Uses DNS"><link rel="next" href="ch21_04.htm" title="21.4 How to Use nslookup"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="sendmail" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="sendmail"><area shape="RECT" coords="467,0,514,18" href="../search/ssrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch21_02.htm#SML2-CH-21-SECT-2-4" title="21.2 How sendmail Uses DNS"><img src="../gifs/txtpreva.gif" alt="Previous: 21.2 How sendmail Uses DNS" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 21<br>DNS and sendmail</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch21_04.htm" title="21.4 How to Use nslookup"><img src="../gifs/txtnexta.gif" alt="Next: 21.4 How to Use nslookup" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="SML2-CH-21-SECT-3">21.3 Set Up MX Records</A
></H2
><p class="para"><a class="indexterm" name="SML2-CH-21-IX-MX-RECORDS"></A
><a class="indexterm" name="AUTOID-17502"></A
>An MX record is simply the method used by DNS
to route mail bound for one machine to another instead.
An MX record is created by a single line in one of your <em class="emphasis">named</EM
>(8) files:</P
><p class="para"><blockquote class="screen"><pre class="screen">hostA    IN      MX 10 hostB</PRE
></BLOCKQUOTE
></P
><p class="para">This line says that all mail destined for <code class="literal">hostA</CODE
> in your
domain should instead be delivered to <code class="literal">hostB</CODE
> in your domain.
The <code class="literal">IN</CODE
> says that this is an Internet-type record,
and the <code class="literal">10</CODE
> is the cost
[11]
for using this MX record.</P
><blockquote class="footnote"><p class="para">[11] Technically, this field is called the preference. We use cost
to clarify that lower values are preferable, whereas preference wrongly
connotes that higher values are preferable.<a class="indexterm" name="AUTOID-17516"></A
><a class="indexterm" name="AUTOID-17519"></A
><a class="indexterm" name="AUTOID-17522"></A
></P
></BLOCKQUOTE
><p class="para">An MX record may point to another host or to the original host:</P
><p class="para"><blockquote class="screen"><pre class="screen">hostA    IN      MX 0 hostA</PRE
></BLOCKQUOTE
></P
><p class="para">This line says that mail for <code class="literal">hostA</CODE
> will be delivered
to <code class="literal">hostA</CODE
>. Such records may seem redundant, but they
are not. We'll cover why shortly.</P
><p class="para">A host can have multiple MX records (one pointing to itself or not):</P
><p class="para"><blockquote class="screen"><pre class="screen">hostA   IN      MX 0  hostA
        IN      MX 10 hostB</PRE
></BLOCKQUOTE
></P
><p class="para">Here, <code class="literal">hostA</CODE
> has the lowest cost (<code class="literal">0</CODE
>
versus <code class="literal">10</CODE
> for <code class="literal">hostB</CODE
>), so
delivery will be attempted to itself first. If <code class="literal">hostA</CODE
> is
down, delivery will be attempted to <code class="literal">hostB</CODE
> host instead.</P
><p class="para">Usually, MX records point to hosts inside the same domain. Therefore
managing them does not require the cooperation of others.
But it is legal for MX records to point to hosts in different
domains:</P
><p class="para"><blockquote class="screen"><pre class="screen">hostA   IN      MX 0  hostA
        IN      MX 10  host.other.domain.</PRE
></BLOCKQUOTE
></P
><p class="para">Here, you must contact the administrator at <code class="literal">other.domain</CODE
>
and obtain permission before creating this MX record. We cover
this concept in more detail when we discuss disaster preparation
later in this chapter.</P
><p class="para">Although MX records are usually straightforward, there can be
a few problems associated with them.&#13;</P
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-21-SECT-3-1">21.3.1 MX Must Point to an A Record</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-17550"></A
>The A record for a host is a line that gives the host's IP
address.</P
><p class="para"><blockquote class="screen"><pre class="screen">hostC  IN     A   123.45.67.8</PRE
></BLOCKQUOTE
></P
><p class="para">Here, <code class="literal">hostC</CODE
> is the host's name. The <code class="literal">IN</CODE
> says this
is an Internet-type record. The <code class="literal">A</CODE
> marks this as an A
record. The <code class="literal">123.45.67.8</CODE
> is the IP address
for the host <code class="literal">hostC</CODE
>.</P
><p class="para">An MX record must point to a hostname that has an A record.
To illustrate, consider the following:</P
><p class="para"><blockquote class="screen"><pre class="screen">hostA  IN     MX  10 hostB           <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> illegal</I
>
       IN     MX  20 hostC
hostB  IN     MX  10 hostC
hostC  IN     A   123.45.67.8</PRE
></BLOCKQUOTE
></P
><p class="para">Note that <code class="literal">hostB</CODE
> lacks an A record but 
<code class="literal">hostC</CODE
> has one. It is illegal to point an MX record
at a host that lacks an A record.
Therefore the first line above is illegal, whereas the second line
is legal.</P
><p class="para">Although such a mistake is difficult to make when maintaining your
own domain tables, it can easily happen to you if you rely on
a name server in someone else's domain, as shown:</P
><p class="para"><blockquote class="screen"><pre class="screen">hostA    IN     MX  10 mail.other.domain.</PRE
></BLOCKQUOTE
></P
><p class="para">The other administrator might, for example, retire the machine
<code class="literal">mail</CODE
> and replace its A record with an MX record that
points to a different machine.
Unless you are notified of the change, your MX record
will suddenly become illegal.&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-21-SECT-3-2">21.3.2 MX to CNAME Causes Extra Lookups</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-17575"></A
><a class="indexterm" name="AUTOID-17577"></A
>The <em class="emphasis">sendmail</EM
> program is frequently more forgiving than other
MTAs because it accepts an MX record that points to a CNAME record.
The presumption is that, eventually, the CNAME will correctly point to an A
record.
But beware, this kind of indirection can cost additional DNS lookups.
Consider this example of an exceptionally bad setup:</P
><p class="para"><blockquote class="screen"><pre class="screen">hostA    IN     MX  10 mailhub
mailhub  IN     CNAME  nfsmast
nfsmast  IN     CNAME  hostB
hostB    IN     A 123.45.67.89</PRE
></BLOCKQUOTE
></P
><p class="para">First, <em class="emphasis">sendmail</EM
> looks up <code class="literal">hostA</CODE
> and gets an MX record
pointing to <code class="literal">mailhub</CODE
>. Since there is only a single MX record,
<em class="emphasis">sendmail</EM
> considers <code class="literal">mailhub</CODE
> to be official. Next, <code class="literal">mailhub</CODE
>
is looked up to find an A record (IP address), but instead a 
CNAME (<code class="literal">nfsmast</CODE
>) is returned. Now <em class="emphasis">sendmail</EM
> must
look up the CNAME <code class="literal">nfsmast</CODE
> to find 

its A record.
But again a CNAME is returned instead of an A record. So <em class="emphasis">sendmail</EM
>
must again look for an A record (this time with <code class="literal">hostB</CODE
>).
Finally, <em class="emphasis">sendmail</EM
> succeeds by finding the A record for <code class="literal">hostB</CODE
>,
but only after a few too many lookups.</P
><p class="para">The correct way to form the above DNS file entries is as follows:</P
><p class="para"><blockquote class="screen"><pre class="screen">hostA    IN     MX  10 hostB
mailhub  IN     CNAME  hostB
nfsmast  IN     CNAME  hostB
hostB    IN     A 123.45.67.89</PRE
></BLOCKQUOTE
></P
><p class="para">In general, try to construct DNS records in such a way that the fewest lookups
are required to resolve any A or MX records.&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-21-SECT-3-3">21.3.3 MX Records Are Nonrecursive</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-17604"></A
>Consider the following MX setup, which causes all mail for <code class="literal">hostA</CODE
>
to be sent to <code class="literal">hostB</CODE
> and all mail for <code class="literal">hostB</CODE
>
to be sent to <code class="literal">hostB</CODE
>, or to <code class="literal">hostC</CODE
> if <code class="literal">hostB</CODE
> is down:
[12]</P
><blockquote class="footnote"><p class="para">[12] We are fudging for the sake of simplicity. Here, we assume that all the hosts
also have A records.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">hostA   IN     MX  10 hostB
hostB   IN     MX  10 hostB
        IN     MX  20 hostC</PRE
></BLOCKQUOTE
></P
><p class="para">One might expect <em class="emphasis">sendmail</EM
> to be smart and deliver mail
for <code class="literal">hostA</CODE
> 
to <code class="literal">hostC</CODE
> if <code class="literal">hostB</CODE
> is down.
But <em class="emphasis">sendmail</EM
> won't do that.
It does not try to 
recursively look for additional MX records.
If it did, it could get hopelessly entangled in MX loops.
Consider the following:</P
><p class="para"><blockquote class="screen"><pre class="screen">hostA   IN     MX  10 hostB
hostB   IN     MX  10 hostB
        IN     MX  20 hostC
hostC   IN     MX  10 hostA     <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> potential loop</I
></PRE
></BLOCKQUOTE
></P
><p class="para">If your intention is to have <code class="literal">hostA</CODE
> MX to two other hosts,
then you must state that explicitly:</P
><p class="para"><blockquote class="screen"><pre class="screen">hostA   IN     MX  10 hostB
        IN     MX  20 hostC
hostB   IN     MX  10 hostB
        IN     MX  20 hostC</PRE
></BLOCKQUOTE
></P
><p class="para">Another reason <em class="emphasis">sendmail</EM
> refuses to follow MX records beyond
the target host is that costs in such a situation are undefined.
Consider the example with the potential loop above. What is the cost
of <code class="literal">hostA</CODE
> when MX'd by <code class="literal">hostB</CODE
> to <code class="literal">hostC</CODE
>?  Should it be the
minimum of 10, the maximum of 20, the mean of 15, or the sum of 30?&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-21-SECT-3-4">21.3.4 Wildcard MX Records</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-17637"></A
><a class="indexterm" name="AUTOID-17639"></A
>Wildcard MX records provide a shorthand for MX'ing many hosts
with a single MX record:</P
><p class="para"><blockquote class="screen"><pre class="screen">*.dc.gov.       IN  MX  10 hostB</PRE
></BLOCKQUOTE
></P
><p class="para">This says that any host in the domain <code class="literal">.dc.gov</CODE
> (where that host doesn't
have any record of its own) should have its mail forwarded to
<code class="literal">hostB</CODE
>. </P
><p class="para"><blockquote class="screen"><pre class="screen">; domain is .dc.gov
*.dc.gov.       IN  MX  10 hostB
hostA           IN  MX  10 hostC
hostB           IN  A   123.45.67.8</PRE
></BLOCKQUOTE
></P
><p class="para">Here, mail to <code class="literal">hostD</CODE
> (no record at all) will be forwarded
to <code class="literal">hostB</CODE
>. But the wildcard MX record will be ignored
for <code class="literal">hostA</CODE
> and <code class="literal">hostB</CODE
>, because each has its own record.</P
><p class="para">Care must be exercised in setting up wildcard MX records.
It is easy to create ambiguous situations that DNS
may not be be able to handle correctly. Consider the following, for example:</P
><p class="para"><blockquote class="screen"><pre class="screen">; domain is sub.dc.gov
*.dc.gov.       IN  MX  10 hostB.dc.gov.
*.sub.dc.gov.   IN  MX  10 hostC.dc.gov.</PRE
></BLOCKQUOTE
></P
><p class="para">Here, an unqualified name such as just plain <code class="literal">hostD</CODE
> 
matches both wildcard records. This is ambiguous, so DNS
automatically picks the most complete one (<code class="literal">*.sub.dc.gov.</CODE
>)
and supplies that MX record to <em class="emphasis">sendmail</EM
>.</P
><p class="para">One compelling weakness of wildcard MX records is that they match
any hostname at all, even for machines that don't exist:</P
><p class="para"><blockquote class="screen"><pre class="screen">; domain is sub.dc.gov 
*.dc.gov.       IN  MX  10 hostB.dc.gov.</PRE
></BLOCKQUOTE
></P
><p class="para">Here, mail to <em class="emphasis">foo.dc.gov</EM
> will be forwarded to <code class="literal">hostB.dc.gov</CODE
>,
even if there is no host <em class="emphasis">foo</EM
> in that domain.</P
><p class="para">Wildcard MX records almost never have any appropriate use on the Internet.
They are often misunderstood and are often used just to save the
effort of typing hundreds of MX records. They do, however, have legitimate uses
behind firewall machines and on non-Internet networks.&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-21-SECT-3-5">21.3.5 What? They Ignore MX Records?</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-17672"></A
><a class="indexterm" name="AUTOID-17675"></A
>Many older MTAs on the network ignore MX records, and some
Sun sites 
wrongly run the non-MX version of <em class="emphasis">sendmail</EM
> (that is,
they should use
<em class="emphasis">/usr/lib/sendmail.mx</EM
>).
Because of this, you will occasionally
find some sites that insist on sending mail to a host even
though that host has been explicitly MX'd to another.</P
><p class="para">To illustrate why this is bad, consider a UUCP host that
has only an MX record.
It has no A record because it is not on the network:</P
><p class="para"><blockquote class="screen"><pre class="screen">uuhost   IN    MX  10 uucpserver</PRE
></BLOCKQUOTE
></P
><p class="para">Here, mail to <code class="literal">uuhost</CODE
> will be sent to <code class="literal">uucpserver</CODE
>, which
will forward the message to <code class="literal">uuhost</CODE
> with UUCP software.
An attempt to ignore this MX record will fail because <code class="literal">uuhost</CODE
>
has no other records. Similar problems can arise for printers with
direct network connections, terminal servers, and even workstations
that don't run an SMTP daemon such as <em class="emphasis">sendmail</EM
>.</P
><p class="para">If you believe in DNS and disdain sites that don't, you
can simply ignore the offending sites.
In this case the mail will fail if your MX'd host doesn't run
a <em class="emphasis">sendmail</EM
> daemon (or another MTA). This is not as
nasty as it sounds. There is actually considerable support for this
approach; failure to obey MX records is a clear violation
of published network protocols. RFC1123, <em class="emphasis">Host Requirements</EM
>,
section 5.3.5, notes that obeying MX records is mandatory.</P
><p class="para">On the other hand, if you want to ensure that all mail is received,
even on a workstation whose mail is MX'd elsewhere, you can
run the <em class="emphasis">sendmail</EM
> daemon on every machine.&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-21-SECT-3-6">21.3.6 Caching MX Records</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-17697"></A
>Although you are not required to have MX records for all hosts,
there is good reason to consider doing so. To illustrate, consider
the following host that only has an A record:</P
><p class="para"><blockquote class="screen"><pre class="screen">hostB           IN  A   123.45.67.8</PRE
></BLOCKQUOTE
></P
><p class="para">When <em class="emphasis">sendmail</EM
> first looks up this host, it asks the local
name server for all records. Because there is only an A record,
that is all it gets.</P
><p class="para">But note that asking for all records caused the local
name server to cache the information.
The next time <em class="emphasis">sendmail</EM
> looks up this same host, the local
name server will return the A record from its cache. This is
faster and reduces Internet traffic. The cached
information is &quot;nonauthoritative&quot; (because it is a copy)
and includes no MX records (because there are none).</P
><p class="para">When <em class="emphasis">sendmail</EM
> gets a nonauthoritative reply that lacks
MX records, it is forced to do another DNS lookup. This time,
it specifically asks for MX records. In this case there are
none, so it gets none.</P
><p class="para">Because <code class="literal">hostB</CODE
> lacks an MX record, <em class="emphasis">sendmail</EM
> 
performs a DNS lookup each and every time mail is sent to that host.
If <code class="literal">hostB</CODE
> were a major mail-receiving site, its lack
of an MX record would be causing many <em class="emphasis">sendmail</EM
> programs,
all over the world, to waste network bandwidth with otherwise
useless DNS lookups.</P
><p class="para">We strongly recommend that every host on the Internet have
at least one MX record. As a minimum, it can simply point
to itself with a 0 cost:</P
><p class="para"><blockquote class="screen"><pre class="screen">hostB           IN  A   123.45.67.8
                IN  MX  0 hostB</PRE
></BLOCKQUOTE
></P
><p class="para">This will not change how mail is routed to <code class="literal">hostB</CODE
>
but will reduce the number of DNS lookups required.&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-21-SECT-3-7">21.3.7 Ambiguous MX Records</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-17721"></A
><a class="indexterm" name="AUTOID-17723"></A
>RFC974 leaves the treatment of ambiguous MX records to the
implementor's discretion.
This has generated much debate in <em class="emphasis">sendmail</EM
> circles.
Consider the following:</P
><p class="para"><blockquote class="screen"><pre class="screen">foo    IN MX 10 hostA
foo    IN MX 20 hostB        <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> mail from hostB to foo</I
>
foo    IN MX 30 hostC</PRE
></BLOCKQUOTE
></P
><p class="para">When mail is sent from a host (<code class="literal">hostB</CODE
>) that is an MX record
for the receiving host (<code class="literal">foo</CODE
>), all MX records that have a cost
equal to or greater than that of <code class="literal">hostB</CODE
> must be discarded.
The mail is then delivered to
the remaining MX host with the lowest cost
(<code class="literal">hostA</CODE
>).
This is a sensible rule, because it prevents <code class="literal">hostB</CODE
> from wrongly
trying to deliver to itself.</P
><p class="para">It is possible to configure <code class="literal">hostB</CODE
> so that it views the
name <code class="literal">foo</CODE
> as a synonym for its own name.
Such a configuration results in 
<code class="literal">hostB</CODE
> never looking up any MX records because it 
recognizes mail to <code class="literal">foo</CODE
> as local.</P
><p class="para">But what should happen if <code class="literal">hostB</CODE
> does not recognize <code class="literal">foo</CODE
>
as local and if there is no <code class="literal">hostA</CODE
>?</P
><p class="para"><blockquote class="screen"><pre class="screen">                             <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> no hostA</I
>
foo    IN MX 20 hostB        <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> mail from hostB to foo</I
>
foo    IN MX 30 hostC</PRE
></BLOCKQUOTE
></P
><p class="para">Again, RFC974 says that when mail is being sent from a host (<code class="literal">hostB</CODE
>)
that is an MX record for the receiving host (<code class="literal">foo</CODE
>),
all MX records that have a cost equal to or greater than that of <code class="literal">hostB</CODE
>
must be discarded.
In this example that leaves <em class="emphasis">zero</EM
> MX records.
Three courses of action are now open to <em class="emphasis">sendmail</EM
>, but RFC974 doesn't
say which it should use:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Assume that this is an error condition. Clearly, <em class="emphasis">hostB</EM
>
should have been configured to recognize <em class="emphasis">foo</EM
> as local.
It didn't (hence the MX lookup and discarding in the first place),
so it must not have known what it was doing. V8 <em class="emphasis">sendmail</EM
> with
the <code class="literal">TryNullMXList</CODE
> (<code class="literal">w</CODE
>) option (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.71, TryNullMXList (w)</A
>)
not set (undeclared or declared as false) will bounce the mail message.<a class="indexterm" name="AUTOID-17764"></A
></P
></LI
><li class="listitem"><p class="para">Look to see whether <em class="emphasis">foo</EM
> has an
A record. If it does, go ahead and try to deliver the mail message
directly to <em class="emphasis">foo</EM
>. If it lacks an A record, bounce the message.
This approach runs the risk that <em class="emphasis">foo</EM
>
may not be configured to properly accept mail (thus causing mail to
disappear down a black hole). Still, this approach may be desirable in
some circumstances. V8 <em class="emphasis">sendmail</EM
> with the 
<code class="literal">TryNullMXList</CODE
> (<code class="literal">w</CODE
>) option (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.71</A
>)
set always tries to connect to <em class="emphasis">foo</EM
>.
[13]</P
><blockquote class="footnote"><p class="para">[13] As does the UIUC version of IDA <em class="emphasis">sendmail</EM
>.
Other versions of IDA (such as KJS) do not.</P
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Assume (even though it has not been configured to do so) that <em class="emphasis">foo</EM
>
should be treated as local to <em class="emphasis">hostB</EM
>. No version of <em class="emphasis">sendmail</EM
>
makes this assumption.</P
></LI
></UL
><p class="para">This situation is not an idle exercise. Consider the MX record for
<code class="literal">uuhost</CODE
> presented in the previous section:</P
><p class="para"><blockquote class="screen"><pre class="screen">uuhost   IN    MX  10 uucpserver</PRE
></BLOCKQUOTE
></P
><p class="para">Here, <code class="literal">uuhost</CODE
> has no A record, because it is connected
to <code class="literal">uucpserver</CODE
> via a dial-up line.
If <code class="literal">uucpserver</CODE
> is not configured to recognize
<code class="literal">uuhost</CODE
> as one of its UUCP clients, and if mail is sent from
<code class="literal">uucpserver</CODE
> to <code class="literal">uuhost</CODE
>, it will query DNS and get
itself as the MX record for <code class="literal">uuhost</CODE
>. As we have shown, that
MX record is discarded, and an ambiguous situation has developed.<a class="indexterm" name="AUTOID-17796"></A
>&#13;</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch21_02.htm#SML2-CH-21-SECT-2-4" title="21.2 How sendmail Uses DNS"><img src="../gifs/txtpreva.gif" alt="Previous: 21.2 How sendmail Uses DNS" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="sendmail"><img src="../gifs/txthome.gif" alt="sendmail" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch21_04.htm" title="21.4 How to Use nslookup"><img src="../gifs/txtnexta.gif" alt="Next: 21.4 How to Use nslookup" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">21.2 How sendmail Uses DNS</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">21.4 How to Use nslookup</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
