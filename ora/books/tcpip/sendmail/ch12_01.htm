<html><head>
<title>[Chapter 12] Class</TITLE>
<meta name="DC.title" content="sendmail"><meta name="DC.creator" content="Bryan Costales &amp; Eric Allman"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T18:36:48Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-222-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="part01.htm" title="I. A Tutorial"><link rel="prev" href="ch11_08.htm" title="11.8 Things to Try"><link rel="next" href="ch12_02.htm" title="12.2 The File Form of Class"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="sendmail" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="sendmail"><area shape="RECT" coords="467,0,514,18" href="../search/ssrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch11_08.htm" title="11.8 Things to Try"><img src="../gifs/txtpreva.gif" alt="Previous: 11.8 Things to Try" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 12</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch12_02.htm" title="12.2 The File Form of Class"><img src="../gifs/txtnexta.gif" alt="Next: 12.2 The File Form of Class" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="CHAPTER"><h1 class="chapter"><a class="title" name="SML2-CH-12">12. Class</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="sect1" href="#SML2-CH-12-SECT-1" title="12.1 The Class Command">The Class Command</A
><br><a class="sect1" href="ch12_02.htm" title="12.2 The File Form of Class">The File Form of Class</A
><br><a class="sect1" href="ch12_03.htm" title="12.3 Things to Try">Things to Try</A
></P
><p></P
></DIV
><p class="para"></P
><p class="para">In rule sets, it is often advantageous to compare individual
tokens to multiple strings in determining a match.
For example, consider the rules developed
in the last chapter, that is, the sender rewriting rules from
the hub delivery agent's <code class="literal">S=Hubset</CODE
> rule set:<a class="indexterm" name="SML2-CH-12-IX-CLASS-MACROS"></A
><a class="indexterm" name="SML2-CH-12-IX-MACROS-CLASS-MACROS"></A
></P
><p class="para"><blockquote class="screen"><pre class="screen">SHubset # Rewrite the sender for the hub
R$-             $@ $1@${HUB}            user -&gt; user@hub
R$-@$w          $@ $1@${HUB}            user@local -&gt; user@hub</PRE
></BLOCKQUOTE
></P
><p class="para">The second rule's LHS looks for any sender address
that is composed of a single username followed by an <code class="literal">@</CODE
>
character and ending with the short name of the local machine (<code class="literal">$w</CODE
>).
Such an address is rewritten by the RHS to become that of
the central forwarding machine, defined by the <code class="literal">{HUB}</CODE
> macro.</P
><p class="para">Now suppose that the local machine is known by several names in
addition to the short name in <code class="literal">$w</CODE
>. All machines,
for example, have a short name (such as <em class="emphasis">here</EM
>)
and a fully qualified name (such as <em class="emphasis">here.us.edu</EM
>).
They also often refer to themselves as <em class="emphasis">localhost</EM
>.
In addition, some machines can play special roles at a site (such
as having a printer or containing a central directory of fonts) and
might have another name appropriate to that role.</P
><p class="para">To convert any sender address so that
it becomes the central forwarder's name, no matter what the local host's
name, you can use <em class="emphasis">sendmail</EM
> classes.
In this chapter we will cover the class configuration command
and its cousin, the file configuration command.
Proper use of the class and file commands allows
you to replace many rules with a single rule.&#13;</P
><div class="sect1"><h2 class="sect1"><a class="title" name="SML2-CH-12-SECT-1">12.1 The Class Command</A
></H2
><p class="para"><a class="indexterm" name="SML2-CH-12-IX-CLASS-COMMAND"></A
>The class command declares a macro whose value is a list of strings.
Rule sets may then compare the workspace to that list of strings.
One such
list could be a list of names by which the local machine is known.</P
><p class="para"><a class="indexterm" name="AUTOID-6491"></A
>A class is referenced in the LHS with the <code class="literal">$=</CODE
>
prefix:</P
><p class="para"><blockquote class="screen"><pre class="screen">$=<code class="replaceable"><i>X          </I
></CODE
><i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> single-character name</I
>
$=<code class="replaceable"><i>{XXX}      </I
></CODE
><i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> multicharacter name (beginning with V8.7)</I
></PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-6502"></A
>Here, <code class="replaceable"><i>X</I
></CODE
> is a single-character class name.
Beginning with V8.7 <em class="emphasis">sendmail</EM
>, multicharacter class name may be
used, as shown in the second line above.
Multicharacter class names must always be enclosed in
curly braces.</P
><p class="para">The workspace is tokenized as usual; then the appropriate
token is looked up to see whether it was defined as belonging
to the class referenced by <code class="literal">$=</CODE
>. If the token was
found, the workspace at that point is considered to be matched.
We'll cover this in more detail shortly.&#13;</P
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-12-SECT-1-1">12.1.1 Declaring a Class</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-6512"></A
>The words that form the list of words in a class
are declared with the <code class="literal">C</CODE
> configuration command.
The form for the class configuration command is as follows:</P
><p class="para"><blockquote class="screen"><pre class="screen">C<code class="replaceable"><i>Xlist          </I
></CODE
><i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> single-character name</I
>
C<code class="replaceable"><i>{XXX}list      </I
></CODE
><i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> multicharacter name (beginning with V8.7)</I
></PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-6523"></A
>The class configuration command starts with the letter
<code class="literal">C</CODE
>, which must begin a line. The <code class="literal">C</CODE
> is immediately followed
(with no intervening whitespace) by the name of that class.
A class name can be a single ASCII character
or, beginning with V8.7 <em class="emphasis">sendmail</EM
>, 
multiple ASCII characters enclosed in curly braces.
A whitespace-separated <code class="replaceable"><i>list</I
></CODE
> of word elements follows
on the same line. Space between the name and the <code class="replaceable"><i>list</I
></CODE
>
is optional.</P
><p class="para">For example, the following declaration places two possible
names for the local machine into the class named <code class="literal">w</CODE
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">Cw printer1 fontserver</PRE
></BLOCKQUOTE
></P
><p class="para">Multiple declarations of the same class macro may exist.
Each appends its word elements to the preceding list. For example,
the following produces the same result as the single line above:</P
><p class="para"><blockquote class="screen"><pre class="screen">Cw printer1
Cw fontserver</PRE
></BLOCKQUOTE
></P
><p class="para">Both examples define a class named <code class="literal">w</CODE
>, and both assign to 
that class the same list of two words.&#13;</P
><div class="sect3"><h4 class="sect3"><a class="title" name="SML2-CH-12-SECT-1-1-1">12.1.1.1 A caveat</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-6542"></A
>Class names and macro names
are completely independent. To illustrate, consider
the following two configuration commands:</P
><p class="para"><blockquote class="screen"><pre class="screen">Dwprinter1
Cwprinter1</PRE
></BLOCKQUOTE
></P
><p class="para">Both assign the value <code class="literal">printer1</CODE
> to the name <code class="literal">w</CODE
>.
The first assigns that value to a macro, the second to
a class. Internally, <em class="emphasis">sendmail</EM
> stores the value <code class="literal">printer1</CODE
>
twice, first as type &quot;macro&quot; and second
as type &quot;class.&quot; Although they share the same
value (<code class="literal">printer1</CODE
>), macros and classes are
completely independent of each other.&#13;</P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-12-SECT-1-2">12.1.2 Multiple Known Names for the Local Host</A
></H3
><p class="para">As an example of one common use of the class macro, we will consider 
the case of machines that are known by multiple names.
Run <em class="emphasis">sendmail</EM
> again:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>./sendmail -Cclient.cf -bt</B
></CODE
>
ADDRESS TEST MODE (ruleset 3 NOT automatically invoked)
Enter &lt;ruleset&gt; &lt;address&gt;
&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">Now give it the special (new to V8.7 <em class="emphasis">sendmail</EM
>)
rule-testing command <code class="literal">$=</CODE
> (which
tells <em class="emphasis">sendmail</EM
> to print the values stored in a class) and follow
that with the letter (class name) <code class="literal">w</CODE
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>$=w</B
></CODE
>
here.us.edu
here
[123.45.67.8]
&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">This illustrates that <em class="emphasis">sendmail</EM
> is aware of
three of your machine's possible names (the last is an IP address).
But recall from the previous chapter that the rule that we created
looked for the local machine using only the
short name in the macro <code class="literal">w</CODE
>, not the three names in class
<code class="literal">w</CODE
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$-@$w          $@ $1@${HUB}            user@local -&gt; user@hub</PRE
></BLOCKQUOTE
></P
><p class="para">If we didn't have class macros, we would have to look for the local
machine name using a series of rules like those below:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$-@$w                 $@ $1@${HUB}     user@local -&gt; user@hub
R$-@here.us.edu        $@ $1@${HUB}     user@local -&gt; user@hub
R$-@[123.45.67.8]      $@ $1@${HUB}     user@local -&gt; user@hub</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;Fortunately, the class configuration command provides an alternative.
Use of a class list allows one rule to be written that does exactly
the same thing as the three preceding rules:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$-@$=w         $@ $1@${HUB}            user@local -&gt; user@hub</PRE
></BLOCKQUOTE
></P
><p class="para">Let's examine this new rule, then test it.&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-12-SECT-1-3">12.1.3 Class Macros in the LHS</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-6584"></A
>The list of words in a class are referenced in the LHS of
rules by prefixing the class name with the characters
<code class="literal">$=</CODE
>. For the class named <code class="literal">w</CODE
> the expression
in the LHS looks like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">$=w</PRE
></BLOCKQUOTE
></P
><p class="para">To understand how this expression is evaluated, we need to
look at how the words in the class are stored.
Each word that <em class="emphasis">sendmail</EM
> adds to the list (whether
internally or from a <code class="literal">C</CODE
> configuration command)
is stored by <em class="emphasis">sendmail</EM
><a class="indexterm" name="AUTOID-6595"></A
>
in its <em class="emphasis">symbol table</EM
>.  The symbol table holds all the words
that appear in the configuration file. It holds the values 
of macro definitions and the symbolic names of delivery agents.
It also holds the words that form a class list.</P
><p class="para"><a class="indexterm" name="AUTOID-6599"></A
>Next, we need to review how the workspace is tokenized and
compared to the LHS of a rule. Just before the LHS
is compared to the workspace, the workspace is tokenized.
The address of a local 
user in the workspace might look like,
and be tokenized like, the following:</P
><p class="para"><blockquote class="screen"><pre class="screen">you@here   <i class="lineannotation">becomes <img src="../chars/rarr.gif" alt="-&gt;"></I
>   you @ here</PRE
></BLOCKQUOTE
></P
><p class="para">When the <code class="literal">$=w</CODE
> expression appears in the LHS of a rule,
it is compared to the workspace at the point that corresponds to
the class's position in the LHS:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$-@$=w         $@$1@${HUB}            user@local -&gt; user@hub
    <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>
    <i class="lineannotation">here</I
></PRE
></BLOCKQUOTE
></P
><p class="para">In performing its minimum match of the workspace to the LHS,
the matches are the following:</P
><p class="para"><blockquote class="screen"><pre class="screen">$-    <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> match</I
> you
@     <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> match</I
> @
$=w   <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> does</I
> here <i class="lineannotation">match any token in class </I
>w<i class="lineannotation">?</I
></PRE
></BLOCKQUOTE
></P
><p class="para">When <em class="emphasis">sendmail</EM
> encounters a class-matching expression in
the LHS, it looks up the corresponding token from the workspace
in its symbol table. Here it looks up <code class="literal">here</CODE
>.
Because <code class="literal">here</CODE
> is listed in the symbol table
as belonging to the class <code class="literal">w</CODE
>, <em class="emphasis">sendmail</EM
> finds a match.
If there were no <code class="literal">here</CODE
> in the symbol table, the match
would fail. If there were one or 

more <code class="literal">here</CODE
>
entries in the symbol table, but none marked as belonging to
class <code class="literal">w</CODE
>, the match would also fail.&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-12-SECT-1-4">12.1.4 Class Macros in the RHS</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-6630"></A
><a class="indexterm" name="AUTOID-6633"></A
>When a match in the LHS allows the RHS to rewrite the workspace, the
token matched by the <code class="literal">$=</CODE
> prefix can be referenced
with a <code class="literal">$</CODE
><code class="replaceable"><i>digit</I
></CODE
> positional operator. This differs from the
<code class="literal">$</CODE
> macro prefix that you learned about earlier. Macros
are expanded when the configuration file is read (so <code class="literal">$</CODE
><code class="replaceable"><i>digit</I
></CODE
>
doesn't work), but classes are
given values only when a rule is matched (so <code class="literal">$</CODE
><code class="replaceable"><i>digit</I
></CODE
> does work).</P
><p class="para">We don't use the positional operator in the RHS because we
don't care what word matched. Instead, we take the username from
the LHS with <code class="literal">$1</CODE
>, add an <code class="literal">@</CODE
> character and
the name of the forwarding hub machine (the <code class="literal">${HUB}</CODE
>):</P
><p class="para"><blockquote class="screen"><pre class="screen">R$-@$=w         $@$1@${HUB}            user@local -&gt; user@hub
 <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^">  <img src="../chars/uarr.gif" alt="-^">                <img src="../chars/uarr.gif" alt="-^"></I
>
 <i class="lineannotation">1  2                $2 not needed</I
></PRE
></BLOCKQUOTE
></P
><p class="para"></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-12-SECT-1-5">12.1.5 Testing Class</A
></H3
><p class="para">Modify the <em class="emphasis">client.cf</EM
> file by changing the <code class="literal">$w</CODE
> in
the second rule (of <code class="literal">SHubset</CODE
>) into a <code class="literal">$=w</CODE
> so that we
can begin to test the class:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$-@$<code class="userinput"><b>=</B
></CODE
>w         $@ $1@${HUB}            user@local -&gt; user@hub
     <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>
     <i class="lineannotation">insert an </I
>=</PRE
></BLOCKQUOTE
></P
><p class="para">Now run <em class="emphasis">sendmail</EM
> in rule-testing mode once again:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>./sendmail -Cclient.cf -bt</B
></CODE
>
ADDRESS TEST MODE (ruleset 3 NOT automatically invoked)
Enter &lt;ruleset&gt; &lt;address&gt;
&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">First use the <code class="literal">$=</CODE
> rule-testing command to list the contents
of the class <code class="literal">w</CODE
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>$=w</B
></CODE
>
here.us.edu
here
[123.45.67.8]</PRE
></BLOCKQUOTE
></P
><p class="para">Next, to test the new rule, specify rule set <code class="literal">Hubset</CODE
> and
give <em class="emphasis">sendmail</EM
> an address with a user, an <code class="literal">@</CODE
>, and
one of the local addresses shown for your machine:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>Hubset you@here.us.edu</B
></CODE
>
rewrite: ruleset 199   input: you @ here . us . edu
rewrite: ruleset 199 returns: you @ mail . us . edu</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;This result is just what we expected. After all, the value in <code class="literal">${HUB}</CODE
>
is <code class="literal">mail.us.edu</CODE
>. Now give <em class="emphasis">sendmail</EM
> another address,
only this time give it one not in the list:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>Hubset you@localhost</B
></CODE
>
rewrite: ruleset 199   input: you @ localhost
rewrite: ruleset 199 returns: you @ localhost</PRE
></BLOCKQUOTE
></P
><p class="para">This time the address was not rewritten because <code class="literal">localhost</CODE
> is
not listed in the class <code class="literal">w</CODE
>. But, in general,
<em class="emphasis">localhost</EM
> is a legitimate name for the local machine, so
let's add it temporarily by employing a new rule-testing command
that you haven't seen before:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>.Cw localhost</B
></CODE
>
&gt; <code class="userinput"><b>$=w</B
></CODE
>
here.us.edu
localhost
here
[123.45.67.8]</PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">.C</CODE
> command (new with V8.7)
tells <em class="emphasis">sendmail</EM
> to temporarily add a word to a class. In this case
we added the word <code class="literal">localhost</CODE
> to the class <code class="literal">w</CODE
>. We then
ran the <code class="literal">$=</CODE
> rule-testing command to confirm that <em class="emphasis">sendmail</EM
>
had actually added the word to the class. </P
><p class="para">Test the address <em class="emphasis">localhost</EM
> again:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>Hubset you@localhost</B
></CODE
>
rewrite: ruleset 199   input: you @ localhost
rewrite: ruleset 199 returns: you @ mail . us . edu</PRE
></BLOCKQUOTE
></P
><p class="para">This time, <em class="emphasis">sendmail</EM
> found <code class="literal">localhost</CODE
> in the list
and so rewrote the sender address.&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-12-SECT-1-6">12.1.6 Add Class w to client.cf</A
></H3
><p class="para">As we mentioned earlier, a host may be known by many names.
Some of those names are found automatically by <em class="emphasis">sendmail</EM
>; others must be added by you. The name <em class="emphasis">localhost</EM
>
is one possibility, and there may be others (such as <em class="emphasis">printer1</EM
>).
You can add them to class <code class="literal">w</CODE
> in rule-testing mode, but
that is not a permanent solution (because they are forgotten as soon
you leave rule-testing mode). Instead, you need to add
them to your configuration file using the <code class="literal">C</CODE
> configuration
command.<a class="indexterm" name="AUTOID-6720"></A
></P
><p class="para">Edit the <em class="emphasis">client.cf</EM
> file and add a new <code class="literal">C</CODE
> configuration
line to it:</P
><p class="para"><blockquote class="screen"><pre class="screen">V7
# Defined macros
D{REMOTE}mailhost              # The name of the mail hub
D{HUB}mail.us.edu              # Hub as known to the outside world

<code class="userinput"><b>Cw localhost printer1          # My other names.                      </B
></CODE
><i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> new</I
></PRE
></BLOCKQUOTE
></P
><p class="para">Here we added <code class="literal">localhost</CODE
> because it was missing and <code class="literal">printer1</CODE
>
to illustrate later points. Note that the name <code class="literal">printer1</CODE
> is probably
not appropriate for your site, but include it for now.</P
><p class="para">Run <em class="emphasis">sendmail</EM
> again in rule-testing mode:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>./sendmail -Cclient.cf -bt</B
></CODE
>
ADDRESS TEST MODE (ruleset 3 NOT automatically invoked)
Enter &lt;ruleset&gt; &lt;address&gt;
&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">Use the <code class="literal">$=</CODE
> rule-testing command again. Make sure the
<code class="literal">C</CODE
> line added the new names to the 
class <code class="literal">w</CODE
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>$=w</B
></CODE
>
here.us.edu
localhost
here
[123.45.67.8]
printer1</PRE
></BLOCKQUOTE
></P
><p class="para">We can now test each name.
Remember that the rule we are testing is this one:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$-@$=w         $@ $1@${HUB}            user@local -&gt; user@hub</PRE
></BLOCKQUOTE
></P
><p class="para">We want to match any sender address that is a username,
an <code class="literal">@</CODE
>, and any of the names in the class <code class="literal">w</CODE
>.
We also want to rewrite each to appear as though the user is from
the hub.</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>Hubset you@here.us.edu</B
></CODE
>
rewrite: ruleset 199   input: you @ here . us . edu
rewrite: ruleset 199 returns: you @ mail . us . edu
&gt; <code class="userinput"><b>Hubset you@localhost</B
></CODE
>
rewrite: ruleset 199   input: you @ localhost
rewrite: ruleset 199 returns: you @ mail . us . edu
&gt; <code class="userinput"><b>Hubset you@here</B
></CODE
>
rewrite: ruleset 199   input: you @ here
rewrite: ruleset 199 returns: you @ mail . us . edu
&gt; <code class="userinput"><b>Hubset you@[123.45.67.8]</B
></CODE
>
rewrite: ruleset 199   input: you @ [ 123 . 45 . 67 . 8 ]
rewrite: ruleset 199 returns: you @ mail . us . edu
&gt; <code class="userinput"><b>Hubset you@printer1</B
></CODE
>
rewrite: ruleset 199   input: you @ printer1
rewrite: ruleset 199 returns: you @ mail . us . edu
&gt; <code class="userinput"><b>Hubset you@printer1.us.edu</B
></CODE
>
rewrite: ruleset 199   input: you @ printer1 . us . edu
rewrite: ruleset 199 returns: you @ printer1 . us . edu</PRE
></BLOCKQUOTE
></P
><p class="para">All the names in class <code class="literal">w</CODE
> match as they should. Notice
that <em class="emphasis">here</EM
> appears in the list as both a short and
a fully qualified name, but <em class="emphasis">printer1</EM
> does not. 
When we tried <em class="emphasis">printer1</EM
> in a fully qualified form (in the last
three lines above), it failed.
To make <em class="emphasis">printer1</EM
> succeed,
we could add its fully qualified form
to the class <code class="literal">w</CODE
>, but if we did that, we would have
to do the same for <em class="emphasis">localhost</EM
> and any other names
that we added. Instead, we will deal with the problem by adding
a rule to the <em class="emphasis">client.cf</EM
> file.&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-12-SECT-1-7">12.1.7 Adding the Domain</A
></H3
><p class="para">There are three approaches to writing a rule that matches any
of the local hostnames with a domain added:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Use a <code class="literal">$*</CODE
> wildcard operator to match anything after the local hostname:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$-@$=w$*</PRE
></BLOCKQUOTE
></P
><p class="para">But this is unwise because it assumes that anything that
follows the host is a domain, which might not always be true.</P
></LI
><li class="listitem"><p class="para">Use your domain name directly in the rule:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$-@$=w.us.edu</PRE
></BLOCKQUOTE
></P
><p class="para">Although this will work,
it is better to use a macro in case you change your domain or use
this file on a machine in another domain.</P
></LI
><li class="listitem"><p class="para">Use a macro that has your domain name as its value.</P
></LI
></OL
><p class="para">We will use the third approach because it is the cleanest. Begin by
running <em class="emphasis">sendmail</EM
> with the <code class="literal">-d0.1</CODE
> debugging switch
again:</P
><p class="para"><blockquote class="screen"><pre class="screen">Version 8.8.4
 Compiled with: LOG MATCHGECOS MIME7TO8 MIME8TO7 NAMED_BIND NDBM NETINET
                NETUNIX NIS SCANF XDEBUG

============ SYSTEM IDENTITY (after readcf) ============
      (short domain name) $w = here
  (canonical domain name) $j = here.us.edu
         (subdomain name) $m = us.edu
              (node name) $k = here
========================================================  

ADDRESS TEST MODE (ruleset 3 NOT automatically invoked)
Enter &lt;ruleset&gt; &lt;address&gt;
&gt;</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-6791"></A
><a class="indexterm" name="AUTOID-6793"></A
>Note that the line that defines the &quot;subdomain name&quot; (the one with the <code class="literal">$m</CODE
>)
is the local domain that we need for our new rule.
Add another rule to the <code class="literal">Hubset</CODE
> rule set. This new rule looks for
any local names (in <code class="literal">$=w</CODE
>) that are followed by the
local domain name defined for you by <em class="emphasis">sendmail</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">SHubset # Rewrite the sender for the hub
R$-             $@ $1@${HUB}            user -&gt; user@hub
R$-@$=w         $@ $1@${HUB}            user@local -&gt; user@hub
<code class="userinput"><b>R$-@$=w.$m      $@ $1@${HUB}            user@local.domain -&gt; user@hub   </B
></CODE
><i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> new</I
></PRE
></BLOCKQUOTE
></P
><p class="para">&#13;Now run <em class="emphasis">sendmail</EM
> once again and feed it the address that failed in
the last test (but use your local domain):</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>./sendmail -Cclient.cf -bt</B
></CODE
>
ADDRESS TEST MODE (ruleset 3 NOT automatically invoked)
Enter &lt;ruleset&gt; &lt;address&gt;
&gt; <code class="userinput"><b>Hubset you@printer1.us.edu</B
></CODE
>
rewrite: ruleset 199   input: you @ printer1 . us . edu
rewrite: ruleset 199 returns: you @ mail . us . edu</PRE
></BLOCKQUOTE
></P
><p class="para">As expected, the new rule in the <code class="literal">Hubset</CODE
> rule set does its job.
It finds that
the <code class="literal">printer1.us.edu</CODE
> part of the address matches the <code class="literal">$=w.$m</CODE
> part
of the rule and rewrites the workspace to make the sender's address
appear as though it is from the hub.<a class="indexterm" name="AUTOID-6813"></A
>&#13;</P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch11_08.htm" title="11.8 Things to Try"><img src="../gifs/txtpreva.gif" alt="Previous: 11.8 Things to Try" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="sendmail"><img src="../gifs/txthome.gif" alt="sendmail" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch12_02.htm" title="12.2 The File Form of Class"><img src="../gifs/txtnexta.gif" alt="Next: 12.2 The File Form of Class" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">11.8 Things to Try</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">12.2 The File Form of Class</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
