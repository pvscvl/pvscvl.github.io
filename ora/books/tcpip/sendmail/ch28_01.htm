<html><head>
<title>[Chapter 28] Rules</TITLE>
<meta name="DC.title" content="sendmail"><meta name="DC.creator" content="Bryan Costales &amp; Eric Allman"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T19:49:59Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-222-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="part04.htm" title="IV. Reference"><link rel="prev" href="ch27_06.htm" title="27.6 Pitfalls"><link rel="next" href="ch28_02.htm#SML2-CH-28-SECT-2-3" title="28.2 Tokenizing Rules"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="sendmail" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="sendmail"><area shape="RECT" coords="467,0,514,18" href="../search/ssrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch27_06.htm" title="27.6 Pitfalls"><img src="../gifs/txtpreva.gif" alt="Previous: 27.6 Pitfalls" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 28</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch28_02.htm#SML2-CH-28-SECT-2-3" title="28.2 Tokenizing Rules"><img src="../gifs/txtnexta.gif" alt="Next: 28.2 Tokenizing Rules" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="CHAPTER"><h1 class="chapter"><a class="title" name="SML2-CH-28">28. Rules</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="sect1" href="#SML2-CH-28-SECT-1" title="28.1 Overview">Overview</A
><br><a class="sect1" href="ch28_02.htm#SML2-CH-28-SECT-2-3" title="28.2 Tokenizing Rules">Tokenizing Rules</A
><br><a class="sect1" href="ch28_03.htm" title="28.3 The Workspace">The Workspace</A
><br><a class="sect1" href="ch28_04.htm" title="28.4 The Behavior of a Rule">The Behavior of a Rule</A
><br><a class="sect1" href="ch28_05.htm" title="28.5 The LHS">The LHS</A
><br><a class="sect1" href="ch28_06.htm#SML2-CH-28-SECT-6-4" title="28.6 The RHS">The RHS</A
><br><a class="sect1" href="ch28_07.htm" title="28.7 Pitfalls">Pitfalls</A
></P
><p></P
></DIV
><p class="para"></P
><p class="para">Rules are like little if-then clauses, existing inside
rule sets, that test a pattern
against an address and change the address if the two match.
The process of converting one form of an address into another 
is called <em class="emphasis">rewriting</EM
>.<a class="indexterm" name="SML2-CH-28-IX-RULES"></A
>
Most rewriting requires a sequence of many rules,
because an individual rule is relatively limited in what it can do. 
This need for many rules, combined with the <em class="emphasis">sendmail</EM
>
program's need for succinct expressions, can make sequences
of rules dauntingly cryptic.</P
><p class="para">In this chapter we dissect the components of individual rules. In
the previous chapter
we showed how groups of rules are combined to perform necessary tasks.</P
><div class="sect1"><h2 class="sect1"><a class="title" name="SML2-CH-28-SECT-1">28.1 Overview</A
></H2
><p class="para"><a class="indexterm" name="AUTOID-26115"></A
>Rules are declared in the configuration file with the <code class="literal">R</CODE
> command.
Like all configuration commands, the <code class="literal">R</CODE
> rule configuration command
must begin a line. The general form consists of an <code class="literal">R</CODE
> command 
followed by three parts:</P
><p class="para"><blockquote class="screen"><pre class="screen">R<code class="replaceable"><i>lhs    rhs   comment</I
></CODE
>
     <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>      <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>
    <i class="lineannotation">tabs</I
>    <i class="lineannotation">tabs</I
></PRE
></BLOCKQUOTE
></P
><p class="para">The <code class="literal">lhs</CODE
> stands for <em class="emphasis">left-hand side</EM
> and is most commonly expressed
as <span class="acronym">LHS</SPAN
>. The <code class="literal">rhs</CODE
> stands for <em class="emphasis">right-hand side</EM
> and is expressed
as <span class="acronym">RHS</SPAN
>.
The <span class="acronym">LHS</SPAN
> and <span class="acronym">RHS</SPAN
> are mandatory.
The third part (the <code class="literal">comment</CODE
>) is optional. 
The three parts must be separated from each other by one
or more tab characters (space characters will <em class="emphasis">not</EM
> work).</P
><p class="para">Space characters between the <code class="literal">R</CODE
> and the <span class="acronym">LHS</SPAN
> are optional.
If there is
a tab between the <code class="literal">R</CODE
> and the <span class="acronym">LHS</SPAN
>, <em class="emphasis">sendmail</EM
>
silently uses the <span class="acronym">LHS</SPAN
> as the <span class="acronym">RHS</SPAN
> and the <span class="acronym">RHS</SPAN
>
becomes the comment.</P
><p class="para">The tabs leading to the comment and the comment itself
are optional and may be omitted. 
If the <span class="acronym">RHS</SPAN
> is absent, 
<em class="emphasis">sendmail</EM
> prints the following warning and ignores that
<code class="literal">R</CODE
> line:</P
><p class="para"><blockquote class="screen"><pre class="screen">invalid rewrite line &quot;<i class="lineannotation">bad rule here</I
>&quot; (tab expected)</PRE
></BLOCKQUOTE
></P
><p class="para">This error is printed when the <span class="acronym">RHS</SPAN
> is absent, even if there
are tabs following the <span class="acronym">LHS</SPAN
>.
(This warning is usually the result of tabs
being converted to spaces when text is copied from one window
to another in a windowing system.)</P
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-28-SECT-1-1">28.1.1 Macros in Rules</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-26160"></A
>Each noncomment part of a rule
is expanded as the configuration file is read.
[1]
Thus any references to defined macros are replaced with the 
value that the macro has at that
point in the configuration file.
To illustrate, consider this mini-configuration file (called <em class="emphasis">x.cf</EM
>):</P
><blockquote class="footnote"><p class="para">[1] Actually, the comment part is expanded too, but with no effect other
than a tiny expenditure of time.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">DAvalue1
R$A    $A.new
DAvalue2
R$A    $A.new</PRE
></BLOCKQUOTE
></P
><p class="para">In it, <code class="literal">$A</CODE
> will have the value <code class="literal">value1</CODE
> when the first <code class="literal">R</CODE
>
line is expanded and <code class="literal">value2</CODE
> when the second is expanded.
Prove this to yourself by running <em class="emphasis">sendmail</EM
> in <code class="literal">-bt</CODE
> rule-testing mode on
that file:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>echo =S0 | /usr/lib/sendmail -bt -Cx.cf</B
></CODE
>
&gt; =S0
Rvalue1                 value1 . new 
Rvalue2                 value2 . new</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we use the <code class="literal">=S</CODE
> command (see <a class="xref" href="ch38_04.htm#SML2-CH-38-SECT-4-2" title="Show Rules in a Rule Set with =S">Section 38.4.1, "Show Rules in a Rule Set with =S"</A
>) to show each
rule after it has been read and expanded.</P
><p class="para">Another property of macros is that an
undefined macro expands to an empty string.
Consider this <em class="emphasis">x.cf</EM
> file:</P
><p class="para"><blockquote class="screen"><pre class="screen">DAvalue1
R$A    $A.$B
DAvalue2
R$A    $A.$B</PRE
></BLOCKQUOTE
></P
><p class="para">and this rule-testing run of <em class="emphasis">sendmail</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>echo =S0 | /usr/lib/sendmail -bt -Cx.cf</B
></CODE
>
&gt; =S0
Rvalue1                 value1 . 
Rvalue2                 value2 .</PRE
></BLOCKQUOTE
></P
><p class="para">Beginning with V8.7 <em class="emphasis">sendmail</EM
>, macros can be either single-character or multicharacter.
Both forms are expanded when the configuration file is read:</P
><p class="para"><blockquote class="screen"><pre class="screen">D{OURDOMAIN}us.edu
R${OURDOMAIN}    localhost.${OURDOMAIN}</PRE
></BLOCKQUOTE
></P
><p class="para">Multicharacter macros may be used in the <span class="acronym">LHS</SPAN
> and in the <span class="acronym">RHS</SPAN
>.
When the configuration file is read, the previous example is expanded
to look like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">&gt; =S0
Rus . edu               localhost . us . edu</PRE
></BLOCKQUOTE
></P
><p class="para"></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-28-SECT-1-2">28.1.2 Rules Are Treated Like Addresses</A
></H3
><p class="para">After each side (<span class="acronym">LHS</SPAN
> and <span class="acronym">RHS</SPAN
>) is expanded, each is then normalized just
as though it were an address.
A check is made for any tabs that may have been introduced
during expansion. If any are found, everything from the first tab to
the end of the string is discarded. Then <span class="acronym">RFC822</SPAN
>-style comments
are removed. An <span class="acronym">RFC822</SPAN
> comment is anything between and including
an unquoted pair of parentheses:<a class="indexterm" name="AUTOID-26207"></A
></P
><p class="para"><blockquote class="screen"><pre class="screen">DAroot@my.site (Operator)
R$A  <i class="lineannotation">tab</I
><code class="replaceable"><i> </I
></CODE
><span class="acronym">RHS</SPAN
>
  <i class="lineannotation"><img src="../chars/darr.gif" alt="-v"></I
>
Rroot@my.site (Operator)  <i class="lineannotation">tab</I
><code class="replaceable"><i> </I
></CODE
><span class="acronym">RHS</SPAN
><i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> expanded</I
>
  <i class="lineannotation"><img src="../chars/darr.gif" alt="-v"></I
>
Rroot@my.site  <i class="lineannotation">tab</I
><code class="replaceable"><i> </I
></CODE
><span class="acronym">RHS</SPAN
><i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> RFC822 comment stripped</I
></PRE
></BLOCKQUOTE
></P
><p class="para">Finally, a check is made for 
balanced quotation marks,
right parentheses balanced by left,
and right angle brackets balanced by left.
[2]
If any right-hand character appears without a corresponding
left-hand character, <em class="emphasis">sendmail</EM
> prints one of the following errors,
where <em class="emphasis">configfile</EM
> is the name of the configuration file that is being
read, <code class="replaceable"><i>num</I
></CODE
> shows the line number in that file, and <code class="replaceable"><i>expression</I
></CODE
> is the
part of the rule that was unbalanced:</P
><blockquote class="footnote"><p class="para">[2] The <code class="literal">$&gt;</CODE
> operator isn't counted in checking balance.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen"><em class="emphasis">configfile: line </EM
><code class="replaceable"><i>num: expression...Unbalanced '&quot;'</I
></CODE
>
<em class="emphasis">configfile: line </EM
><code class="replaceable"><i>num: expression...Unbalanced '&gt;'</I
></CODE
>
<em class="emphasis">configfile: line </EM
><code class="replaceable"><i>num: expression...Unbalanced ')'</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The first line shows that <em class="emphasis">sendmail</EM
>
has balanced the unbalanced quotation mark by appending a second quotation mark.
Each of the last two lines shows that the unbalanced character is removed.
For example, the file:</P
><p class="para"><blockquote class="screen"><pre class="screen">Rx      RHS&quot;
Ry      RHS&gt;
Rz      RHS)</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;produces these errors and rules:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>echo =S0 | /usr/lib/sendmail -bt -Cx.cf</B
></CODE
>
x.cf: line 1: RHS&quot;... Unbalanced '&quot;'
x.cf: line 2: RHS&gt;... Unbalanced '&gt;'
x.cf: line 3: RHS)... Unbalanced ')'
&gt; =S0
Rx              RHS &quot;&quot; 
Ry              RHS 
Rz              RHS</PRE
></BLOCKQUOTE
></P
><p class="para">Note that prior to V8.7 <em class="emphasis">sendmail</EM
>,
only an unbalanced right-hand character was checked:
[3]
Beginning with V8.7 <em class="emphasis">sendmail</EM
>, unbalanced left-hand characters are also detected,
and <em class="emphasis">sendmail</EM
> attempts to balance them for you. Consider, the following file:</P
><blockquote class="footnote"><p class="para">[3] That is, for example, there must not be a <code class="literal">&gt;</CODE
> before the <code class="literal">&lt;</CODE
>
character, and they must pair off.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">Rx      &quot;RHS
Ry      &lt;RHS
Rz      (RHS</PRE
></BLOCKQUOTE
></P
><p class="para">Here, <em class="emphasis">sendmail</EM
> detects and fixes the unbalanced characters but
does so with warnings:<a class="indexterm" name="AUTOID-26261"></A
></P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>echo =S0 | /usr/lib/sendmail -bt -Cx.cf</B
></CODE
>
x.cf: line 1: &quot;RHS... Unbalanced '&quot;'
x.cf: line 2: &lt;RHS... Unbalanced '&lt;'
x.cf: line 3: (RHS... Unbalanced '('
x.cf: line 3: R line: null RHS
&gt; =S0
Rx              &quot;RHS&quot; 
Ry              &lt; RHS &gt; 
Rz</PRE
></BLOCKQUOTE
></P
><p class="para">Note that in the last example (<code class="literal">Rz</CODE
>), <em class="emphasis">sendmail</EM
> balanced the <span class="acronym">RHS</SPAN
>
by adding a rightmost parenthesis.  This caused the <span class="acronym">RHS</SPAN
> to become
an <span class="acronym">RFC822</SPAN
> comment, which was then deleted, resulting in the null <span class="acronym">RHS</SPAN
> error.</P
><p class="para">If you get one of these <code class="literal">Unbalanced</CODE
> errors, be sure to correct
the problem at once. If you leave the faulty rule in place, <em class="emphasis">sendmail</EM
>
will continue to run but will likely produce erroneous mail delivery
and other odd problems.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="SML2-CH-28-SECT-1-2-1">28.1.2.1 Backslashes in rules</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-26279"></A
><a class="indexterm" name="AUTOID-26282"></A
>Backslash characters are used in addresses to protect certain special
characters from interpretation (see <a class="xref" href="ch35_03.htm#SML2-CH-35-SECT-3-2" title="Escape Character in the Header Field">Section 35.3.2, "Escape Character in the Header Field"</A
>).
For example, the address
<em class="emphasis">blue;jay</EM
> would ordinarily be interpreted as having three
parts (or tokens, which we'll discuss soon). To prevent <em class="emphasis">sendmail</EM
>
from treating this address as three parts and instead have it
viewed as a single item, the 

special separating nature of the
<code class="literal">;</CODE
> can be <em class="emphasis">escaped</EM
> by prefixing it with
a backslash:</P
><p class="para"><blockquote class="screen"><pre class="screen">blue\;jay</PRE
></BLOCKQUOTE
></P
><p class="para">V8 <em class="emphasis">sendmail</EM
> handles backslashes differently
than other versions have in the past. Instead of stripping a backslash
and setting a high bit (see below), it leaves backslashes in place:</P
><p class="para"><blockquote class="screen"><pre class="screen">blue\;jay      <i class="lineannotation">becomes   <img src="../chars/rarr.gif" alt="-&gt;"></I
>   blue\;jay</PRE
></BLOCKQUOTE
></P
><p class="para">This
causes the backslash to mask the special meaning of characters,
because <em class="emphasis">sendmail</EM
> always recognizes the backslash in that role.</P
><p class="para">The only time that V8 <em class="emphasis">sendmail</EM
> strips backslashes is
during local delivery, and then only if they are not inside
full quotation marks. Mail to <em class="emphasis">\user</EM
> is delivered to
<em class="emphasis">user</EM
> on the local machine (bypassing further aliasing) with
the backslash stripped.
But for mail to <em class="emphasis">\user@otherhost</EM
> the backslash is 
preserved in both the envelope and the header.</P
><p class="para">Prior to V8 <em class="emphasis">sendmail</EM
>,
for addresses and rules (which are normalized as addresses),
the backslash was removed by <em class="emphasis">sendmail</EM
> and the high bit
of the character following the backslash was set (turned on).</P
><p class="para"><blockquote class="screen"><pre class="screen">blue;jay
    <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>
    <i class="lineannotation">high-bit turned on</I
></PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-26312"></A
>This practice was abandoned because of the need to support
international characters (such as &ouml;, <img src="../chars/ddelta.gif" alt="[Delta]">, and <img src="../chars/phi.gif" alt="[phi]">). Most international character
sets include many characters that have the high bit set.
Escaping a character by setting its high bit is a practice
that no longer works in our modern, international world.</P
></DIV
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch27_06.htm" title="27.6 Pitfalls"><img src="../gifs/txtpreva.gif" alt="Previous: 27.6 Pitfalls" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="sendmail"><img src="../gifs/txthome.gif" alt="sendmail" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch28_02.htm#SML2-CH-28-SECT-2-3" title="28.2 Tokenizing Rules"><img src="../gifs/txtnexta.gif" alt="Next: 28.2 Tokenizing Rules" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">27.6 Pitfalls</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">28.2 Tokenizing Rules</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
