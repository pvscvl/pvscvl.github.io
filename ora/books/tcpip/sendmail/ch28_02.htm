<html><head>
<title>[Chapter 28] 28.2 Tokenizing Rules</TITLE>
<meta name="DC.title" content="sendmail"><meta name="DC.creator" content="Bryan Costales &amp; Eric Allman"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T19:50:07Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-222-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch28_01.htm" title="28. Rules"><link rel="prev" href="ch28_01.htm" title="28.1 Overview"><link rel="next" href="ch28_03.htm" title="28.3 The Workspace"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="sendmail" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="sendmail"><area shape="RECT" coords="467,0,514,18" href="../search/ssrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch28_01.htm" title="28.1 Overview"><img src="../gifs/txtpreva.gif" alt="Previous: 28.1 Overview" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 28<br>Rules</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch28_03.htm" title="28.3 The Workspace"><img src="../gifs/txtnexta.gif" alt="Next: 28.3 The Workspace" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="SML2-CH-28-SECT-2">28.2 Tokenizing Rules</A
></H2
><p class="para"><a class="indexterm" name="SML2-CH-28-IX-TOKENIZATION"></A
>The <em class="emphasis">sendmail</EM
> program views the text that makes up rules and 
addresses as being composed of individual tokens.
Rules are <em class="emphasis">tokenized</EM
>&nbsp;- divided up into individual parts&nbsp;- while
the configuration file is being read and while they are being
normalized. Addresses are tokenized at another time (as we'll show
later), but the process is the same for both.</P
><p class="para">The text <em class="emphasis">our.domain</EM
>, for example,
is composed of three tokens: <em class="emphasis">our</EM
>, a dot, and <em class="emphasis">domain</EM
>.
These 10 characters are divided into tokens
by the list of separation characters defined by the 
<code class="literal">OperatorChars</CODE
> (pre-V8.7 <code class="literal">$o</CODE
>) option (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.45, OperatorChars or $o</A
>):</P
><p class="para"><blockquote class="screen"><pre class="screen">Do.:%@!^=/[]                         <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> prior to V8.7</I
>
O OperatorChars=.:%@!^/[]            <i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> V8.7 and above</I
></PRE
></BLOCKQUOTE
></P
><p class="para">&#13;When any of these separation characters are recognized in text,
they are considered individual tokens. Any leftover text is then
combined into the remaining tokens.</P
><p class="para"><blockquote class="screen"><pre class="screen">xxx@yyy;zzz    <i class="lineannotation">becomes <img src="../chars/rarr.gif" alt="-&gt;">  </I
>xxx  @   yyy;zzz</PRE
></BLOCKQUOTE
></P
><p class="para"><code class="literal">@</CODE
> is defined to be a token, but <code class="literal">;</CODE
> is not.
Therefore, the text is divided into three tokens.
However, in addition to the characters in the 
<code class="literal">OperatorChars</CODE
> (pre-V8.7 <code class="literal">$o</CODE
>) option, <em class="emphasis">sendmail</EM
>
defines 10 tokenizing characters internally (in <em class="emphasis">parseaddr.c</EM
>):</P
><p class="para"><blockquote class="screen"><pre class="screen">()&lt;&gt;,;\&quot;\r\n</PRE
></BLOCKQUOTE
></P
><p class="para">These two lists are combined into one master list that is used for
all tokenizing. The above example, when divided by using this master
list, becomes five tokens instead of just three:</P
><p class="para"><blockquote class="screen"><pre class="screen">xxx@yyy;zzz    <i class="lineannotation">becomes <img src="../chars/rarr.gif" alt="-&gt;">  </I
>xxx  @   yyy  ;  zzz</PRE
></BLOCKQUOTE
></P
><p class="para">In rules, quotation marks can be used to override the
meaning of tokenizing characters defined in the master list. For example,</P
><p class="para"><blockquote class="screen"><pre class="screen">&quot;xxx@yyy&quot;;zzz    <i class="lineannotation">becomes <img src="../chars/rarr.gif" alt="-&gt;">  </I
>&quot;xxx@yyy&quot;  ;  zzz</PRE
></BLOCKQUOTE
></P
><p class="para">Here, three tokens are produced, because the <code class="literal">@</CODE
> appears
inside quotation marks. Note that the quotation
marks are retained.</P
><p class="para">Because the configuration file is read sequentially from start to finish,
the <code class="literal">OperatorChars</CODE
> (pre-V8.7 <code class="literal">$o</CODE
>) option
should be defined before any rules are declared.
But note that beginning with V8.7 <em class="emphasis">sendmail</EM
>, omission of this option cause the
separation characters to default to</P
><p class="para"><blockquote class="screen"><pre class="screen">. : % @ ! ^ / [ ]</PRE
></BLOCKQUOTE
></P
><p class="para"></P
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-28-SECT-2-1">28.2.1 $ Operators Are Tokens</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-26365"></A
>As we progress into the details of rules, you will see that certain
characters become operators when prefixed with a <code class="literal">$</CODE
> character.
Operators cause <em class="emphasis">sendmail</EM
> to perform actions, such as looking
for a match (<code class="literal">$*</CODE
> is a wildcard operator) or replacing tokens with others by position
(<code class="literal">$1</CODE
> is a replacement operator).</P
><p class="para">For tokenizing purposes, operators
always divide one token from another, just as the characters in the
master list did. For example</P
><p class="para"><blockquote class="screen"><pre class="screen">xxx$*zzz    <i class="lineannotation">becomes <img src="../chars/rarr.gif" alt="-&gt;">  </I
>xxx  $*  zzz</PRE
></BLOCKQUOTE
></P
><p class="para"></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-28-SECT-2-2">28.2.2 The Space Character Is Special</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-26379"></A
><a class="indexterm" name="AUTOID-26382"></A
>The space character is special for two reasons.
First, although the space character is not in the master list,
it <em class="emphasis">always</EM
> separates one token from another:</P
><p class="para"><blockquote class="screen"><pre class="screen">xxx zzz    <i class="lineannotation">becomes <img src="../chars/rarr.gif" alt="-&gt;">  </I
>xxx  zzz</PRE
></BLOCKQUOTE
></P
><p class="para">Second, although the space character separates tokens, it is not
itself a token. That is, in the above example the seven characters
on the left (the seventh is the space in the middle) become two
tokens of three letters each, not three tokens.
Therefore the space character can be used inside the <span class="acronym">LHS</SPAN
> or <span class="acronym">RHS</SPAN
> of rules
for improved clarity but does not 
itself become a token or change
the meaning of the rule.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-28-SECT-2-3">28.2.3 Pasting Addresses Back Together</A
></H3
><p class="para">After an address has passed through all the rules (and has been modified
by rewriting), the tokens that form it are pasted back together
to form a single string. The pasting process is very straightforward
in that it mirrors the tokenizing process:</P
><p class="para"><blockquote class="screen"><pre class="screen">xxx  @  yyy   <i class="lineannotation">becomes <img src="../chars/rarr.gif" alt="-&gt;"></I
>   xxx@yyy</PRE
></BLOCKQUOTE
></P
><p class="para">The only exception to this straightforward pasting process occurs when
two adjoining tokens are both simple text. Simple text is anything
other than the separation characters (defined by the
<code class="literal">OperatorChars</CODE
> (pre-V8.7, <code class="literal">$o</CODE
>) option, see <a class="xref" href="ch34_08.htm" title="">Section 34.8.45</A
>,
and internally by <em class="emphasis">sendmail</EM
>) or the operators (characters prefixed
by a <code class="literal">$</CODE
> character). The <code class="literal">xxx</CODE
> and <code class="literal">yyy</CODE
> above are
both simple text.</P
><p class="para"><a class="indexterm" name="AUTOID-26407"></A
>When two tokens of simple text are pasted together, the character
defined by the
<code class="literal">BlankSub</CODE
> (<code class="literal">B</CODE
>) option (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.5, BlankSub (B)</A
>) is inserted between them.
[4]
Usually, that
option is defined as a dot, so two tokens of simple text would
have a dot inserted between them when they are joined:</P
><blockquote class="footnote"><p class="para">[4] In the old days (RFC733), usernames to the left of the <code class="literal">@</CODE
> could
contain spaces. But UNIX also uses spaces as command-line argument
separators, so option <code class="literal">B</CODE
> was introduced.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">xxx  yyy   <i class="lineannotation">becomes <img src="../chars/rarr.gif" alt="-&gt;"></I
>   xxx.yyy</PRE
></BLOCKQUOTE
></P
><p class="para">Note that the improper use of a space character in the <span class="acronym">LHS</SPAN
> or <span class="acronym">RHS</SPAN
> 
of rules can lead to addresses that have a dot (or other character)
inserted where one was not intended.<a class="indexterm" name="AUTOID-26422"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch28_01.htm" title="28.1 Overview"><img src="../gifs/txtpreva.gif" alt="Previous: 28.1 Overview" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="sendmail"><img src="../gifs/txthome.gif" alt="sendmail" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch28_03.htm" title="28.3 The Workspace"><img src="../gifs/txtnexta.gif" alt="Next: 28.3 The Workspace" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">28.1 Overview</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">28.3 The Workspace</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
