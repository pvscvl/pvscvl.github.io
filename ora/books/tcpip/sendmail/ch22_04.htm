<html><head>
<title>[Chapter 22] 22.4 The Configuration File</TITLE>
<meta name="DC.title" content="sendmail"><meta name="DC.creator" content="Bryan Costales &amp; Eric Allman"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T19:29:13Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-222-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch22_01.htm" title="22. Security"><link rel="prev" href="ch22_03.htm#SML2-CH-22-SECT-3-1" title="22.3 SMTP Probes"><link rel="next" href="ch22_05.htm#SML2-CH-22-SECT-5-1" title="22.5 Permissions"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="sendmail" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="sendmail"><area shape="RECT" coords="467,0,514,18" href="../search/ssrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch22_03.htm#SML2-CH-22-SECT-3-1" title="22.3 SMTP Probes"><img src="../gifs/txtpreva.gif" alt="Previous: 22.3 SMTP Probes" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 22<br>Security</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch22_05.htm#SML2-CH-22-SECT-5-1" title="22.5 Permissions"><img src="../gifs/txtnexta.gif" alt="Next: 22.5 Permissions" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="SML2-CH-22-SECT-4">22.4 The Configuration File</A
></H2
><p class="para"><a class="indexterm" name="SML2-CH-22-IX-SECURITY-SENDMAIL-CF-AND"></A
><a class="indexterm" name="SML2-CH-22-IX-SENDMAIL-CF-CONFIGURATION-FILE"></A
>There are a number of security holes that can be opened up by commands
given carelessly in the configuration file. Such holes can be
serious because <em class="emphasis">sendmail</EM
> starts to run as <em class="emphasis">root</EM
>,
provided that it has not been given an unsafe command-line switch
(such as <code class="literal">-C</CODE
>; see <a class="xref" href="ch36_07.htm" title="">Section 36.7.15, -C</A
>) or an unsafe option
(see <a class="xref" href="ch34_01.htm" title="Options that Are Safe">Section 34.1.4, "Options that Are Safe"</A
>).
It continues as <em class="emphasis">root</EM
> until it delivers mail, whereupon
it changes its identity to that of an ordinary user. When <em class="emphasis">sendmail</EM
>
reads its configuration file, it generally does so 
while it is still <em class="emphasis">root</EM
>.  Consequently, as we will illustrate,
it may be able to read and overwrite any file.&#13;</P
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-22-SECT-4-1">22.4.1 Accept/Reject Connections via libwrap.a</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-18447"></A
><a class="indexterm" name="AUTOID-18449"></A
><a class="indexterm" name="AUTOID-18452"></A
>The TCP wrapper package is written and maintained by
Wietse Venema at the Department of Mathematics and Computing Science,
The Netherlands. It is available via anonymous FTP from:</P
><p class="para"><blockquote class="literallayout"><p class="literallayout"><a class="systemitem.url" href="../../../WebStripper/protected.html#link=ftp://ftp.cert.org/pub/tools/tcp_wrappers/">ftp://ftp.cert.org/pub/tools/tcp_wrappers/</A
><br><a class="systemitem.url" href="../../../WebStripper/protected.html#link=ftp://ftp.win.tue.nl/pub/security/">ftp://ftp.win.tue.nl/pub/security/</A
></P
></BLOCKQUOTE
></P
><p class="para">This package is used to screen incoming network connections and
to accept or reject them on the basis of hostname, domain, or IP
number. It is a powerful adjunct to security, and if you have

not already done so, you should install it at your site.</P
><p class="para">Prior to V8.8 the only way <em class="emphasis">sendmail</EM
> could take advantage
of this package was to be run from <em class="emphasis">inetd</EM
>(8) (see <a class="xref" href="ch36_07.htm" title="">Section 36.7.11, -bs</A
>).
Beginning with V8.8 <em class="emphasis">sendmail</EM
>, support for this package
is built in.</P
><p class="para">If TCPWRAPPERS is defined in compiling (see <a class="xref" href="ch18_08.htm" title="">Section 18.8.49, TCPWRAPPERS</A
>),
<em class="emphasis">sendmail</EM
> will automatically use that package to verify and
screen all incoming SMTP connections. If, as CERT
recommends, you have ALL:ALL in your <em class="emphasis">hosts.deny</EM
> file,
you will need to add this line to your <em class="emphasis">hosts.allow</EM
> file:</P
><p class="para"><blockquote class="screen"><pre class="screen">sendmail:ALL</PRE
></BLOCKQUOTE
></P
><p class="para">Then, to selectively reject connection, you might add a line like
this to your <em class="emphasis">hosts.deny</EM
> file:</P
><p class="para"><blockquote class="screen"><pre class="screen">sendmail:spam.host.domain</PRE
></BLOCKQUOTE
></P
><p class="para">This causes the TCP wrapper package to tell <em class="emphasis">sendmail</EM
>
to reject all SMTP connections from the spamming host
<em class="emphasis">spam.host.domain</EM
>.</P
><p class="para">When mail comes in from <em class="emphasis">spam.host.domain</EM
>, <em class="emphasis">sendmail</EM
>
will issue this SMTP message as a reply to all
SMTP commands from that host:</P
><p class="para"><blockquote class="screen"><pre class="screen">550 Access denied</PRE
></BLOCKQUOTE
></P
><p class="para">The only exception is the QUIT command (and beginning with
V8.8.5, the HELO, EHLO, and NOOP commands), which
allows the spamming host to disconnect.</P
><p class="para">Use of the TCP wrapper package imposes additional network
traffic that may not be desirable. Both it and <em class="emphasis">sendmail</EM
>, for
instance, may look up the same host with DNS. The wrapper
software also sends <em class="emphasis">identd</EM
>(8) queries that a duplicate
those used by <em class="emphasis">sendmail</EM
>. Finally, note that two files
need to be opened and read for each connection. We recommend that
you exclude support for this package (especially at high-volume
sites) until you actually need it. At low- to medium-volume
sites you may wish to include support for this package in <em class="emphasis">sendmail</EM
> but
then to not implement that support (in <em class="emphasis">hosts.allow</EM
> and
<em class="emphasis">hosts.deny</EM
>) until the need arises.&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-22-SECT-4-2">22.4.2 The F Command&nbsp;- File Form</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-18494"></A
><a class="indexterm" name="AUTOID-18497"></A
>The file form of the <code class="literal">F</CODE
> configuration command (see <a class="xref" href="ch32_01.htm" title="The F Class Command">Section 32.1.2, "The F Class Command"</A
>)
can be used to read
sensitive information. That command looks like this in the configuration
file:</P
><p class="para"><blockquote class="screen"><pre class="screen">F<code class="replaceable"><i>X/path pat</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">This form is used to read class macro entries from files.
It can cause problems through a misunderstanding of the
<em class="emphasis">scanf</EM
>(3) pattern <code class="replaceable"><i>pat</I
></CODE
>.
The <code class="replaceable"><i>/path</I
></CODE
> is the name of the file,
and the optional <code class="replaceable"><i>pat</I
></CODE
> is a pattern to be used by <em class="emphasis">scanf</EM
>(3)
(see <a class="xref" href="ch32_01.htm" title="scanf(3) variations">Section 32.1.2.1, "scanf(3) variations"</A
>).</P
><p class="para">To illustrate the risk of the <code class="replaceable"><i>pat</I
></CODE
>, consider
the following configuration file entry:</P
><p class="para"><blockquote class="screen"><pre class="screen">Fw/etc/myhostnames %[^#]</PRE
></BLOCKQUOTE
></P
><p class="para">Normally, the <code class="literal">F</CODE
> command reads only the first whitespace-delimited 
word from each line of the file. But if the optional pattern
<code class="replaceable"><i>pat</I
></CODE
> is specified, the <code class="literal">F</CODE
> command instead reads
one or more words from each line based on the nature of the pattern.
The pattern is used by <em class="emphasis">scanf</EM
>(3) to extract words, and the
specific pattern used here <code class="literal">[^#]</CODE
> causes <em class="emphasis">scanf</EM
>(3) to
read everything
up to the first comment character (the <code class="literal">#</CODE
>) from each line.
This <code class="replaceable"><i>pat</I
></CODE
> allows multiple hostnames to be conveniently
listed on each line of the file.
Now assume that a new administrator, 
who is not very familiar with <em class="emphasis">sendmail</EM
>,
decides to add an <code class="literal">F</CODE
> command to gather a list of UUCP hosts from
the <em class="emphasis">/etc/uucp/Systems</EM
> file. Being a novice, the new administrator
copies the existing entry for use with the new file:</P
><p class="para"><blockquote class="screen"><pre class="screen">FU/etc/uucp/Systems %[^#]</PRE
></BLOCKQUOTE
></P
><p class="para">This is the same pattern that was correctly used for <em class="emphasis">/etc/myhostnames</EM
>.
Unfortunately, the <em class="emphasis">Systems</EM
> file contains more than just host
entries on each line:</P
><p class="para"><blockquote class="screen"><pre class="screen">linda Any ACU 2400 5551212  &quot;&quot; \d\n in:-\r-in: Uourhost word: MublyPeg
hoby Any ACU 2400 5551213  &quot;&quot; \d\n in:-\r-in: Uourhost word: FuMzz3.x&#13;</PRE
></BLOCKQUOTE
></P
><p class="para">A part of each line (the last item in each) contains nonencrypted passwords.
An unscrupulous user, noticing the mistaken <code class="literal">[^#]</CODE
> in the
configuration file, could run <em class="emphasis">sendmail</EM
> with a <code class="literal">-d36.5</CODE
>
debugging switch and watch each password being processed. For example,</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>/usr/lib/sendmail -d36.5 -bt &lt; /dev/null</B
></CODE
>
<i class="lineannotation"><img src="../chars/larr.gif" alt="&lt;-"> ... some output deleted</I
>
STAB: hoby 1 entered
STAB: Any 1 entered
STAB: ACU 1 entered
STAB: 2400 1 entered
STAB: 5551213 1 entered
STAB: &quot;&quot; 1 type 1 val 0 0 200000 0
STAB: \d\n 1 entered
STAB: in:-\r-in: 1 entered
STAB: Uourhost 1 entered
STAB: word: 1 entered
<code class="userinput"><b>STAB: FuMzz3.x 1 entered                         </B
></CODE
><em class="emphasis"><img src="../chars/larr.gif" alt="&lt;-"> note</EM
>
STAB: local 3 type 3 val 34d00 0 0 0
STAB: prog 3 type 3 val 34d80 0 0 0</PRE
></BLOCKQUOTE
></P
><p class="para">Note the third line from the bottom, where the password for the UUCP
login into the host <code class="literal">hoby</CODE
> is printed.
This example illustrates two rules about handling the configuration file:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Avoid using the <code class="literal">F</CODE
> command to read a file that is not already
publicly readable. To do so can reveal sensitive information.
Even if the <em class="emphasis">scanf</EM
>(3) option is correct, a core dump
[10]
can be examined for sensitive information from otherwise secured files.</P
><blockquote class="footnote"><p class="para">[10] Most versions of UNIX disallow core dumps of <em class="emphasis">suid</EM
> <em class="emphasis">root</EM
> programs.</P
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Avoid adding a new command to the configuration file by blindly copying
and modifying another. Try to learn the rules governing the command
first.</P
></LI
></UL
><p class="para"></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-22-SECT-4-3">22.4.3 The F Command&nbsp;- Program Form</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-18562"></A
><a class="indexterm" name="AUTOID-18564"></A
><a class="indexterm" name="AUTOID-18567"></A
>Another form of the <code class="literal">F</CODE
> (File) configuration command is the program
form, which looks like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">F<code class="replaceable"><i>X|/path</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Here, the <code class="literal">|</CODE
> prefix to the <code class="replaceable"><i>/path</I
></CODE
> tells <em class="emphasis">sendmail</EM
>
that <code class="replaceable"><i>/path</I
></CODE
> is the name of a program to run. The output produced
by the program is appended to the class, here <code class="replaceable"><i>X</I
></CODE
>.</P
><p class="para">To illustrate another potential security risk,
consider a configuration file that is group writable, perhaps
by a few administrators who share the job of <em class="emphasis">postmaster</EM
>. 
To break into <em class="emphasis">root</EM
>, the attacker only needs to assume the identity
of one of those users and, under that identity, edit the configuration file.
Consider the following bogus entry added by an attacker to that configuration file:</P
><p class="para"><blockquote class="screen"><pre class="screen">FX|/tmp/.sh</PRE
></BLOCKQUOTE
></P
><p class="para">Consider further a change to the 
<code class="literal">DefaultUser</CODE
> option (see <a class="xref" href="ch34_08.htm" title="">Section 34.8.15, DefaultUser (g)(u)</A
>) that causes
the default <em class="emphasis">uid</EM
> and <em class="emphasis">gid</EM
> to become those of root:</P
><p class="para"><blockquote class="screen"><pre class="screen">O DefaultUser=0:0</PRE
></BLOCKQUOTE
></P
><p class="para">With these changes in place, the program (actually a shell script) called <em class="emphasis">/tmp/.sh</EM
>
is run by <em class="emphasis">sendmail</EM
> to fill the class <code class="literal">X</CODE
> with new values.
All this seems harmless enough, but suppose <em class="emphasis">/tmp/.sh</EM
> does the unexpected:</P
><p class="para"><blockquote class="screen"><pre class="screen">#!/bin/sh
cp /bin/sh /tmp/.shell
chmod u+s /tmp/.shell</PRE
></BLOCKQUOTE
></P
><p class="para">Here, the Bourne shell is copied to <em class="emphasis">/tmp/.shell</EM
>, and the <em class="emphasis">suid</EM
>
<em class="emphasis">root</EM
> bit is set. Now, any user at all can run <em class="emphasis">sendmail</EM
> and
become <em class="emphasis">root</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>ls -l /tmp/.shell</B
></CODE
>
/tmp/.shell not found
% <code class="userinput"><b> /usr/lib/sendmail -bt &lt; /dev/null</B
></CODE
>
% <code class="userinput"><b>ls -l /tmp/.shell</B
></CODE
>
-rwsr-xr-x  1 root       122880 Sep 24 13:20 /tmp/.shell</PRE
></BLOCKQUOTE
></P
><p class="para">The program form of the <code class="literal">F</CODE
> configuration command is clearly
dangerous.</P
><ul class="itemizedlist"><li class="listitem"><p class="para">The <em class="emphasis">sendmail</EM
> configuration file must <em class="emphasis">never</EM
> be writable by anyone
other than <em class="emphasis">root</EM
>. It should also live in a directory,
every path component of which is owned by and writable only by <em class="emphasis">root</EM
>.
(We'll discuss this latter point in greater detail soon.)
If the configuration file is created with the <em class="emphasis">m4</EM
> technique, then
care must be taken to ensure that only <em class="emphasis">root</EM
> can install it.</P
></LI
></UL
><p class="para"></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-22-SECT-4-4">22.4.4 The P= of Delivery Agents</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-18624"></A
><a class="indexterm" name="AUTOID-18626"></A
>Just as the program form of the <code class="literal">F</CODE
> command can pose a security risk
if the configuration file is poorly protected, so can the <code class="literal">M</CODE
>
delivery agent definition. Specifically, the <code class="literal">P=</CODE
> equate
for a delivery agent (see <a class="xref" href="ch30_04.htm" title="">Section 30.4.9, P=</A
>) can be modified to run a bogus program
that gives away <em class="emphasis">root</EM
> privilege. Consider the following
modification to the <code class="literal">local</CODE
> delivery agent:</P
><p class="para"><blockquote class="screen"><pre class="screen">Mlocal, P=/bin/mail, F=rlsDFMmnP, S=10, R=20, A=mail -d $u
           <i class="lineannotation"><img src="../chars/darr.gif" alt="-v"></I
>
        <i class="lineannotation">becomes</I
>
           <i class="lineannotation"><img src="../chars/darr.gif" alt="-v"></I
>
Mlocal, P=/<code class="userinput"><b>tmp</B
></CODE
>/mail, <code class="userinput"><b>U=0</B
></CODE
>, F=<code class="userinput"><b>S</B
></CODE
>rlsDFMmnP, S=10, R=20, A=mail -d $u
                     <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>      <i class="lineannotation"><img src="../chars/uarr.gif" alt="-^"></I
>
                     <i class="lineannotation">note</I
>   <i class="lineannotation">note</I
></PRE
></BLOCKQUOTE
></P
><p class="para">Here, local mail should be delivered with the <em class="emphasis">/bin/mail</EM
>
program, but instead it is delivered with a bogus frontend,
<em class="emphasis">/tmp/mail</EM
>. If <em class="emphasis">/tmp/mail</EM
> is
carefully crafted, users will never notice
that the mail has been diverted.
The <code class="literal">S</CODE
> flag in the <code class="literal">F=</CODE
> equate (see <a class="xref" href="ch30_08.htm" title="">Section 30.8.40, F=S</A
>)
causes <em class="emphasis">sendmail</EM
> to
retain its default identity when executing the bogus <em class="emphasis">/tmp/mail</EM
>.
The <code class="literal">U=0</CODE
> equate (see <a class="xref" href="ch30_04.htm" title="">Section 30.4.13, U=</A
>) causes that default to become
the identity of <em class="emphasis">root</EM
>.</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Delivery agent <code class="literal">P=</CODE
> equates must be protected by protecting
the configuration file. As an additional precaution, <em class="emphasis">never</EM
>
use relative pathnames in the <code class="literal">P=</CODE
> equate.</P
></LI
><li class="listitem"><p class="para">The <code class="literal">F=S</CODE
> and <code class="literal">U=0</CODE
> are especially dangerous.
They should never appear in your configuration file unless
you have deliberately placed them there and are 100
percent certain of their effect.</P
></LI
></UL
><p class="para"></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-22-SECT-4-5">22.4.5 The S Option and the Statistics File</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-18673"></A
><a class="indexterm" name="AUTOID-18675"></A
><a class="indexterm" name="AUTOID-18678"></A
>When <em class="emphasis">sendmail</EM
> attempts to record its delivery agent statistics (see <a class="xref" href="ch26_02.htm#SML2-CH-26-SECT-2-2" title="The sendmail.st File">Section 26.2.1, "The sendmail.st File"</A
>),
it checks for the existence and write permissions
of the file specified by the <code class="literal">StatusFile</CODE
> (<code class="literal">S</CODE
>) option
(see <a class="xref" href="ch34_08.htm" title="">Section 34.8.66, StatusFile (S)</A
>).
The <em class="emphasis">sendmail</EM
>
program does not care where that file lives or what permissions it
has&nbsp;- only that it exists.</P
><p class="para">A security problem can arise if one is tempted to locate the statistics
file in a spool or temporary area. Consider the following location,
for example:</P
><p class="para"><blockquote class="screen"><pre class="screen">OS/usr/tmp/sendmail.st</PRE
></BLOCKQUOTE
></P
><p class="para">Here the administrator sets the <code class="literal">StatusFile</CODE
> (<code class="literal">S</CODE
>) option to locate the statistics
file in the <em class="emphasis">/usr/tmp</EM
> directory. 
The intention is that the file can be easily created by anyone who wishes
to gather statistics for a while, then removed.
Unfortunately, the <em class="emphasis">/usr/tmp</EM
>  directory is usually world-writable.</P
><p class="para">Thus any unhappy or malicious user can bring the system to its knees:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>cd /usr/tmp</B
></CODE
>
% <code class="userinput"><b>ln -s /vmunix sendmail.st</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Here, <em class="emphasis">sendmail</EM
> clobbers
the disk copy of the kernel. Nothing bad may happen at first,
[11]
but the machine will require manual intervention to boot in the future.
[12]
Clearly, precautions must be taken. For example, any file that <em class="emphasis">sendmail</EM
> writes to (such as the <code class="literal">StatusFile</CODE
> (<code class="literal">S</CODE
>) option
statistics file or the <em class="emphasis">aliases</EM
> database files) must be writable
only by <em class="emphasis">root</EM
> and live in a directory, every path component of which
is writable only by <em class="emphasis">root</EM
>.<a class="indexterm" name="AUTOID-18714"></A
><a class="indexterm" name="AUTOID-18715"></A
>&#13;</P
><blockquote class="footnote"><p class="para">[11] Programs that need kernel symbols, such as <em class="emphasis">ps</EM
>(1), will cease to work
or will produce garbage output.</P
><p class="para">[12] The savvy administrator can still boot off the network or from
a CD-ROM and quickly install a new kernel.</P
></BLOCKQUOTE
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch22_03.htm#SML2-CH-22-SECT-3-1" title="22.3 SMTP Probes"><img src="../gifs/txtpreva.gif" alt="Previous: 22.3 SMTP Probes" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="sendmail"><img src="../gifs/txthome.gif" alt="sendmail" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch22_05.htm#SML2-CH-22-SECT-5-1" title="22.5 Permissions"><img src="../gifs/txtnexta.gif" alt="Next: 22.5 Permissions" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">22.3 SMTP Probes</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">22.5 Permissions</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
