<html><head>
<title>[Chapter 29] 29.4 Rule Set 3</TITLE>
<meta name="DC.title" content="sendmail"><meta name="DC.creator" content="Bryan Costales &amp; Eric Allman"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T19:51:22Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-222-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch29_01.htm" title="29. Rule Sets"><link rel="prev" href="ch29_03.htm#SML2-CH-29-SECT-3-1" title="29.3 The Sequence of Rule Sets"><link rel="next" href="ch29_05.htm#SML2-CH-29-SECT-5-1" title="29.5 Rule Set 4"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="sendmail" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="sendmail"><area shape="RECT" coords="467,0,514,18" href="../search/ssrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch29_03.htm#SML2-CH-29-SECT-3-1" title="29.3 The Sequence of Rule Sets"><img src="../gifs/txtpreva.gif" alt="Previous: 29.3 The Sequence of Rule Sets" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 29<br>Rule Sets</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch29_05.htm#SML2-CH-29-SECT-5-1" title="29.5 Rule Set 4"><img src="../gifs/txtnexta.gif" alt="Next: 29.5 Rule Set 4" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="SML2-CH-29-SECT-4">29.4 Rule Set 3</A
></H2
><p class="para"><a class="indexterm" name="SML2-CH-29-IX-RULE-SETS-RULE-SET-3"></A
>Rule set 3 is the first to process every address.
It puts each into a form that simplifies the tasks of other rule sets.
The most common method
is to have rule set 3 <em class="emphasis">focus</EM
> an address (place angle brackets around
the host part). Then later rules don't have
to search for the host part, because it is already highlighted.
For example, consider trying 
to spot the recipient host in this mess:</P
><p class="para"><blockquote class="screen"><pre class="screen">uuhost!user%host1%host2</PRE
></BLOCKQUOTE
></P
><p class="para">Here, <code class="literal">user</CODE
> is eventually intended to receive the mail
message on the host <code class="literal">uuhost</CODE
>. But where should <em class="emphasis">sendmail</EM
>
send the message first? As it happens,
<em class="emphasis">sendmail</EM
> selects <code class="literal">uuhost</CODE
>. Focusing
on this address therefore results in the following:</P
><p class="para"><blockquote class="screen"><pre class="screen">user%host1%host2&lt;@uuhost.uucp&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">Note that <code class="literal">uuhost</CODE
> was moved to the end, the <code class="literal">!</CODE
> was changed
to an <code class="literal">@</CODE
>, and <code class="literal">.uucp</CODE
> was appended.
The <code class="literal">@</CODE
> is there
so that all focused parts uniformly contain an <code class="literal">@</CODE
>
just before the targeted host.
Later, when we take up postprocessing,
we'll show how rule set 4 moves the <code class="literal">uuhost</CODE
> back to the beginning
and replaces the <code class="literal">!</CODE
>.&#13;</P
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-29-SECT-4-1">29.4.1 A Special Case: From:&lt;&gt;</A
></H3
><p class="para">The first rule in a typical rule set 3 handles addresses that are
composed of empty angle brackets. These represent the special
case of an empty or nonexistent address. Empty addresses should
be turned into the address of the pseudo-user that bounces mail,
<em class="emphasis">Mailer-Daemon</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen"># handle &quot;from:&lt;&gt;&quot; special case
R$*&lt;&gt;$*      $@&lt;@&gt;       empty becomes special</PRE
></BLOCKQUOTE
></P
><p class="para">Here, empty angle brackets, no matter what surrounds them (<code class="literal">$*</CODE
>),
are rewritten to be a lone <code class="literal">@</CODE
>. Other rule sets later turn this
special token into <code class="literal">$n</CODE
> (which contains <em class="emphasis">Mailer-Daemon</EM
>
as its value).&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-29-SECT-4-2">29.4.2 Basic Textual Canonicalization</A
></H3
><p class="para">Addresses can be legally expressed in only four formats:
[2]</P
><blockquote class="footnote"><p class="para">[2] Actually, we are fudging for simplicity. Addresses can appear in 
various permutations of those shown
and we completely ignore the <code class="literal">list:members;</CODE
>
form of address.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">address
address (full name)
&lt;address&gt;
full name &lt;address&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">When <em class="emphasis">sendmail</EM
> preprocesses an address that is in the second
format, it removes (and saves for later use)
the full name from within the parentheses. The last
two formats, however, contain additional characters and information
that are not discarded during preprocessing. As a consequence, rule
set 3 must take on the job of discarding the unwanted information:</P
><p class="para"><blockquote class="screen"><pre class="screen"># basic textual canonicalization
R$*&lt;$*&lt;$*&lt;$*&gt;$*&gt;$*&gt;$*   $4        3-level &lt;&gt; nesting
R$*&lt;$*&lt;$*&gt;$*&gt;$*         $3        2-level &lt;&gt; nesting
R$*&lt;$*&gt;$*               $2        basic RFC821/822 parsing</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we discard everything outside of and including the innermost
pair of angle brackets. Three rules are required to do this because of
the minimal-matching nature of the LHS operators
(see <a class="xref" href="ch08_07.htm" title="Minimal Matching">Section 8.7.2, "Minimal Matching"</A
>). Consider
trying to de-nest a three-level workspace using only a rule
like the third:</P
><p class="para"><blockquote class="screen"><pre class="screen"><i class="lineannotation">the workspace <img src="../chars/rarr.gif" alt="-&gt;"></I
>  A &lt; B &lt; C &lt; D &gt; C &gt; B &gt; A
$*  <i class="lineannotation">matches <img src="../chars/rarr.gif" alt="-&gt;"> </I
>A
&lt;   <i class="lineannotation">matches <img src="../chars/rarr.gif" alt="-&gt;"> </I
>&lt;
$+  <i class="lineannotation">matches <img src="../chars/rarr.gif" alt="-&gt;"> </I
>B &lt; C &lt; D
&gt;   <i class="lineannotation">matches <img src="../chars/rarr.gif" alt="-&gt;"> </I
>&gt;
$*  <i class="lineannotation">matches <img src="../chars/rarr.gif" alt="-&gt;"> </I
>C &gt; B &gt; A</PRE
></BLOCKQUOTE
></P
><p class="para">Clearly, the result <code class="literal">B&lt;C&lt;D</CODE
> is not the value between the innermost
pair of angle brackets and will result in an address that produces
the error message:</P
><p class="para"><blockquote class="screen"><pre class="screen">Unbalanced '&lt;'</PRE
></BLOCKQUOTE
></P
><p class="para">John Halleck designed a clever alternative to the above traditional technique
that is now included with V8 <em class="emphasis">sendmail</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$*                     $: &lt; $1 &gt;                       housekeeping &lt;&gt;
R$+ &lt; $* &gt;                 &lt; $2 &gt;                       strip excess on left
R&lt; $* &gt; $+                 &lt; $1 &gt;                       strip excess on right
R&lt;&gt;                     $@ &lt; @ &gt;                        MAIL FROM:&lt;&gt; case
R&lt; $+ &gt;                 $: $1                           remove housekeeping &lt;&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">Here, angle bracket pairs are stripped first from the left of an address,
then from the right, and finally whatever is left must be the address.&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-29-SECT-4-3">29.4.3 Handling Routing Addresses</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-27953"></A
><a class="indexterm" name="AUTOID-27956"></A
>The <em class="emphasis">sendmail</EM
> program must be able to handle addresses
that are in <em class="emphasis">route address</EM
> syntax.
Such addresses are in the form
<em class="emphasis">@A,@B:user@C</EM
> (which means that mail should be sent first to <em class="emphasis">A</EM
>, then from <em class="emphasis">A</EM
> to <em class="emphasis">B</EM
>, and finally
from <em class="emphasis">B</EM
> to <em class="emphasis">C</EM
>).
[3]
The commas are converted to colons for
easier design of subsequent rules. They must be converted back to
commas by rule set 4.
Rule set 3 uses a simple rule to convert all commas to
colons:</P
><blockquote class="footnote"><p class="para">[3] Also see the <code class="literal">DontPruneRoutes</CODE
> option in <a class="xref" href="ch34_08.htm" title="">Section 34.8.20, DontPruneRoutes (R)</A
>
and the <code class="literal">F=d</CODE
> delivery agent flag in <a class="xref" href="ch30_08.htm" title="">Section 30.8.16, F=d</A
>.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen"># make sure list syntax is easy to parse
R@ $+ , $+        @ $1 : $2           change all &quot;,&quot; to &quot;:&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">The iterative nature of rules comes into play here. As long as there
is an <code class="literal">@</CODE
> followed by anything (<code class="literal">$+</CODE
>), then a comma,
then anything, this rule repeats, converting the comma to
a colon. The result is then carried
down to the next rule that focuses:</P
><p class="para"><blockquote class="screen"><pre class="screen">R@ $+ : $+         $@ &lt;@ $1&gt; : $2      focus route-addr</PRE
></BLOCKQUOTE
></P
><p class="para">Once that host has angle brackets placed around it (is focused),
the job of rule set 3 ends, and it exits (the <code class="literal">$@</CODE
> prefix in the RHS).&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-29-SECT-4-4">29.4.4 Handling Specialty Addresses</A
></H3
><p class="para">&#13;A whole book is dedicated to the myriad forms
of addressing that might face a site administrator: 
<em class="emphasis">!%@:: A Directory of Electronic Mail Addressing &amp; Networks</EM
> by
Donnalyn Frey and Rick Adams (O'Reilly &amp; Associates, 1993).
We won't duplicate that work here; rather, we point out that
most such addresses are handled nicely by existing configuration files.
Consider the format of a DECnet address:</P
><p class="para"><blockquote class="screen"><pre class="screen">host::user</PRE
></BLOCKQUOTE
></P
><p class="para">One approach to handling such an address in rule set 3 is to convert
it into the Internet <em class="emphasis">user@host.domain</EM
> form:</P
><p class="para"><blockquote class="screen"><pre class="screen">R$+ :: $+        $@ $2 @ $1.decnet</PRE
></BLOCKQUOTE
></P
><p class="para">Here, we reverse the <code class="literal">host</CODE
> and <code class="literal">user</CODE
> and put them into
Internet form. The <code class="literal">.decnet</CODE
> can later be used by rule set 0
to select an appropriate delivery agent.</P
><p class="para">This is a simple example of a special address problem from the many
that can develop. In addition to DECnet, for example, 
your site may have to deal
with Xerox <em class="emphasis">Grapevine</EM
> addresses, X.400 addresses, or UUCP
addresses. The best way to handle such addresses is to copy what others
have done.&#13;</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SML2-CH-29-SECT-4-5">29.4.5 Focusing for @ Syntax</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-28000"></A
>The last few rules in our illustration of rule set 3 are used to process
the Internet-style <em class="emphasis">user@domain</EM
> address:</P
><p class="para"><blockquote class="screen"><pre class="screen"># find focus for @ syntax addresses
R$+ @ $+                $: $1 &lt;@ $2&gt;        focus on domain
R$+ &lt; $+ @ $+ &gt;            $1 $2 &lt;@ $3&gt;     move gaze right
R$+ &lt;@ $+ &gt;             $@ $1 &lt;@ $2&gt;        already focused</PRE
></BLOCKQUOTE
></P
><p class="para">For an address like <em class="emphasis">something@something</EM
>, the first rule
focuses on all the tokens following the first
<code class="literal">@</CODE
> as the name of the host.
Recall that the <code class="literal">$:</CODE
> prefix to the RHS
prevents potentially infinite recursion. Assuming that the workspace started
with:</P
><p class="para"><blockquote class="screen"><pre class="screen">user@host1@host2</PRE
></BLOCKQUOTE
></P
><p class="para">this first rewrite results in</P
><p class="para"><blockquote class="screen"><pre class="screen">user&lt;@host1@host2&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">The second rule (<code class="literal">move gaze right</CODE
>) then attempts to
fine-tune the focus by making sure only the rightmost <code class="literal">@host</CODE
>
is selected. This rule can move the focus right, using recursion, and
can handle addresses that are as extreme as the following:</P
><p class="para"><blockquote class="screen"><pre class="screen">user&lt;@host1@host2@host3@host4&gt; <i class="lineannotation">becomes <img src="../chars/rarr.gif" alt="-&gt;"></I
> user@host1@host2@host3&lt;@host4&gt;</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;The third rule checks to see whether the workspace
has been focused. If it has, it returns the focused workspace
(the <code class="literal">$@</CODE
> prefix in the RHS), and its job is done.</P
><p class="para">Any address that has not been handled by rule set 3 is unchanged
and probably not focused. Since rule set 0 expects all addresses
to be focused so that it can select appropriate delivery agents, such
unfocused addresses may bounce. Many configuration files
allow local addresses (just a username) to be unfocused.
<a class="indexterm" name="AUTOID-28023"></A
>&#13;</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch29_03.htm#SML2-CH-29-SECT-3-1" title="29.3 The Sequence of Rule Sets"><img src="../gifs/txtpreva.gif" alt="Previous: 29.3 The Sequence of Rule Sets" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="sendmail"><img src="../gifs/txthome.gif" alt="sendmail" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch29_05.htm#SML2-CH-29-SECT-5-1" title="29.5 Rule Set 4"><img src="../gifs/txtnexta.gif" alt="Next: 29.5 Rule Set 4" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">29.3 The Sequence of Rule Sets</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">29.5 Rule Set 4</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="../dnsbind/index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
