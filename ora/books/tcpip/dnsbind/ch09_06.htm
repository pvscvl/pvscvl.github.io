<html><head>
<title>[Chapter 9] 9.6 Good Parenting</TITLE>
<meta name="DC.title" content="DNS &amp; BIND"><meta name="DC.creator" content="Cricket Liu &amp; Paul Albitz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T18:35:13Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-512-2" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch09_01.htm" title="9. Parenting"><link rel="prev" href="ch09_05.htm#AUTOID-9826" title="9.5 Subdomains of in-addr.arpa Domains"><link rel="next" href="ch09_07.htm#AUTOID-10206" title="9.7 Managing the Transition to Subdomains"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="DNS &amp; BIND" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="DNS &amp; BIND"><area shape="RECT" coords="467,0,514,18" href="../search/dsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_05.htm#AUTOID-9826" title="9.5 Subdomains of in-addr.arpa Domains"><img src="../gifs/txtpreva.gif" alt="Previous: 9.5 Subdomains of in-addr.arpa Domains" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 9<br>Parenting</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_07.htm#AUTOID-10206" title="9.7 Managing the Transition to Subdomains"><img src="../gifs/txtnexta.gif" alt="Next: 9.7 Managing the Transition to Subdomains" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="AUTOID-9916">9.6 Good Parenting</A
></H2
><p class="para"><a class="indexterm" name="DNS3-IDX-9-ADMINISTRATION-CHECKING-DELEGATION"></A
><a class="indexterm" name="DNS3-IDX-9-DELEGATION-CHECKING"></A
><a class="indexterm" name="DNS3-IDX-9-TROUBLESHOOTING-CHECKING-DELEGATION"></A
><a class="indexterm" name="DNS3-IDX-9-CHECKING-DELEGATION"></A
><a class="indexterm" name="DNS3-IDX-9-CHECK-DEL-UTILITY"></A
><a class="indexterm" name="DNS3-IDX-9-CONFIGURING"></A
><a class="indexterm" name="DNS3-IDX-9-PARENTING-CHECKING-DELEGATION"></A
><a class="indexterm" name="DNS3-IDX-9-DOMAINS-PARENTING-CHECKING-DELEGATION"></A
>Now that the delegation to the <i class="systemitem.sitename">fx.movie.edu</I
> name servers is in place,
we&nbsp;- responsible parents that we are&nbsp;- should check that
delegation using <kbd class="command">check_del</KBD
>. What? We haven't given
you <kbd class="command">check_del</KBD
> yet? Unfortunately,
<kbd class="command">check_del</KBD
> is too long to include in this book, but
we've made it available via anonymous <kbd class="command">ftp</KBD
>. See the
preface for details.  Feel free to snatch the code there and compile
it if you want to follow along.</P
><p class="para"><kbd class="command">check_del</KBD
> <span class="quote">"knows"</SPAN
>
delegation. <kbd class="command">check_del</KBD
> reads <span class="acronym">NS</SPAN
>
records. For each <span class="acronym">NS</SPAN
> record,
<kbd class="command">check_del</KBD
> issues a query to the name server listed
for the zone's <span class="acronym">SOA</SPAN
> record. The query is
nonrecursive, so the name server queried doesn't query other name
servers to find the <span class="acronym">SOA</SPAN
> record. If the name server
replies, <kbd class="command">check_del</KBD
> checks the reply to see whether
the<a class="indexterm" name="AUTOID-9957"></A
><a class="indexterm" name="AUTOID-9959"></A
>
<i class="firstterm">aa</I
>&nbsp;- authoritative answer&nbsp;- bit in the
reply packet is set. If it is, the name server checks to make sure
that the packet contains an answer. If both these criteria are met,
the name server is flagged as authoritative for the zone.  Otherwise,
the name server is not authoritative, and <kbd class="command">check_del</KBD
>
reports an error.</P
><p class="para">Why all the fuss over bad delegation? Incorrect delegation can
cause the propagation of old and erroneous root name server
information. When a name server is queried for data in a zone it isn't
authoritative for, it does its best to provide useful information to
the querier. This <span class="quote">"useful information"</SPAN
> comes in the form
of <span class="acronym">NS</SPAN
> records for the closest ancestor domain the
name server knows.  (We mentioned this briefly in <a class="xref" href="ch08_01.htm" title="Growing Your Domain">Chapter 8, <cite class="chapter">Growing Your Domain</CITE
></A
>, when we discussed why you shouldn't register a
caching-only name server.)</P
><p class="para">For example, say one of the <i class="systemitem.sitename">fx.movie.edu</I
> name servers mistakenly
receives an iterative query for the address of <i class="systemitem.sitename">carrie.horror.movie.edu</I
>.  It knows
nothing about the <i class="systemitem.sitename">horror.movie.edu</I
> domain (except for what
it might have cached), but it likely has <span class="acronym">NS</SPAN
> records
for <i class="systemitem.sitename">movie.edu</I
> cached, since
those are its parent name servers. So it would return those records to
the querier.</P
><p class="para">In that scenario, the <span class="acronym">NS</SPAN
> records may help the
querying name server get an answer. However, it's a fact of life on
the Internet that not all administrators keep their cache files up to
date. If one of your name servers follows a bad delegation and queries
a remote name server for records it doesn't have, look what can
happen:</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>nslookup</B
></CODE
>
Default Server:  terminator.movie.edu
Address:  192.249.249.3

&gt; <code class="userinput"><b>set type=ns</B
></CODE
>
&gt; <code class="userinput"><b>.</B
></CODE
>
Server:  terminator.movie.edu
Address:  192.249.249.3

Non-authoritative answer:
(root)  nameserver = D.ROOT-SERVERS.NET
(root)  nameserver = E.ROOT-SERVERS.NET
(root)  nameserver = I.ROOT-SERVERS.NET
(root)  nameserver = F.ROOT-SERVERS.NET
(root)  nameserver = G.ROOT-SERVERS.NET
(root)  nameserver = A.ROOT-SERVERS.NET
(root)  nameserver = H.ROOT-SERVERS.NETNIC.NORDU.NET
(root)  nameserver = B.ROOT-SERVERS.NET
(root)  nameserver = C.ROOT-SERVERS.NET
(root)  nameserver = A.ISI.EDU          <i class="lineannotation">&nbsp;- These three name</I
>
(root)  nameserver = SRI-NIC.ARPA       <i class="lineannotation">&nbsp;- servers are no longer</I
>
(root)  nameserver = GUNTER-ADAM.ARPA   <i class="lineannotation">&nbsp;- roots</I
></PRE
></BLOCKQUOTE
><p class="para">A remote name server tried to <span class="quote">"help out"</SPAN
> our local
name server by sending it the current list of roots. Unfortunately,
the remote name server was corrupt, and returned <span class="acronym">NS</SPAN
>
records that were incorrect. And our local name server, not knowing
any better, cached that data.</P
><p class="para">Queries to misconfigured<a class="indexterm" name="AUTOID-9987"></A
><a class="indexterm" name="AUTOID-9990"></A
>
<i class="systemitem.sitename">in-addr.arpa</I
> name servers
often result in bad root <span class="acronym">NS</SPAN
> records, because the
<i class="systemitem.sitename">in-addr.arpa</I
> and <i class="systemitem.sitename">arpa</I
> domains are the closest ancestors of
most <i class="systemitem.sitename">in-addr.arpa</I
> subdomains,
and name servers very seldom cache either <i class="systemitem.sitename">in-addr.arpa</I
> or <i class="systemitem.sitename">arpa</I
>'s <span class="acronym">NS</SPAN
>
records. (The roots seldom give them out, since they delegate directly
to lower-level subdomains.) Once your name server has cached bad root
<span class="acronym">NS</SPAN
> records, your name resolution may suffer.</P
><p class="para">Those root <span class="acronym">NS</SPAN
> records may have your name
server querying a root name server that is no longer at that
<span class="acronym">IP</SPAN
> address, or a root name server that no longer
exists at all. If you're having an especially bad day, the bad root
<span class="acronym">NS</SPAN
> records may point to a real, non-root name
server that is close to your network. Even though it won't return
authoritative root data, your name server will favor it because it
will have a low <span class="acronym">RTT</SPAN
> due to its proximity to your
network.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-10007">9.6.1 Using check_del</A
></H3
><p class="para">If our little lecture has convinced you of the importance of
maintaining correct delegation, you'll be eager to learn how to use
<kbd class="command">check_del</KBD
> to ensure that you don't join the ranks
of the miscreants.</P
><p class="para"><kbd class="command">check_del</KBD
> usually takes two arguments: the
name of a data file to check, and the default origin in the data
file. The default origin tells <kbd class="command">check_del</KBD
> the domain
name to append to relative names in the file. (When
<kbd class="command">named</KBD
> reads the db file, it learns the default
origin in the <i class="filename">named.conf</I
> or
<i class="filename">named.boot</I
> file; it's at the beginning of the
<i class="structfield">zone</I
> statement, and always the second field
in a <i class="structfield">primary</I
> or
<i class="structfield">secondary</I
>
directive. <kbd class="command">check_del</KBD
> doesn't read the conf or boot
file, though, so you need to specify the domain name on the command
line. If it read the conf or boot file, it'd be limited to checking
only db files listed in it.)</P
><p class="para">To check whether the <i class="filename">db.movie</I
> file contains
proper delegation to <i class="systemitem.sitename">fx.movie.edu</I
> (and any other subdomains),
we'd run:</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>check_del -o movie.edu -f db.movie</B
></CODE
></PRE
></BLOCKQUOTE
><p class="para">If the delegation is correct, we'd see this:</P
><blockquote class="screen"><pre class="screen">5 domains properly delegated</PRE
></BLOCKQUOTE
><p class="para">Actually, it's one domain delegated to three authoritative
servers (<i class="systemitem.sitename">movie.edu</I
> delegated
to <i class="systemitem.sitename">terminator</I
>, <i class="systemitem.sitename">wormhole</I
>, and <i class="systemitem.sitename">zardoz</I
>), and one subdomain delegated to
two authoritative servers (<i class="systemitem.sitename">fx.movie.edu</I
> delegated to <i class="systemitem.sitename">bladerunner</I
> and <i class="systemitem.sitename">outland</I
>), but
<kbd class="command">check_del</KBD
> doesn't know that. The point is that all
the <span class="acronym">NS</SPAN
> records in <i class="filename">db.movie</I
> are
correct.</P
><p class="para">If one of the <i class="systemitem.sitename">fx.movie.edu</I
> name servers&nbsp;- say
<i class="systemitem.sitename">outland</I
>&nbsp;- were
misconfigured, we'd see this:</P
><blockquote class="screen"><pre class="screen">Server outland.fx.movie.edu is not authoritative for fx.movie.edu

4 domains properly delegated
1 domains improperly delegated</PRE
></BLOCKQUOTE
><p class="para">Okay, <kbd class="command">check_del</KBD
> doesn't really understand
plurals, either.</P
><p class="para">If one of the <i class="systemitem.sitename">fx.movie.edu</I
> name servers weren't running
at all, we'd see:</P
><blockquote class="screen"><pre class="screen">4 domains properly delegated
1 servers not running

Servers not running:
        outland.fx.movie.edu</PRE
></BLOCKQUOTE
><p class="para">In this case, not running really means that
<kbd class="command">check_del</KBD
> tried to send the name server a query and
got an <span class="acronym">ICMP</SPAN
> port unreachable error back, which
indicated that nothing was listening on the name server port.</P
><p class="para">And if the name server didn't answer in an acceptable amount of
time, you'd see:</P
><blockquote class="screen"><pre class="screen">4 domains properly delegated
1 servers not responding

Servers not responding:
        outland.fx.movie.edu<a class="indexterm" name="AUTOID-10053"></A
></PRE
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-10055">9.6.2 Managing Delegation</A
></H3
><p class="para">If the special effects lab gets bigger, we may find that we need
additional name servers.  We dealt with setting up new name servers in
<a class="xref" href="ch08_01.htm" title="Growing Your Domain">Chapter 8</A
>, and even went over what information to
send to the parent zone's administrator. But we never explained what
the parent needed to do.</P
><p class="para">It turns out that the parent's job is relatively easy,
especially if the administrators of the subdomain send complete
information. Imagine that the special effects lab expands to a new
network, 192.254.20. They have a passel of new, high-powered graphics
workstations. One of them, <i class="systemitem.sitename">alien.fx.movie.edu</I
>, will act as the
network's name server.</P
><p class="para">The administrators of <i class="systemitem.sitename">fx.movie.edu</I
> (we delegated it to the
folks in the lab) send their parent zones' administrators (that's us)
a short note:</P
><blockquote class="screen"><pre class="screen">Hi!

We've just set up alien.fx.movie.edu (192.254.20.3) as a name
server for fx.movie.edu.  Would you please update your
delegation information?  I've attached the NS records you'll
need to add.

Thanks,

Arty Segue
ajs@fx.movie.edu

----- cut here -----

fx.movie.edu.  86400  IN  NS  bladerunner.fx.movie.edu.
fx.movie.edu.  86400  IN  NS  outland.fx.movie.edu.
fx.movie.edu.  86400  IN  NS  alien.fx.movie.edu.

bladerunner.fx.movie.edu.  86400  IN  A  192.253.254.2
outland.fx.movie.edu.      86400  IN  A  192.253.254.3
alien.fx.movie.edu.        86400  IN  A  192.254.20.3</PRE
></BLOCKQUOTE
><p class="para">Our job as the <i class="systemitem.sitename">movie.edu</I
> administrator is
straightforward: add the <span class="acronym">NS</SPAN
> and A records to
<i class="systemitem.sitename">db.movie</I
>.</P
><p class="para">What if we're using <kbd class="command">h2n</KBD
> to create our name
server data? We can stick the delegation information into the
<i class="filename">spcl.movie</I
> file, which <kbd class="command">h2n</KBD
>
$<span class="acronym">INCLUDE</SPAN
>s at the end of the
<i class="filename">db.movie</I
> file it creates.</P
><p class="para">The final step for the <i class="systemitem.sitename">fx.movie.edu</I
> administrator is to send a
similar message to <a class="email" href="mailto:hostmaster@internic.net" title="hostmaster@internic.net">hostmaster@internic.net</A
>
(administrator for the <i class="systemitem.sitename">in-addr.arpa</I
> domain), requesting that the
<i class="systemitem.sitename">20.254.192.in-addr.arpa</I
>
domain be delegated to <i class="systemitem.sitename">alien.fx.movie.edu</I
>, <i class="systemitem.sitename">bladerunner.fx.movie.edu</I
>, and <i class="systemitem.sitename">outland.fx.movie.edu</I
>.<a class="indexterm" name="AUTOID-10082"></A
><a class="indexterm" name="AUTOID-10085"></A
><a class="indexterm" name="AUTOID-10088"></A
><a class="indexterm" name="AUTOID-10091"></A
><a class="indexterm" name="AUTOID-10094"></A
></P
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-10096">9.6.2.1 Another way to manage delegation: stubs</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-10099"></A
>If you're running <span class="acronym">BIND</SPAN
> 4.9 or
<span class="acronym">BIND</SPAN
> 8 name servers, you don't have to manage
delegation information manually.  <span class="acronym">BIND</SPAN
> 4.9 and
<span class="acronym">BIND</SPAN
> 8 name servers support an experimental
feature, called <i class="structfield">stub</I
>, which enables a name
server to pick up changes to delegation information
automatically.</P
><p class="para">Name servers that act as stubs for a subdomain do periodic zone
transfers of the subdomain's data, but they ignore everything in it
except for the <span class="acronym">NS</SPAN
> records and the
<span class="acronym">SOA</SPAN
> record.  The <span class="acronym">NS</SPAN
> records are
<span class="quote">"promoted"</SPAN
> into the parent zone, and the
<span class="acronym">SOA</SPAN
> record governs how often the stub does zone
transfers.  Now, when the administrators of a subdomain make changes
to the subdomain's name servers, they simply update their
<span class="acronym">NS</SPAN
> records.  The parent zone's authoritative name
servers will pick up the updated records within the refresh
interval.</P
><p class="para">On the <i class="systemitem.sitename">movie.edu</I
> name
servers running <span class="acronym">BIND</SPAN
> 8, here's what we'd add to
<i class="filename">named.conf</I
>:</P
><blockquote class="screen"><pre class="screen">zone &quot;fx.movie.edu&quot; {
                type stub;
                file &quot;db.fx&quot;;
                masters { 192.253.254.2; };
};</PRE
></BLOCKQUOTE
><p class="para">On a <span class="acronym">BIND</SPAN
> 4.9 name server, we'd use this
directive:</P
><blockquote class="screen"><pre class="screen">stub     fx.movie.edu    192.253.254.2     db.fx</PRE
></BLOCKQUOTE
><p class="para">Note that we should configure all of the <i class="systemitem.sitename">movie.edu</I
> name servers as stubs for
<i class="systemitem.sitename">fx.movie.edu</I
>, because if the
<i class="systemitem.sitename">fx.movie.edu</I
> delegation
information changes, that won't change the <i class="systemitem.sitename">movie.edu</I
> zone's serial number.<a class="indexterm" name="AUTOID-10127"></A
><a class="indexterm" name="AUTOID-10128"></A
><a class="indexterm" name="AUTOID-10129"></A
><a class="indexterm" name="AUTOID-10130"></A
><a class="indexterm" name="AUTOID-10131"></A
><a class="indexterm" name="AUTOID-10132"></A
><a class="indexterm" name="AUTOID-10133"></A
><a class="indexterm" name="AUTOID-10134"></A
></P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_05.htm#AUTOID-9826" title="9.5 Subdomains of in-addr.arpa Domains"><img src="../gifs/txtpreva.gif" alt="Previous: 9.5 Subdomains of in-addr.arpa Domains" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="DNS &amp; BIND"><img src="../gifs/txthome.gif" alt="DNS &amp; BIND" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_07.htm#AUTOID-10206" title="9.7 Managing the Transition to Subdomains"><img src="../gifs/txtnexta.gif" alt="Next: 9.7 Managing the Transition to Subdomains" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">9.5 Subdomains of in-addr.arpa Domains</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">9.7 Managing the Transition to Subdomains</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
