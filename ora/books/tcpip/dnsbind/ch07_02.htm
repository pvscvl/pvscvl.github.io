<html><head>
<title>[Chapter 7] 7.2 Updating db Files</TITLE>
<meta name="DC.title" content="DNS &amp; BIND"><meta name="DC.creator" content="Cricket Liu &amp; Paul Albitz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T18:30:24Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-512-2" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_01.htm" title="7. Maintaining BIND"><link rel="prev" href="ch07_01.htm" title="7.1 BIND Name Server Signals"><link rel="next" href="ch07_03.htm" title="7.3 Organizing Your Files"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="DNS &amp; BIND" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="DNS &amp; BIND"><area shape="RECT" coords="467,0,514,18" href="../search/dsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_01.htm" title="7.1 BIND Name Server Signals"><img src="../gifs/txtpreva.gif" alt="Previous: 7.1 BIND Name Server Signals" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 7<br>Maintaining <span class="acronym">BIND</SPAN
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch07_03.htm" title="7.3 Organizing Your Files"><img src="../gifs/txtnexta.gif" alt="Next: 7.3 Organizing Your Files" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="AUTOID-6482">7.2 Updating db Files</A
></H2
><p class="para"><a class="indexterm" name="DNS3-IDX-7-UPDATING-DB-FILES"></A
><a class="indexterm" name="DNS3-IDX-7-DB-FILES-UPDATING"></A
>Something<a class="indexterm" name="DNS3-IDX-7-NAME-SERVERS-MAINTAINING-UPDATING-DB-FILES"></A
><a class="indexterm" name="DNS3-IDX-7-ADMINISTRATION-NAME-SERVER-MAINTENANCE-UPDATING-DB-FILES"></A
><a class="indexterm" name="DNS3-IDX-7-BIND-BERKELEY-INTERNET-NAME-DOMAIN-NAME-SERVER-MAINTAINENCE-UPDATING-DB-FILES"></A
>
is always changing on your network&nbsp;- the new
workstations arrive, you finally retire or sell the relic, or you move
a host to a different network. Each change means the db files must be
modified. Should you make the changes manually? Should you wimp out
and use a tool to help you?</P
><p class="para">First, we'll discuss how to make the changes manually. Then
we'll talk about a tool to help out: <kbd class="command">h2n</KBD
>. Actually,
we recommend that you use a tool to create the db files&nbsp;- we were
kidding about that wimp stuff, okay? Or, at least use a tool to
increment the serial number for you. The syntax of the
<span class="acronym">DNS</SPAN
> files lends itself to making mistakes. It
doesn't help that the address and pointer records are in different
files, which must agree with each other. However, even when you use a
tool, it is critical to know what goes on when the files are updated,
so we'll start with the manual method.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-6506">7.2.1 Adding and Deleting Hosts</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-6509"></A
><a class="indexterm" name="AUTOID-6512"></A
><a class="indexterm" name="AUTOID-6515"></A
>After creating your db files initially, it should be fairly apparent
what needs to be changed when you add a new host. We'll go through the
steps here in case you weren't the one to set up those files, or if
you'd just like a checklist to follow. Make these changes to your
<em class="emphasis">primary</EM
> master name server's
<span class="acronym">DNS</SPAN
> database files. If you make the change to your
<em class="emphasis">slave</EM
> name server's backup files, the slave's data
will change, but the next zone transfer will overwrite it.</P
><ol class="orderedlist"><li class="listitem"><p class="para">Update the serial number in <i class="filename">db.DOMAIN</I
>.  The
serial number is likely to be at the top of the file, so it's easy to
do first and reduces the chance that you'll forget.</P
></LI
><li class="listitem"><p class="para">Add any A (address), <span class="acronym">CNAME</SPAN
> (alias), and
<span class="acronym">MX</SPAN
> (mail exchanger) records for the host to the
<i class="filename">db.DOMAIN</I
> file.  We added the following resource
records to the <i class="filename">db.movie</I
> file when a new host
(<i class="systemitem.sitename">cujo</I
>) was added to our
network:</P
><blockquote class="screen"><pre class="screen">cujo  IN  A  192.253.253.5  ; cujo's internet address
      IN MX  10 cujo        ; if possible, mail directly to cujo
      IN MX  20 terminator  ; otherwise, deliver to our mail hub</PRE
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Update the serial number and add <span class="acronym">PTR</SPAN
> records
to <em class="emphasis">each</EM
> <i class="filename">db.ADDR</I
> file for
which the host has an address. <i class="systemitem.sitename">cujo</I
> only has one address, on network
<i class="systemitem.sitename">192.253.253</I
>; therefore, we
added the following <span class="acronym">PTR</SPAN
> record to the
<i class="filename">db.192.253.253</I
> file:</P
><blockquote class="screen"><pre class="screen">5  IN PTR cujo.movie.edu.</PRE
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">Restart the primary master name server by sending it a
<span class="acronym">HUP</SPAN
> signal; this forces it to load the new
information:</P
><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>kill -HUP `cat /etc/named.pid`</B
></CODE
></PRE
></BLOCKQUOTE
></LI
></OL
><p class="para">After it has been restarted, the primary master name server will
load the new data. Slave name servers will load this new data sometime
within the time interval defined in the <span class="acronym">SOA</SPAN
> record
for refreshing their data.</P
><p class="para">Sometimes your users won't want to wait for the slaves to pick
up the new data&nbsp;- they'll want it available right away. (Are you
wincing or nodding knowingly as you read this?) Can you force a slave
to load the new information right away? With version 8 masters and
slaves, the slaves will pick up the new data quickly because the
primary master notifies the slave of changes within 15 minutes of the
change.  If your name server is 4.9 or later, you can send it a
<span class="acronym">HUP</SPAN
> signal just as you did for your primary master
name server.  If your name server is 4.8.3 or earlier, remove all of
the slave's backup files (or just the ones you want to force), kill
the slave server, and start up a new one. Since the backup files are
gone, the slave must immediately pull new copies of the zones.</P
><p class="para">To delete a host, remove the resource records from the
<i class="filename">db.DOMAIN</I
> and from each
<i class="filename">db.ADDR</I
> file pertaining to that host.  Increment
the serial number in each file you changed and restart your primary
master name server.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-6555">7.2.2 <span class="acronym">SOA</SPAN
> Serial Numbers</A
></H3
><p class="para"><a class="indexterm" name="DNS3-IDX-7-SERIAL-NUMBERS"></A
><a class="indexterm" name="DNS3-IDX-7-SLAVE-SECONDARY-NAME-SERVERS-SERIAL-NUMBER"></A
><a class="indexterm" name="DNS3-IDX-7-SOA-RECORDS"></A
><a class="indexterm" name="AUTOID-6566"></A
><a class="indexterm" name="AUTOID-6570"></A
>Each of the <span class="acronym">DNS</SPAN
> database files has a serial
number. Every time the data in the db file is changed, the serial
number must be incremented. If the serial number is not incremented,
slave name servers for the zone will not pick up the updated data. The
change is simple. If the original db file had the following
<span class="acronym">SOA</SPAN
> record:</P
><blockquote class="screen"><pre class="screen">movie.edu. IN SOA terminator.movie.edu. al.robocop.movie.edu. (
                                100     ; Serial
                                10800   ; Refresh
                                3600    ; Retry
                                604800  ; Expire
                                86400 ) ; Minimum TTL</PRE
></BLOCKQUOTE
><p class="para">the updated db file would have the following
<span class="acronym">SOA</SPAN
> record:</P
><blockquote class="screen"><pre class="screen">movie.edu. IN SOA terminator.movie.edu. al.robocop.movie.edu. (
                                101     ; Serial
                                10800   ; Refresh
                                3600    ; Retry
                                604800  ; Expire
                                86400 ) ; Minimum TTL</PRE
></BLOCKQUOTE
><p class="para">This simple change is the key to distributing the data to all of
your secondaries. Failing to increment the serial number is the most
common mistake made when updating a name server. The first few times
you make a change to a <span class="acronym">DNS</SPAN
> database file, you'll
remember to update the serial number because this process is new and
you are paying close attention. After the db file modifications become
second nature, you'll make some <span class="quote">"quickie"</SPAN
> little change,
forget to update the serial number...and none of the slaves will pick
up the new data. That's why you should use a tool that updates the
serial number for you! Your tool could be <kbd class="command">h2n</KBD
> or
something written locally, but use a tool.</P
><p class="para"><span class="acronym">BIND</SPAN
> does allow you to use a decimal serial
number, like 1.1, but we recommend that you stay with integer
values. Here's how <span class="acronym">BIND</SPAN
> version 4 handles<a class="indexterm" name="AUTOID-6587"></A
>
decimal serial numbers: if there is a decimal point in the serial
number, <span class="acronym">BIND</SPAN
> multiplies the digits to the left of
the decimal by 1000. The digits to the right of the decimal point are
then concatenated to the digits on the left. Therefore, a number like
1.1 is converted to 10001 internally. 1.10 is converted to
100010. This creates certain anomalies; for example, 1.1 is
<span class="quote">"greater"</SPAN
> than 2, and 1.10 is <span class="quote">"greater"</SPAN
> than
2.1. Because this is so counterintuitive, it's best to stick with
integer serial numbers.</P
><p class="para">There are several good ways to manage<a class="indexterm" name="AUTOID-6593"></A
>
integer serial numbers. The obvious way is just to use a counter:
increment the serial number by one each time the file is
modified. Another method is to derive the serial number from the
date. For example, you could use the eight-digit number formed by
<code class="replaceable"><i>YYYYMMDD</I
></CODE
>. Suppose today is January 15,
1997. In this form, your serial number would be 19970115. This scheme
only allows one update per day, though, and that may not be
enough. Add another two digits to this number to indicate how many
times the file has been updated that day. The first number for January
15, 1997, would then be 1997011500. The next modification that day
would change the serial number to 1997011501.  This scheme allows 100
updates per day.  <kbd class="command">h2n</KBD
> will generate the serial
number from the date if you use the <i class="option">-y</I
> option.
Whatever scheme you choose, the serial number must fit in a 32-bit
integer.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-6598">7.2.3 Starting Over with a New Serial Number</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-6601"></A
>What do you do if the serial number on one of your zones accidentally
becomes very large and you want to change it back to a more reasonable
value? There is a way that works with all versions of
<span class="acronym">BIND</SPAN
>, and a couple of ways that work with version
4.9 and later.</P
><p class="para">The way that always works with all versions is to purge your
slaves of any knowledge of the old serial number. Then you can start
numbering from one (or any convenient point). Here's how. First,
change the serial number on your primary master server and restart it;
now the primary master server has the new integer serial number.  Log
onto one of your slave name server hosts and kill the server process
with the command <kbd class="command">kill `cat /etc/named.pid`</KBD
>.  Remove
its backup copies of the<a class="indexterm" name="AUTOID-6606"></A
>
db files (e.g., <kbd class="command">rm db.movie db.192.249.249
db.192.253.253</KBD
>). Start up your slave name server. Since the
backup copies were removed, the slave must load a new version of the
<span class="acronym">DNS</SPAN
> database files&nbsp;- picking up the new serial
numbers. This process must be repeated for each slave server. If there
are any servers not under your control backing up your zones, you'll
have to contact their administrators to get them to do the
same.</P
><p class="para">If all of your secondaries are version 4.9 and later, you have
two choices, and both involve two steps. One method involves
synchronizing the serial number at zero, and the other involves
incrementing the serial number by the largest amount possible.</P
><p class="para">If you set the zone serial number to<a class="indexterm" name="AUTOID-6613"></A
><a class="indexterm" name="AUTOID-6615"></A
>
zero, each 4.9 slave will transfer the zone the next time it
checks. Serial number zero is special in that way. In fact, the zone
will be transferred <em class="emphasis">every</EM
> time the slave checks,
so don't forget to increment the serial number once all the slaves
have synchronized on serial number zero. But there is a limit to how
far you can increment the serial number.  Read on.</P
><p class="para">The other method of fixing the serial number (with 4.9 and later
slaves) will be easier to understand if we first cover some background
material. The <span class="acronym">DNS</SPAN
> serial number is a 32-bit
unsigned integer. Its value ranges from 0 to 4,294,967,295. The
<span class="acronym">DNS</SPAN
> serial number uses<a class="indexterm" name="AUTOID-6622"></A
>
<i class="firstterm">sequence space arithmetic</I
>, which means that for
any serial number, half of the numbers in the number space
(2,147,483,647 numbers) are less than the serial number, and half of
the numbers are larger.</P
><p class="para">Let's go over an example of sequence space numbers. Suppose the
serial number is 5. Serial numbers 6 through (5 + 2,147,483,647) are
larger than serial number 5. Serial numbers (5 + 2,147,483,649)
through 4 are smaller serial numbers. Notice that the serial number
wrapped around to 4 after reaching 4,294,967,295. Notice also that we
didn't include the number (5 + 2,147,483,648) because this is exactly
halfway around the number space, and it could be larger or smaller
than 5, depending on the implementation. To be safe, don't use
it.</P
><p class="para">Now back to the original problem. If your zone serial number is
25,000 and you want to start numbering at 1 again, you can speed
through the serial number space in two steps. First, add the largest
increment possible to your serial number (25,000 + 2,147,483,647 =
2,147,508,647). If the number you come up with is larger than
4,294,967,295 (the largest 32-bit value), you'll have wrap around to
the beginning of the number space by subtracting 4,294,967,296 from
it. After changing the serial number, you must wait for all of your
secondaries to pick up a new copy of the zone. Second, change the zone
serial number to its target value (1), which is now
<em class="emphasis">larger</EM
> than the current serial number
(2,147,508,647). After the secondaries pick up a new copy of the zone,
you're done!<a class="indexterm" name="AUTOID-6628"></A
><a class="indexterm" name="AUTOID-6629"></A
><a class="indexterm" name="AUTOID-6630"></A
><a class="indexterm" name="AUTOID-6631"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-6635">7.2.4 Additional db File Entries</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-6638"></A
>After you've been running a name server for a while, you may want to
add data to your name server to help you manage your zone. Have you
ever been stumped when someone asked you <em class="emphasis">where</EM
> one of your hosts is?
Maybe you don't even remember what kind of host it is. Administrators
have to manage larger and larger populations of hosts these days,
making it easy to lose track of this information. The name server can
help you out. And if one of your hosts is acting up and someone
notices remotely, the name server can help them get in touch with
you.</P
><p class="para">So far in the book, we've covered <span class="acronym">SOA</SPAN
>,
<span class="acronym">NS</SPAN
>, A, <span class="acronym">CNAME</SPAN
>,
<span class="acronym">PTR</SPAN
>, and <span class="acronym">MX</SPAN
> records. These
records are critical to everyday operation&nbsp;- name servers need
them to operate, and applications look up data of these
types. <span class="acronym">DNS</SPAN
> defines more data types. The next most
useful resource record types are <span class="acronym">TXT</SPAN
> and
<span class="acronym">RP</SPAN
>; these can be used to tell you the machine's
location and responsible person. For a complete list of the resource
records, see <a class="xref" href="appa_01.htm" title="DNS Message Format and Resource Records">Appendix A, <cite class="appendix">DNS Message Format and Resource
Records</CITE
></A
>.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-6652">7.2.4.1 General text information</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-6655"></A
><span class="acronym">TXT</SPAN
> stands for TeXT. These
records are simply a list of strings, each less than 256 characters in
length. Versions of <span class="acronym">BIND</SPAN
> prior to 4.8.3 do not
support <span class="acronym">TXT</SPAN
> records. In version 4,
<span class="acronym">BIND</SPAN
> limits the db file <span class="acronym">TXT</SPAN
>
record to a single string of almost 2K of data.</P
><p class="para"><span class="acronym">TXT</SPAN
> records can be used for anything you
want; one use is to list a host's location:</P
><blockquote class="screen"><pre class="screen">cujo  IN  TXT  &quot;Location: machine room dog house&quot;</PRE
></BLOCKQUOTE
><p class="para"><span class="acronym">BIND</SPAN
> version 8 has the same 2K limit, but you
can specify the <span class="acronym">TXT</SPAN
> record as multiple
strings:</P
><blockquote class="screen"><pre class="screen">cujo  IN  TXT  &quot;Location:&quot; &quot;machine room dog house&quot;</PRE
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-6670">7.2.4.2 Responsible Person</A
></H4
><p class="para">Domain administrators will undoubtedly develop a love/hate
relationship with the<a class="indexterm" name="AUTOID-6673"></A
>
Responsible Person, or<a class="indexterm" name="AUTOID-6677"></A
>
<span class="acronym">RP</SPAN
>, record. The <span class="acronym">RP</SPAN
> record can be
attached to any domain name, internal or leaf, and indicates who is
responsible for that host or zone. This will enable you to locate the
miscreant responsible for the host peppering you with
<span class="acronym">DNS</SPAN
> queries, for example.  But it will also lead
people to you when one of your hosts acts up.</P
><p class="para">The record takes two arguments as its record-specific data: an
electronic mail address, in domain name format, and a domain name,
which points to additional data about the contact. The electronic mail
address is in the same format the <span class="acronym">SOA</SPAN
> record uses:
it substitutes a <span class="quote">"."</SPAN
> for the <span class="quote">"@"</SPAN
>. The next
argument is a domain name, which must have a <span class="acronym">TXT</SPAN
>
record associated with it. The <span class="acronym">TXT</SPAN
> record then
contains free-format information about the contact, like full name and
phone number. If you omit either field, you must specify the root
domain (<span class="quote">"."</SPAN
>) as a placeholder instead.</P
><p class="para">Here are some example <span class="acronym">RP</SPAN
> (and associated)
records:</P
><blockquote class="screen"><pre class="screen">robocop      IN  RP   root.movie.edu.  hotline.movie.edu.
             IN  RP   richard.movie.edu.  rb.movie.edu.
hotline      IN  TXT  &quot;Movie U. Network Hotline, (415) 555-4111&quot;
rb           IN  TXT  &quot;Richard Boisclair, (415) 555-9612&quot;</PRE
></BLOCKQUOTE
><p class="para">Note that <span class="acronym">TXT</SPAN
> records for <i class="systemitem.sitename">root.movie.edu</I
> and <i class="systemitem.sitename">richard.movie.edu</I
> aren't necessary, since
they're only the domain-name encoding of electronic mail addresses,
not real domain names.</P
><p class="para">This resource record didn't exist when <span class="acronym">BIND</SPAN
>
4.8.3 was implemented, but <span class="acronym">BIND</SPAN
> 4.9 supports
it. Check the documentation for your version of the name server to see
if it supports <span class="acronym">RP</SPAN
> before trying to use it.</P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-6701">7.2.5 Generating the <span class="acronym">BIND</SPAN
> Database from the Host
Tables</A
></H3
><p class="para"><a class="indexterm" name="DNS3-IDX-7-H2N-UTILITY"></A
><a class="indexterm" name="AUTOID-6707"></A
><a class="indexterm" name="AUTOID-6711"></A
>As you saw in <a class="xref" href="ch04_01.htm" title="Setting Up BIND">Chapter 4, <cite class="chapter">Setting Up <span class="acronym">BIND</SPAN
></CITE
></A
>, we defined a
well-structured process for converting host table information to name
server information. We've written a tool in Perl to automate this
process, called <kbd class="command">h2n</KBD
>. Using a tool to generate your
data has one big advantage: there will be no syntax errors or
inconsistencies in your database files&nbsp;- assuming we wrote
<kbd class="command">h2n</KBD
> correctly!  One common inconsistency is having
an A (address) record for a host, but no corresponding
<span class="acronym">PTR</SPAN
> (pointer) record, or the other way around.
Because these data are in separate files, it is easy to err.</P
><p class="para">What does <kbd class="command">h2n</KBD
> do? Given the
<i class="filename">/etc/hosts</I
> file and some command-line options,
<kbd class="command">h2n</KBD
> creates the db files for your domain. As a
system administrator, you keep the host table current. Each time you
modify the host table, you run <kbd class="command">h2n</KBD
>
again. <kbd class="command">h2n</KBD
> rebuilds each db file from scratch,
assigning each new file the next higher serial number. It can be run
manually, or from a <kbd class="command">cron</KBD
> script each night. If you
use <kbd class="command">h2n</KBD
>, you'll never need to worry about
forgetting to update the serial number.</P
><p class="para">First, <kbd class="command">h2n</KBD
> needs to know the name of your
domain and your network numbers. These map conveniently into the db
filenames: <i class="systemitem.sitename">movie.edu</I
> data
goes in <i class="filename">db.movie</I
>, and network 192.249.249 data
goes into <i class="filename">db.192.249.249</I
>.  The domain name and
network number are specified with the <i class="option">-d</I
> and
<i class="option">-n</I
> flags, as follows:</P
><dl class="variablelist"><dt class="term">-d domain</DT
><dd class="listitem"><p class="para">The domain name of your zone.</P
></DD
><dt class="term">-n network</DT
><dd class="listitem"><p class="para">The network number of your network. If you are generating files
for several networks, use several <i class="option">-n</I
> options on the command line. Omit
trailing zeros from the network numbers.</P
></DD
></DL
><p class="para">The <kbd class="command">h2n</KBD
> command requires the
<i class="option">-d</I
> flag and at least one <i class="option">-n</I
> flag;
they have no default values. For example, to create the
<span class="acronym">BIND</SPAN
> database for the zone <i class="systemitem.sitename">movie.edu</I
>, which consists of two
networks, give the command:</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>h2n -d movie.edu -n 192.249.249 -n 192.253.253</B
></CODE
></PRE
></BLOCKQUOTE
><p class="para">For greater control over the data, you can use other
options:</P
><dl class="variablelist"><dt class="term">-s server</DT
><dd class="listitem"><p class="para">The servers for the <span class="acronym">NS</SPAN
> records. As with <i class="option">-n</I
>,
use several <i class="option">-s</I
> options if you have multiple primary master or slave
servers. A version 8 server will <span class="acronym">NOTIFY</SPAN
> this list
of servers when a zone changes.  The default is the host on which you
run <kbd class="command">h2n</KBD
>.</P
></DD
><dt class="term">-h host</DT
><dd class="listitem"><p class="para">The host for the <span class="acronym">SOA</SPAN
> record. <code class="replaceable"><i>host</I
></CODE
> must be the
primary master server to ensure proper operation of the version 8
<span class="acronym">NOTIFY</SPAN
> feature.  The default is the host on which
you run <kbd class="command">h2n</KBD
>.</P
></DD
><dt class="term">-u user</DT
><dd class="listitem"><p class="para">The mail address of the person in charge of the domain's
data. This defaults to <a class="email" href="mailto:root" title="root">root</A
> on the host on which you run
<kbd class="command">h2n</KBD
>.</P
></DD
><dt class="term">-o other</DT
><dd class="listitem"><p class="para">Other <span class="acronym">SOA</SPAN
> values, not including the serial
number, as a colon-separated list. These default to
10800:3600:604800:86400.</P
></DD
><dt class="term">-f file</DT
><dd class="listitem"><p class="para">Read the <kbd class="command">h2n</KBD
> options from the named <code class="replaceable"><i>file</I
></CODE
>,
rather than from the command line. If you have lots of options, keep
them in a file.</P
></DD
><dt class="term">-v 4|8</DT
><dd class="listitem"><p class="para">Generate configuration files for version 4 or version 8.
Version 4 is the default.</P
></DD
><dt class="term">-y</DT
><dd class="listitem"><p class="para">Generate the serial number from the date.</P
></DD
></DL
><p class="para">Here is an example that uses all the options mentioned so
far:</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>h2n -f opts</B
></CODE
></PRE
></BLOCKQUOTE
><p class="para">Contents of file <i class="filename">opts</I
>:</P
><blockquote class="screen"><pre class="screen">-d movie.edu
-n 192.249.249
-n 192.253.253
-s terminator.movie.edu
-s wormhole
-u al
-h terminator
-o 10800:3600:604800:86400
-v 8
-y</PRE
></BLOCKQUOTE
><p class="para">If an option requires a host name, you can provide either a full
domain name (e.g., <i class="systemitem.sitename">terminator.movie.edu</I
>), or just the host's
name (e.g., <i class="systemitem.sitename">terminator</I
>).  If
you give the host name only, <kbd class="command">h2n</KBD
> will form a
complete domain name by adding the domain name given with the
<i class="option">-d</I
> option.  (If a trailing dot is necessary on the
name, <kbd class="command">h2n</KBD
> will add it also.)</P
><p class="para">There are more options to <kbd class="command">h2n</KBD
> than we've
shown here. For the complete list of options, you'll have to look at
the manpage.</P
><p class="para">Of course, a few kinds of resource records aren't easy to
generate from <i class="filename">/etc/hosts</I
>&nbsp;- the necessary data
simply aren't there. You may need to add these records manually.  But
since <kbd class="command">h2n</KBD
> always rewrites db files, won't your
changes be overwritten?</P
><p class="para"><kbd class="command">h2n</KBD
> provides a <span class="quote">"back door"</SPAN
> for
inserting this kind of data. Put these special records in a file named<a class="indexterm" name="AUTOID-6816"></A
>
<i class="filename">spcl.DOMAIN</I
>, where
<i class="filename">DOMAIN</I
> is the domain name of your
zone. When <kbd class="command">h2n</KBD
> finds this file, it will
<span class="quote">"include"</SPAN
> it within the database files by adding the
line:</P
><blockquote class="screen"><pre class="screen">$INCLUDE spcl.DOMAIN</PRE
></BLOCKQUOTE
><p class="para">to the end of the <i class="filename">db.DOMAIN</I
> file. (The
<i class="structfield">$INCLUDE</I
> directive is described later in
this chapter.) For example, the administrator of <i class="systemitem.sitename">movie.edu</I
> may add extra
<span class="acronym">MX</SPAN
> records into the file
<i class="filename">spcl.movie</I
> so that users can mail to <i class="systemitem.sitename">movie.edu</I
> directly instead of sending
mail to hosts within <i class="systemitem.sitename">movie.edu</I
>. Upon finding this file,
<kbd class="command">h2n</KBD
> would put the line:</P
><blockquote class="screen"><pre class="screen">$INCLUDE spcl.movie</PRE
></BLOCKQUOTE
><p class="para">at the end of the database file <i class="filename">db.movie</I
>.<a class="indexterm" name="AUTOID-6836"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-6837">7.2.6 Keeping db.cache Current</A
></H3
><p class="para">As explained in <a class="xref" href="ch04_01.htm" title="Setting Up BIND">Chapter 4</A
>, the<a class="indexterm" name="AUTOID-6841"></A
><a class="indexterm" name="AUTOID-6844"></A
><a class="indexterm" name="AUTOID-6848"></A
><a class="indexterm" name="AUTOID-6850"></A
>
<i class="filename">db.cache</I
> file tells your server where the servers
for the <span class="quote">"root"</SPAN
> zone are. It must be updated
periodically. The root name servers do not change very often, but they
do change. A good practice is to check your
<i class="filename">db.cache</I
> file every month or two. In <a class="xref" href="ch04_01.htm" title="Setting Up BIND">Chapter 4</A
>, we told you to get the servers by
<kbd class="command">ftp</KBD
>ing to <i class="systemitem.sitename">ftp.rs.internic.net</I
>. And that's probably
your best method to keep current.</P
><p class="para">If you have on your system a copy of<a class="indexterm" name="AUTOID-6860"></A
>
<kbd class="command">dig</KBD
>, a utility that works a lot like
<kbd class="command">nslookup</KBD
> and is included in the
<span class="acronym">BIND</SPAN
> distribution, you can retrieve the current
list of roots just by running:<a class="indexterm" name="AUTOID-6865"></A
><a class="indexterm" name="AUTOID-6866"></A
></P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>dig @a.root-servers.net  .  ns &gt; db.cache</B
></CODE
></PRE
></BLOCKQUOTE
><a class="indexterm" name="AUTOID-6869"></A
><a class="indexterm" name="AUTOID-6870"></A
><a class="indexterm" name="AUTOID-6871"></A
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_01.htm" title="7.1 BIND Name Server Signals"><img src="../gifs/txtpreva.gif" alt="Previous: 7.1 BIND Name Server Signals" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="DNS &amp; BIND"><img src="../gifs/txthome.gif" alt="DNS &amp; BIND" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch07_03.htm" title="7.3 Organizing Your Files"><img src="../gifs/txtnexta.gif" alt="Next: 7.3 Organizing Your Files" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.1 BIND Name Server Signals</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.3 Organizing Your Files</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
