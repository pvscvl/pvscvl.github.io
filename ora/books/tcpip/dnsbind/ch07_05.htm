<html><head>
<title>[Chapter 7] 7.5 BIND 8 Logging</TITLE>
<meta name="DC.title" content="DNS &amp; BIND"><meta name="DC.creator" content="Cricket Liu &amp; Paul Albitz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T18:31:41Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-512-2" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_01.htm" title="7. Maintaining BIND"><link rel="prev" href="ch07_04.htm" title="7.4 Changing BIND 8 System File Locations"><link rel="next" href="ch07_06.htm#AUTOID-7461" title="7.6 Keeping Everything Running Smoothly"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="DNS &amp; BIND" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="DNS &amp; BIND"><area shape="RECT" coords="467,0,514,18" href="../search/dsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_04.htm" title="7.4 Changing BIND 8 System File Locations"><img src="../gifs/txtpreva.gif" alt="Previous: 7.4 Changing BIND 8 System File Locations" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 7<br>Maintaining <span class="acronym">BIND</SPAN
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch07_06.htm#AUTOID-7461" title="7.6 Keeping Everything Running Smoothly"><img src="../gifs/txtnexta.gif" alt="Next: 7.6 Keeping Everything Running Smoothly" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="BIND8-LOGGING">7.5 <span class="acronym">BIND</SPAN
> 8 Logging</A
></H2
><p class="para"><a class="indexterm" name="DNS3-IDX-7-NAME-SERVERS-MAINTAINING-LOGGING-BIND-8"></A
><a class="indexterm" name="DNS3-IDX-7-ADMINISTRATION-NAME-SERVER-MAINTENANCE-LOGGING-BIND-8"></A
><a class="indexterm" name="DNS3-IDX-7-BIND-BERKELEY-INTERNET-NAME-DOMAIN-NAME-SERVER-MAINTAINENCE-LOGGING-BIND-8"></A
><a class="indexterm" name="DNS3-IDX-7-LOGGING-BIND-8"></A
><span class="acronym">BIND</SPAN
> 4 had an extensive logging system,
writing information to a debug file and sending information to syslog.
But, <span class="acronym">BIND</SPAN
> 4 gave you limited control over this
logging process&nbsp;- you could turn debugging on to a certain level.
That's it.  <span class="acronym">BIND</SPAN
> 8 has the same logging system as
<span class="acronym">BIND</SPAN
> 4, but <span class="acronym">BIND</SPAN
> 8 gives you
control you didn't get with <span class="acronym">BIND</SPAN
> 4.</P
><p class="para">This control has its cost though&nbsp;- there's a lot to learn
before you can be effective configuring this subsystem. If you don't
have some time you can spend to experiment with logging, use the
defaults and come back to this topic later.  Most of you do not need
to change the default logging behavior.</P
><p class="para">Logging has two major topics you need to understand:<a class="indexterm" name="DNS3-IDX-7-CHANNELS-LOGGING"></A
><a class="indexterm" name="DNS3-IDX-7-CATEGORIES-OF-DATA-LOGGING"></A
>
channels and categories.  A channel specifies where the logging data
goes: to syslog, to a file, to stderr, or to the bit bucket.  A
category specifies what data is logged.</P
><p class="para">Each category of data can be sent to a single channel or to
multiple channels.  In <a class="xref" href="#DNS3-CHP-7-FIG-1" title="Logging categories to channels">Figure 7.1</A
>, queries are
logged to a file, statistics data is logged to a file and logged to
syslog.</P
><h4 class="figure"><a class="title" name="DNS3-CHP-7-FIG-1">Figure 7.1: Logging categories to channels</A
></H4
><img class="graphic" src="figs/dns3_0701.gif" alt="Figure 7.1"><p class="para">Channels allow you to filter by message<a class="indexterm" name="AUTOID-7069"></A
>
severity.  Here is the list of severities:</P
><blockquote class="screen"><pre class="screen">critical
error
warning
notice
info
debug [level]
dynamic</PRE
></BLOCKQUOTE
><p class="para">The top five severities (critical, error, warning, notice, and
info) are the familiar severity levels used by syslog.  The other two
(debug and dynamic) are unique to <span class="acronym">BIND</SPAN
> 8.</P
><p class="para"><a class="indexterm" name="AUTOID-7075"></A
><code class="literal">debug</CODE
> is name server debugging for which you can
specify a debug level.  If you omit the debug level, then the level is
assumed to be one.  If you specify a debug level, you will see
messages of that level when name server debugging is turned on (i.e.,
if you specify <span class="quote">"debug 3"</SPAN
>, then you will see level three
debugging messages even when you only send one<a class="indexterm" name="AUTOID-7079"></A
>
<span class="acronym">USR</SPAN
>1 signal to the name server).  If you specify
<code class="literal">dynamic</CODE
> severity, then the name server will log
messages that match its debug level (i.e., if you send one
<span class="acronym">USR</SPAN
>1 signal to the name server, it will log
messages from level one.  If you send three <span class="acronym">USR</SPAN
>1
signals to the name server, it will log messages from levels one
through three.) The default severity is <code class="literal">info</CODE
>, which
means you won't see debug messages unless you specify the
severity.</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> You can configure a channel to log both debug messages and
syslog messages to a file.  However the converse is not true&nbsp;- you
cannot configure a channel to log both debug messages and syslog
messages with syslog&nbsp;- only syslog messages can be sent to
syslog.</P
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-7089"></A
>Let's configure a couple of channels to show you how this works.  The
first channel will go to syslog and will log with facility
<code class="literal">daemon</CODE
>, sending those messages of severity
<code class="literal">info</CODE
> and above.  The second channel will go to a
file, logging debug messages at any level as well as syslog messages.
Here is the <code class="literal">logging</CODE
> statement for the
<span class="acronym">BIND</SPAN
> 8 configuration file:</P
><blockquote class="screen"><pre class="screen">logging {
  channel my_syslog {
     syslog daemon;
     // Debug messages will not be sent to syslog, so
     // there is no point to setting the severity to
     // debug or dynamic; use the lowest syslog level: info.
     severity info;
  };
  channel my_file {
     file &quot;log.msgs&quot;;
     // Set the severity to dynamic to see all the debug messages.
     severity dynamic;
  };
};</PRE
></BLOCKQUOTE
><p class="para">Now that we've configured a couple of channels, we have to tell
the name server exactly what to send to those channels.  Let's
implement what was pictured in <a class="xref" href="#DNS3-CHP-7-FIG-1" title="Logging categories to channels">Figure 7.1</A
> with
statistics going to syslog and to the file, and queries going to the
file.  The category specification is part of the <code class="literal">logging</CODE
> statement, so
we'll build on the previous <code class="literal">logging</CODE
> statement:</P
><blockquote class="screen"><pre class="screen">logging {
  channel my_syslog {
     syslog daemon;
     severity info;
  };
  channel my_file {
     file &quot;log.msgs&quot;;
     severity dynamic;
  };

  category statistics { my_syslog; my_file; };
  category queries { my_file; };
};</PRE
></BLOCKQUOTE
><p class="para">With this <code class="literal">logging</CODE
> statement in your configuration file, start
your name server and send it a few queries.  But nothing is written to
<i class="filename">log.msgs</I
>!  (Well, if you wait long enough, the
name server's statistics will show up in
<i class="filename">log.msgs</I
>.)  You had expected those queries to be
logged.  Alas, you have to turn on name server debugging to get
queries logged:</P
><blockquote class="screen"><pre class="screen"># <code class="userinput"><b>kill -USR1 `cat /etc/named.pid`</B
></CODE
></PRE
></BLOCKQUOTE
><p class="para">Now send your name server some queries and they are logged in
<i class="filename">log.msgs</I
>.  But look around: there's a new file
called<a class="indexterm" name="AUTOID-7110"></A
>
<i class="filename">named.run</I
>.  It has all the other debugging
information written to it.  You didn't want all this other debugging,
though; you just wanted the statistics and queries.  How do you get
rid of <i class="filename">named.run</I
>?</P
><p class="para">There's a special category we haven't told you about:<a class="indexterm" name="AUTOID-7115"></A
>
<code class="literal">default</CODE
>.  If you don't specify any channels for a
category, the <code class="literal">default</CODE
> category is used.  Let's
change the <code class="literal">default</CODE
> category to discard all logging
messages (there's a channel called <code class="literal">null</CODE
> for this
purpose):</P
><blockquote class="screen"><pre class="screen">logging {
  channel my_syslog {
     syslog daemon;
     severity info;
  };
  channel my_file {
     file &quot;log.msgs&quot;;
     severity dynamic;
  };

  category default { null; };
  category statistics { my_syslog; my_file; };
  category queries { my_file; };
};</PRE
></BLOCKQUOTE
><p class="para">Now, start your server, turn on debugging to level one, and send
some queries.  The queries end up in <i class="filename">log.msgs</I
> and
<i class="filename">named.run</I
> was created but the file is empty.
Great!  We're getting the hang of this after all.</P
><p class="para">A few days pass.  One of your co-workers notices that the name
server is sending many fewer messages to syslog than it used to.  In
fact, the only syslog messages are statistics messages.  The ones your
co-worker watched, the zone transfer messages, are gone.  What
happened?</P
><p class="para">Well, the <code class="literal">default</CODE
> category is set up, by default, to send
messages to both syslog and to the debug file
(<i class="filename">named.run</I
>).  When the <code class="literal">default</CODE
> category was
configured to the <code class="literal">null</CODE
> channel, the other syslog messages were turned
off.  Here's what we should have used:</P
><blockquote class="screen"><pre class="screen">category default { my_syslog; };</PRE
></BLOCKQUOTE
><p class="para">This sends the syslog messages to syslog, but does not write
debug or syslog messages to a file.</P
><p class="para">Remember, we said you'd have to experiment for a while with
logging to get exactly what you want.  We hope this example gives you
a clue what you might run into.  Now, let's go over the details of
logging.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-7134">7.5.1 The Logging Statement</A
></H3
><p class="para">Here's the syntax of the<a class="indexterm" name="DNS3-IDX-7-LOGGING-BIND-8-LOGGING-STATEMENT"></A
>
<code class="literal">logging</CODE
> statement.  It's rather intimidating.
We'll go over some more examples as we explain what each clause
means:</P
><blockquote class="screen"><pre class="screen">logging {
  [ channel channel_name {
    ( file path_name
       [ versions ( number | unlimited ) ]
       [ size size_spec ]
     | syslog ( kern | user | mail | daemon | auth | syslog | lpr |
                news | uucp | cron | authpriv | ftp |
                local0 | local1 | local2 | local3 |
                local4 | local5 | local6 | local7 )
     | null );

    [ severity ( critical | error | warning | notice |
                 info  | debug [ level ] | dynamic ); ]
    [ print-category yes_or_no; ]
    [ print-severity yes_or_no; ]
    [ print-time yes_or_no; ]
  }; ]

  [ category category_name {
    channel_name; [ channel_name; ... ]
  }; ]
  ...
};</PRE
></BLOCKQUOTE
><p class="para">Here are the default channels.  The name server will make these
channels even if you do not want them.  You cannot redefine these
channels.  You can only add more channels:</P
><blockquote class="screen"><pre class="screen">channel default_syslog {
    syslog daemon;        // send to syslog's daemon facility
    severity info;        // only send priority info and higher
};

channel default_debug {
    file &quot;named.run&quot;;     // write to named.run in the
                          // working directory
    severity dynamic;     // log at the server's current debug level
};

channel default_stderr {  // writes to stderr
    file &quot;&lt;stderr&gt;&quot;;      // this is illustrative only;
                          // there's currently no way of
                          // specifying an internal file
                          // descriptor in the configuration language.
    severity info;        // only send priority info and higher
};

channel null {
    null;                 // toss anything sent to this channel
};</PRE
></BLOCKQUOTE
><p class="para">If you do not assign channels to the categories <code class="literal">default</CODE
>, <code class="literal">panic</CODE
>,
<code class="literal">packet</CODE
>, and <code class="literal">eventlib</CODE
>, the name server will assign these channels by
default:</P
><blockquote class="screen"><pre class="screen">logging {
    category default { default_syslog; default_debug; };
    category panic { default_syslog; default_stderr; };
    category packet { default_debug; };
    category eventlib { default_debug; };
};</PRE
></BLOCKQUOTE
><p class="para">As we mentioned earlier, the <code class="literal">default</CODE
> category logs to both
syslog and to the debug file (which by default is
<i class="filename">named.run</I
>).  This means that all syslog messages
of severity <code class="literal">info</CODE
> and above are sent to syslog, and when debugging is
turned on, the syslog messages and debug messages are written to
<i class="filename">named.run</I
>.  This more or less matches the
<span class="acronym">BIND</SPAN
> 4 behavior.<a class="indexterm" name="AUTOID-7156"></A
><a class="indexterm" name="AUTOID-7157"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-7158">7.5.2 Channel Details</A
></H3
><p class="para">A channel may be defined to go to a file, to syslog, or to
null.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-7161">7.5.2.1 File channels </A
></H4
><p class="para"><a class="indexterm" name="AUTOID-7164"></A
>If a channel goes to a file, you must specify the file's path name.
Optionally, you can specify how many versions of the file can exist at
one time and how big the file may grow.</P
><p class="para">If you specify that there can be three versions,
<span class="acronym">BIND</SPAN
> 8 will keep around <i class="filename">file</I
>,
<i class="filename">file.0</I
>, <i class="filename">file.1</I
>, and
<i class="filename">file.2</I
>.  After the name server starts or after it
is restarted by a <span class="acronym">HUP</SPAN
> signal, it will move
<i class="filename">file.1</I
> to <i class="filename">file.2</I
>,
<i class="filename">file.0</I
> to <i class="filename">file.1</I
>,
<i class="filename">file</I
> to <i class="filename">file.0</I
>, and start a
new copy of <i class="filename">file</I
>.  If you specify unlimited
versions, <span class="acronym">BIND</SPAN
> 8.1.2 will keep 99 versions.</P
><p class="para">If you specify a maximum file size, <span class="acronym">BIND</SPAN
> 8
will stop writing to the file after it reaches the specified size.
Unlike the versions clause (mentioned in the last paragraph), the file
will not be rolled over and a new file opened when the specified size
is reached.  The name server just stops writing to the file.  If you
do not specify a file size, the file will grow indefinitely.</P
><p class="para">Here is an example file channel using the <code class="literal">versions</CODE
> and <code class="literal">size</CODE
>
clauses:</P
><blockquote class="screen"><pre class="screen">logging{
  channel my_file {
     file &quot;log.msgs&quot; versions 3 size 10k;
     severity dynamic;
  };
};</PRE
></BLOCKQUOTE
><p class="para">The size can include a scaling factor as in the example.  <code class="literal">K</CODE
> or <code class="literal">k</CODE
>
is kilobytes.  <code class="literal">M</CODE
> or <code class="literal">m</CODE
> is megabytes.  <code class="literal">G</CODE
> or <code class="literal">g</CODE
> is gigabytes.</P
><p class="para">It's important to specify the severity as either <code class="literal">debug</CODE
> or
<code class="literal">dynamic</CODE
> if you want to see debug messages.  The default severity is
<code class="literal">info</CODE
>, which will only show you syslog messages.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-7198">7.5.2.2 Syslog channels</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-7201"></A
>If a channel goes to syslog, you can specify the facility to be any of
the following: <code class="literal">kern</CODE
>, <code class="literal">user</CODE
>,
<code class="literal">mail</CODE
>, <code class="literal">daemon</CODE
>,
<code class="literal">auth</CODE
>, <code class="literal">syslog</CODE
>,
<code class="literal">lpr</CODE
>, <code class="literal">news</CODE
>,
<code class="literal">uucp</CODE
>, <code class="literal">cron</CODE
>,
<code class="literal">authpriv</CODE
>, <code class="literal">ftp</CODE
>,
<code class="literal">local0</CODE
>, <code class="literal">local1</CODE
>,
<code class="literal">local2</CODE
>, <code class="literal">local3</CODE
>,
<code class="literal">local4</CODE
>, <code class="literal">local5</CODE
>,
<code class="literal">local6</CODE
>, <code class="literal">local7</CODE
>.  The default is
<code class="literal">daemon</CODE
>.  We recommend that you use the
default.</P
><p class="para">Here's an example syslog channel using the facility <code class="literal">local0</CODE
>
instead of <code class="literal">daemon</CODE
>:</P
><blockquote class="screen"><pre class="screen">logging {
    channel my_syslog {
        syslog local0;        // send to syslog's local0 facility
        severity info;        // only send priority info and higher
    };
};</PRE
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-7228">7.5.2.3 Null channel</A
></H4
><p class="para">There is a predefined channel called<a class="indexterm" name="AUTOID-7231"></A
>
<code class="literal">null</CODE
> for those messages you want to throw
away.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-7234">7.5.2.4 Stderr channel</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-7237"></A
><a class="indexterm" name="AUTOID-7239"></A
>There is a predefined channel called <code class="literal">default_stderr</CODE
>
for any messages you'd like written to the <i class="filename">stderr</I
>
file descriptor of the name server.  You cannot configure any other
file descriptors.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-7243">7.5.2.5 Data formatting for all channels</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-7246"></A
>The <span class="acronym">BIND</SPAN
> 8 logging facility also allows you
some control over the formatting of messages.  You can add to the
messages: a time stamp, the category, or the severity.</P
><p class="para">Here's an example debug message that has all the extra
goodies:</P
><blockquote class="screen"><pre class="screen">01-Feb-1998 13:19:18.889 config: debug 1: source = db.127.0.0</PRE
></BLOCKQUOTE
><p class="para">The category for this message is <code class="literal">config</CODE
> and the severity is
<code class="literal">debug</CODE
> level one.</P
><p class="para">Here's an example channel configuration that includes all three
additions:</P
><blockquote class="screen"><pre class="screen">logging {
  channel my_file {
     file &quot;log.msgs&quot;;
     severity debug;
     print-category yes;
     print-severity yes;
     print-time yes;
  };
};</PRE
></BLOCKQUOTE
><p class="para">There is not much point in adding the time stamp for messages to
a syslog channel since syslog adds the time and date itself.<a class="indexterm" name="AUTOID-7258"></A
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-7259">7.5.3 Category Details</A
></H3
><p class="para"><a class="indexterm" name="DNS3-IDX-7-CATEGORIES-OF-DATA-LOGGING-2"></A
>There are lots of categories&nbsp;- lots!  We'll list them here so you
can see them all.  Rather than trying to figure out which you want to
see, we recommend that you configure your name server to print out all
of its log messages, with their category and severity, and then pick
out the ones you want to see.  We'll show you how to do this after
telling you about the categories:</P
><dl class="variablelist"><dt class="term">default</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7269"></A
>If you don't specify any channels for a category, the
<code class="literal">default</CODE
> category is used instead.  In that sense,
<code class="literal">default</CODE
> is synonymous with all categories.
However, there are some messages that didn't end up in a category. So,
even if you specify channels for each category individually, you'll
still want to specify a channel for the <code class="literal">default</CODE
>
category for all the uncategorized messages.</P
><p class="para">If you do not specify a channel for the <code class="literal">default</CODE
> category, one
will be specified for you:</P
></DD
></DL
><blockquote class="screen"><pre class="screen">        category default { default_syslog; default_debug; };</PRE
></BLOCKQUOTE
><dl class="variablelist"><dt class="term">cname</DT
><dd class="listitem"><p class="para"><span class="acronym">CNAME</SPAN
> errors (e.g., <span class="quote">"... has
<span class="acronym">CNAME</SPAN
> and other data"</SPAN
>)<a class="indexterm" name="AUTOID-7285"></A
></P
></DD
><dt class="term">config</DT
><dd class="listitem"><p class="para">Configuration file processing<a class="indexterm" name="AUTOID-7291"></A
></P
></DD
><dt class="term">db</DT
><dd class="listitem"><p class="para">Database operations<a class="indexterm" name="AUTOID-7297"></A
></P
></DD
><dt class="term">eventlib</DT
><dd class="listitem"><p class="para">System events; must point to a file channel<a class="indexterm" name="AUTOID-7303"></A
></P
></DD
><dt class="term">insist</DT
><dd class="listitem"><p class="para">Internal consistency check failures<a class="indexterm" name="AUTOID-7309"></A
></P
></DD
><dt class="term">lame-servers</DT
><dd class="listitem"><p class="para">Detection of bad delegation<a class="indexterm" name="AUTOID-7315"></A
></P
></DD
><dt class="term">load</DT
><dd class="listitem"><p class="para">Zone loading messages<a class="indexterm" name="AUTOID-7321"></A
></P
></DD
><dt class="term">maintenance</DT
><dd class="listitem"><p class="para">Maintenance events (e.g., system queries)<a class="indexterm" name="AUTOID-7327"></A
></P
></DD
><dt class="term">ncache</DT
><dd class="listitem"><p class="para">Negative caching events<a class="indexterm" name="AUTOID-7333"></A
></P
></DD
><dt class="term">notify</DT
><dd class="listitem"><p class="para">Asynchronous change notifications<a class="indexterm" name="AUTOID-7339"></A
></P
></DD
><dt class="term">os</DT
><dd class="listitem"><p class="para">Problems with the operating system<a class="indexterm" name="AUTOID-7345"></A
></P
></DD
><dt class="term">packet</DT
><dd class="listitem"><p class="para">Decodes of packets received and sent; must point to a file
channel<a class="indexterm" name="AUTOID-7351"></A
></P
></DD
><dt class="term">panic</DT
><dd class="listitem"><p class="para">Problems that cause the shutdown of the server<a class="indexterm" name="AUTOID-7357"></A
></P
></DD
><dt class="term">parser</DT
><dd class="listitem"><p class="para">Parsing of the configuration file<a class="indexterm" name="AUTOID-7363"></A
></P
></DD
><dt class="term">queries</DT
><dd class="listitem"><p class="para">Analogous to <span class="acronym">BIND</SPAN
> 4's query logging<a class="indexterm" name="AUTOID-7370"></A
></P
></DD
><dt class="term">response-checks</DT
><dd class="listitem"><p class="para">Malformed responses, unrelated additional information,
etc.<a class="indexterm" name="AUTOID-7376"></A
></P
></DD
><dt class="term">security</DT
><dd class="listitem"><p class="para">Approved/unapproved requests<a class="indexterm" name="AUTOID-7382"></A
></P
></DD
><dt class="term">statistics</DT
><dd class="listitem"><p class="para">Periodic reports of activities<a class="indexterm" name="AUTOID-7388"></A
></P
></DD
><dt class="term">update</DT
><dd class="listitem"><p class="para">Dynamic update events<a class="indexterm" name="AUTOID-7394"></A
></P
></DD
><dt class="term">xfer-in</DT
><dd class="listitem"><p class="para">Zone transfers from remote name servers to the local name
server<a class="indexterm" name="AUTOID-7400"></A
></P
></DD
><dt class="term">xfer-out</DT
><dd class="listitem"><p class="para">Zone transfers from the local name server to remote name
servers<a class="indexterm" name="AUTOID-7406"></A
></P
></DD
></DL
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-7408">7.5.3.1 Viewing all category messages</A
></H4
><p class="para">A good activity to start your foray into logging is to configure
your name server to log all of its messages to a file, with the
category and severity, and then pick out which messages you are
interested in.</P
><p class="para">Earlier we listed the categories that are configured by
default:</P
><blockquote class="screen"><pre class="screen">logging {
    category default { default_syslog; default_debug; };
    category panic { default_syslog; default_stderr; };
    category packet { default_debug; };
    category eventlib { default_debug; };
};</PRE
></BLOCKQUOTE
><p class="para">By default, the category and severity are not included with
messages written to the <code class="literal">default_debug</CODE
> channel.  In order for you to
see all the log messages, with their category and severity, you'll
have to configure each of these categories yourself.</P
><p class="para">Here is a logging statement that does just that:</P
><blockquote class="screen"><pre class="screen">logging {
  channel my_file {
     file &quot;log.msgs&quot;;
     severity dynamic;
     print-category yes;
     print-severity yes;
  };

  category default  { default_syslog; my_file; };
  category panic    { default_syslog; my_file; };
  category packet   { my_file; };
  category eventlib { my_file; };
  category queries  { my_file; };
};</PRE
></BLOCKQUOTE
><p class="para">Notice that we've defined each category to include the channel
<code class="literal">my_file</CODE
>.  We also added one category that wasn't in the default
logging statement above&nbsp;- <code class="literal">queries</CODE
>.  Queries aren't printed unless you
configure the <code class="literal">queries</CODE
> category.</P
><p class="para">Start your server and turn on debugging to level one.  You'll
see messages in <i class="filename">log.msgs</I
> that look like the
following:</P
><blockquote class="screen"><pre class="screen">queries: info: XX /192.253.253.4/foo.movie.edu/A
default: debug 1: req: nlookup(foo.movie.edu) id 4 type=1 class=1
default: debug 1: req: found 'foo.movie.edu' as 'foo.movie.edu' (cname=0)
default: debug 1: ns_req: answer -&gt; [192.253.253.4].2338 fd=20 id=4 size=87</PRE
></BLOCKQUOTE
><p class="para">Once you see the messages that interest you, configure your
server to log only those messages.<a class="indexterm" name="AUTOID-7425"></A
><a class="indexterm" name="AUTOID-7426"></A
><a class="indexterm" name="AUTOID-7427"></A
><a class="indexterm" name="AUTOID-7428"></A
><a class="indexterm" name="AUTOID-7429"></A
></P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_04.htm" title="7.4 Changing BIND 8 System File Locations"><img src="../gifs/txtpreva.gif" alt="Previous: 7.4 Changing BIND 8 System File Locations" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="DNS &amp; BIND"><img src="../gifs/txthome.gif" alt="DNS &amp; BIND" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch07_06.htm#AUTOID-7461" title="7.6 Keeping Everything Running Smoothly"><img src="../gifs/txtnexta.gif" alt="Next: 7.6 Keeping Everything Running Smoothly" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.4 Changing BIND 8 System File Locations</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.6 Keeping Everything Running Smoothly</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
