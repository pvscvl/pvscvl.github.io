<html><head>
<title>[Chapter 6] 6.3 Minimizing Pain and Suffering</TITLE>
<meta name="DC.title" content="DNS &amp; BIND"><meta name="DC.creator" content="Cricket Liu &amp; Paul Albitz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T18:29:13Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-512-2" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch06_01.htm" title="6. Configuring Hosts"><link rel="prev" href="ch06_02.htm#AUTOID-5044" title="6.2 Sample Resolver Configurations"><link rel="next" href="ch06_04.htm#AUTOID-5833" title="6.4 Vendor-Specific Options"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="DNS &amp; BIND" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="DNS &amp; BIND"><area shape="RECT" coords="467,0,514,18" href="../search/dsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch06_02.htm#AUTOID-5044" title="6.2 Sample Resolver Configurations"><img src="../gifs/txtpreva.gif" alt="Previous: 6.2 Sample Resolver Configurations" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 6<br>Configuring Hosts</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch06_04.htm#AUTOID-5833" title="6.4 Vendor-Specific Options"><img src="../gifs/txtnexta.gif" alt="Next: 6.4 Vendor-Specific Options" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="AUTOID-5084">6.3 Minimizing Pain and Suffering</A
></H2
><p class="para"><a class="indexterm" name="DNS3-IDX-6-DNS-DOMAIN-NAME-SYSTEM-CONFIGURING-HOSTS-FOR-CONSEQUENCES-OF"></A
><a class="indexterm" name="DNS3-IDX-6-HOSTS-CONFIGURING-TO-USE-DNS-CONSEQUENCES-OF"></A
><a class="indexterm" name="DNS3-IDX-6-CONFIGURING-HOSTS-TO-USE-DNS-CONSEQUENCES-OF"></A
>Now that you've configured your host to use
<span class="acronym">DNS</SPAN
>, what's going to change?  Will your users be
forced to type long domain names? Will they have to change their mail
addresses and mailing lists?</P
><p class="para">Thanks to the search list, much of this will continue working as
before.  There are some exceptions, though, and there are notable
differences in the way that some programs behave when they use
<span class="acronym">DNS</SPAN
>. We'll try to cover all of the common
ones.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-5102">6.3.1 Differences in Service Behavior</A
></H3
><p class="para">As you've seen earlier in this chapter, programs like<a class="indexterm" name="AUTOID-5105"></A
>
<kbd class="command">telnet</KBD
>, <kbd class="command">ftp</KBD
>,
<kbd class="command">rlogin</KBD
>, and <kbd class="command">rsh</KBD
> apply the search
list to domain name arguments that aren't dot-terminated. That means
that if you're in <i class="systemitem.sitename">movie.edu</I
>
(i.e., your default domain is <i class="systemitem.sitename">movie.edu</I
> and your search list includes
<i class="systemitem.sitename">movie.edu</I
>), you can type
either:</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>telnet misery</B
></CODE
></PRE
></BLOCKQUOTE
><p class="para">or:</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>telnet misery.movie.edu</B
></CODE
></PRE
></BLOCKQUOTE
><p class="para">or even:</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>telnet misery.movie.edu.</B
></CODE
></PRE
></BLOCKQUOTE
><p class="para">and get to the same place. The same holds true for the other
services, too. There's one other behavioral difference you may benefit
from: because a name server may return more than one
<span class="acronym">IP</SPAN
> address when you look up an address, modern
versions of <kbd class="command">telnet</KBD
> and <kbd class="command">ftp</KBD
> will
try to connect to the first address returned, and if the connection is
refused or times out, for example, it will try the next, and so
on:</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>ftp tootsie</B
></CODE
>
ftp: connect to address 192.249.249.244: Connection timed out
Trying 192.253.253.244...
Connected to tootsie.movie.edu.
220 tootsie.movie.edu FTP server (Version 16.2 Fri Apr 26
    18:20:43 GMT 1991) ready.
Name (tootsie: guest):</PRE
></BLOCKQUOTE
><p class="para">And remember that with the <i class="filename">resolv.conf</I
><a class="indexterm" name="AUTOID-5130"></A
><a class="indexterm" name="AUTOID-5132"></A
><a class="indexterm" name="AUTOID-5134"></A
>
<i class="structfield">sortlist</I
> directive, you can even control
the order in which your applications try those <span class="acronym">IP</SPAN
>
addresses.</P
><p class="para">One oddball service is<a class="indexterm" name="AUTOID-5140"></A
><a class="indexterm" name="AUTOID-5142"></A
>
<span class="acronym">NFS</SPAN
>. The <kbd class="command">mount</KBD
> command can
handle domain names just fine, and you can put domain names into
<i class="filename">/etc/fstab</I
> (your vendor may call it
<i class="filename">/etc/checklist</I
>), too. But watch out for<a class="indexterm" name="AUTOID-5148"></A
><a class="indexterm" name="AUTOID-5150"></A
><a class="indexterm" name="AUTOID-5152"></A
><a class="indexterm" name="AUTOID-5154"></A
>
<i class="filename">/etc/exports</I
> and
<i class="filename">/etc/netgroup</I
>. <i class="filename">/etc/exports</I
>
controls which filesystems you allow various clients to
<span class="acronym">NFS</SPAN
>-mount. You can also assign a name to a group of
hosts in <i class="filename">netgroup</I
> and then allow them access via
<i class="filename">exports</I
> by using the name of the group.</P
><p class="para">Unfortunately, older versions of <span class="acronym">NFS</SPAN
> don't
<em class="emphasis">really</EM
> use <span class="acronym">DNS</SPAN
> to check
<i class="filename">exports</I
> or
<i class="filename">netgroup</I
>&nbsp;- the client tells the
<span class="acronym">NFS</SPAN
> server its identity in an
<span class="acronym">RPC</SPAN
> (Remote Procedure Call) packet. Consequently,
the client's identity is whatever the client claims it is. And the
identity a host uses in Sun <span class="acronym">RPC</SPAN
> is the local host's
<kbd class="command">hostname</KBD
>. So the name you use in either file needs
to match the client's <kbd class="command">hostname</KBD
>, which isn't
necessarily its domain name.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-5173">6.3.2 Electronic Mail</A
></H3
><p class="para"><a class="indexterm" name="DNS3-IDX-6-ELECTRONIC-MAIL-DNS-AND"></A
><a class="indexterm" name="DNS3-IDX-6-SENDMAIL-PROGRAM-DNS-AND"></A
>Some electronic mail programs, including <kbd class="command">sendmail</KBD
>,
also don't work as expected; <kbd class="command">sendmail</KBD
> doesn't use
the search list quite the same way other programs do. Instead, when
configured to use a name server, it uses a process called<a class="indexterm" name="AUTOID-5184"></A
>
<i class="firstterm">canonicalization</I
> to convert names in electronic
mail addresses to full, canonical domain names.</P
><p class="para">In canonicalization, <kbd class="command">sendmail</KBD
> applies the
search list to a name and looks up data of type
<span class="acronym">ANY</SPAN
>, which matches any type of record. If the name
server queried finds a <span class="acronym">CNAME</SPAN
> record (an alias), it
replaces the name looked up with the canonical name the alias points
to.  If the name server queried finds an A record (an address),
<kbd class="command">sendmail</KBD
> uses the domain name that resolved to the
address as the canonical name.  If the name server doesn't find an
address, but finds one or more <span class="acronym">MX</SPAN
> records:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">If the search list has not yet been appended,
<kbd class="command">sendmail</KBD
> uses the domain name that resolved to the
<span class="acronym">MX</SPAN
> record(s) as the canonical name.</P
></LI
><li class="listitem"><p class="para">If one or more elements of the search list have been appended,
<kbd class="command">sendmail</KBD
> notes that the domain name is a potential
canonical name, and continues appending elements of the search list.
If a subsequent element of the search list turns up an address, the
domain name that turned up the address is the canonical name.
Otherwise, the domain name that found the first <span class="acronym">MX</SPAN
>
record is used as the canonical name.[7]</P
><blockquote class="footnote"><p class="para">[7] All this complexity is necessary to deal with wildcard
<span class="acronym">MX</SPAN
> records, which we'll discuss in <a class="xref" href="ch15_01.htm" title="Miscellaneous">Chapter 15, <cite class="chapter">Miscellaneous</CITE
></A
>.</P
></BLOCKQUOTE
></LI
></UL
><p class="para"><kbd class="command">sendmail</KBD
> uses canonicalization several times
when processing an <span class="acronym">SMTP</SPAN
> message; it canonicalizes
the destination address and several fields in the
<span class="acronym">SMTP</SPAN
> headers.[8]</P
><blockquote class="footnote"><p class="para">[8] Some older versions of <kbd class="command">sendmail</KBD
> use a
different technique for doing canonicalization: they apply the search
list and query the name server for type <span class="acronym">CNAME</SPAN
>
records for the name in question. <span class="acronym">CNAME</SPAN
> matches
only <span class="acronym">CNAME</SPAN
> records. If a record is found, the name
is replaced with the domain name on the right-hand side of the
<span class="acronym">CNAME</SPAN
> record.</P
></BLOCKQUOTE
><p class="para"><kbd class="command">sendmail</KBD
> also sets macro
<i class="wordasword">w</I
> (not to be confused with class
<i class="wordasword">w</I
>) to the canonicalized
<kbd class="command">hostname</KBD
> when you freeze the
<i class="filename">sendmail.cf</I
> file, or, if you don't freeze your
configuration file, when the <kbd class="command">sendmail</KBD
> daemon starts
up. So even if you set your <kbd class="command">hostname</KBD
> to a short,
single-part name, <kbd class="command">sendmail</KBD
> will canonicalize the
<kbd class="command">hostname</KBD
> using the search list defined in
<i class="filename">resolv.conf</I
>.</P
><p class="para">This is important because the local host's canonical name is the
only name <kbd class="command">sendmail</KBD
> recognizes, by default, as the
local host's name. <kbd class="command">sendmail</KBD
> will attempt to forward
mail that's addressed to a domain name it thinks isn't local. So, for
example, unless you configure <kbd class="command">sendmail</KBD
> to recognize
the host's aliases (using class <i class="option">w</I
> or fileclass <i class="option">w</I
>, as we showed in
<a class="xref" href="ch05_01.htm" title="DNS and Electronic Mail">Chapter 5, <cite class="chapter"><span class="acronym">DNS</SPAN
> and Electronic Mail</CITE
></A
>), the host will try to forward messages
that arrive addressed for anything other than the canonical domain
name.</P
><p class="para"><a class="indexterm" name="AUTOID-5236"></A
>There's another important implication of the way
<kbd class="command">sendmail</KBD
> canonicalizes the local
<kbd class="command">hostname</KBD
>&nbsp;- <kbd class="command">sendmail</KBD
>
recognizes only the local host's canonical name in
<span class="acronym">MX</SPAN
> lists. Consequently, if you use anything other
than a host's canonical name in an <span class="acronym">MX</SPAN
> record, you
run the risk that the host will not recognize it. This can cause mail
to loop and then be returned to the sender.</P
><p class="para">One last note on <kbd class="command">sendmail</KBD
>: when you start
running a name server, if you're running an older version of
<kbd class="command">sendmail</KBD
> (before version 8), you should also set
the <i class="wordasword">I</I
> option in your<a class="indexterm" name="AUTOID-5248"></A
>
<i class="filename">sendmail.cf</I
> file. Option <i class="option">I</I
>
determines what <kbd class="command">sendmail</KBD
> does if a lookup for a
destination host fails. When using <i class="filename">/etc/hosts</I
>, a
failed lookup is fatal. If you search the host table once for a name
and don't find it, it's doubtful it'll miraculously appear later, so
the mailer may as well return the message. When using
<span class="acronym">DNS</SPAN
>, however, a lookup failure may be temporary,
because of intermittent networking problems, for example. Setting
option <i class="wordasword">I</I
> instructs
<kbd class="command">sendmail</KBD
> to queue mail if a lookup fails, instead
of returning it to the sender.  Just add <code class="literal">OI</CODE
> to your
<i class="filename">sendmail.cf</I
> file and refreeze it, if you use a
frozen configuration file.<a class="indexterm" name="AUTOID-5259"></A
><a class="indexterm" name="AUTOID-5260"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-5261">6.3.3 Updating .rhosts, hosts.equiv, etc.</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-5264"></A
><a class="indexterm" name="AUTOID-5267"></A
><a class="indexterm" name="AUTOID-5270"></A
><a class="indexterm" name="AUTOID-5272"></A
><a class="indexterm" name="AUTOID-5274"></A
>Once you start using <span class="acronym">DNS</SPAN
>, you may also need to
disambiguate host names in your host's authorization files. Entries
that use simple, one-part host names will now be assumed to be in the
local domain. For example, the <i class="filename">lpd.allow</I
> file on
<i class="systemitem.sitename">wormhole</I
> might include:</P
><blockquote class="screen"><pre class="screen">wormhole
terminator
diehard
robocop
mash
twins</PRE
></BLOCKQUOTE
><p class="para">If we move <i class="systemitem.sitename">mash</I
> and
<i class="systemitem.sitename">twins</I
> into the <i class="systemitem.sitename">comedy.movie.edu</I
> domain, though, they won't
be allowed to access <em class="emphasis">lpd</EM
>; the entries in
<i class="filename">lpd.allow</I
> only allow <i class="systemitem.sitename">mash.movie.edu</I
> and <i class="systemitem.sitename">twins.movie.edu</I
>.  So we'd have to add the
proper domains to host names outside of the local host's default
domain:</P
><blockquote class="screen"><pre class="screen">wormhole
terminator
diehard
robocop
mash.comedy.movie.edu
twins.comedy.movie.edu</PRE
></BLOCKQUOTE
><p class="para">Some other files you should check for host names in need of
domain-ification are:</P
><blockquote class="screen"><pre class="screen">hosts.equiv
.rhosts<a class="indexterm" name="AUTOID-5291"></A
><a class="indexterm" name="AUTOID-5293"></A
>
X0.hosts
sendmail.cf</PRE
></BLOCKQUOTE
><p class="para">Sometimes, simply running these files through a canonicalization
filter&nbsp;- a program that translates host names to domain names
using the search list&nbsp;- is enough to disambiguate them. Here's a
short canonicalization filter in Perl to help you out:</P
><blockquote class="screen"><pre class="screen">#!/usr/bin/perl

# Perl canonicalization filter
#
# Expects one hostname per line, in the first field (a la .rhosts,
# X0.hosts)

use Socket;

while( &lt; &gt;)
    if(($hostname, $null) = split){
      ($domainname, $aliases, $addrtype, $length, @addrs) =
            gethostbyname($hostname);
      if($domainname) {s/$hostname/$domainname/;}
    }
    print;
}</PRE
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-5297">6.3.4 Providing Aliases</A
></H3
><p class="para"><a class="indexterm" name="DNS3-IDX-6-ALIASES"></A
>Even if you cover all your bases and convert all your
<i class="filename">.rhosts</I
>, <i class="filename">hosts.equiv</I
>, and
<i class="filename">sendmail.cf</I
> files after you configure your host
to use <span class="acronym">DNS</SPAN
>, your users will still have to adjust to
using domain names. Hopefully, the confusion they feel will be
minimal, and will be more than offset by the benefits of
<span class="acronym">DNS</SPAN
>.</P
><p class="para">One way to make your users' lives less confusing after
configuring <span class="acronym">DNS</SPAN
> is to provide aliases for
well-known hosts that are no longer reachable using their familiar
names. For example, our users are accustomed to typing <kbd class="command">telnet
doofy</KBD
> or <kbd class="command">rlogin doofy</KBD
> to get to the
bulletin board system run by the movie studio on the other side of
town. Now they'll have to start using <i class="systemitem.sitename">doofy</I
>'s full domain name, <i class="systemitem.sitename">doofy.maroon.com</I
>. But most of our users
don't know the full domain name, and it'll be some time before we can
tell all of them and they get used to it.</P
><p class="para">Luckily, <span class="acronym">DNS</SPAN
> will let you define aliases for
your users.  All we need to do is set the<a class="indexterm" name="AUTOID-5315"></A
><a class="indexterm" name="AUTOID-5317"></A
>
environment variable <i class="envar">HOSTALIASES</I
> to the pathname of a
file that contains mappings between aliases and domain names. For
example, to set up a system-wide alias for <i class="systemitem.sitename">doofy</I
>, we could set
<i class="envar">HOSTALIASES</I
> to<a class="indexterm" name="AUTOID-5322"></A
>
<i class="filename">/etc/host.aliases</I
> in the system's shell startup
files, and add:</P
><blockquote class="screen"><pre class="screen">doofy    doofy.maroon.com</PRE
></BLOCKQUOTE
><p class="para">to <i class="filename">/etc/host.aliases</I
>. The alias file format
is simple: the alias starts the line in column one, followed by
whitespace, and then the domain name that corresponds to the
alias. The domain name is written without a trailing dot.  The alias
can't contain dots.</P
><p class="para">Now, when our users type <kbd class="command">telnet doofy</KBD
> or
<kbd class="command">rlogin doofy</KBD
>, the resolver will transparently
substitute <i class="systemitem.sitename">doofy.maroon.com</I
> for
<i class="systemitem.sitename">doofy</I
> in the name server
query. The message the users see will look something like:</P
><blockquote class="screen"><pre class="screen">Trying...
Connected to doofy.maroon.com.
Escape character is '^]'.
IRIX System V.3 (sgi)
login:</PRE
></BLOCKQUOTE
><p class="para">If the resolver falls back to using
<i class="filename">/etc/hosts</I
>, though, our
<i class="envar">HOSTALIASES</I
> won't have any effect. So we should also
keep a similar alias in <i class="filename">/etc/hosts</I
>.</P
><p class="para">With time, and perhaps a little instruction, the users will
start to associate the full domain name they see in the
<kbd class="command">telnet</KBD
> banner with the bulletin board they
use.</P
><p class="para">With <i class="envar">HOSTALIASES</I
>, if you know the domain names
your users are likely to have trouble with, you can save them a little
frustration. If you don't know which hosts they're trying to get to,
you can let your users create their own alias files, and have each
point the <i class="envar">HOSTALIASES</I
> variable in his shell startup
file to his personal alias file.<a class="indexterm" name="AUTOID-5343"></A
><a class="indexterm" name="AUTOID-5344"></A
><a class="indexterm" name="AUTOID-5345"></A
><a class="indexterm" name="AUTOID-5346"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch06_02.htm#AUTOID-5044" title="6.2 Sample Resolver Configurations"><img src="../gifs/txtpreva.gif" alt="Previous: 6.2 Sample Resolver Configurations" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="DNS &amp; BIND"><img src="../gifs/txthome.gif" alt="DNS &amp; BIND" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch06_04.htm#AUTOID-5833" title="6.4 Vendor-Specific Options"><img src="../gifs/txtnexta.gif" alt="Next: 6.4 Vendor-Specific Options" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">6.2 Sample Resolver Configurations</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">6.4 Vendor-Specific Options</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
