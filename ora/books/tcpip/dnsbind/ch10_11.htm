<html><head>
<title>[Chapter 10] 10.11 Securing Your Name Server</TITLE>
<meta name="DC.title" content="DNS &amp; BIND"><meta name="DC.creator" content="Cricket Liu &amp; Paul Albitz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T18:36:44Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-512-2" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" title="10. Advanced Features and Security"><link rel="prev" href="ch10_10.htm" title="10.10 Avoiding a Bogus Name Server"><link rel="next" href="ch10_12.htm" title="10.12 Load Sharing Between Mirrored Servers"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="DNS &amp; BIND" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="DNS &amp; BIND"><area shape="RECT" coords="467,0,514,18" href="../search/dsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_10.htm" title="10.10 Avoiding a Bogus Name Server"><img src="../gifs/txtpreva.gif" alt="Previous: 10.10 Avoiding a Bogus Name Server" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 10<br>Advanced Features and Security</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_12.htm" title="10.12 Load Sharing Between Mirrored Servers"><img src="../gifs/txtnexta.gif" alt="Next: 10.12 Load Sharing Between Mirrored Servers" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="AUTOID-11338">10.11 Securing Your Name Server</A
></H2
><p class="para"><a class="indexterm" name="CH10.SECURITY1"></A
><a class="indexterm" name="AUTOID-11343"></A
><span class="acronym">BIND</SPAN
> 4.9 introduced several important security
features that help you protect your name
server. <span class="acronym">BIND</SPAN
> 8 continued the tradition by
introducing several more.  These features are particularly important
if your name server is running on the Internet, but they may also be
useful on purely internal name servers.</P
><p class="para">We'll start by discussing measures you should take on all name
servers for which security is important.  Then we'll describe a model
in which your name servers are split into two communities, one for
serving only resolvers and one for answering other name servers'
queries.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-11350">10.11.1 <span class="acronym">BIND</SPAN
> Version</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-11354"></A
><a class="indexterm" name="AUTOID-11357"></A
>One of the most important ways you can enhance the security of
your name server is to run the latest version of
<span class="acronym">BIND</SPAN
>.  All versions of <span class="acronym">BIND</SPAN
>
before 4.9.7 are susceptible to at least a few known
attacks.[4] <span class="acronym">BIND</SPAN
> 8.1.2 is an even better bet,
because of the many new security mechanisms it introduced.</P
><blockquote class="footnote"><p class="para">[4] In fact, part of the reason there <em class="emphasis">is</EM
> a <span class="acronym">BIND</SPAN
>
4.9.7, and the <span class="acronym">BIND</SPAN
> 4 release stream didn't stop
with 4.9.6, was 4.9.6's vulnerability to a particular attack.</P
></BLOCKQUOTE
><p class="para">But don't stop there: New attacks are being thought up all the
time, so you'll have to do your best to keep abreast of
<span class="acronym">BIND</SPAN
>'s vulnerabilities and the latest
<span class="quote">"safe"</SPAN
> version of <span class="acronym">BIND</SPAN
>.  One good way
to do that is to read the newsgroup <a class="systemitem.newsgroup" href="../../../WebStripper/protected.html#link=news:comp.protocols.dns.bind">comp.protocols.dns.bind</A
>
regularly.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-11372">10.11.2 Restricting Queries</A
></H3
><p class="para"><a class="indexterm" name="CH10.RESTRICT0"></A
><a class="indexterm" name="CH10.RESTRICT1"></A
><a class="indexterm" name="CH10.RESTRICT2"></A
>Up until <span class="acronym">BIND</SPAN
> 4.9, domain administrators had no way
to control who could look up data on their name servers. That makes a
certain amount of sense; the original idea behind
<span class="acronym">DNS</SPAN
> was to make information easily available all
over the Internet.</P
><p class="para">The neighborhood is not such a friendly place anymore,
though. In particular, people who run Internet firewalls may have a
legitimate need to hide certain parts of their name space from most of
the world but to make it available to a limited audience.</P
><p class="para"><a class="indexterm" name="AUTOID-11387"></A
><a class="indexterm" name="AUTOID-11389"></A
>The <span class="acronym">BIND</SPAN
> 8 <em class="emphasis">allow-query</EM
>
substatement allows you to place an <span class="acronym">IP</SPAN
>
address-based access list on queries.  The access list can apply to a
particular zone, or to any queries received by the server.  In
particular, the access list specifies which <span class="acronym">IP</SPAN
>
addresses are allowed to send queries to the server.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-11396">10.11.2.1 Restricting all queries</A
></H4
><p class="para">The global form of the <em class="emphasis">allow-query</EM
>
substatement looks like this:</P
><blockquote class="screen"><pre class="screen">options {
                allow-query { address_match_list; };
};</PRE
></BLOCKQUOTE
><p class="para">So to restrict our name server to answering queries from the two
main Movie U. networks, we'd use:</P
><blockquote class="screen"><pre class="screen">options {
                allow-query { 192.249.249/24; 192.253.253/24; };
};</PRE
></BLOCKQUOTE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-11403">10.11.2.2 Restricting queries in a particular zone</A
></H4
><p class="para"><span class="acronym">BIND</SPAN
> 8 also allows you to apply an access
list to a particular zone.  In this case, just use
<em class="emphasis">allow-query</EM
> as a substatement of the
<i class="structfield">zone</I
> statement for the zone you want to
protect:</P
><blockquote class="screen"><pre class="screen">zone &quot;hp.com&quot; {
                type slave;
                file &quot;db.hp&quot;;
                masters { 15.255.152.2; };
                allow-query { &quot;HP-NET&quot;; };
};</PRE
></BLOCKQUOTE
><p class="para">Any kind of authoritative name server, master or slave, can
apply an access list to the zone.  Zone-specific access lists take
precedence over global access lists for that zone.  The zone-specific
access list may even be more permissive than the global access list.
If there's no zone-specific access list defined, any global access
list will apply.</P
><p class="para">In <span class="acronym">BIND</SPAN
> 4.9, this functionality is provided
by the <i class="structfield">secure_zone</I
> record. Not only does it
limit queries for individual resource records, it limits zone
transfers, too.  (In <span class="acronym">BIND</SPAN
> 8, restricting zone
transfers is done separately.) However, 4.9 servers have no mechanism
for restricting who can send your server queries for data in zones
your server <em class="emphasis">isn't</EM
> authoritative for; the secure
zones mechanism only works with authoritative zones.</P
><p class="para">To use secure zones, you include one or more special
<span class="acronym">TXT</SPAN
> (text) records in your zone data on the primary
master name server. The records are conveniently transferred to the
zone's slave servers automatically.  Of course, only
<span class="acronym">BIND</SPAN
> 4.9 slaves will understand them.</P
><p class="para">The<a class="indexterm" name="AUTOID-11420"></A
>
<span class="acronym">TXT</SPAN
> records are special because they're attached to
the pseudo-domain name <i class="structfield">secure_zone</I
>, and the
resource record-specific data has a special format, either:</P
><blockquote class="screen"><pre class="screen"><code class="replaceable"><i>address</I
></CODE
>:mask</PRE
></BLOCKQUOTE
><p class="para">or:</P
><blockquote class="screen"><pre class="screen"><code class="replaceable"><i>address</I
></CODE
>:H</PRE
></BLOCKQUOTE
><p class="para">In the first form, <code class="replaceable"><i>address</I
></CODE
> is the
dotted-octet form of the <span class="acronym">IP</SPAN
> network to which you
want to <em class="emphasis">allow</EM
> access to the data in this
zone. The mask is the netmask for that address.  If you want to allow
all of net 15 access to your zone data, use 15.0.0.0:255.0.0.0.  If
you only want to allow the range of <span class="acronym">IP</SPAN
> addresses
from 15.254.0.0 to 15.255.255.255 access to your zone data, use
15.254.0.0:255.254.0.0.</P
><p class="para">The second form specifies the address of a particular host you'd
like to allow access to your zone data. The H is equivalent to the
mask 255.255.255.255; in other words, each bit in the 32-bit address
is checked. Therefore, 15.255.152.4:H gives the host with the
<span class="acronym">IP</SPAN
> address 15.255.152.4 the ability to look up data
in the zone.</P
><p class="para">If we wanted to restrict queries for information in <i class="systemitem.sitename">movie.edu</I
> to hosts on Movie U.'s
networks, we could add the following lines to
<i class="filename">db.movie</I
> on the <i class="systemitem.sitename">movie.edu</I
> primary:</P
><blockquote class="screen"><pre class="screen">secure_zone    IN    TXT    &quot;192.249.249.0:255.255.255.0&quot;
secure_zone    IN    TXT    &quot;192.253.253.0:255.255.255.0&quot;
secure_zone    IN    TXT    &quot;192.253.254.0:255.255.255.0&quot;
secure_zone    IN    TXT    &quot;127.0.0.1:H&quot;</PRE
></BLOCKQUOTE
><p class="para">Notice that we included the address 127.0.0.1 in our access
list. That's so a resolver can query its local name server.  If you
forget the <code class="literal">:H</CODE
>, you'll see the following syslog
message:</P
><blockquote class="screen"><pre class="screen">Aug 17 20:58:22 terminator named[2509]: build_secure_netlist
       (movie.edu): addr (127.0.0.1) is not in mask (0xff000000)</PRE
></BLOCKQUOTE
><p class="para">Also, note that the secure zones records here apply only to the
zone they're in&nbsp;- that is, <i class="systemitem.sitename">movie.edu</I
>.  If you wanted to prevent
unauthorized queries for data in other zones on this server, you'd
have to add secure zones records to that zone on its primary master
name server, too.</P
></DIV
><a class="indexterm" name="AUTOID-11447"></A
><a class="indexterm" name="AUTOID-11448"></A
><a class="indexterm" name="AUTOID-11449"></A
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PREVENT-UNAUTH">10.11.3 Preventing Unauthorized Zone Transfers</A
></H3
><p class="para"><a class="indexterm" name="CH10.UNAUTH1"></A
><a class="indexterm" name="CH10.UNAUTH2"></A
><a class="indexterm" name="CH10.UNAUTH3"></A
><a class="indexterm" name="CH10.UNAUTH4"></A
>Even more important than controlling who can query your name server is
ensuring that only your real slave name servers can transfer zones
from your name server. Users on remote hosts that can query your name
server's zone data can only look up data (e.g., addresses) for hosts
whose domain names they already know, one at a time. Users who can
start zone transfers from your server can list all of the hosts in
your zones. It's the difference between letting random folks call your
company's switchboard and ask for John Q. Cubicle's phone number and
sending them a copy of your corporate phone directory.</P
><p class="para"><span class="acronym">BIND</SPAN
> 8's <em class="emphasis">allow-transfer</EM
>
substatement and 4.9's<a class="indexterm" name="AUTOID-11467"></A
><a class="indexterm" name="AUTOID-11469"></A
><a class="indexterm" name="AUTOID-11472"></A
>
<i class="structfield">xfrnets</I
> directive let administrators apply
an access list to zone transfers.  <em class="emphasis">allow-transfer</EM
>
can restrict transfers of a particular zone as a
<i class="structfield">zone</I
> substatement or can restrict all zone
transfers as an <em class="emphasis">options</EM
> substatement.  It takes
an address match list as an argument.</P
><p class="para">Say the slave servers for your <i class="systemitem.sitename">acmebw.com</I
> zone have the
<span class="acronym">IP</SPAN
> addresses 192.168.0.1 and 192.168.1.1.  The
<i class="structfield">zone</I
> statement:</P
><blockquote class="screen"><pre class="screen">zone &quot;acmebw.com&quot; {
                type master;
                file &quot;db.acmebw&quot;;
                allow-transfer { 192.168.0.1; 192.168.1.1; };
};</PRE
></BLOCKQUOTE
><p class="para">will allow only those slaves to transfer <i class="systemitem.sitename">acmebw.com</I
> from the primary master name
server.  Note that since <span class="acronym">BIND</SPAN
> 8's default is to
allow any <span class="acronym">IP</SPAN
> address to transfer zones, and because
hackers can just as easily transfer the zone from your slaves, you
should probably also have a <i class="structfield">zone</I
> statement
like this on your slaves:</P
><blockquote class="screen"><pre class="screen">zone &quot;acmebw.com&quot; {
                type slave;
                masters { 192.168.0.4; };
                allow-transfer { none; };
};</PRE
></BLOCKQUOTE
><p class="para"><span class="acronym">BIND</SPAN
> 8 will also let you establish a global
access list on zone transfers.  This applies to any zones that don't
have their own, explicit access lists defined as
<i class="structfield">zone</I
> substatements.  For example, you might
want to limit all zone transfers to your internal
<span class="acronym">IP</SPAN
> addresses:</P
><blockquote class="screen"><pre class="screen">options {
                allow-transfer { 192.168/16; };
};</PRE
></BLOCKQUOTE
><p class="para">The <span class="acronym">BIND</SPAN
> 4.9
<i class="structfield">xfrnets</I
> directive takes as its arguments
the networks or <span class="acronym">IP</SPAN
> addresses you'd like to allow to
transfer zones from your name server. Networks are specified by the
dotted-octet form of the network number; for example:</P
><blockquote class="screen"><pre class="screen">xfrnets 15.0.0.0 128.32.0.0</PRE
></BLOCKQUOTE
><p class="para">allows only hosts on the Class A network 15 or the Class B
network 128.32 to transfer zones from this name server.  Unlike secure
zones, this restriction applies to any zones the server is
authoritative for.</P
><p class="para">If you want to specify just a part of the network, down to a
single <span class="acronym">IP</SPAN
> address, you can add a<a class="indexterm" name="AUTOID-11502"></A
>
network mask. The syntax for including a network mask is
<em class="emphasis">network&amp;netmask</EM
>.  Note that there are no
spaces either between the network and the ampersand or between the
ampersand and the netmask: they're not allowed.</P
><p class="para">To pare down the addresses allowed to transfer zones in the
previous example to just the <span class="acronym">IP</SPAN
> address
15.255.152.4 and the subnet 128.32.1.0, you could use the
<i class="structfield">xfrnets</I
> directive:</P
><blockquote class="screen"><pre class="screen">xfrnets 15.255.152.4&amp;255.255.255.255 128.32.1.0&amp;255.255.255.0</PRE
></BLOCKQUOTE
><p class="para">For a primary master name server accessible from the Internet,
you probably want to limit zone transfers to just your slave name
servers. You probably don't need to use
<i class="structfield">xfrnets</I
> on name servers inside your
firewall, unless you're worried about your own employees listing your
zone data.</P
><a class="indexterm" name="AUTOID-11511"></A
><a class="indexterm" name="AUTOID-11512"></A
><a class="indexterm" name="AUTOID-11513"></A
><a class="indexterm" name="AUTOID-11514"></A
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-11515">10.11.4 Running <span class="acronym">BIND</SPAN
> as a Non-Root User</A
></H3
><p class="para"><a class="indexterm" name="CH10.NONROOT"></A
><a class="indexterm" name="AUTOID-11522"></A
>Running a network server such as <span class="acronym">BIND</SPAN
> as the
root user can be dangerous&nbsp;- and <span class="acronym">BIND</SPAN
> normally
runs as root. If a hacker finds a vulnerability in the server through
which he can read or write files, he'll have root access to the
filesystem. If he can exploit a flaw that allows him to execute
commands, he'll execute them as root.</P
><p class="para"><span class="acronym">BIND</SPAN
> 8.1.2 includes experimental code that
allows you to change the user and group the name server runs as. This
allows you to run the name server with what's known as <span class="quote">"least
privilege:"</SPAN
> the minimal set of rights it needs to do its
job. That way, if someone is able to break into your host through the
name server, at least they won't have root privileges.</P
><p class="para"><a class="indexterm" name="AUTOID-11530"></A
><span class="acronym">BIND</SPAN
> 8.1.2 also includes an option that
allows you to <kbd class="command">chroot</KBD
> the name server: to change its
view of the filesystem so that its root directory is actually a
particular directory on your host's filesystem. This effectively traps
your name server in this directory, along with any attackers who
successfully compromise your name server's security.</P
><p class="para">The command-line options that implement these features
are:</P
><dl class="variablelist"><dt class="term">-u</DT
><dd class="listitem"><p class="para">Specifies the username or user <span class="acronym">ID</SPAN
> the name
server changes to after starting, e.g., <code class="literal">named -u bin</CODE
>.</P
></DD
><dt class="term">-g</DT
><dd class="listitem"><p class="para">Specifies the group or group <span class="acronym">ID</SPAN
> the name
server changes to after starting, e.g., <code class="literal">named -g other</CODE
>. If <i class="option">-u</I
> is
specified without <i class="option">-g</I
>, the name server will use the user's primary
group.</P
></DD
><dt class="term">-t</DT
><dd class="listitem"><p class="para">Specifies the directory for the name server to <kbd class="command">chroot</KBD
> to.</P
></DD
></DL
><p class="para">If you opt to use the <i class="option">-u</I
> and <i class="option">-g</I
> options, you'll have to decide
what user and group to use. Your best bet is to create a new user and
group for the name server to run as, such as <i class="systemitem.username">named</I
>. Since the name server reads
<i class="filename">named.conf</I
> before giving up root privileges, you
don't have to change that file's permissions. However, you may have to
change the permissions and ownership of your zone data files so that
the user the name server runs as can read them. If you use dynamic
update, you'll have to make the zone data files for
dynamically-updated zones writable by the name server.</P
><p class="para">The name server may have trouble writing the
<i class="filename">named.pid</I
> file, too, since it occasionally
rewrites it after startup (and after giving up root privileges). On
most versions of <span class="acronym">UNIX</SPAN
>,
<i class="filename">/var/run</I
> (the directory in which the name server
saves <i class="filename">named.pid</I
>) isn't writable by non-root<a class="indexterm" name="AUTOID-11565"></A
><a class="indexterm" name="AUTOID-11567"></A
>
users. The easiest way to deal with this is to use the <i class="function">pid-file</I
>
substatement to move <i class="filename">named.pid</I
> to another
directory:</P
><blockquote class="screen"><pre class="screen">options {
                pid-file &quot;/var/named/named.pid&quot;;
};</PRE
></BLOCKQUOTE
><p class="para">Then make sure that file is writable by the user
<kbd class="command">named</KBD
> runs as.</P
><p class="para">If your name server is configured to log to files (as opposed to
syslog), make sure those files exist and are writable by the name
server before starting the server.</P
><p class="para">The <i class="option">-t</I
> option takes a little more special configuration. In
particular, you need to make sure that all the files
<kbd class="command">named</KBD
> uses are present in the directory you're
restricting the server to. That includes the following:</P
><dl class="variablelist"><dt class="term">named-xfer </DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-11584"></A
>Most <kbd class="command">named</KBD
>s expect to find the
<i class="filename">named-xfer</I
> executable in
<i class="filename">/etc/named-xfer</I
>. If you <kbd class="command">chroot</KBD
> the server to
<i class="filename">/var/named</I
>, that becomes
<i class="filename">/var/named/etc/named-xfer</I
>.</P
></DD
><dt class="term">Shared libraries</DT
><dd class="listitem"><p class="para">If you build the name server with shared libraries, you'll need
to put copies of those shared libraries in whatever directory your
operating system expects them in. For example, if your
<span class="acronym">OS</SPAN
> looks for shared libraries in
<i class="filename">/lib</I
>, you'll need copies in
<i class="filename">/var/named/lib</I
>. The alternative is to build your
name server as a statically-linked executable.</P
></DD
><dt class="term">/dev/null</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-11603"></A
><a class="indexterm" name="AUTOID-11605"></A
>The name server needs a <i class="filename">/dev/null</I
> in the
<kbd class="command">chroot</KBD
>ed directory. You can find out how to make one by reading
<i class="filename">/dev/MKDEV</I
>, or the manual page for
<kbd class="command">mknod</KBD
>.</P
></DD
></DL
><p class="para">Finally, the name server may not be able to syslog in a <kbd class="command">chroot</KBD
>ed
environment. If that's the case, use the <i class="function">logging</I
> statement described
in <a class="xref" href="ch07_01.htm" title="Maintaining BIND">Chapter 7, <cite class="chapter">Maintaining <span class="acronym">BIND</SPAN
></CITE
></A
>, to log to files in the <kbd class="command">chroot</KBD
>ed
directory.</P
><p class="para">With any of these options, you'll have to remember to either
edit <kbd class="command">ndc</KBD
> to specify the options upon restart or start, or to start and
restart <kbd class="command">named</KBD
> manually.</P
><a class="indexterm" name="AUTOID-11619"></A
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-11620">10.11.5 <span class="quote">"Delegated"</SPAN
> Name Server Configuration</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-11624"></A
><a class="indexterm" name="AUTOID-11626"></A
><a class="indexterm" name="AUTOID-11629"></A
>Some of your name servers answer nonrecursive queries from other
name servers on the Internet, because your name servers appear in
<span class="acronym">NS</SPAN
> records delegating your zones to them.  We'll
call these name servers <span class="quote">"delegated"</SPAN
> name servers.</P
><p class="para">There are special measures you can take to secure your delegated
name servers.  But first, you should make sure that these servers
don't receive any recursive queries (that is, you don't have any
resolvers configured to use these servers, and no name servers use
them as forwarders).  Some of the precautions we'll take&nbsp;- like
making the server respond nonrecursively even to recursive
queries&nbsp;- preclude your resolvers from using these servers.  If
you do have resolvers using your delegated name servers, consider
establishing another class of name servers to serve just your
resolvers, as described in the next section.</P
><p class="para"><a class="indexterm" name="AUTOID-11636"></A
><a class="indexterm" name="AUTOID-11638"></A
><a class="indexterm" name="AUTOID-11640"></A
><a class="indexterm" name="AUTOID-11643"></A
>Once you know your name server only answers queries from other
name servers, you can turn off recursion.  This eliminates a major
vector of attack: the most common spoofing attacks involve inducing
the target name server to query name servers under the hacker's
control by sending the target a recursive query for a domain name in a
zone served by the hacker's servers.  To turn off recursion, you'd
use:</P
><blockquote class="screen"><pre class="screen">options {
                recursion no;
};</PRE
></BLOCKQUOTE
><p class="para">on a <span class="acronym">BIND</SPAN
> 8 server, and:</P
><blockquote class="screen"><pre class="screen">options no-recursion</PRE
></BLOCKQUOTE
><p class="para">on a <span class="acronym">BIND</SPAN
> 4.9 server.</P
><p class="para">You should also restrict zone transfers of your zones to known
slave servers, as described in <a class="xref" href="#PREVENT-UNAUTH" title="Preventing Unauthorized Zone Transfers">Section 10.11.3, "Preventing Unauthorized Zone Transfers</A
>,&quot;
earlier in this chapter.  Finally, you might also want to turn off
glue fetching.  The name server will automatically try to resolve the
names of any name servers in the <span class="acronym">RDATA</SPAN
> of
<span class="acronym">NS</SPAN
> records; to prevent this from happening, and
keep your name server from sending any queries of its own, use:<a class="indexterm" name="AUTOID-11656"></A
><a class="indexterm" name="AUTOID-11658"></A
><a class="indexterm" name="AUTOID-11660"></A
><a class="indexterm" name="AUTOID-11663"></A
></P
><blockquote class="screen"><pre class="screen">options {
                fetch-glue no;
};</PRE
></BLOCKQUOTE
><p class="para">on a <span class="acronym">BIND</SPAN
> 8 server, and:</P
><blockquote class="screen"><pre class="screen">options no-fetch-glue</PRE
></BLOCKQUOTE
><p class="para">on <span class="acronym">BIND</SPAN
> 4.9.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-11672">10.11.6 Resolving Name Server Configuration</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-11675"></A
><a class="indexterm" name="AUTOID-11678"></A
><a class="indexterm" name="AUTOID-11681"></A
>We'll call a name server that serves one or more resolvers, or
is configured as another name server's forwarder, a
<span class="quote">"resolving"</SPAN
> name server.  Unlike a delegated name server,
a <span class="quote">"resolving"</SPAN
> name server can't refuse recursive queries.
Consequently, we have to configure it a little differently to secure
it.  Since we know our name server should only receive queries from
our own resolvers, we can configure it to deny queries from any but
our resolvers' <span class="acronym">IP</SPAN
> addresses.</P
><p class="para">Only <span class="acronym">BIND</SPAN
> 8 will allow us to restrict which
<span class="acronym">IP</SPAN
> addresses can send our name server arbitrary
queries.  (<span class="acronym">BIND</SPAN
> 4.9 servers will let us restrict
which <span class="acronym">IP</SPAN
> addresses can send the server queries in
authoritative zones, via the <i class="function">secure_zone</I
> <span class="acronym">TXT</SPAN
>
record, but we're actually more worried about recursive queries in
others' zones.)  This <i class="function">allow-query</I
> substatement will restrict queries
to just our internal network:</P
><blockquote class="screen"><pre class="screen">options {
                allow-query { 192.168/16; };
};</PRE
></BLOCKQUOTE
><p class="para">With this configuration, the only resolvers that can send your
server recursive queries, and induce your name servers to query other
name servers, are your internal resolvers, which are presumably
relatively benevolent.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-11698">10.11.7 Two Name Servers in One</A
></H3
><p class="para">What if you only have one name server to advertise your zone and
serve your resolvers, and you can't afford the additional expense of
buying another computer to run another name server on?  There are
still a couple of options open to you.  One is a single-server
solution that takes advantage of <span class="acronym">BIND</SPAN
> 8's
flexibility.  This configuration allows anyone to query the name
server for information in your delegated zones, but only your internal
resolvers can query the name server for other information.  While this
doesn't prevent remote resolvers from sending your name server
recursive queries, those queries have to be in your authoritative
zones, so they won't induce your name server to send additional
queries.</P
><p class="para">Here's a <i class="filename">named.conf</I
> file to do that:</P
><blockquote class="screen"><pre class="screen">options {
                allow-query { 192.168/16; };
};

zone &quot;acmebw.com&quot; {
                type master;
                file &quot;db.acmebw&quot;;
                allow-query { any };
                allow-transfer { 192.168.0.1; 192.168.1.1; };
};

zone &quot;168.192.in-addr.arpa&quot; {
                type master;
                file &quot;db.192.168&quot;;
                allow-query { any; };
                allow-transfer { 192.168.0.1; 192.168.1.1; };
};</PRE
></BLOCKQUOTE
><p class="para">Here, the more permissive zone-specific access lists apply to
queries in the server's authoritative zones, but the more restrictive
global access list applies to all other queries.</P
><p class="para">Another option is to run two <kbd class="command">named</KBD
> processes
on a single host.  One is configured as the delegated server, another
as the resolving name server.  Since we have no way of telling remote
servers or configuring resolvers to query one of our name servers on a
port other than 53, the default <span class="acronym">DNS</SPAN
> port, we have
to run these servers on different <span class="acronym">IP</SPAN
>
addresses.</P
><p class="para">Of course, if your host already has more than one network
interface, that's no problem.  Even if it only has one, the operating
system may support <span class="acronym">IP</SPAN
> address aliases.  These allow
you to attach more than one <span class="acronym">IP</SPAN
> address to a single
network interface.  One <kbd class="command">named</KBD
> process can listen on
each.  Finally, if the operating system doesn't support
<span class="acronym">IP</SPAN
> aliases, you can still bind one
<kbd class="command">named</KBD
> against the network interface's
<span class="acronym">IP</SPAN
> address, and one against the loopback address.
Only the local host will be able to send queries to the
<kbd class="command">named</KBD
> listening on the loopback address, but that's
fine if the local host's resolver is the only one you need to
serve.</P
><p class="para">First, here's the <i class="filename">named.conf</I
> file for the
delegated name server, listening on the network interface's
<span class="acronym">IP</SPAN
> address:<a class="indexterm" name="AUTOID-11721"></A
><a class="indexterm" name="AUTOID-11723"></A
></P
><blockquote class="screen"><pre class="screen">options {
                directory &quot;/usr/local/named&quot;;
                recursion no;
                listen-on { 192.168.0.4; };
                pid-file &quot;delegated.pid&quot;;
};

zone &quot;acmebw.com&quot; {
                type master;
                file &quot;db.acmebw&quot;;
                allow-query { any };
                allow-transfer { 192.168.0.1; 192.168.1.1; };
};

zone &quot;168.192.in-addr.arpa&quot; {
                type master;
                file &quot;db.192.168&quot;;
                allow-query { any; };
                allow-transfer { 192.168.0.1; 192.168.1.1; };
};

zone &quot;.&quot; {
                type hint;
                file &quot;db.cache&quot;;
};</PRE
></BLOCKQUOTE
><p class="para">Next, here's the <i class="filename">named.conf</I
> file for the
resolving name server, listening on the loopback address:</P
><blockquote class="screen"><pre class="screen">options {
                directory &quot;/usr/local/named1&quot;;
                listen-on { 127.0.0.1; };
                pid-file &quot;resolving.pid&quot;;
};

zone &quot;.&quot; {
                type hint;
                file &quot;db.cache&quot;;
};</PRE
></BLOCKQUOTE
><p class="para">The <i class="function">listen-on</I
> substatement tells the server reading the conf
file to listen only on network interfaces whose <span class="acronym">IP</SPAN
>
addresses match the address match list.  We've specified the
<span class="acronym">IP</SPAN
> address explicitly, so that there's no chance of
mistakes.  You can also use <i class="function">listen-on</I
> to have <kbd class="command">named</KBD
>
listen on a port other than 53; for that, use the syntax:</P
><blockquote class="screen"><pre class="screen">options {
                listen-on port &lt;n&gt; { address_match_list };
};</PRE
></BLOCKQUOTE
><p class="para">Note that we turn recursion off on the delegated name server,
but must leave it on on the resolving name server.  We also give each
name server its own <span class="acronym">PID</SPAN
> file and its own directory,
so that they don't try to use the same default filename for their
<span class="acronym">PID</SPAN
> files, debug files, and statistics
files.</P
><p class="para">To use the resolving name server, listening on the loopback
address, the local host's <i class="filename">resolv.conf</I
> file must
include:</P
><blockquote class="screen"><pre class="screen">nameserver 127.0.0.1</PRE
></BLOCKQUOTE
><p class="para">as the first <i class="function">nameserver</I
> directive.</P
></DIV
><a class="indexterm" name="AUTOID-11745"></A
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_10.htm" title="10.10 Avoiding a Bogus Name Server"><img src="../gifs/txtpreva.gif" alt="Previous: 10.10 Avoiding a Bogus Name Server" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="DNS &amp; BIND"><img src="../gifs/txthome.gif" alt="DNS &amp; BIND" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_12.htm" title="10.12 Load Sharing Between Mirrored Servers"><img src="../gifs/txtnexta.gif" alt="Next: 10.12 Load Sharing Between Mirrored Servers" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.10 Avoiding a Bogus Name Server</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.12 Load Sharing Between Mirrored Servers</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
