<html><head>
<title>[Chapter 13] 13.6 Problem Symptoms</TITLE>
<meta name="DC.title" content="DNS &amp; BIND"><meta name="DC.creator" content="Cricket Liu &amp; Paul Albitz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T18:40:50Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-512-2" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch13_01.htm" title="13. Troubleshooting DNS and BIND"><link rel="prev" href="ch13_05.htm" title="13.5 Interoperability and Version Problems"><link rel="next" href="ch14_01.htm" title="14. Programming with the Resolver and Name Server Library Routines"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="DNS &amp; BIND" usemap="#srchmap" border="0"></H1
><map name="srchmap"index.html><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="DNS &amp; BIND"><area shape="RECT" coords="467,0,514,18" href="../search/dsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch13_05.htm" title="13.5 Interoperability and Version Problems"><img src="../gifs/txtpreva.gif" alt="Previous: 13.5 Interoperability and Version Problems" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 13<br>Troubleshooting <span class="acronym">DNS</SPAN
> and
<span class="acronym">BIND</SPAN
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="CHAPTER" href="ch14_01.htm" title="14. Programming with the Resolver and Name Server Library Routines"><img src="../gifs/txtnexta.gif" alt="Next: 14. Programming with the Resolver and Name Server Library Routines" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="AUTOID-14575">13.6 Problem Symptoms</A
></H2
><p class="para"><a class="indexterm" name="CH13.SYMPTOMS"></A
>Some problems, unfortunately,
aren't as easy to identify as the ones we listed. You'll experience
some misbehavior but won't be able to attribute it directly to its
cause, often because any of a number of problems may cause the symptoms
you see. For cases like this, we'll suggest some of the common causes
of these symptoms and ways to isolate them.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-14581">13.6.1 Local Name Can't Be Looked Up</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-14584"></A
><a class="indexterm" name="AUTOID-14587"></A
>The first thing to do when
a program like <em class="emphasis">telnet</EM
> or <em class="emphasis">ftp</EM
> can't
look up a local name is to use <em class="emphasis">nslookup</EM
> to
try to look up the same name. When we say <span class="quote">"the same name,"</SPAN
> we mean
<em class="emphasis">literally</EM
> the same name&nbsp;- don't add a domain and
a trailing dot if the user didn't type either one. Don't query a
different name server than the user did.</P
><p class="para">As often as
not, the user mistyped the name, or doesn't understand how the search
list works, and just needs direction. Occasionally, you'll turn
up real host configuration errors:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Syntax errors in <em class="emphasis">resolv.conf</EM
> (problem
11 in the <span class="quote">"Potential Problem List"</SPAN
> mentioned earlier in this chapter)</P
></LI
><li class="listitem"><p class="para">An unset default domain (problem 12)</P
></LI
></UL
><p class="para">You can check for either of these using <em class="emphasis">nslookup</EM
>'s<a class="indexterm" name="AUTOID-14605"></A
>
<em class="emphasis">set all</EM
> command.</P
><p class="para">If <em class="emphasis">nslookup</EM
> points to a problem with
the name server, rather than with the host configuration, check
for the problems associated with the type of name server. If the
name server is the primary master for the zone, but it doesn't respond
with data you think it should:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Check that the db file contains the
data in question, and that the name server has been signaled to
reload it (problem 2).</P
></LI
><li class="listitem"><p class="para">Check the conf or boot file and the pertinent db
file for syntax errors (problem 5).</P
></LI
><li class="listitem"><p class="para">Ensure that the records have trailing dots, if
they require them (problem 6).</P
></LI
></UL
><p class="para">If
the name server is a slave server, you should first check whether
or not its master has the correct data. If it does, and the slave
doesn't:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Make sure you've incremented the
serial number on the primary (problem 1).</P
></LI
><li class="listitem"><p class="para">Look for a problem on the slave in updating the
zone (problem 3).</P
></LI
></UL
><p class="para">If the primary <em class="emphasis">doesn't</EM
> have
the correct data, of course, diagnose the problem on the primary.</P
><p class="para">If the problem server is a caching-only name server:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Make sure it has its cache data (problem
7).</P
></LI
><li class="listitem"><p class="para">Check that your parent zone's delegation to your
zone exists and is correct (problems 9 and 10). Remember that to
a caching-only server, your zone looks just like any other remote
zone. Even though the host it runs on may be inside your zone, the
caching-only name server must be able to locate an authoritative
server for your zone from your parent zone's servers.</P
></LI
></UL
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-14631">13.6.2 Remote Names Can't Be Looked Up</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-14634"></A
>If your local lookups succeed, but
you can't look up names outside your local zones, there is a different
set of problems to check:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">First, did you just set up your servers?
You might have omitted the cache data (problem 7).</P
></LI
><li class="listitem"><p class="para">Can you <em class="emphasis">ping</EM
> the remote zone's
name servers? Maybe you can't reach the remote zone's servers because
of connectivity loss (problem 8).</P
></LI
><li class="listitem"><p class="para">Is the remote zone new? Maybe its delegation hasn't
yet appeared (problem 9). Or the delegation information for the
remote zone may be wrong or out of date, due to neglect (problem
10).</P
></LI
><li class="listitem"><p class="para">Does the domain name actually exist on the remote
zone's servers (problem 2)?  On all of them (problems 1 and 3)?</P
></LI
></UL
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-14646">13.6.3 Wrong or Inconsistent Answer</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-14649"></A
><a class="indexterm" name="AUTOID-14651"></A
><a class="indexterm" name="AUTOID-14653"></A
>If you get the wrong answer when
looking up a local name, or an inconsistent answer, depending on
which name server you ask or when you ask, first check the synchronization
between your name servers:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Are they all holding the same serial
number for the zone? Did you forget to increment the serial number
on the primary after you made a change (problem 1)? If you did,
the name servers may all have the same serial number, but they will
answer differently out of their authoritative data.</P
></LI
><li class="listitem"><p class="para">Did you roll the serial number back to one (problem
1 again)? Then the primary's serial number will appear much lower
than the slaves' serial numbers.</P
></LI
><li class="listitem"><p class="para">Did you forget to signal the primary (problem 2)?
Then the primary will return (via <em class="emphasis">nslookup</EM
>,
for example) a different serial number than the serial number in
the data file.</P
></LI
><li class="listitem"><p class="para">Are the slaves having trouble updating from the
primary (problem 3)? If so, they should have <em class="emphasis">syslog</EM
>ged
appropriate error messages.</P
></LI
><li class="listitem"><p class="para">Is the name server's round robin feature rotating
the addresses of the domain name you're looking up?</P
></LI
></UL
><p class="para">If you get these results when looking up a name in a remote
zone, you should check whether the remote zone's name servers have
lost synchronization. You can use tools like <em class="emphasis">nslookup</EM
> to
determine whether the remote zone's administrator has forgotten
to increment the serial number, for example. If the name servers
answer differently from their authoritative data but show the same
serial number, the serial number probably wasn't incremented. If
the primary's serial number is much lower than the slaves', the
primary's serial number was probably accidentally reset. We usually
assume a zone's primary name server is running on the host listed
as the origin in the <span class="acronym">SOA</SPAN
> record.</P
><p class="para">You probably can't
determine conclusively that the primary hasn't been signaled, though.
It's also difficult to pin down updating problems between remote
name servers. In cases like this, if you've determined that the
remote name servers are giving out incorrect data, contact the zone
administrator and (gently) relay what you've found. This will help
the administrator track down the problem on the remote end.</P
><p class="para">If you can determine that a parent server&nbsp;- a remote zone's
parent, your zone's parent, or even your zone&nbsp;- is giving out a bad
answer, check whether this is coming from old delegation information.
Sometimes this will require contacting both the administrator of
the remote zone and the administrator of its parent to compare the
delegation and the current, correct list of authoritative name servers.</P
><p class="para">If you can't induce the administrator to fix his data, and it's
causing your name server problems, or if you can't track down the
administrator, you can always use the <em class="emphasis">bogus</EM
> substatement or <em class="emphasis">bogusns</EM
> directive to
instruct your name server not to query that particular server.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-14677">13.6.4 Lookups Take a Long Time</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-14680"></A
><a class="indexterm" name="AUTOID-14683"></A
><a class="indexterm" name="AUTOID-14686"></A
><a class="indexterm" name="AUTOID-14690"></A
>Long name resolution is usually
due to one of two problems:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Connectivity loss (problem 8), which
you can diagnose with name server debugging output and tools like <em class="emphasis">ping</EM
></P
></LI
><li class="listitem"><p class="para">Incorrect delegation information (problem 10),
which points to the wrong name servers or the wrong <span class="acronym">IP</SPAN
> addresses</P
></LI
></UL
><p class="para">Usually, going over the debugging output and sending a few <em class="emphasis">ping</EM
>s
will point to one or the other. Either you can't reach the name
servers at all, or you can reach the hosts, but the name servers
aren't responding.</P
><p class="para">Sometimes, though, the results are
inconclusive. For example, the parent name servers delegate to a
set of name servers that don't respond to <em class="emphasis">ping</EM
>s
or queries, but connectivity to the remote network seems all right
(a <em class="emphasis">traceroute</EM
>, for example, will get you to
the remote network's <span class="quote">"doorstep"</SPAN
>&nbsp;- the last router between you and
the host). Is the delegation information so badly out of date that
the name servers have long since moved to other addresses? Are the
hosts simply down? Or is there really a remote network problem? Usually,
finding out will require a call or a message to the administrator
of the remote zone. (And remember, <em class="emphasis">whois</EM
> gives
you phone numbers!)</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-14707">13.6.5 rlogin and rsh to Host Fails Access Check</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-14710"></A
><a class="indexterm" name="AUTOID-14713"></A
><a class="indexterm" name="AUTOID-14715"></A
><a class="indexterm" name="AUTOID-14717"></A
>This is a
problem you expect to see right after you set up your name servers.
Users unaware of the change from the host table to domain name service
won't know to update their <em class="emphasis">.rhosts</EM
> files. (We
covered what needs to be updated in <a class="xref" href="ch06_01.htm" title="Configuring Hosts">Chapter 6</A
>.) Consequently, <em class="emphasis">rlogin</EM
>'s
or <em class="emphasis">rsh</EM
>'s access check will fail and deny the
user access.</P
><p class="para">Other causes of this problem are missing
or incorrect<a class="indexterm" name="AUTOID-14724"></A
><a class="indexterm" name="AUTOID-14727"></A
>
<em class="emphasis">in-addr.arpa</EM
> delegation
(problems 9 and 10), and forgetting to add a <span class="acronym">PTR</SPAN
> record for the client
host (problem 4). If you've recently upgraded to <span class="acronym">BIND</SPAN
> 4.9 or 8 and
have <span class="acronym">PTR</SPAN
> data for more than one <em class="emphasis">in-addr.arpa</EM
> subdomain
in a single file, your name server may be ignoring the out-of-zone
data. Any of these situations will result in the same behavior:</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>rlogin wormhole</B
></CODE
>
Password:</PRE
></BLOCKQUOTE
><p class="para">In other words, the user is prompted for a password
despite having set up passwordless access with <em class="emphasis">.rhosts</EM
> or <em class="emphasis">hosts.equiv</EM
>.
If you were to look at the <em class="emphasis">syslog</EM
> file on the
destination host (<em class="emphasis">wormhole</EM
>, in this case),
you'd probably see something like this:</P
><blockquote class="screen"><pre class="screen">May  4 18:06:22 wormhole inetd[22514]: login/tcp: Connection
       from unknown (192.249.249.213)</PRE
></BLOCKQUOTE
><p class="para">You can tell which problem it is by stepping through
the resolution process with <em class="emphasis">nslookup</EM
>. First
query one of your <em class="emphasis">in-addr.arpa</EM
> domain's parent
name servers for <span class="acronym">NS</SPAN
> records for your <em class="emphasis">in-addr</EM
> subdomain.
If these are correct, query the name servers listed for the <span class="acronym">PTR</SPAN
>
record corresponding to the <span class="acronym">IP</SPAN
> address of the <em class="emphasis">rlogin</EM
> or <em class="emphasis">rsh</EM
> client.
Make sure they all have the <span class="acronym">PTR</SPAN
> record, and that the record maps
to the right domain name. If not all the name servers have the record, check
for a loss of synchronization between the primary and the slaves
(problems 1 and 3).</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-14754">13.6.6 Access to Services Denied</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-14757"></A
><a class="indexterm" name="AUTOID-14760"></A
>Sometimes <em class="emphasis">rlogin</EM
> and
<em class="emphasis">rsh</EM
> aren't the only services to go. Occasionally
you'll install <span class="acronym">DNS</SPAN
> on your server and your diskless hosts won't
boot, and hosts won't be able to mount disks from the server, either.</P
><p class="para">If this happens, make sure the case of the names your name
servers return agrees with the case your previous name service returned.
For example, if you were running <span class="acronym">NIS</SPAN
>, and your <span class="acronym">NIS</SPAN
> host's maps contained
only lowercase names, you should make sure your name servers also return
lowercase names. Some programs are case-sensitive and won't recognize names in a different case in a data file, such as <em class="emphasis">/etc/bootparams</EM
> or <em class="emphasis">/etc/exports</EM
>.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-14771">13.6.7 Name Server Is Infected with Bogus Root Server Data</A
></H3
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> <a class="indexterm" name="AUTOID-14775"></A
><a class="indexterm" name="AUTOID-14778"></A
><span class="acronym">BIND</SPAN
> name servers version 4.9 and newer
are resistant to this problem.</P
></BLOCKQUOTE
><p class="para">Here's a problem
that will be familiar to anyone who's run a name server on the Internet
for any length of time:</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>nslookup</B
></CODE
>
Default Server:  terminator.movie.edu
Address:  192.249.249.3

&gt; <code class="userinput"><b>set type=ns</B
></CODE
>
&gt; <code class="userinput"><b>.</B
></CODE
>
Server:  terminator.movie.edu
Address:  192.249.249.3

Non-authoritative answer:
(root)  nameserver = <span class="acronym">NS</SPAN
>.<span class="acronym">NIC</SPAN
>.<span class="acronym">DDN</SPAN
>.<span class="acronym">MIL</SPAN
>
(root)  nameserver = B.<span class="acronym">ROOT-SERVERS</SPAN
>.<span class="acronym">NET</SPAN
>
(root)  nameserver = E.<span class="acronym">ROOT-SERVERS</SPAN
>.<span class="acronym">NET</SPAN
>
(root)  nameserver = D.<span class="acronym">ROOT-SERVERS</SPAN
>.<span class="acronym">NET</SPAN
>
(root)  nameserver = F.<span class="acronym">ROOT-SERVERS</SPAN
>.<span class="acronym">NET</SPAN
>
(root)  nameserver = C.<span class="acronym">ROOT-SERVERS</SPAN
>.<span class="acronym">NET</SPAN
>
(root)  nameserver = G.<span class="acronym">ROOT-SERVERS</SPAN
>.<span class="acronym">NET</SPAN
>
(root)  nameserver = hpfcsx.fc.hp.com
(root)  nameserver = hp-pcd.cv.hp.com
(root)  nameserver = hp-ses.sde.hp.com
(root)  nameserver = hpsatc1.gva.hp.com
(root)  nameserver = named_master.ch.apollo.hp.com
(root)  nameserver = A.<span class="acronym">ISI</SPAN
>.<span class="acronym">EDU</SPAN
>
(root)  nameserver = <span class="acronym">SRI-NIC</SPAN
>.<span class="acronym">ARPA</SPAN
>
(root)  nameserver = <span class="acronym">GUNTER-ADAM</SPAN
>.<span class="acronym">ARPA</SPAN
>

Authoritative answers can be found from:
(root)  nameserver = <span class="acronym">NS</SPAN
>.<span class="acronym">NIC</SPAN
>.<span class="acronym">DDN</SPAN
>.<span class="acronym">MIL</SPAN
>
(root)  nameserver = B.<span class="acronym">ROOT-SERVERS</SPAN
>.<span class="acronym">NET</SPAN
>
(root)  nameserver = E.<span class="acronym">ROOT-SERVERS</SPAN
>.<span class="acronym">NET</SPAN
>
(root)  nameserver = D.<span class="acronym">ROOT-SERVERS</SPAN
>.<span class="acronym">NET</SPAN
>
(root)  nameserver = F.<span class="acronym">ROOT-SERVERS</SPAN
>.<span class="acronym">NET</SPAN
>
(root)  nameserver = C.<span class="acronym">ROOT-SERVERS</SPAN
>.<span class="acronym">NET</SPAN
>
(root)  nameserver =

*** Error: record size incorrect (1050690 != 65519)

*** terminator.movie.edu can't find .: Unspecified error</PRE
></BLOCKQUOTE
><p class="para">Whoa! Where in the heck did all those root name servers
come from? And why is the record size messed up?</P
><p class="para">If
you look carefully, you'll notice that most of those records are
bogus. <em class="emphasis"><span class="acronym">SRI-NIC</SPAN
>.<span class="acronym">ARPA</SPAN
></EM
>, for example, is the original
name of <em class="emphasis">nic.ddn.mil</EM
>, from the days when all
ARPAnet hosts lived under the top-level <em class="emphasis"><span class="acronym">ARPA</SPAN
></EM
> domain.
Moreover, even the name server on <em class="emphasis">nic.ddn.mil</EM
> was
decommissioned as a root some time ago, replaced by a new root on <em class="emphasis">ns.nic.ddn.mil</EM
> (and <em class="emphasis">that</EM
> name
server moved from the old <span class="acronym">NIC</SPAN
> at <span class="acronym">SRI</SPAN
> to the new one at <span class="acronym">NSI</SPAN
>...).</P
><p class="para">The name servers in <em class="emphasis">hp.com</EM
> aren't Internet
roots, and haven't <em class="emphasis">ever</EM
> been. So how did these
get into our cache? Here's how.</P
><p class="para">Remember when we described
what a name server does when queried for a name it isn't authoritative
for? It does its best to provide information that will be helpful
to the querier: <span class="acronym">NS</SPAN
> records that are as close as possible to the
domain name the querier is after. Sometimes the queried name server can
only get as close as the root name servers. And sometimes the name
server has the <em class="emphasis">wrong</EM
> list of roots, either
accidentally (because of incorrect configuration) or because no
one went to the effort to keep the cache file up-to-date.</P
><p class="para">So
what does that have to do with caching? Well, say your name server
queries what it thinks is a <em class="emphasis">10.in-addr.arpa</EM
> name
server, and the name server turns out to know nothing about <em class="emphasis">10.in-addr.arpa</EM
>. The
name server, trying to be helpful, sends along its current list
of root name servers in a response packet, but the list is wrong.
<span class="acronym">BIND</SPAN
> (versions 4.8.3 and earlier), trusting as a newborn, gratefully
caches all this useless information. Later versions, older and wiser,
flag this as a lame delegation and toss the bad data.</P
><p class="para">Why
did <em class="emphasis">nslookup</EM
> return a record size error when
we looked up your name server's list of root servers? The list of roots
exceeded the size of a <span class="acronym">UDP</SPAN
> response packet, but it was truncated
to fit into a response. The length field in the response indicated
that more data was included, though, so <em class="emphasis">nslookup</EM
> complained.</P
><p class="para">This infection can spread if the bogus <span class="acronym">NS</SPAN
> records point to
real&nbsp;- but nonroot&nbsp;- name servers. If these name servers give out more
bogus data, your name server's cache may become polluted by more
and more erroneous records.</P
><p class="para">The only ways to track down
the source of these bogus roots are to turn name server debugging
way up (to level four or above) and watch for the receipt of these records,
or to patch your name server so that it reports receiving bad root
information. With <span class="acronym">BIND</SPAN
> 4.9 and <span class="acronym">BIND</SPAN
> 8, you can see the source of
the bad data in a database dump. Even when you think you've found
the culprit, though, you may have only discovered another name server
that was corrupted before yours, not the original source of the
corruption. To uncover the original sinner, you'd have to work backwards, together
with other administrators, to discover who made the first gaffe.
If you don't have the tenacity to suffer through that process, it's
probably easier just to upgrade to a <span class="acronym">BIND</SPAN
> 4.9 or <span class="acronym">BIND</SPAN
> 8 server.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-14858">13.6.8 Name Server Keeps Loading Old Data</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-14861"></A
><a class="indexterm" name="AUTOID-14864"></A
>Here's a weird class of problems related
to the previous cache corruption problem. Sometimes, after decommissioning
a name server, or changing a name server's <span class="acronym">IP</SPAN
> address, you'll find
the old address record lingering around. An old record may show
up in a name server's cache or in a zone data file weeks, or even
months, later. The record clearly should have timed out of any caches by
now. So why's it still there? Well, there are a few reasons this
happens. We'll describe the simpler cases first.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-14868">13.6.8.1 Old delegation information</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-14871"></A
><a class="indexterm" name="AUTOID-14874"></A
><a class="indexterm" name="AUTOID-14878"></A
>The first (and simplest) case
occurs if a parent zone doesn't keep up with its children, or if
the children don't inform the parent of changes to the authoritative
name servers for the zone. If the <em class="emphasis">edu</EM
> administrators
have this old delegation information for <em class="emphasis">movie.edu</EM
>:</P
><blockquote class="screen"><pre class="screen">$<span class="acronym">ORIGIN</SPAN
> movie.edu.
@    86400    in    ns    terminator
     86400    in    ns    wormhole
terminator    86400    in    a    192.249.249.3
wormhole      86400    in    a    192.249.249.254 ; wormhole's former
                                                  ; <span class="acronym">IP</SPAN
> address</PRE
></BLOCKQUOTE
><p class="para">then the <em class="emphasis">edu</EM
> name servers will
give out the bogus old address for <em class="emphasis">wormhole</EM
>.</P
><p class="para">This is easily corrected once it's isolated to the parent name
servers: just contact the parent zone's administrator and ask to
have the delegation information updated. If any of the child zone's
servers have cached the bad data, kill them (to clear out their
caches), delete any data files that contain the bad data, then restart
them.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-14890">13.6.8.2 Unnecessary glue data</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-14893"></A
>When<a class="indexterm" name="AUTOID-14895"></A
>
<em class="emphasis">named-xfer</EM
> pulls zone data over from a master
server, it transfers more than it strictly needs. This is a bug
in <span class="acronym">BIND</SPAN
> 4.8.3 and earlier. The main excess baggage <em class="emphasis">named-xfer</EM
> retrieves
is the addresses of name servers for the zone, when those servers
are outside of the zone. If the name servers are in the zone, their addresses
are necessary as glue data. But if they're not in the zone, they
don't belong in the zone's data file. So, for example, in a backup
file for <em class="emphasis">movie.edu</EM
>, you'd find these partial contents
of file <em class="emphasis">db.movie</EM
>:</P
><blockquote class="screen"><pre class="screen">$<span class="acronym">ORIGIN</SPAN
> edu.
movie           <span class="acronym">IN</SPAN
>      <span class="acronym">NS</SPAN
>      terminator.movie.edu.
$<span class="acronym">ORIGIN</SPAN
> movie.edu.
terminator      <span class="acronym">IN</SPAN
>      A       192.249.249.3
$<span class="acronym">ORIGIN</SPAN
> edu.
movie           <span class="acronym">IN</SPAN
>      <span class="acronym">NS</SPAN
>      wormhole.movie.edu.
$<span class="acronym">ORIGIN</SPAN
> movie.edu.
wormhole        <span class="acronym">IN</SPAN
>      A       192.249.249.1
                <span class="acronym">IN</SPAN
>      A       192.253.253.1
                <span class="acronym">IN</SPAN
>      A       192.249.249.254</PRE
></BLOCKQUOTE
><p class="para">But you'd also find similar records in <em class="emphasis">db.192.249.249</EM
> and <em class="emphasis">db.192.253.253</EM
>:</P
><blockquote class="screen"><pre class="screen">$<span class="acronym">ORIGIN</SPAN
> 249.192.in-addr.arpa.
249             <span class="acronym">IN</SPAN
>      <span class="acronym">NS</SPAN
>      terminator.movie.edu.
$<span class="acronym">ORIGIN</SPAN
> movie.edu.
terminator      56422   <span class="acronym">IN</SPAN
>      A       192.249.249.3
$<span class="acronym">ORIGIN</SPAN
> 249.192.in-addr.arpa.
249             <span class="acronym">IN</SPAN
>      <span class="acronym">NS</SPAN
>      wormhole.movie.edu.
$<span class="acronym">ORIGIN</SPAN
> movie.edu.
wormhole        56422   <span class="acronym">IN</SPAN
>      A       192.249.249.1
                56422   <span class="acronym">IN</SPAN
>      A       192.253.253.1
                56422   <span class="acronym">IN</SPAN
>      A       192.249.249.254</PRE
></BLOCKQUOTE
><p class="para">The last of <em class="emphasis">wormhole</EM
>'s addresses
is <em class="emphasis">wormhole</EM
>'s former address.</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> <span class="acronym">BIND</SPAN
> name servers version 4.9 and newer do not
have this problem.</P
></BLOCKQUOTE
><p class="para">There's no reason to include
the address records for <em class="emphasis">terminator</EM
> or <em class="emphasis">wormhole</EM
> in
either <em class="emphasis">in-addr.arpa</EM
> backup file. They <em class="emphasis">should</EM
> be
listed in <em class="emphasis">db.movie</EM
>, but since they're not necessary
as glue in either <em class="emphasis">in-addr.arpa</EM
> subdomain, they
shouldn't appear in <em class="emphasis">db.192.249.249</EM
> or <em class="emphasis">db.192.253.253</EM
>.</P
><p class="para">When the slave loads the <em class="emphasis">in-addr.arpa</EM
> backup
file, it also loads the address records for <em class="emphasis">terminator</EM
> and <em class="emphasis">wormhole</EM
>.
If the address is old, then the name server loads&nbsp;- and gives out&nbsp;- the
wrong address:</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>nslookup wormhole</B
></CODE
>
Server:  wormhole.movie.edu
Address:  192.249.249.1

Name:    wormhole.movie.edu
Address:  192.249.249.1, 192.253.253.1, 192.249.249.254</PRE
></BLOCKQUOTE
><p class="para">You might think, <span class="quote">"If I clean the old address out
of <em class="emphasis">db.movie</EM
>,"</SPAN
> (you can think in italics), <span class="quote">"the
slaves will time it out of the <em class="emphasis">in-addr.arpa</EM
> subdomains.
After all, there's a <span class="acronym">TTL</SPAN
> on the address records."</SPAN
></P
><p class="para">Unfortunately,
the slave servers don't age those records. They're given out with
the <span class="acronym">TTL</SPAN
> in the data file, but the slave never decrements the <span class="acronym">TTL</SPAN
>
or times out the record. So the old address could linger as long
as the <em class="emphasis">in-addr.arpa</EM
> backup files remain unchanged.
And <em class="emphasis">in-addr.arpa</EM
> zones are very stable if no
one's adding new hosts to the network or shuffling <span class="acronym">IP</SPAN
> addresses.
There's no need to increment their serial numbers and have them reloaded
by the slaves.</P
><p class="para">The secret is to increment <em class="emphasis">all</EM
> of
the zones' serial numbers at once when you make a change affecting
the zones' authoritative name servers. That way, you flush out any
old, stale records and ensure that the slaves all load up-to-date glue.<a class="indexterm" name="AUTOID-14967"></A
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-14970">13.6.8.3 Mutual infection</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-14973"></A
><a class="indexterm" name="AUTOID-14976"></A
><a class="indexterm" name="AUTOID-14979"></A
><a class="indexterm" name="AUTOID-14981"></A
>There's
one more scenario we're familiar with that can cause these symptoms.
This one doesn't require old data in files at all&nbsp;- just two slave
name servers. <span class="acronym">BIND</SPAN
> can run into problems when two name servers act
as slave for each other, and when one zone is the child of the other;
for example, when name server A loads <em class="emphasis">movie.edu</EM
> from
name server B, and B loads <em class="emphasis">fx.movie.edu</EM
> from
A.</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> <span class="acronym">BIND</SPAN
> name servers version 4.9 and newer are resistant
to this problem.</P
></BLOCKQUOTE
><p class="para">In these cases, certain data
can float back and forth between the two name servers indefinitely. In
particular, the name servers can pass delegation data, which is
really part of the <span class="quote">"child"</SPAN
> zone, back and forth.</P
><p class="para">How
does this work? Say <em class="emphasis">terminator.movie.edu</EM
> is
the primary master <em class="emphasis">movie.edu</EM
> server and it
backs up <em class="emphasis">fx.movie.edu</EM
> from <em class="emphasis">bladerunner</EM
>. <em class="emphasis">bladerunner</EM
> is
the primary master <em class="emphasis">fx.movie.edu</EM
> name server
and backs up <em class="emphasis">movie.edu</EM
> from <em class="emphasis">terminator</EM
>.
Then suppose you change <em class="emphasis">bladerunner</EM
>'s <span class="acronym">IP</SPAN
> address.
You remember to change <em class="emphasis">named.conf</EM
> on <em class="emphasis">terminator</EM
> to
load <em class="emphasis">fx.movie.edu</EM
> from <em class="emphasis">bladerunner</EM
>'s
new <span class="acronym">IP</SPAN
> address, and you change the <span class="acronym">IP</SPAN
> address in <em class="emphasis">db.fx</EM
>.
You even update the <em class="emphasis">fx</EM
> subdomain's delegation
data in <em class="emphasis">db.movie</EM
> on the primary to reflect
the address change. Isn't that enough?</P
><p class="para">Nope. Here's
why: <em class="emphasis">terminator</EM
> still has <em class="emphasis">bladerunner</EM
>'s
old <span class="acronym">IP</SPAN
> address in the backup file <em class="emphasis">db.fx</EM
>, and <em class="emphasis">bladerunner</EM
> still
has its own old address in its backup copy of <em class="emphasis">db.movie</EM
> (a
glue record in the <em class="emphasis">fx</EM
> delegation).</P
><p class="para">Now
let's say you delete <em class="emphasis">db.fx</EM
> on <em class="emphasis">terminator</EM
> and
kill and restart its name server. Won't that suffice? No, because <em class="emphasis">bladerunner</EM
> still
has the old address and will pass it along to <em class="emphasis">terminator</EM
> in
the next <em class="emphasis">fx.movie.edu</EM
> zone transfer. If you
delete <em class="emphasis">db.movie</EM
> on <em class="emphasis">bladerunner</EM
> and
kill and restart the name server, something similar will happen: <em class="emphasis">bladerunner</EM
> will
get the old record back with the next <em class="emphasis">movie.edu</EM
> zone
transfer.</P
><p class="para">That's a little complicated to follow&nbsp;- for
us, too&nbsp;- so <a class="xref" href="#DNS3-CHP-13-FIG-2" title="Infection through zone transfer">Figure 13.2</A
> will help you picture what's going on.</P
><h4 class="figure"><a class="title" name="DNS3-CHP-13-FIG-2">Figure 13.2: Infection through zone transfer</A
></H4
><img class="graphic" src="figs/dns3_1302.gif" alt="Figure 13.2"><p class="para">You need to rid both name servers of the
old record simultaneously. Our solution to this problem is to bring
both name servers down at the same time, clean out any backup files,
and then start them both up again. That way, the caches can't re-infect
each other.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="AUTOID-15036">13.6.8.4 What have I got?</A
></H4
><p class="para">How do you determine
which of these problems is plaguing you? Pay attention to which
name servers are distributing the old data, and which domains the data
relate to:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Is the name server your parent name
server? Check the parent for either old delegation information or
parent-child infection.</P
></LI
><li class="listitem"><p class="para">Are both a name server and its parent affected?
Then check for parent-child infection.</P
></LI
><li class="listitem"><p class="para">Are slaves affected, but not the primary? Check
for stale data in backup files.<a class="indexterm" name="AUTOID-15046"></A
><a class="indexterm" name="AUTOID-15049"></A
></P
></LI
></UL
><p class="para">That's about
all we can think to cover. It's certainly less than a comprehensive
list, but we hope it'll help you solve the more common problems
you encounter with <span class="acronym">DNS</SPAN
>, and give you ideas about how to approach
the rest. Boy, if we'd only had a troubleshooting guide when <em class="emphasis">we</EM
> started!<a class="indexterm" name="AUTOID-15055"></A
></P
></DIV
></DIV
><a class="indexterm" name="AUTOID-15057"></A
><a class="indexterm" name="AUTOID-15058"></A
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch13_05.htm" title="13.5 Interoperability and Version Problems"><img src="../gifs/txtpreva.gif" alt="Previous: 13.5 Interoperability and Version Problems" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="DNS &amp; BIND"><img src="../gifs/txthome.gif" alt="DNS &amp; BIND" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="CHAPTER" href="ch14_01.htm" title="14. Programming with the Resolver and Name Server Library Routines"><img src="../gifs/txtnexta.gif" alt="Next: 14. Programming with the Resolver and Name Server Library Routines" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">13.5 Interoperability and Version Problems</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">14. Programming with the Resolver and Name Server Library Routines</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
