<html><head>
<title>[Chapter 2] 2.7 Caching</TITLE>
<meta name="DC.title" content="DNS &amp; BIND"><meta name="DC.creator" content="Cricket Liu &amp; Paul Albitz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T18:24:15Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-512-2" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch02_01.htm" title="2. How Does DNS Work?"><link rel="prev" href="ch02_06.htm#AUTOID-1597" title="2.6 Resolution"><link rel="next" href="ch03_01.htm" title="3. Where Do I Start?"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="DNS &amp; BIND" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="DNS &amp; BIND"><area shape="RECT" coords="467,0,514,18" href="../search/dsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch02_06.htm#AUTOID-1597" title="2.6 Resolution"><img src="../gifs/txtpreva.gif" alt="Previous: 2.6 Resolution" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 2<br>How Does <span class="acronym">DNS</SPAN
> Work?</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="CHAPTER" href="ch03_01.htm" title="3. Where Do I Start?"><img src="../gifs/txtnexta.gif" alt="Next: 3. Where Do I Start?" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="DNS3-CHP-2-CACHING">2.7 Caching</A
></H2
><p class="para"><a class="indexterm" name="DNS3-IDX-2-RESOLUTION-CACHING-AND"></A
><a class="indexterm" name="DNS3-IDX-2-QUERIES-CACHING-AND"></A
><a class="indexterm" name="DNS3-IDX-2-CACHING"></A
><a class="indexterm" name="DNS3-IDX-2-PERFORMANCE-CACHING"></A
><a class="indexterm" name="DNS3-IDX-2-RECURSIVE-RESOLUTION-CACHING-AND"></A
><a class="indexterm" name="AUTOID-1720"></A
>The whole resolution process may seem awfully convoluted and
cumbersome to someone accustomed to simple searches through the host
table. Actually, it's usually quite fast. One of the features that
speeds it up considerably is <i class="firstterm">caching</I
>.</P
><p class="para">A name server processing a recursive query may have to send out
quite a few queries to find an answer. However, it discovers a lot of
information about the domain name space as it does so. Each time it's
referred to another list of name servers, it learns that those name
servers are authoritative for some zone, and it learns the addresses
of those servers. And, at the end of the resolution process, when it
finally finds the data the original querier sought, it can store that
data for future reference, too. With version 4.9 and all version 8
<span class="acronym">BIND</SPAN
>s, name servers even implement<a class="indexterm" name="DNS3-IDX-2-NEGATIVE-CACHING"></A
>
<i class="firstterm">negative caching</I
>: if an authoritative name
server responds to a query with an answer that says the domain name or
data type in the query doesn't exist, the local name server will
temporarily cache that information, too. Name servers cache all of
this data to help speed up successive queries. The next time a
resolver queries the name server for data about a domain name the name
server knows something about, the process is shortened quite a
bit. The name server may have cached the answer, positive or negative,
in which case it simply returns the answer to the resolver. Even if it
doesn't have the answer cached, it may have learned the identities of
the name servers that are authoritative for the zone the domain name
is in and be able to query them directly.</P
><p class="para">For example, say our name server has already looked up the
address of <i class="systemitem.sitename">eecs.berkeley.edu</I
>.
In the process, it cached the names and addresses of the <i class="systemitem.sitename">eecs.berkeley.edu</I
> and <i class="systemitem.sitename">berkeley.edu</I
> name servers (plus
<i class="systemitem.sitename">eecs.berkeley.edu</I
>'s
<span class="acronym">IP</SPAN
> address).  Now if a resolver were to query our
name server for the address of <i class="systemitem.sitename">baobab.cs.berkeley.edu</I
>, our name server
could skip querying the root name servers. Recognizing that
<i class="systemitem.sitename">berkeley.edu</I
> is the closest
ancestor of <i class="systemitem.sitename">baobab.cs.berkeley.edu</I
> that it knows
about, our name server would start by querying a <i class="systemitem.sitename">berkeley.edu</I
> name server, as shown in
<a class="xref" href="#DNS3-CHP-2-FIG-16" title="Resolving baobab.cs.berkeley.edu">Figure 2.16</A
>. On the other hand, if our name
server had discovered that there was no address for <i class="systemitem.sitename">eecs.berkeley.edu</I
>, the next time it
received a query for the address, it could simply have responded
appropriately from its cache.</P
><h4 class="figure"><a class="title" name="DNS3-CHP-2-FIG-16">Figure 2.16: Resolving baobab.cs.berkeley.edu</A
></H4
><img class="graphic" src="figs/dns3_0216.gif" alt="Figure 2.16"><p class="para">In addition to speeding up resolution, caching prevents us from
having to query the root name servers again. This means that we're not
as dependent on the roots, and they won't suffer as much from all our
queries.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-1745">2.7.1 Time to Live</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-1748"></A
><a class="indexterm" name="AUTOID-1750"></A
><a class="indexterm" name="AUTOID-1752"></A
><a class="indexterm" name="AUTOID-1754"></A
>Name servers can't cache data forever, of course. If they did, changes
to that data on the authoritative name servers would never reach the
rest of the network. Remote name servers would just continue to use
cached data. Consequently, the administrator of the zone that contains
the data decides on a <i class="firstterm">time to live</I
>, or
<i class="firstterm"><span class="acronym">TTL</SPAN
></I
>, for the data. The time
to live is the amount of time that any name server is allowed to cache
the data. After the time to live expires, the name server must discard
the cached data and get new data from the authoritative name
servers. This also applies to negatively cached data; a name server
must time out a negative answer after a period, too, in case new data
has been added on the authoritative name servers. However, the time to
live for negatively cached data isn't tunable by the domain
administrator; it's hardcoded to ten minutes.</P
><p class="para">Deciding on a time to live for your data is essentially deciding
on a trade-off between performance and consistency. A small
<span class="acronym">TTL</SPAN
> will help ensure that data about your domain is
consistent across the network, because remote name servers will time
it out more quickly and be forced to query your authoritative name
servers more often for new data.  On the other hand, this will
increase the load on your name servers and lengthen resolution time
for information in your domain, on the average.</P
><p class="para">A large <span class="acronym">TTL</SPAN
> will shorten the average time it
takes to resolve information in your domain because the data can be
cached longer. The drawback is that your information will be
inconsistent for a longer time if you make changes to your data on
your name servers.<a class="indexterm" name="AUTOID-1764"></A
><a class="indexterm" name="AUTOID-1765"></A
><a class="indexterm" name="AUTOID-1766"></A
><a class="indexterm" name="AUTOID-1767"></A
><a class="indexterm" name="AUTOID-1768"></A
><a class="indexterm" name="AUTOID-1769"></A
></P
><p class="para">Enough of this theory&nbsp;- I'll bet you're antsy to get on with
this. There's some homework necessary before you can set up your
domain and your name servers, though, and we'll assign it in the next
chapter.<a class="indexterm" name="AUTOID-1771"></A
><a class="indexterm" name="AUTOID-1773"></A
><a class="indexterm" name="AUTOID-1775"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch02_06.htm#AUTOID-1597" title="2.6 Resolution"><img src="../gifs/txtpreva.gif" alt="Previous: 2.6 Resolution" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="DNS &amp; BIND"><img src="../gifs/txthome.gif" alt="DNS &amp; BIND" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="CHAPTER" href="ch03_01.htm" title="3. Where Do I Start?"><img src="../gifs/txtnexta.gif" alt="Next: 3. Where Do I Start?" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">2.6 Resolution</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3. Where Do I Start?</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
