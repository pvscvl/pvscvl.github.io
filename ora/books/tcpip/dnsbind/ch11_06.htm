<html><head>
<title>[Chapter 11] 11.6 Less Common Tasks</TITLE>
<meta name="DC.title" content="DNS &amp; BIND"><meta name="DC.creator" content="Cricket Liu &amp; Paul Albitz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-01-06T18:37:38Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-512-2" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch11_01.htm" title="11. nslookup"><link rel="prev" href="ch11_05.htm#AUTOID-12272" title="11.5 Common Tasks"><link rel="next" href="ch11_07.htm#QUERY-REFUSED" title="11.7 Troubleshooting nslookup Problems"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="DNS &amp; BIND" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="DNS &amp; BIND"><area shape="RECT" coords="467,0,514,18" href="../search/dsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch11_05.htm#AUTOID-12272" title="11.5 Common Tasks"><img src="../gifs/txtpreva.gif" alt="Previous: 11.5 Common Tasks" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 11<br>nslookup</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch11_07.htm#QUERY-REFUSED" title="11.7 Troubleshooting nslookup Problems"><img src="../gifs/txtnexta.gif" alt="Next: 11.7 Troubleshooting nslookup Problems" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="AUTOID-12397">11.6 Less Common Tasks</A
></H2
><p class="para">These are tricks you'll probably have to use less often, but
which are very handy to have in your repertoire. Most of these will be
helpful when you're trying to troubleshoot a <span class="acronym">DNS</SPAN
> or
<span class="acronym">BIND</SPAN
> problem; they'll enable you to grub around in
the packets the resolver sees, and mimic a <span class="acronym">BIND</SPAN
>
name server querying another name server or transferring zone
data.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-12403">11.6.1 Seeing the Query and Response Packets</A
></H3
><p class="para"><a class="indexterm" name="CH11.TRACE1"></A
><a class="indexterm" name="CH11.TRACE2"></A
><a class="indexterm" name="CH11.TRACE3"></A
>If you need to, you can direct <kbd class="command">nslookup</KBD
> to show you
the queries it sends out and the responses it receives. Turning on<a class="indexterm" name="AUTOID-12415"></A
><a class="indexterm" name="AUTOID-12417"></A
>
<i class="option">debug</I
> shows you the responses. Turning on
<i class="option">d2</I
> shows you the queries as well. When you want to
turn off debugging completely, you have to use <kbd class="command">set<a class="indexterm" name="AUTOID-12422"></A
><a class="indexterm" name="AUTOID-12424"></A
>
nodebug</KBD
>, since <kbd class="command">set nod2</KBD
> only turns off
level 2 debugging.  After the following trace, we'll explain some
parts of the packet output. If you want, you can pull out your copy of
<span class="acronym">RFC</SPAN
> 1035, turn to page 25, and read along with our
explanation.</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>nslookup</B
></CODE
>
Default Server:  terminator.movie.edu
Address:  0.0.0.0

&gt; <code class="userinput"><b>set debug</B
></CODE
>
&gt; <code class="userinput"><b>wormhole</B
></CODE
>
Server:  terminator.movie.edu
Address:  0.0.0.0

------------
Got answer:
    HEADER:
        opcode = QUERY, id = 6813, rcode = NOERROR
        header flags:  response, auth. answer, want recursion,
        recursion avail.  questions = 1,  answers = 2,
        authority records = 2,  additional = 3

    QUESTIONS:
        wormhole.movie.edu, type = A, class = IN
    ANSWERS:
    -&gt;  wormhole.movie.edu
        internet address = 192.253.253.1
        ttl = 86400 (1D)
    -&gt;  wormhole.movie.edu
        internet address = 192.249.249.1
        ttl = 86400 (1D)
    AUTHORITY RECORDS:
    -&gt;  movie.edu
        nameserver = terminator.movie.edu
        ttl = 86400 (1D)
    -&gt;  movie.edu
        nameserver = wormhole.movie.edu
        ttl = 86400 (1D)
    ADDITIONAL RECORDS:
    -&gt;  terminator.movie.edu
        internet address = 192.249.249.3
        ttl = 86400 (1D)
    -&gt;  wormhole.movie.edu
        internet address = 192.253.253.1
        ttl = 86400 (1D)
    -&gt;  wormhole.movie.edu
        internet address = 192.249.249.1
        ttl = 86400 (1D)

------------
Name:    wormhole.movie.edu
Addresses:  192.253.253.1, 192.249.249.1

&gt; <code class="userinput"><b>set d2</B
></CODE
>
&gt; <code class="userinput"><b>wormhole</B
></CODE
>
Server:  terminator.movie.edu
Address:  0.0.0.0

<i class="lineannotation">This time the query is also shown.</I
>

------------
SendRequest(), len 36
    HEADER:
        opcode = QUERY, id = 6814, rcode = NOERROR
        header flags:  query, want recursion
        questions = 1,  answers = 0,  authority records = 0,
      additional = 0

    QUESTIONS:
        wormhole.movie.edu, type = A, class = IN

------------
------------
Got answer (164 bytes):

<i class="lineannotation">The answer is the same as above.</I
></PRE
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-12437"></A
><a class="indexterm" name="AUTOID-12440"></A
><a class="indexterm" name="AUTOID-12443"></A
>The text between the dashes is the query and response packets. As
promised, we will go through the packet
contents. <span class="acronym">DNS</SPAN
> packets are composed of five
sections:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Header section</P
></LI
><li class="listitem"><p class="para">Question section</P
></LI
><li class="listitem"><p class="para">Answer section</P
></LI
><li class="listitem"><p class="para">Authority section</P
></LI
><li class="listitem"><p class="para">Additional section</P
></LI
></OL
><dl class="variablelist"><dt class="term">Header section</DT
><dd class="listitem"><p class="para">The<a class="indexterm" name="AUTOID-12464"></A
>
header section is present in every query and response. The operation
code is always <span class="acronym">QUERY</SPAN
>. The only other
opcodes are inverse query (<span class="acronym">IQUERY</SPAN
>) and status
(<span class="acronym">STATUS</SPAN
>), but those aren't used. The id is used to
associate a response with a query and to detect duplicate queries or
responses. You have to look in the header flags to see which packets
are queries and which are responses.  The string<a class="indexterm" name="AUTOID-12469"></A
>
<code class="literal">want recursion</CODE
> means that the querier wants the name server to do all
the work. The flag is parroted in the response. The string <code class="literal">auth.
answer</CODE
> means that this response is
<i class="firstterm">authoritative</I
>.  In other words, the response is
from the name server's authoritative data, not from its cache
data. The response code,<a class="indexterm" name="AUTOID-12474"></A
><a class="indexterm" name="AUTOID-12476"></A
>
<code class="literal">rcode</CODE
>, can be one of <code class="literal">no error</CODE
>, <code class="literal">server failure</CODE
>, <code class="literal">name error</CODE
> (also known
as <code class="literal">nxdomain</CODE
> or <code class="literal">nonexistent domain</CODE
>), <code class="literal">not
implemented</CODE
>, or <code class="literal">refused</CODE
>. The <code class="literal">server failure</CODE
>, <code class="literal">name error</CODE
>, <code class="literal">not
implemented</CODE
>, and <code class="literal">refused</CODE
> response codes cause the
<kbd class="command">nslookup</KBD
> <span class="quote">"Server failed,"</SPAN
>
<span class="quote">"Nonexistent domain,"</SPAN
> <span class="quote">"Not implemented,"</SPAN
> and
<span class="quote">"Query refused"</SPAN
> errors, respectively. The last four
entries in the header section are counters&nbsp;- they indicate how
many resource records there are in each of the next four
sections.</P
></DD
><dt class="term">Question section</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-12500"></A
>There is always <em class="emphasis">one</EM
> question in a
<span class="acronym">DNS</SPAN
> packet; it includes the name and the requested
data type and class. There is never more than one question in a
<span class="acronym">DNS</SPAN
> packet. The capability of handling more than
one question in a <span class="acronym">DNS</SPAN
> packet would require a
redesign of the packet format. For one thing, the single authority bit
would have to be changed, because the answer section could contain a
mix of authoritative answers and nonauthoritative answers. In the
present design, setting the authoritative answer bit means that the
name server is an authority for the domain name in the question
section.</P
></DD
><dt class="term">Answer section</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-12510"></A
>This section contains the resource records that answer the question.
There can be more than one resource record in the response. For
example, if the host is multihomed, there will be more than one
address resource record.</P
></DD
><dt class="term">Authority section</DT
><dd class="listitem"><p class="para">The<a class="indexterm" name="AUTOID-12516"></A
>
authority section is where name server records are returned. When a
response refers the querier to some other name servers, those name
servers are listed here.</P
></DD
><dt class="term">Additional section</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-12522"></A
>The additional records section adds information that may complete
information included in other sections. For instance, if a name server
is listed in the authority section, the name server's address is added
to the additional records section. After all, to contact the name
server, you need to have its address.</P
></DD
></DL
><p class="para">For you sticklers for detail, there <em class="emphasis">is</EM
> a
time when the number of questions in a query packet isn't one: in an<a class="indexterm" name="AUTOID-12526"></A
><a class="indexterm" name="AUTOID-12528"></A
>
inverse query, when it's zero. In an inverse query, there is one
answer in the query packet, and the question section is empty. The
name server fills in the question. But, as we said, inverse queries<a class="indexterm" name="AUTOID-12531"></A
><a class="indexterm" name="AUTOID-12534"></A
><a class="indexterm" name="AUTOID-12537"></A
>
are almost nonexistent.</P
><a class="indexterm" name="AUTOID-12540"></A
><a class="indexterm" name="AUTOID-12541"></A
><a class="indexterm" name="AUTOID-12542"></A
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-12543">11.6.2 Querying Like a <span class="acronym">BIND</SPAN
> Name Server</A
></H3
><p class="para"><a class="indexterm" name="CH11.MIMIC1"></A
><a class="indexterm" name="CH11.MIMIC2"></A
><a class="indexterm" name="CH11.MIMIC3"></A
>You can make <kbd class="command">nslookup</KBD
> send out the same query
packet a name server would. Name server query packets are not much
different from resolver packets. The primary difference in the query
packets is that resolvers request recursive services, and name servers
seldom do. Recursion is the default with <kbd class="command">nslookup</KBD
>,
so you have to explicitly turn it off. The difference in
<em class="emphasis">operation</EM
> between a resolver and a name server is
that the resolver implements the search list, and the name server
doesn't. By default, <kbd class="command">nslookup</KBD
> implements the search
list, so that, too, has to be turned off. Of course, judicious use of
the trailing dot will have the same effect.</P
><p class="para"><a class="indexterm" name="AUTOID-12561"></A
>In raw <kbd class="command">nslookup</KBD
> terms, this means that to
query like a resolver, you use <kbd class="command">nslookup</KBD
>'s default
settings. To query like a name server, use <kbd class="command">set<a class="indexterm" name="AUTOID-12567"></A
><a class="indexterm" name="AUTOID-12569"></A
>
norecurse</KBD
> and <kbd class="command">set nosearch</KBD
>. On the
command line, that's <kbd class="command">nslookup -norecurse
-nosearch</KBD
>.</P
><p class="para">When a <span class="acronym">BIND</SPAN
> name server gets a query, it
looks for the answer in its cache. If it doesn't have the answer, and
it is authoritative for the domain, the name server responds that the
name doesn't exist or that there is no data for that type. If the name
server doesn't have the answer, and it is <em class="emphasis">not</EM
>
authoritative for the domain, it starts walking up the domain tree
looking for <span class="acronym">NS</SPAN
> records. There will always be
<span class="acronym">NS</SPAN
> records somewhere higher in the domain tree. As
a last resort, it will use the <span class="acronym">NS</SPAN
> records at the
root domain, the highest level.</P
><p class="para">If the name server received a nonrecursive query, it would
respond to the querier by giving the <span class="acronym">NS</SPAN
> records
that it had found.  On the other hand, if the original query was a
recursive query, the name server would then query the remote name
servers in the <span class="acronym">NS</SPAN
> records that it found. When the
name server receives a response from one of the remote name servers,
it caches the response, and repeats this process, if necessary. The
remote server's response will either have the answer to the question
or it will contain a list of name servers lower in the domain tree and
closer to the answer.</P
><p class="para">Let's assume for our example that we are trying to satisfy a
recursive query and that we didn't find any <span class="acronym">NS</SPAN
>
records until we checked the <i class="systemitem.sitename">gov</I
> domain. That is, in fact, the case
when we ask the name server on <i class="systemitem.sitename">relay.hp.com</I
> about <i class="systemitem.sitename">www.whitehouse.gov</I
>&nbsp;- it doesn't find
any <span class="acronym">NS</SPAN
> records until the <i class="systemitem.sitename">gov</I
> domain. From there we switch servers
to a <i class="systemitem.sitename">gov</I
> name server and ask
the same question. It directs us to the <i class="systemitem.sitename">whitehouse.gov</I
> servers. We then switch to
a <i class="systemitem.sitename">whitehouse.gov</I
> name server
and ask the same question:</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>nslookup</B
></CODE
>
Default Server:  relay.hp.com
Address:  15.255.152.2

&gt; <code class="userinput"><b>set norec</B
></CODE
>           <i class="lineannotation">&nbsp;- Query like a name server: turn off recursion</I
>
&gt; <code class="userinput"><b>set nosearch</B
></CODE
>        <i class="lineannotation">&nbsp;- turn off the search list</I
>
&gt; <code class="userinput"><b>www.whitehouse.gov</B
></CODE
>  <i class="lineannotation">&nbsp;- We don't need to dot-terminate since we've turned</I
>
                      <i class="lineannotation">&nbsp;- search off</I
>
Server:  relay.hp.com
Address:  15.255.152.2

Name: www.whitehouse.gov
Served by:
- H.ROOT-SERVERS.NET
 128.63.2.53
 gov
- B.ROOT-SERVERS.NET
 128.9.0.107
 gov
- C.ROOT-SERVERS.NET
 192.33.4.12
 gov
- D.ROOT-SERVERS.NET
 128.8.10.90
 gov
- E.ROOT-SERVERS.NET
 192.203.230.10
 gov
- I.ROOT-SERVERS.NET
 192.36.148.17
 gov
- F.ROOT-SERVERS.NET
 192.5.5.241
 gov
- G.ROOT-SERVERS.NET
 192.112.36.4
 gov
- A.ROOT-SERVERS.NET
 198.41.0.4
 gov</PRE
></BLOCKQUOTE
><p class="para">Switch to a gov name server. You may have to turn recursion back
on temporarily, if the name server doesn't have the address already
cached.</P
><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>server e.root-servers.net</B
></CODE
>
Default Server:  e.root-servers.net
Address: 192.203.230.10</PRE
></BLOCKQUOTE
><p class="para">Ask the same question of the gov name server. It will refer us
to name servers closer to our desired answer.</P
><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>www.whitehouse.gov.</B
></CODE
>
Server:  e.root-servers.net
Address:  192.203.230.10

Name:    www.whitehouse.gov
Served by:
- SEC1.DNS.PSI.NET
          38.8.92.2
          WHITEHOUSE.GOV
- SEC2.DNS.PSI.NET
          38.8.93.2
          WHITEHOUSE.GOV</PRE
></BLOCKQUOTE
><p class="para">Switch to a whitehouse.gov name server&nbsp;- either of them will
do.</P
><blockquote class="screen"><pre class="screen">&gt; <code class="userinput"><b>server sec1.dns.psi.net.</B
></CODE
>
Default Server:  sec1.dns.psi.net
Address:  38.8.92.2

&gt; <code class="userinput"><b>www.whitehouse.gov.</B
></CODE
>
Server:  sec1.dns.psi.net
Address:  38.8.92.2

Name:    www.whitehouse.gov
Addresses:  198.137.240.91, 198.137.240.92</PRE
></BLOCKQUOTE
><p class="para">We hope this example gives you a feeling for how name servers
look up names. If you need to refresh your understanding of what this
looks like graphically, flip back to <a class="xref" href="ch02_04.htm#AUTOID-1375" title="The domain ca...">Figure 2.10</A
>.</P
><p class="para">Before we move on, notice that we asked each of the servers the
very same question: <span class="quote">"What's the address for <i class="systemitem.sitename">www.whitehouse.gov</I
>?"</SPAN
> What
do you think would happen if the <i class="systemitem.sitename">gov</I
> name server had already cached
<i class="systemitem.sitename">www.whitehouse.gov</I
>'s address
itself? The <i class="systemitem.sitename">gov</I
> name server
would have answered the question out of its cache instead of referring
you to the <i class="systemitem.sitename">whitehouse.gov</I
>
name servers. Why is this significant? Suppose you messed up a
particular host's address in your zone. Someone points it out to you,
and you clean up the problem.  Even though your name server now has
the correct data, some remote sites find the old, messed-up data when
they look up the name. One of the name servers higher up in the domain
tree, such as a root name server, has cached the incorrect data; when
it receives a query for that host's address, it returns the incorrect
data instead of referring the querier to your name servers. What makes
this problem hard to track down is that only one of the <span class="quote">"higher
up"</SPAN
> name servers has cached the incorrect data, so only some of
the remote lookups get the wrong answer&nbsp;- the ones that use this
server. Fun, huh? Eventually, though, the <span class="quote">"higher up"</SPAN
>
name server will time out the old record.  If you're pressed for time,
you can contact the administrators of the remote name server and ask
them to kill and restart <kbd class="command">named</KBD
> to flush the
cache. Of course, if the remote name server is an important, much-used
name server, they may tell you where to go with that suggestion.</P
><a class="indexterm" name="AUTOID-12623"></A
><a class="indexterm" name="AUTOID-12624"></A
><a class="indexterm" name="AUTOID-12625"></A
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="AUTOID-12626">11.6.3 Zone Transfers</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-12629"></A
><a class="indexterm" name="AUTOID-12632"></A
><kbd class="command">nslookup</KBD
> can be used to transfer a whole zone using
the<a class="indexterm" name="AUTOID-12636"></A
>
<kbd class="command">ls</KBD
> command. This feature is useful for
troubleshooting, for figuring out how to spell a remote host's name,
or just for counting how many hosts are in some remote domain. Since
the output can be substantial, <kbd class="command">nslookup</KBD
> allows you
to redirect the output to a file. If you want to bail out in the
middle of a transfer, you can interrupt it by typing your interrupt
character.</P
><p class="para">Beware: some hosts won't let you pull a copy of their zone,
either for security reasons or to limit the load on their name server
host. The Internet is a friendly place, but administrators have to
defend their turf.</P
><p class="para">Let's look at the <i class="systemitem.sitename">movie.edu</I
> zone.  As you will see in the
output below, all the zone data is listed&nbsp;- the <span class="acronym">SOA</SPAN
>
record is listed twice, which is an artifact of how the data is
exchanged during the zone transfer.  (<span class="acronym">BIND</SPAN
> 4's
<kbd class="command">nslookup</KBD
> only shows you address and name server
data, not all the data.)</P
><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>nslookup</B
></CODE
>
Default Server:  terminator.movie.edu
Address:  0.0.0.0

&gt; <code class="userinput"><b>ls movie.edu.</B
></CODE
>
@                       4D IN SOA       terminator root.terminator (
                                        1997080605      ; serial
                                        3H              ; refresh
                                        1H              ; retry
                                        4w2d            ; expiry
                                        1D )            ; minimum

                        4D IN NS        terminator
terminator              4D IN A         192.249.249.3
                        4D IN MX        10 terminator
                        4D IN NS        wormhole
wormhole                4D IN A         192.249.249.1
                        4D IN A         192.253.253.1
                        4D IN MX        10 wormhole
robocop                 4D IN A         192.249.249.2
                        4D IN MX        10 robocop
wh249                   4D IN A         192.249.249.1
wh253                   4D IN A         192.253.253.1
wh                      4D IN CNAME     wormhole
shining                 4D IN A         192.253.253.3
                        4D IN MX        10 shining
localhost               4D IN A         127.0.0.1
bitg                    4D IN CNAME     terminator
carrie                  4D IN A         192.253.253.4
                        4D IN MX        10 carrie
dh                      4D IN CNAME     diehard
diehard                 4D IN A         192.249.249.4
                        4D IN MX        10 diehard
misery                  4D IN A         192.253.253.2
                        4D IN MX        10 misery
@                       4D IN SOA       terminator root.terminator (
                                        1997080605      ; serial
                                        3H              ; refresh
                                        1H              ; retry
                                        4w2d            ; expiry
                                        1D )            ; minimum
Received 48 answers (0 records).
&gt; <code class="userinput"><b>ls movie.edu  &gt; /tmp/movie</B
></CODE
>  <i class="lineannotation">&nbsp;- List all data into /tmp/movie</I
>
[terminator.movie.edu]
Received 48 answers (0 records).</PRE
></BLOCKQUOTE
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch11_05.htm#AUTOID-12272" title="11.5 Common Tasks"><img src="../gifs/txtpreva.gif" alt="Previous: 11.5 Common Tasks" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="DNS &amp; BIND"><img src="../gifs/txthome.gif" alt="DNS &amp; BIND" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch11_07.htm#QUERY-REFUSED" title="11.7 Troubleshooting nslookup Problems"><img src="../gifs/txtnexta.gif" alt="Next: 11.7 Troubleshooting nslookup Problems" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">11.5 Common Tasks</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">11.7 Troubleshooting nslookup Problems</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.htm" title="The Networking CD Bookshelf">Library Home</A
> | <a href="index.htm" title="DNS &amp; BIND">DNS &amp; BIND</A
> | <a href="../tcpip/index.htm" title="TCP/IP Network Administration">TCP/IP</A
> | <a href="../sendmail/index.htm" title="sendmail">sendmail</A
> | <a href="../smdref/index.htm" title="sendmail Desktop Reference">sendmail Reference</A
> | <a href="../firewall/index.htm" title="Building Internet Firewalls">Firewalls</A
> | <a href="../puis/index.htm" title="Practical UNIX &amp; Internet Security">Practical Security</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
