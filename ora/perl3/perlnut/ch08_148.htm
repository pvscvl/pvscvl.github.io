<html><head><title>MIME::Base64 (Perl in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Stephen Spainhour" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002416L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XSLT" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_147.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch08_149.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">8.148. MIME::Base64</h2>

<p><a name="INDEX-1503" />Provides functions to encode and decode
strings into the Base64 encoding scheme as specified in RFC 2045
(dealing with MIME, or Multipurpose Internet Mail Extensions). Base64
encoding was designed to represent data in octets in an encoded form;
all data is encoded using a 65-character subset, which is comprised
of <tt class="literal">A-Z</tt>, <tt class="literal">a-z</tt>,
<tt class="literal">0-9+</tt>, <tt class="literal">/</tt>, and
<tt class="literal">=</tt>. MIME::Base64 ships with the Perl source kit as
of 5.8.
</p>

<p>For example:</p>

<blockquote><pre class="code">#!/usr/local/bin/perl -w
use MIME::Base64;
my $stone = 'purplebarneystone';
my $b64 = encode_base64($stone);
print "$b64\n";</pre></blockquote>

<p>MIME::Base64 implements the following functions, both of which are
exported.
</p>


<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>decode_base64</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
decode_base64(<em class="replaceable">string</em>)
</pre><p>Unpacks the base64-encoded <em class="replaceable">string</em> and
returns the decoded data. In addition,
<tt class="literal">decode_base64</tt> ignores any character
that's not part of the recognized 65-character
base64 subset.
</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>encode_base64</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
encode_base64(<em class="replaceable">string</em>, [<em class="replaceable">end_of_line</em>])
</pre><p>Base64-encodes <em class="replaceable">string</em> with the optional
<em class="replaceable"><tt>end_of_line</tt></em> argument. To base64-encode a
JPEG image that lives in a file, you should specify
<em class="replaceable"><tt>end_of_line</tt></em>, since
<tt class="literal">encode_base64</tt> returns base64-encoded content
that's broken down into 76 characters per line. If
you do not want the 76-character breaks to be imposed on you, set
<em class="replaceable"><tt>end_of_line</tt></em> to an empty string
(<tt class="literal">""</tt>).
</p></div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_147.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch08_149.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">8.147. Math::Trig</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">8.149. MIME::QuotedPrint</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

</body></html>