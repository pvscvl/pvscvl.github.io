<html><head><title>Win32::Console (Perl in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Stephen Spainhour" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002416L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XSLT" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch22_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch22_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">22.2. Win32::Console</h2>

<p><a name="INDEX-3173" /><a name="INDEX-3174" />Win32::Console implements the
Win32 console and character mode functions. They give you full
control on the console input and output, including support of
offscreen console buffers (e.g., multiple screen pages); reading and
writing of characters, attributes, and whole portions of the screen;
and complete processing of keyboard and mouse events.
</p>

<p><a name="INDEX-3175" />The <tt class="literal">new</tt> constructor
is used to create a console object. It can take two forms:
</p>

<blockquote><pre class="code">$con = Win32::Console-&gt;new(<em class="replaceable"><tt>standard_handle</tt></em>); 
$con = Win32::Console-&gt;new(<em class="replaceable"><tt>accessmode</em>, <em class="replaceable">sharemode</tt></em>);</pre></blockquote>

<p>The first form creates a handle to a standard channel.
<em class="replaceable"><tt>standard_handle</tt></em> can be one of
<tt class="literal">STD_OUTPUT_HANDLE</tt>,
<tt class="literal">STD_ERROR_HANDLE</tt>, or
<tt class="literal">STD_INPUT_HANDLE</tt>.
</p>

<p>The second form creates a console screen buffer in memory, which you
can access for reading and writing as a normal console, and then
redirect on the standard output (the screen) with
<tt class="literal">Display</tt>. In this case, you can specify
<em class="replaceable"><tt>accessmode</tt></em> to be
<tt class="literal">GENERIC_READ</tt>, <tt class="literal">GENERIC_WRITE</tt>, or
both, determining the permissions you will have on the created
buffer.
</p>

<p><em class="replaceable"><tt>sharemode</tt></em> affects how the console can be
shared. It can be specified as either
<tt class="literal">FILE_SHARE_READ</tt>,
<tt class="literal">FILE_SHARE_WRITE</tt>, or both. If you
don't specify any of those parameters, all four
flags will be used.
</p>

<p>The following methods are supported by the Win32::Console module.</p>

<a name="INDEX-3176" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Alloc</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Alloc
</pre><p><a name="INDEX-3176" />Allocates a new console for
the process. Returns <tt class="literal">undef</tt> on error or a nonzero
value on success. A process cannot be associated with more than one
console, so this method will fail if there is already an allocated
console. Use <tt class="literal">Free</tt> to detach the process from the
console, and then call <tt class="literal">Alloc</tt> to create a new
console.
</p></div>

<a name="INDEX-3177" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Attr</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Attr([<em class="replaceable">attr</em>])
</pre><p><a name="INDEX-3177" />Gets or sets the current
console attribute. This attribute is used by the
<tt class="literal">Write</tt> method.
</p></div>

<a name="INDEX-3178" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Cls</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Cls([<em class="replaceable">attr</em>])
</pre><p><a name="INDEX-3178" />Clears the console with the
specified <em class="replaceable"><tt>attr</tt></em>, if given. Uses
<tt class="literal">ATTR_NORMAL</tt> otherwise.
</p></div>

<a name="INDEX-3179" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Cursor</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Cursor([<em class="replaceable">x</em>, <em class="replaceable">y</em>, <em class="replaceable">size</em>, <em class="replaceable">visible</em>])
</pre><p><a name="INDEX-3179" />Gets or sets cursor position
and appearance. Returns <tt class="literal">undef</tt> on error, or a
four-element list containing <em class="replaceable"><tt>x</tt></em>,
<em class="replaceable"><tt>y</em>, <em class="replaceable">size</tt></em>, and
<em class="replaceable"><tt>visible</em>. <em class="replaceable">x</tt></em> and
<em class="replaceable"><tt>y</tt></em> give the current cursor position.
</p></div>

<a name="INDEX-3180" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Display</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Display
</pre><p><a name="INDEX-3180" />Displays the specified
console on the screen. Returns <tt class="literal">undef</tt> on error or a
nonzero value on success.
</p></div>

<a name="INDEX-3181" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>FillAttr</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;FillAttr([<em class="replaceable">value</em>, <em class="replaceable">number</em>, <em class="replaceable">col</em>, <em class="replaceable">row</em>])
</pre><p><a name="INDEX-3181" />Fills the specified
<em class="replaceable"><tt>number</tt></em> of consecutive attributes,
beginning at <em class="replaceable"><tt>col</tt></em>,
<em class="replaceable"><tt>row</tt></em>, with the
<em class="replaceable"><tt>value</tt></em> specified. Returns the number of
attributes filled, or <tt class="literal">undef</tt> on error.
</p></div>

<a name="INDEX-3182" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>FillChar</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;FillChar(<em class="replaceable">char</em>, <em class="replaceable">number</em>, <em class="replaceable">col</em>, <em class="replaceable">row</em>)
</pre><p><a name="INDEX-3182" />Fills the specified
<em class="replaceable"><tt>number</tt></em> of consecutive characters,
beginning at <em class="replaceable"><tt>col</tt></em>,
<em class="replaceable"><tt>row</tt></em>, with the character specified in
<em class="replaceable"><tt>char</tt></em>. Returns the number of characters
filled, or <tt class="literal">undef</tt> on error.
</p></div>

<a name="INDEX-3183" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Flush</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Flush
</pre><p><a name="INDEX-3183" />Flushes the console input buffer. All
the events in the buffer are discarded. Returns
<tt class="literal">undef</tt> on error, a nonzero value on success.
</p></div>

<a name="INDEX-3184" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Free</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Free
</pre><p><a name="INDEX-3184" />Detaches the process from the
console. Returns <tt class="literal">undef</tt> on error, a nonzero value
on success.
</p></div>

<a name="INDEX-3185" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>GenerateCtrlEvent</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;GenerateCtrlEvent([<em class="replaceable">type</em>, <em class="replaceable">processgroup</em>])
</pre><p><a name="INDEX-3185" />Sends a break signal of the
specified type to the specified process group.
<em class="replaceable"><tt>type</tt></em> can be one of
<tt class="literal">CTRL_BREAK_EVENT</tt> or
<tt class="literal">CTRL_C_EVENT</tt>, signaling, respectively, the
pressing of Ctrl + Break and Ctrl-C. If not specified,
<em class="replaceable"><tt>type</tt></em> defaults to
<tt class="literal">CTRL_C_EVENT</tt>.
<em class="replaceable"><tt>processgroup</tt></em> is the PID of a process
sharing the same console. If omitted, it defaults to
<tt class="literal">0</tt> (the current process), which is also the only
meaningful value that you can pass to this function. Returns
<tt class="literal">undef</tt> on error, a nonzero value on success.
</p></div>

<a name="INDEX-3186" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>GetEvents</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;GetEvents
</pre><p><a name="INDEX-3186" />Returns the number of unread
input events in the console's input buffer, or
<tt class="literal">undef</tt> on error.
</p></div>

<a name="INDEX-3187" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Info</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Info
</pre><p><a name="INDEX-3187" />Returns an array of
information about the console, which contains:
</p><ul><li>
<p>Number of columns (X size) of the console buffer</p>
</li><li>
<p>Number of rows (Y size) of the console buffer</p>
</li><li>
<p>Current column (X position) of the cursor</p>
</li><li>
<p>Current row (Y position) of the cursor</p>
</li><li>
<p>Current attribute used for <tt class="literal">Write</tt></p>
</li><li>
<p>Left column (X of the starting point) of the current console window</p>
</li><li>
<p>Top row (Y of the starting point) of the current console window</p>
</li><li>
<p>Right column (X of the final point) of the current console window</p>
</li><li>
<p>Bottom row (Y of the final point) of the current console window</p>
</li><li>
<p>Maximum number of columns for the console window, given the current
buffer size, font, and screen size
</p>
</li><li>
<p>Maximum number of rows for the console window, given the current
buffer size, font, and screen size
</p>
</li></ul><p>This example prints the cursor's current position: </p><blockquote><pre class="code">@info = $CONSOLE-&gt;Info( );
print "Cursor at $info[3], $info[4].0";</pre></blockquote></div>

<a name="INDEX-3188" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Input</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Input
</pre><p><a name="INDEX-3188" />Reads an event from the input
buffer. Returns a list of values, determined by the type of event. A
keyboard event will contain the following values, in order:
</p><ul><li>
<p>Event type (<tt class="literal">1</tt> for keyboard)</p>
</li><li>
<p>Key state&#x2014;true if the key is being pressed, false if the key is
being released
</p>
</li><li>
<p>Repeat count&#x2014;the number of times the key is held down</p>
</li><li>
<p>Virtual keycode of the key</p>
</li><li>
<p>Virtual scancode of the key</p>
</li><li>
<p>ASCII code of the character (if the key is a character key,
<tt class="literal">0</tt> otherwise)
</p>
</li><li>
<p>State of the control keys (Shifts, Ctrls, Alts, etc.)</p>
</li></ul><p>A mouse event will return the following values, in order:</p><ul><li>
<p>Event type (<tt class="literal">2</tt> for mouse)</p>
</li><li>
<p>X coordinate (column) of the mouse location</p>
</li><li>
<p>Y coordinate (row) of the mouse location</p>
</li><li>
<p>Button state&#x2014;the mouse button(s) that are pressed</p>
</li><li>
<p>State of the control keys (Shifts, Ctrls, Alts, etc.)</p>
</li><li>
<p>Event flags for the type of the mouse event</p>
</li></ul><p>This method will return <tt class="literal">undef</tt> on error.</p><p>Note that the events returned depend on the input mode of the
console; for example, mouse events are not intercepted unless
<tt class="literal">ENABLE_MOUSE_INPUT</tt> is specified.
</p></div>

<a name="INDEX-3189" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>InputChar</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;InputChar(<em class="replaceable">number</em>)
</pre><p><a name="INDEX-3189" />Reads and returns number
characters from the console input buffer, or returns
<tt class="literal">undef</tt> on error.
</p></div>

<a name="INDEX-3190" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>InputCP</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;InputCP([<em class="replaceable">codepage</em>])
</pre><p><a name="INDEX-3190" />Gets or sets the input code
page used by the console. Note that this doesn't
apply to a console object, but to the standard input console. This
attribute is used by the <tt class="literal">Write</tt> method.
</p></div>

<a name="INDEX-3191" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>MaxWindow</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;MaxWindow
</pre><p><a name="INDEX-3191" />Returns the size of the
largest possible console window, based on the current font and the
size of the display. The result is <tt class="literal">undef</tt> on error;
otherwise, a two-element list containing the number of columns and
rows is returned.
</p></div>

<a name="INDEX-3192" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Mode</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Mode([<em class="replaceable">flags</em>])
</pre><p><a name="INDEX-3192" />Gets or sets the input or output mode
of a console. <em class="replaceable"><tt>flags</tt></em> can be a combination
of the following constants:
</p><blockquote><pre class="code">ENABLE_LINE_INPUT
ENABLE_ECHO_INPUT
ENABLE_PROCESSED_INPUT
ENABLE_WINDOW_INPUT
ENABLE_MOUSE_INPUT
ENABLE_PROCESSED_OUTPUT
ENABLE_WRAP_AT_EOL_OUTPUT</pre></blockquote></div>

<a name="INDEX-3193" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>MouseButtons</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;MouseButtons
</pre><p><a name="INDEX-3193" />Returns the number of the
buttons on your mouse, or <tt class="literal">undef</tt> on error.
</p></div>

<a name="INDEX-3194" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>OutputCP</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;OutputCP([<em class="replaceable">codepage</em>])
</pre><p><a name="INDEX-3194" />Gets or sets the output code
page used by the console. Note that this doesn't
apply to a console object, but to the standard output console. You
may want to use the noninstantiated form to avoid confusion:
</p><blockquote><pre class="code">$codepage = Win32::Console::OutputCP( );
Win32::Console::OutputCP(437);</pre></blockquote></div>

<a name="INDEX-3195" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>PeekInput</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;PeekInput
</pre><p><a name="INDEX-3195" />Does exactly the same as
<tt class="literal">Input</tt>, except that the event read is not removed
from the input buffer.
</p></div>

<a name="INDEX-3196" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>ReadAttr</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;ReadAttr([<em class="replaceable">number</em>, <em class="replaceable">col</em>, <em class="replaceable">row</em>])
</pre><p><a name="INDEX-3196" />Reads the specified
<em class="replaceable"><tt>number</tt></em> of consecutive attributes from the
console, beginning at <em class="replaceable"><tt>col</tt></em>,
<em class="replaceable"><tt>row</tt></em>. Returns the attributes read (a
variable containing one character for each attribute), or
<tt class="literal">undef</tt> on error. You can then pass the returned
variable to <tt class="literal">WriteAttr</tt> to restore the saved
attributes on screen.
</p></div>

<a name="INDEX-3197" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>ReadChar</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;ReadChar([<em class="replaceable">number</em>, <em class="replaceable">col</em>, <em class="replaceable">row</em>])
</pre><p><a name="INDEX-3197" />Reads the specified
<em class="replaceable"><tt>number</tt></em> of consecutive characters from the
console, beginning at <em class="replaceable"><tt>col</tt></em>,
<em class="replaceable"><tt>row</tt></em>. Returns a string containing the
characters read, or <tt class="literal">undef</tt> on error. You can then
pass the returned variable to <tt class="literal">WriteChar</tt> to restore
the saved characters on screen.
</p></div>

<a name="INDEX-3198" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>ReadRect</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;ReadRect(<em class="replaceable">left</em>, <em class="replaceable">top</em>, <em class="replaceable">right</em>, <em class="replaceable">bottom</em>)
</pre><p><a name="INDEX-3198" />Reads the content (characters
and attributes) of the rectangle specified by
<em class="replaceable"><tt>left</em>, <em class="replaceable">top</tt></em>,
<em class="replaceable"><tt>right</tt></em>, and
<em class="replaceable"><tt>bottom</tt></em> from the console. Returns a string
containing the rectangle read, or <tt class="literal">undef</tt> on error.
You can then pass the returned variable to
<tt class="literal">WriteRect</tt> to restore the saved rectangle on screen
(or on another console).
</p></div>

<a name="INDEX-3199" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Scroll</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Scroll(<em class="replaceable">left</em>, <em class="replaceable">top</em>, <em class="replaceable">right</em>, <em class="replaceable">bottom</em>, <em class="replaceable">col</em>, <em class="replaceable">row</em>, <em class="replaceable">char</em>, <em class="replaceable">attr</em>, [<em class="replaceable">cleft</em>, <em class="replaceable">ctop</em>, <em class="replaceable">cright</em>, <em class="replaceable">cbottom</em>])
</pre><p><a name="INDEX-3199" />Moves a block of data in a
console buffer; the block is identified by the
<em class="replaceable"><tt>left</em>, <em class="replaceable">top</tt></em>,
<em class="replaceable"><tt>right</tt></em>, and
<em class="replaceable"><tt>bottom</tt></em> positions.
</p><p><em class="replaceable"><tt>row</em> and <em class="replaceable">col</tt></em>identify the new location of the block. The cells left empty as a
result of the move are filled with the character
<em class="replaceable"><tt>char</tt></em> and attribute
<em class="replaceable"><tt>attr</tt></em>.
</p><p>Optionally, you can specify a clipping region with
<em class="replaceable"><tt>cleft</em>, <em class="replaceable">ctop</tt></em>,
<em class="replaceable"><tt>cright</tt></em>, and
<em class="replaceable"><tt>cbottom</tt></em> so that the contents of the
console outside this rectangle are unchanged. Returns
<tt class="literal">undef</tt> on error or a nonzero value on success.
</p><blockquote><pre class="code"># Scrolls the screen 10 lines down, filling with black spaces
$CONSOLE-&gt;Scroll(0, 0, 80, 25, 0, 10, " ", $FG_BLACK | $BG_BLACK);</pre></blockquote></div>

<a name="INDEX-3200" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Select</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Select(<em class="replaceable">standard_handle</em>)
</pre><p><a name="INDEX-3200" />Redirects a standard handle
to the specified console. <em class="replaceable"><tt>standard_handle</tt></em>can have one of the following values:
</p><blockquote><pre class="code">STD_INPUT_HANDLE
STD_OUTPUT_HANDLE
STD_ERROR_HANDLE</pre></blockquote><p>Returns <tt class="literal">undef</tt> on error or a nonzero value on
success.
</p></div>

<a name="INDEX-3201" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Size</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Size([<em class="replaceable">col</em>, <em class="replaceable">row</em>])
</pre><p><a name="INDEX-3201" />Gets or sets the console buffer size.
</p></div>

<a name="INDEX-3202" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Title</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Title([<em class="replaceable">title</em>])
</pre><p><a name="INDEX-3202" />Gets or sets the title bar
string of the current console window.
</p></div>

<a name="INDEX-3203" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Window</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Window([<em class="replaceable">flag</em>, <em class="replaceable">left</em>, <em class="replaceable">top</em>, <em class="replaceable">right</em>, <em class="replaceable">bottom</em>])
</pre><p><a name="INDEX-3203" />Gets or sets the current
console window size. If called without arguments, returns a
four-element list containing the current window coordinates in the
form of (<em class="replaceable"><tt>left</tt></em>,
<em class="replaceable"><tt>top</em>, <em class="replaceable">right</tt></em>,
<em class="replaceable"><tt>bottom</tt></em>). To set the window size, you have
to specify an additional flag parameter. If it is
<tt class="literal">0</tt>, coordinates are considered relative to the
current coordinates; if it is nonzero, coordinates are absolute.
</p></div>

<a name="INDEX-3204" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>Write</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;Write(<em class="replaceable">string</em>)
</pre><p><a name="INDEX-3204" />Writes <em class="replaceable">string</em>on the console, using the current attribute, which you can set with
<tt class="literal">Attr</tt>, and advances the cursor as needed. This
isn't that different from Perl's
<tt class="literal">print</tt> statement. Returns the number of characters
written, or <tt class="literal">undef</tt> on error.
</p></div>

<a name="INDEX-3205" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>WriteAttr</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;WriteAttr(<em class="replaceable">attrs</em>, <em class="replaceable">col</em>, <em class="replaceable">row</em>)
</pre><p><a name="INDEX-3205" />Writes the attributes
contained in the string <tt class="sgmltag-element">&lt;attrs&gt;</tt>, beginning at
<em class="replaceable"><tt>col</em>, <em class="replaceable">row</tt></em>,
without affecting the characters that are on screen. The string
<em class="replaceable"><tt>attrs</tt></em> can be the result of a
<tt class="literal">ReadAttr</tt> function, or you can build your own
attribute string; in this case, keep in mind that every attribute is
treated as a character, not a number (see example). Returns the
number of attributes written, or <tt class="literal">undef</tt> on error.
</p><blockquote><pre class="code">$CONSOLE-&gt;WriteAttr($attrs, 0, 0);
# note the use of chr( )...
$attrs = chr($FG_BLACK | $BG_WHITE) x 80; 
$CONSOLE-&gt;WriteAttr($attrs, 0, 0);</pre></blockquote></div>

<a name="INDEX-3206" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>WriteChar</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;WriteChar(<em class="replaceable">chars</em>, <em class="replaceable">col</em>, <em class="replaceable">row</em>)
</pre><p><a name="INDEX-3206" />Writes the characters in the
string <em class="replaceable"><tt>attr</tt></em>, beginning at
<em class="replaceable"><tt>col</em>, <em class="replaceable">row</tt></em>,
without affecting the attributes that are onscreen. The string
characters can be the result of a <tt class="literal">ReadChar</tt>
function or a normal string. Returns the number of characters
written, or <tt class="literal">undef</tt> on error.
</p></div>

<a name="INDEX-3207" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>WriteInput</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;WriteInput(<em class="replaceable">event</em>)
</pre><p><a name="INDEX-3207" />Pushes data in the console
input buffer. <em class="replaceable"><tt>event</tt></em> is a list of values
(for more information, see <tt class="literal">Input</tt>). The string
characters can be the result of a <tt class="literal">ReadChar</tt>
function or a normal string. Returns the number of characters
written, or <tt class="literal">undef</tt> on error.
</p></div>

<a name="INDEX-3208" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>WriteRect</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
$<em class="replaceable">cons</em>-&gt;WriteRect(<em class="replaceable">rect</em>, <em class="replaceable">left</em>, <em class="replaceable">top</em>, <em class="replaceable">right</em>, <em class="replaceable">bottom</em>)
</pre><p><a name="INDEX-3208" />Writes a rectangle of
characters and attributes (contained in
<em class="replaceable"><tt>rect</tt></em>) on the console at the coordinates
specified by <em class="replaceable"><tt>left</tt></em>,
<em class="replaceable"><tt>top</em>, <em class="replaceable">right</tt></em>, and
<em class="replaceable"><tt>bottom</em>. <em class="replaceable">rect</tt></em>can be the result of a <tt class="literal">ReadRect</tt> function. Returns
<tt class="literal">undef</tt> on error; otherwise, returns a four-element
list containing the coordinates of the affected rectangle, in the
format (<em class="replaceable"><tt>left</tt></em>,
<em class="replaceable"><tt>top</em>, <em class="replaceable">right</tt></em>,
<em class="replaceable"><tt>bottom</tt></em>).
</p></div>
<a name="perlnut2-CHP-22-SECT-2.1" /><div class="sect2">
<h3 class="sect2">22.2.1. Constants</h3>

<p>The following constants are exported in the main namespace of your
script using Win32::Console:
</p>

<blockquote><pre class="code">BACKGROUND_BLUE                 BACKGROUND_GREEN
BACKGROUND_INTENSITY            BACKGROUND_RED
CAPSLOCK_ON                     CONSOLE_TEXTMODE_BUFFER    
ENABLE_ECHO_INPUT               ENABLE_LINE_INPUT
ENABLE_MOUSE_INPUT              ENABLE_PROCESSED_INPUT
ENABLE_PROCESSED_OUTPUT         ENABLE_WINDOW_INPUT
ENABLE_WRAP_AT_EOL_OUTPUT       ENHANCED_KEY
FILE_SHARE_READ                 FILE_SHARE_WRITE
FOREGROUND_BLUE                 FOREGROUND_GREEN
FOREGROUND_INTENSITY            FOREGROUND_RED
LEFT_ALT_PRESSED                LEFT_CTRL_PRESSED
NUMLOCK_ON                      GENERIC_READ
GENERIC_WRITE                   RIGHT_ALT_PRESSED
RIGHT_CTRL_PRESSED              SCROLLLOCK_ON
SHIFT_PRESSED                   STD_INPUT_HANDLE
STD_OUTPUT_HANDLE               STD_ERROR_HANDLE</pre></blockquote>

<p>Additionally, the following variables can be used: </p>

<blockquote><pre class="code">$FG_BLACK                       $FG_BLUE
$FG_LIGHTBLUE                   $FG_RED
$FG_LIGHTRED                    $FG_GREEN
$FG_LIGHTGREEN                  $FG_MAGENTA
$FG_LIGHTMAGENTA                $FG_CYAN
$FG_LIGHTCYAN                   $FG_BROWN
$FG_YELLOW                      $FG_GRAY
$FG_WHITE                       $BG_BLACK
$BG_BLUE                        $BG_LIGHTBLUE
$BG_RED                         $BG_LIGHTRED
$BG_GREEN                       $BG_LIGHTGREEN
$BG_MAGENTA                     $BG_LIGHTMAGENTA
$BG_CYAN                        $BG_LIGHTCYAN
$BG_BROWN                       $BG_YELLOW
$BG_GRAY                        $BG_WHITE
$ATTR_NORMAL                    $ATTR_INVERSE</pre></blockquote>

<p><tt class="literal">ATTR_NORMAL</tt> is set to gray foreground on black
background (DOS's standard colors). <a name="INDEX-3209" /><a name="INDEX-3210" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch22_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch22_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">22. Win32 Modules and Extensions</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">22.3. Win32::ChangeNotify</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

</body></html>