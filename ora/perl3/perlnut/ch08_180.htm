<html><head><title>Scalar::Util (Perl in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Stephen Spainhour" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002416L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XSLT" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_179.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch08_181.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">8.180. Scalar::Util</h2>

<p><a name="INDEX-1542" />Implements a few useful scalar-related
subroutines. Like List::Util, Scalar::Util is something useful that
doesn't necessarily fit well as a keyword in the
Perl core. By default, Scalar::Util does not export any subroutines.
As of Perl 5.8, Scalar::Util is shipped with the source kit.
</p>

<p>Scalar::Util implements the following methods.</p>



<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>blessed</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
blessed <em class="replaceable">expr</em>
</pre><p>Evaluates whether <em class="replaceable">expr</em> is a blessed
reference. If successful, <tt class="literal">blessed</tt> returns the name
of the package. Otherwise, <tt class="literal">blessed</tt> returns
<tt class="literal">undef</tt>.
</p><blockquote><pre class="code">use Scalar::Util qw(blessed);
use CGI;
 
my $cgi = CGI-&gt;new();
my $not_cgi = "IamNotCGI";

my $is_blessed = blessed($cgi);
if(defined($is_blessed) { print "$cgi\n;" } # Prints CGI
 
my $is_blessed2 = blessed($not_cgi);
if(defined($is_blessed2) { print "$not_cgi\n"; } # undef</pre></blockquote></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>dualvar</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
dualvar <em class="replaceable">number</em>, <em class="replaceable">string</em>
</pre><p>Returns a string that has the value <em class="replaceable">number</em>in a numeric context and a value <em class="replaceable">string</em> in
a string context. For example:
</p><blockquote><pre class="code">my $context = dualvar(10, "Nathan");
my $add_nums = $context + 1; # '11'
my $str_add = $context . "Patwardhan"; # Nathan Patwardhan</pre></blockquote></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>isweak</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
isweak <em class="replaceable">expr</em>
</pre><p>Returns true if <em class="replaceable">expr</em> is a scalar, which is
a weak reference:
</p><blockquote><pre class="code">my $weak_ref = \$boo_hoo;
my $i_am_weak = isweak($weak_ref); # false
weaken($weak_ref);
$i_am_weak = isweak($weak_ref); # true</pre></blockquote></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>openhandle</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
openhandle <em class="replaceable">fh</em>
</pre><p>Returns <tt class="literal">fh</tt> if <em class="replaceable">fh</em> is an
open filehandle. <em class="replaceable"><tt>fh</tt></em> may also be a tied
filehandle. Returns <tt class="literal">undef</tt> on failure.
</p><blockquote><pre class="code">my $fh = openhandle(*STDIN);
$fh = openhandle("sumfin"); # undef, since sumfin isn't 
                            # open</pre></blockquote></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>readonly</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
readonly <em class="replaceable">scalar</em>
</pre><p>Returns true if <em class="replaceable">scalar</em> is read-only.</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>reftype</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
reftype <em class="replaceable">expr</em>
</pre><p>Returns the reference type of <em class="replaceable">expr</em> if <em class="replaceable"> expr</em> is
a reference. Otherwise, returns <tt class="literal">undef</tt>.
</p><blockquote><pre class="code">my $r_type = reftype "ORA"; # undef, not a reference
my $r_type = reftype [];    # ARRAY</pre></blockquote></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>tainted</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
tainted <em class="replaceable">expr</em>
</pre><p>Returns true if the result of <em class="replaceable">expr</em> is
tainted:
</p><blockquote><pre class="code">my $is_tainted = tainted($ENV{PATH}); 
# Returns true if -T is enabled</pre></blockquote></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>weaken</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
weaken <em class="replaceable">ref</em>
</pre><p>Returns <em class="replaceable">ref</em> into a weak reference. When
the reference count on an object reaches 0,
<em class="replaceable"><tt>ref</tt></em> will be set to
<tt class="literal">undef</tt>.
</p></div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_179.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch08_181.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">8.179. Safe</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">8.181. SDBM_File</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

</body></html>