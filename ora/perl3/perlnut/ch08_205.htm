<html><head><title>Text::Balanced (Perl in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Stephen Spainhour" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002416L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XSLT" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_204.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch08_206.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">8.205. Text::Balanced</h2>

<p><a name="INDEX-1571" />Extracts delimited text sequences from
strings. It implements various <tt class="literal">extract_</tt>-named
subroutines to capture the delimited string.
</p>

<p>In a list context, all Text::Balanced methods return a list that
contains the extracted string with delimiters, the remainder of the
string, and the parts of the string that were skipped. Text::Balanced
is shipped with the Perl source kit as of 5.8.
</p>

<p>Text::Balanced implements the following methods.</p>



<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>extract_bracketed</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
extract_bracketed(<em class="replaceable">text</em>, <em class="replaceable">delimiter</em>)
</pre><p>Extracts the initial substring of <em class="replaceable">text</em>that is bracketed with delimiters specified by
<em class="replaceable"><tt>delimiter</tt></em>. Note that
<em class="replaceable"><tt>delimiter</tt></em> should contain one of
<tt class="literal">()</tt>, <tt class="literal">{}</tt>, <tt class="literal">[]</tt>,
or <tt class="literal">&lt;&gt;</tt>.
</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>extract_codeblock</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
extract_codeblock(<em class="replaceable">text</em>, <em class="replaceable">delimiter</em>)
</pre><p>Extracts the initial substring of <em class="replaceable">text</em>that represents a block of Perl code. This code is specified by
<em class="replaceable"><tt>delimiter</tt></em>, which contains one of
<tt class="literal">()</tt>, <tt class="literal">{}</tt>, <tt class="literal">[]</tt>,
or <tt class="literal">&lt;&gt;</tt>.
</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>extract_delimited</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
extract_delimited(<em class="replaceable">text</em>, <em class="replaceable">delimiter</em>)
</pre><p>Extracts the initial substring of <em class="replaceable">text</em>that is delimited by two instances of
<em class="replaceable"><tt>delimiter</tt></em>.
</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>extract_multiple</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
extract_multple(<em class="replaceable">text </em>...)
</pre><p>Extracts the initial substrings of <em class="replaceable">text</em>that would be extracted by one or more sequential applications of the
specified functions.
</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>extract_quotelike</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
extract_quotelike(<em class="replaceable">text</em>)
</pre><p>Extracts the quoted portion of <em class="replaceable">text</em>.</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>extract_tagged</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
extract_tagged(<em class="replaceable">text</em>, <tt class="literal">"</tt><em class="replaceable">TAG1</em><tt class="literal">"</tt>, <tt class="literal">"</tt><em class="replaceable">TAG2</em><tt class="literal">"</tt>, <tt class="literal">undef</tt>, <em class="replaceable">nesting_allowed</em>)
</pre><p>Extracts the initial substring of <em class="replaceable">text</em>that is bounded by an HTML or XML tag:
</p><blockquote><pre class="code"># Extract HTML tags but don't allow &lt;HTML&gt; to be embedded
($extracted, $left) =
    extract_tagged($text,"&lt;HTML&gt;","&lt;/HTML&gt;",
                    undef,{bad=&gt;["&lt;HTML&gt;"]});
extract_multiple($text, ...)</pre></blockquote></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>gen_delimited_pat</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
gen_delimited_pat(q{<em class="replaceable">pattern</em>})
</pre><p>Creates a string that represents the optimized pattern that matches a
substring delimited by <tt class="literal">q{</tt>
<em class="replaceable"><tt>pattern</tt></em><tt class="literal">}</tt>.
</p></div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_204.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch08_206.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">8.204. Text::Abbrev</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">8.206. Text::ParseWords</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

</body></html>