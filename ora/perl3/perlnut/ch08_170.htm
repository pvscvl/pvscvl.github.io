<html><head><title>PerlIO (Perl in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Stephen Spainhour" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002416L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XSLT" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_169.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch08_171.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">8.170. PerlIO</h2>

<p><a name="INDEX-1527" />An on-demand loader for PerlIO layers
and the root of the PerlIO namespace. PerlIO allows you to expand the
functionality of <tt class="literal">open()</tt>. For example:
</p>

<blockquote><pre class="code">use PerlIO 'special';</pre></blockquote>

<p>The code in <em class="filename">PerlIO.pm</em> then attempts to find
<tt class="literal">'special</tt>':
</p>

<blockquote><pre class="code">require PerlIO::special;</pre></blockquote>

<p>PerlIO currently defines the following layers:</p>

<dl>
<dt><b><tt class="literal">unix</tt></b></dt>
<dd>
Low-level layer that calls <tt class="literal">read</tt>,
<tt class="literal">write</tt>, <tt class="literal">lseek</tt>, etc.
</p>
</dd>


<dt><b><tt class="literal">stdio</tt></b></dt>
<dd>
Calls <tt class="literal">fread</tt>, <tt class="literal">fwrite</tt>,
<tt class="literal">fseek</tt>, <tt class="literal">ftell</tt>, etc.
<tt class="literal">stdio</tt> will use your operating
system's I/O via the C library. That is, you cannot
place any layers beneath <tt class="literal">stdio</tt>.
</p>
</dd>


<dt><b><tt class="literal">perlio</tt></b></dt>
<dd>
A reimplementation of a <tt class="literal">stdio</tt>-like buffering
written as a PerlIO layer. As such, it will call whatever layer is
below it for its operations.
</p>
</dd>


<dt><b><tt class="literal">crlf</tt></b></dt>
<dd>
Does CRLF translation depending on distinguishing text, and binary
files a la MS-DOS.
</p>
</dd>


<dt><b><tt class="literal">utf8</tt></b></dt>
<dd>
Declares that the stream accepts Perl's internal
encoding of characters (which is really <tt class="literal">UTF-8</tt> on
ASCII machines and <tt class="literal">UTF-EBCDIC</tt> on EBCDIC machines).
This allows any character Perl can represent to be read from or
written to the stream. The
<tt class="literal">UTF-</tt><em class="replaceable"><tt>X</tt></em> encoding is
chosen to render simple text parts (i.e., nonaccented letters,
digits, and common punctuation) human-readable in the encoded file.
</p>
</dd>


<dt><b><tt class="literal">raw</tt></b></dt>
<dd>
A pseudo-layer that performs two functions. It forces the filehandle
to be considered binary at that point in the layer stack, and it
prevents the I/O system from searching before it in the layer
specification. For example:
</p>

<blockquote><pre class="code">open($fh,":raw:perlio",...);</pre></blockquote>

<p><tt class="literal">raw</tt> forces the use of the
<tt class="literal">perlio</tt> layer even if the platform default or the
<tt class="literal">use open</tt> default is something else (such as
<tt class="literal">:encoding(iso-8859-7</tt>)).
</p>
</dd>

</dl>




<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_169.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch08_171.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">8.169. overload</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">8.171. PerlIO::Scalar</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

</body></html>