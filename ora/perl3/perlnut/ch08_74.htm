<html><head><title>ExtUtils::MakeMaker (Perl in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Stephen Spainhour" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002416L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XSLT" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_73.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch08_75.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">8.74. ExtUtils::MakeMaker</h2>

<p><a name="INDEX-1419" />Writes a Makefile for module
installation. Provides a function, <tt class="literal">WriteMakefile</tt>,
which creates an object with attributes that are set from various
sources and that actually write the Makefile. See <a href="ch02_01.htm">Chapter 2, "Installing Perl"</a> for information about the using the Makefile
and MakeMaker during module installation. This section explains the
details of actually creating the Makefile with MakeMaker. It assumes
an understanding of <em class="emphasis">make</em> and Makefiles.
</p>

<p>If you are a Perl programmer writing a module, you should run
<em class="emphasis">h2xs</em> to generate the template for your module.
Among other things, <em class="emphasis">h2xs</em> creates a file called
<em class="emphasis">Makefile.PL</em>, and it's
<em class="emphasis">Makefile.PL</em> that runs MakeMaker. On the other
hand, if you are installing a module, you can usually just run the
<em class="emphasis">Makefile.PL</em> that came with the module, perhaps
adding a PREFIX argument if you are installing the module locally
(see <a href="ch02_01.htm">Chapter 2, "Installing Perl"</a>). In either case, you
shouldn't need to run ExtUtils::MakeMaker directly
unless you have special requirements.
</p>

<p>A typical call to MakeMaker might look like this example from the CGI
distribution:
</p>

<blockquote><pre class="code">use ExtUtils::MakeMaker;
WriteMakefile(
        NAME =&gt; "CGI",
        DISTNAME =&gt; "CGI-modules",
        VERSION =&gt; "2.76",
        linkext =&gt; { LINKTYPE =&gt; '' },
        dist =&gt; {COMPRESS=&gt;'gzip -9f', SUFFIX =&gt; 'gz'},
);</pre></blockquote>

<p>MakeMaker attributes can be passed as arguments to
<tt class="literal">WriteMakefile</tt>, as in the example, or they can be
passed as <em class="emphasis">name=value</em> pairs on the command line:
</p>

<blockquote><pre class="code">perl Makefile.PL PREFIX=/home/mydir/Perl/Modules</pre></blockquote>

<p>To see what MakeMaker is doing, you can say: </p>

<blockquote><pre class="code">perl Makefile.PL verbose</pre></blockquote>

<p>The following attributes can be specified:</p>

<dl>
<dt><i>C</i></dt>
<dd>
Reference to array of <em class="emphasis">*.c</em> filenames. Initialized
from a directory scan and the values portion of the XS attribute
hash. Not currently used by MakeMaker but may be handy in
<em class="emphasis">Makefile.PL</em>s.
</p>
</dd>


<dt><i>CCFLAGS</i></dt>
<dd>
String to be included in the compiler call command line between the
INC and OPTIMIZE arguments.
</p>
</dd>


<dt><i>CONFIG</i></dt>
<dd>
An array reference containing a list of attributes to get from
<tt class="literal">%Config</tt>. The following values are always added to
CONFIG:
</p>


<blockquote><pre class="code">ar       cc          cccdlflags   ccdlflags
dlext    dlsrc       ld           lddlflags
ldflags  libc        lib_ext      obj_ext
ranlib   sitelibexp  sitearchexp  so</pre></blockquote>
</dd>


<dt><i>CONFIGURE</i></dt>
<dd>
Reference to a subroutine that should return a hash reference. The
hash may contain further attributes that need to be determined by
some evaluation method.
</p>
</dd>


<dt><i>DEFINE</i></dt>
<dd>
An attribute containing additional defines.</p>
</dd>


<dt><i>DIR</i></dt>
<dd>
Reference to array of subdirectories containing
<em class="emphasis">Makefile.PL</em> files.
</p>
</dd>


<dt><i>DISTNAME</i></dt>
<dd>
Your name for distributing the package (by <em class="emphasis">tar</em>
file). Defaults to NAME, which is described below.
</p>
</dd>


<dt><i>DL_FUNCS</i></dt>
<dd>
Reference to a hash of symbol names for routines to be made available
as universal symbols. Each key/value pair consists of the package
name and an array of routine names in that package. Used only under
AIX (export lists) and VMS (linker options) at present. Defaults to
<tt class="literal">"$PKG" =&gt; ["boot_$PKG"]</tt>.
</p>
</dd>


<dt><i>DL_VARS</i></dt>
<dd>
Array of symbol names for variables to be made available as universal
symbols. Used only under AIX (export lists) and VMS (linker options)
at present. Defaults to <tt class="literal">[]</tt>.
</p>
</dd>


<dt><i>EXCLUDE_EXT</i></dt>
<dd>
Array of module names to exclude when doing a static build. Ignored
if INCLUDE_EXT is present.
</p>
</dd>


<dt><i>EXE_FILES</i></dt>
<dd>
Reference to array of executable files to be copied to the
INST_SCRIPT directory. <em class="emphasis">make realclean</em> deletes
them from there.
</p>
</dd>


<dt><i>NO_VC</i></dt>
<dd>
If set, the Makefile does not check the current version of MakeMaker
against the version the Makefile was built under. Should be used
interactively, not written into your <em class="emphasis">Makefile.PL</em>
file.
</p>
</dd>


<dt><i>FIRST_MAKEFILE</i></dt>
<dd>
Name of the Makefile to be produced. Defaults to the contents of
MAKEFILE, but can be overridden.
</p>
</dd>


<dt><i>FULLPERL</i></dt>
<dd>
Perl binary that can run this module.</p>
</dd>


<dt><i>H</i></dt>
<dd>
Reference to array of <em class="emphasis">*.h</em> filenames. Similar to
C attribute.
</p>
</dd>


<dt><i>IMPORTS</i></dt>
<dd>
Used only on OS/2.</p>
</dd>


<dt><i>INC</i></dt>
<dd>
Directories containing include files, in <em class="emphasis">-I</em>
form. For example:
</p>


<blockquote><pre class="code">INC =&gt; "-I/usr/5include -I/path/to/inc"</pre></blockquote>
</dd>


<dt><i>INCLUDE_EXT</i></dt>
<dd>
Array of module names to be included when doing a static build. If
present, only those modules that are explicitly mentioned are used
for the build (instead of all installed extensions). It is not
necessary to mention DynaLoader or the current module when filling in
INCLUDE_EXT&#x2014;they are always included.
</p>
</dd>


<dt><i>INSTALLARCHLIB</i></dt>
<dd>
Used by <em class="emphasis">make install</em>, which copies files from
INST_ARCHLIB to this directory if INSTALLDIRS is set to
<em class="emphasis">perl</em>.
</p>
</dd>


<dt><i>INSTALLBIN</i></dt>
<dd>
Directory to install binary files into.</p>
</dd>


<dt><i>INSTALLDIRS</i></dt>
<dd>
Determines which of the two sets of installation directories to
choose. There are two possible values:
</p>

<dl>
<dt><b><tt class="literal">perl</tt></b></dt>
<dd>
Uses INSTALLLPRIVLIB and INSTALLARCHLIB directories.</p>
</dd>


<dt><b><tt class="literal">site</tt></b></dt>
<dd>
The default. Uses INSTALLSITELIB and INSTALLSITEARCH directories.</p>
</dd>

</dl>
</dd>


<dt><i>INSTALLMAN1DIR</i></dt>
<dd>
Directory where command manpages are put during <em class="emphasis">make
install</em>. Defaults to
<tt class="literal">$Config{installman1dir}</tt>.
</p>
</dd>


<dt><i>INSTALLMAN3DIR</i></dt>
<dd>
Directory where library manpages are put during <em class="emphasis">make
install</em>. Defaults to
<tt class="literal">$Config{installman3dir}</tt>.
</p>
</dd>


<dt><i>INSTALLPRIVLIB</i></dt>
<dd>
Used by <em class="emphasis">make install</em>, which copies files from
INST_LIB to this directory if INSTALLDIRS is set to
<tt class="literal">perl</tt>.
</p>
</dd>


<dt><i>INSTALLSCRIPT</i></dt>
<dd>
Used by <em class="emphasis">make install</em>, which copies files from
INST_SCRIPT to this directory.
</p>
</dd>


<dt><i>INSTALLSITELIB</i></dt>
<dd>
Used by <em class="emphasis">make install</em>, which copies files from
INST_LIB to this directory if INSTALLDIRS is set to
<tt class="literal">site</tt> (the default).
</p>
</dd>


<dt><i>INSTALLSITEARCH</i></dt>
<dd>
Used by <em class="emphasis">make install</em>, which copies files from
INST_ARCHLIB to this directory if INSTALLDIRS is set to
<tt class="literal">site</tt> (the default).
</p>
</dd>


<dt><i>INST_ARCHLIB</i></dt>
<dd>
Same as INST_LIB for architecture-dependent files.</p>
</dd>


<dt><i>INST_BIN</i></dt>
<dd>
Directory where real binary files are put during
<em class="emphasis">make</em>, for later copying to INSTALLBIN during
<em class="emphasis">make install</em>.
</p>
</dd>


<dt><i>INST_EXE</i></dt>
<dd>
Deprecated. Old name for INST_SCRIPT, which you should use instead.</p>
</dd>


<dt><i>INST_LIB</i></dt>
<dd>
Directory to hold library files for this module while it is being
built.
</p>
</dd>


<dt><i>INST_MAN1DIR</i></dt>
<dd>
Directory to hold the command manpages at <em class="emphasis">make</em>
time.
</p>
</dd>


<dt><i>INST_MAN3DIR</i></dt>
<dd>
Directory to hold the library manpages at <em class="emphasis">make</em>
time.
</p>
</dd>


<dt><i>INST_SCRIPT</i></dt>
<dd>
Directory where executable files should be installed during
<em class="emphasis">make</em>. Defaults to
<em class="emphasis">./blib/bin</em>, to have a dummy location during
testing. <em class="emphasis">make install</em> copies the files in
INST_SCRIPT to INSTALLSCRIPT.
</p>
</dd>


<dt><i>LDFROM</i></dt>
<dd>
Used by the <em class="emphasis">ld</em> command to specify the files to
link/load from. Defaults to <tt class="literal">$(OBJECT)</tt>.
</p>
</dd>


<dt><i>LIBPERL_A</i></dt>
<dd>
Filename of the Perl library that will be used with this module.
Defaults to <em class="emphasis">libperl.a</em>.
</p>
</dd>


<dt><i>LIB</i></dt>
<dd>
Can be set only when <em class="emphasis">Makefile.PL</em> is run; both
INSTALLPRIVLIB and INSTALLSITELIB are set to the value of LIB.
</p>
</dd>


<dt><i>LIBS</i></dt>
<dd>
Anonymous array of alternative library specifications to be searched
for (in order) until at least one library is found. Note that any
element of the array contains a complete set of arguments for the
<em class="emphasis">ld</em> command.
</p>
</dd>


<dt><i>LINKTYPE</i></dt>
<dd>
Should be used only to force static linking (see the
<em class="emphasis">linkext</em> attribute below). Possible values are
<tt class="literal">static</tt> or <tt class="literal">dynamic</tt>. Default is
<tt class="literal">dynamic</tt> unless <tt class="literal">usedl=undef</tt> in
<em class="emphasis">config.sh</em>.
</p>
</dd>


<dt><i>MAKEAPERL</i></dt>
<dd>
Boolean. Tells MakeMaker to include the rules for making a Perl
binary. Normally handled automatically by MakeMaker and not needed by
the user.
</p>
</dd>


<dt><i>MAKEFILE</i></dt>
<dd>
Name of the Makefile to be produced.</p>
</dd>


<dt><i>MAN1PODS</i></dt>
<dd>
Reference to a hash of pod-containing files to be converted to
manpages and installed as requested at configure time. Default is all
EXE_FILES files that include pod directives.
</p>
</dd>


<dt><i>MAN3PODS</i></dt>
<dd>
Reference to a hash of <em class="emphasis">.pm</em> and
<em class="emphasis">.pod</em> files to be converted to manpages and
installed as requested at configure time. Default is all
<em class="emphasis">.pod</em> and any <em class="emphasis">.pm</em> files that
include pod directives.
</p>
</dd>


<dt><i>MAP_TARGET</i></dt>
<dd>
Name for new Perl binary if one will be produced. Default is
<tt class="literal">perl</tt>.
</p>
</dd>


<dt><i>MYEXTLIB</i></dt>
<dd>
Name of library that the module builds and links to.</p>
</dd>


<dt><i>NAME</i></dt>
<dd>
Perl module name for this module (e.g., DBD::Oracle). Defaults to the
directory name but should be explicitly defined in the
<em class="emphasis">Makefile.PL</em>.
</p>
</dd>


<dt><i>NEEDS_LINKING</i></dt>
<dd>
Boolean. Can be set to speed up MakeMaker processing a little bit,
but not needed since MakeMaker will figure out if linking is needed.
</p>
</dd>


<dt><i>NOECHO</i></dt>
<dd>
Controls <em class="emphasis">make</em>'s echo
(<tt class="literal">@</tt>) feature. Defaults to <tt class="literal">@</tt>. By
setting it to an empty string, you can generate a Makefile that echos
all commands. Used mainly in debugging MakeMaker itself.
</p>
</dd>


<dt><i>NORECURS</i></dt>
<dd>
Boolean. If set, inhibits descending into subdirectories.</p>
</dd>


<dt><i>OBJECT</i></dt>
<dd>
List of object files. Defaults to
<tt class="literal">$(BASEEXT)$(OBJ_EXT)</tt>; can be set to a long string
containing all object files.
</p>
</dd>


<dt><i>OPTIMIZE</i></dt>
<dd>
If set to <tt class="literal">-g</tt>, turns debugging on. Defaults to
<tt class="literal">-O</tt>. Passed to subdirectory
<em class="emphasis">make</em>s.
</p>
</dd>


<dt><i>PERL</i></dt>
<dd>
Perl binary for tasks that can be done by miniperl.</p>
</dd>


<dt><i>PERLMAINCC</i></dt>
<dd>
The call to the program that can compile
<em class="emphasis">perlmain.c</em>. Defaults to
<tt class="literal">$(CC)</tt>.
</p>
</dd>


<dt><i>PERL_LIB</i></dt>
<dd>
Directory containing the Perl library to use.</p>
</dd>


<dt><i>PERL_ARCHLIB</i></dt>
<dd>
Same as PERL_LIB for architecture-dependent files.</p>
</dd>


<dt><i>PERL_SRC</i></dt>
<dd>
Directory containing the Perl source code. Avoid using this
attribute, since it may be undefined.
</p>
</dd>


<dt><i>PL_FILES</i></dt>
<dd>
Reference to hash of files to be processed as Perl programs. By
default, MakeMaker turns any <em class="emphasis">*.PL</em> file it finds
(except the <em class="emphasis">Makefile.PL</em>) into a key and the
basename of the file into the value. The <em class="emphasis">*.PL</em>
files are expected to produce output to the target files themselves.
</p>
</dd>


<dt><i>PM</i></dt>
<dd>
Reference to hash of <em class="emphasis">.pm</em> and
<em class="emphasis">*.pl</em> files to be installed.
</p>
</dd>


<dt><i>PMLIBDIRS</i></dt>
<dd>
Reference to array of subdirectories containing library files.
Defaults to <tt class="literal">['lib', $(BASEEXT)]</tt>. The directories
are scanned, and any files they contain are installed in the
corresponding location in the library. A <tt class="literal">libscan</tt>
method can be used to alter the behavior. Defining PM in the
<em class="emphasis">Makefile.PL</em> overrides PMLIBDIRS.
</p>
</dd>


<dt><i>PREFIX</i></dt>
<dd>
Can be used to set the three INSTALL* attributes at once so they have
PREFIX as a common directory node.
</p>
</dd>


<dt><i>PREREQ_PM</i></dt>
<dd>
Reference to a hash of modules that need to be available to run this
module (e.g., Fcntl for SDBM_File). The name of each required module
is the key, and the desired version is the value. If the required
version is 0, MakeMaker just checks to see if any version is
installed.
</p>
</dd>


<dt><i>SKIP</i></dt>
<dd>
Reference to an array specifying sections of the Makefile that
shouldn't be written. Do not use the SKIP attribute
for the negligible speedup, which may seriously damage the resulting
Makefile.
</p>
</dd>


<dt><i>TYPEMAPS</i></dt>
<dd>
Reference to array of typemap filenames. Use when the typemaps are in
a directory other than the current directory or when they are not
named typemap. The last typemap in the list takes precedence, but a
typemap in the current directory has highest precedence even if it
isn't listed in TYPEMAPS. The default system typemap
has lowest precedence.
</p>
</dd>


<dt><i>VERSION</i></dt>
<dd>
Your version number for the package. Defaults to
<tt class="literal">0.1</tt>. 
</p>
</dd>


<dt><i>VERSION_FROM</i></dt>
<dd>
Names a file for MakeMaker to parse to find the version number for
the package, so you don't need to specify VERSION.
The file must contain a single line to compute the version number.
The first line in the file that contains the regular expression:
</p>


<blockquote><pre class="code">/([\$*])(([\w:\']*)\bVERSION)\b.*\=/</pre></blockquote>

<p>is evaluated with <tt class="literal">eval</tt> and the result assigned to
VERSION.
</p></dd>


<dt><i>XS</i></dt>
<dd>
Reference to a hash of <em class="emphasis">.xs</em> files. MakeMaker
defaults this. For example:
</p>


<blockquote><pre class="code">{'name_of_file.xs' =&gt; 'name_of_file.c'}</pre></blockquote>

<p>The <em class="emphasis">.c</em> files are automatically deleted by a
<em class="emphasis">make clean</em>.
</p></dd>


<dt><i>XSOPT</i></dt>
<dd>
String of options to pass to <em class="emphasis">xsubpp</em>, which might
include <tt class="literal">-C++</tt> or <tt class="literal">-extern</tt> but not
typemaps, which go in TYPEMAPS.
</p>
</dd>


<dt><i>XSPROTOARG</i></dt>
<dd>
May be set to an empty string, which is identical to
<tt class="literal">-prototypes</tt> or <tt class="literal">-noprototypes</tt>.
Defaults to the empty string.
</p>
</dd>


<dt><i>XS_VERSION</i></dt>
<dd>
Your version number for the package's
<em class="emphasis">.xs</em> file. Defaults to the value of VERSION.
</p>
</dd>

</dl>

<p>The following lowercase attributes can be used to pass parameters to
the methods that implement the corresponding part of the Makefile:
</p>

<dl>
<dt><i><em class="emphasis">clean</em></i></dt>
<dd>
Extra files to <tt class="literal">clean</tt>.</p>
</dd>


<dt><i><em class="emphasis">depend</em></i></dt>
<dd>
Extra dependencies.</p>
</dd>


<dt><i><em class="emphasis">dist</em></i></dt>
<dd>
Distribution options.</p>
</dd>


<dt><i><em class="emphasis">dynamic_lib</em></i></dt>
<dd>
Options for dynamic library support.</p>
</dd>


<dt><i><em class="emphasis">installpm</em></i></dt>
<dd>
Installation options related to AutoSplit. Deprecated as of MakeMaker
5.23. See the <em class="emphasis">pm_to_blib</em> entry for
ExtUtils::Install.
</p>
</dd>


<dt><i><em class="emphasis">linkext</em></i></dt>
<dd>
Linking style.</p>
</dd>


<dt><i><em class="emphasis">macro</em></i></dt>
<dd>
Extra macros to define.</p>
</dd>


<dt><i><em class="emphasis">realclean</em></i></dt>
<dd>
Extra files to <em class="emphasis">make realclean</em>.</p>
</dd>


<dt><i><em class="emphasis">tool_autosplit</em></i></dt>
<dd>
Attributes for the <tt class="literal">tool_autosplit</tt> method.</p>
</dd>

</dl>

<p>If specifying attributes isn't sufficient to
accomplish what you want, you can define your own subroutines in the
<em class="emphasis">Makefile.PL</em> that return the text to be written
to the Makefile. You can also override MakeMaker's
subroutines (described in <a href="ch08_85.htm">Section 8.85, "ExtUtils::MM_Unix"</a>) this way.
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_73.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch08_75.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">8.73. ExtUtils::Liblist</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">8.75. ExtUtils::Manifest</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

</body></html>