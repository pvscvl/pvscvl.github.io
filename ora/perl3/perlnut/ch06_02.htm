<html><head><title>Debugger Commands (Perl in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Stephen Spainhour" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002416L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XSLT" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch06_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">6.2. Debugger Commands</h2>

<p><a name="INDEX-1113" /><a name="INDEX-1114" /><a name="INDEX-1115" />The
debugger understands the following commands.
</p>

<a name="INDEX-1116" /><a name="INDEX-1117" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>-</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
<tt class="literal">-</tt>
</pre><p><a name="INDEX-1116" /><a name="INDEX-1117" />Lists the previous few lines.
</p></div>

<a name="INDEX-1118" /><a name="INDEX-1119" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>.</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
.
</pre><p><a name="INDEX-1118" /><a name="INDEX-1119" />Returns debugger pointer to the
last-executed line and prints it out.
</p></div>

<a name="INDEX-1120" /><a name="INDEX-1121" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>/pattern/</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
/<em class="replaceable">pattern</em>/
</pre><p><a name="INDEX-1120" /><a name="INDEX-1121" />Searches forward for
<em class="replaceable"><tt>pattern</tt></em>; final <tt class="literal">/</tt> is
optional.
</p></div>

<a name="INDEX-1122" /><a name="INDEX-1123" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>?pattern?</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
?<em class="replaceable">pattern</em>?
</pre><p><a name="INDEX-1122" /><a name="INDEX-1123" />Searches
backward for <em class="replaceable"><tt>pattern</tt></em>; final
<tt class="literal">?</tt> is optional.
</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>&lt;</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
&lt; [<em class="emphasis">command</em>]
</pre><p>Sets a Perl command to run before every debugger prompt. A multiline
<em class="replaceable"><tt>command</tt></em> may be entered by backslashing the
newlines. With no <em class="replaceable"><tt>command</tt></em>, the list of
actions is reset.
</p></div>

<a name="INDEX-1124" /><a name="INDEX-1125" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>&lt;&lt;</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><table width="515" border="0" cellpadding="5"><tr><td align="left"><pre>
<a name="INDEX-1124" />
<a name="INDEX-1125" />&lt;&lt; [<em class="emphasis">command</em>]
</pre></td><td align="right" /></tr></table><p><p>Adds to the list of Perl commands to run before each debugger prompt.</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>&lt;CR&gt;</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
&lt;CR&gt;
</pre><p>Repeats last <tt class="literal">n</tt> or <tt class="literal">s</tt> command.</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>&gt;</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
&gt; [<em class="emphasis">command</em>]
</pre><p>Sets a Perl command to run after the prompt when
you've just given a command to return to executing
the script. A multiline <em class="replaceable"><tt>command</tt></em> may be
entered by backslashing the newlines.
</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>&gt;&gt;</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
&gt;&gt; [<em class="emphasis">command</em>]
</pre><p>Adds to the list of Perl commands to run after each debugger prompt.</p></div>

<a name="INDEX-1126" /><a name="INDEX-1127" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>{</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
{ [<em class="emphasis">commandline</em>]
</pre><p><a name="INDEX-1126" /><a name="INDEX-1127" />Sets a
debugger command to run before each prompt.
</p></div>

<a name="INDEX-1128" /><a name="INDEX-1129" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>{{</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
{{ [<em class="emphasis">commandline</em>]
</pre><p><a name="INDEX-1128" /><a name="INDEX-1129" />Adds to the list of debugger commands
to run before each prompt.
</p></div>

<a name="INDEX-1130" /><a name="INDEX-1131" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>!</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
! [<em class="emphasis">number</em>]
</pre><p><a name="INDEX-1130" /><a name="INDEX-1131" />Reruns a previous command (defaults to
the last command executed).
</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>!</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
! -<em class="emphasis">number</em>
</pre><p> Reruns <em class="replaceable">number</em>th-to-last command.</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>!</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
! <em class="emphasis">pattern</em>
</pre><p>Reruns last command that started with
<em class="replaceable"><tt>pattern</tt></em>. See <tt class="literal">O
recallCommand</tt>.
</p></div>

<a name="INDEX-1132" /><a name="INDEX-1133" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>!!</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
!! <em class="emphasis">cmd</em>
</pre><p><a name="INDEX-1132" /><a name="INDEX-1133" />Runs <em class="replaceable">cmd</em> in
a subprocess (which reads from DB::IN and writes to DB::OUT). See
<tt class="literal">O</tt> <tt class="literal">shellBang</tt>.
</p></div>

<a name="INDEX-1134" /><a name="INDEX-1135" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>|</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
| <em class="emphasis">dbcmd</em>
</pre><p><a name="INDEX-1134" /><a name="INDEX-1135" />Runs specified debugger command,
piping DB::OUT to <tt class="literal">$ENV{PAGER}</tt>.
</p></div>

<a name="INDEX-1136" /><a name="INDEX-1137" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>||</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
|| <em class="emphasis">dbcmd</em>
</pre><p><a name="INDEX-1136" /><a name="INDEX-1137" />Same as
<tt class="literal">|</tt><em class="replaceable"><tt>dbcmd</tt></em>, but DB::OUT is
temporarily <tt class="literal">select</tt> ed as well. Often used with
commands that would otherwise produce long output, such as:
</p><blockquote><pre class="code">|V main</pre></blockquote></div>

<a name="INDEX-1138" /><a name="INDEX-1139" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>=</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
= [<em class="emphasis">alias value</em>]
</pre><p><a name="INDEX-1138" /><a name="INDEX-1139" />Defines a command alias. If
<em class="replaceable"><tt>alias</em> and <em class="replaceable">value</tt></em>are omitted, lists all current aliases.
</p></div>

<a name="INDEX-1140" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>A</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
A
</pre><p><a name="INDEX-1140" />Deletes all installed actions.
</p></div>

<a name="INDEX-1141" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>a</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
a [<em class="emphasis">line</em>] <em class="emphasis">command</em>
</pre><p><a name="INDEX-1141" />Sets an action to be done before the
<em class="replaceable"><tt>line</tt></em> is executed. The following steps are
taken:
</p><ul><li>
<p>Checks for a breakpoint at this line</p>
</li><li>
<p>Prints the line if necessary</p>
</li><li>
<p>Performs any actions associated with the line</p>
</li><li>
<p>Prompts the user if at a breakpoint or in single-step mode</p>
</li><li>
<p>Evaluates the line</p>
</li></ul><p>For example, the following prints the value of
<tt class="literal">$foo</tt> (and <tt class="literal">DB FOUND</tt>) every time
line 53 is passed:
</p><blockquote><pre class="code">a 53 print "DB FOUND $foo\n"</pre></blockquote></div>

<a name="INDEX-1142" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>b</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
b [<em class="emphasis">line</em>] [<em class="emphasis">condition</em>]
</pre><p><a name="INDEX-1142" />Sets a breakpoint at
<em class="replaceable"><tt>line</tt></em>, which must begin an executable
statement. If <em class="replaceable"><tt>line</tt></em> is omitted, sets a
breakpoint on the line that is about to be executed.
<em class="replaceable"><tt>condition</tt></em>, if given, is evaluated each
time the statement is reached, and a breakpoint is taken if
<em class="replaceable"><tt>condition</tt></em> is true:
</p><blockquote><pre class="code">b 237 $x &gt; 30
b 33 /pattern/i</pre></blockquote></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>b</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
b <em class="emphasis">subname</em> [<em class="emphasis">condition</em>]
</pre><p>Sets a (possibly conditional) breakpoint at the first line of the
named subroutine.
</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>b</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
b load <em class="emphasis">filename</em>
</pre><p>Sets a breakpoint on <tt class="literal">require</tt>ing the given file.</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>b</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
b postpone <em class="emphasis">subname</em> [<em class="emphasis">condition</em>]
</pre><p>Sets a (possibly conditional) breakpoint at the first line of
subroutine <em class="replaceable"><tt>subname</tt></em> after it has been
compiled.
</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>b</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
b compile <em class="emphasis">subname</em>
</pre><p>Stops after the subroutine has been compiled.</p></div>

<a name="INDEX-1143" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>c</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
c [<em class="emphasis">line</em> | <em class="emphasis">sub</em>]
</pre><p><a name="INDEX-1143" />Continues, optionally inserting a
one-time-only breakpoint at the specified line or subroutine.
</p></div>

<a name="INDEX-1144" /><a name="INDEX-1145" /><a name="INDEX-1146" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>command</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
<em class="emphasis">command</em>
</pre><p>Executes <em class="replaceable">command</em> as a Perl statement. A
semicolon is not needed at the end.<a name="INDEX-1144" /><a name="INDEX-1145" /><a name="INDEX-1146" /> 
</p></div>

<a name="INDEX-1147" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>D</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
D
</pre><p><a name="INDEX-1147" />Deletes all installed breakpoints
</p></div>

<a name="INDEX-1148" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>d</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
d [<em class="emphasis">line</em>]
</pre><p><a name="INDEX-1148" />Deletes the breakpoint at the
specified <em class="replaceable"><tt>line</tt></em>. If
<em class="replaceable"><tt>line</tt></em> is omitted, deletes the breakpoint on
the line that is about to be executed..
</p></div>

<a name="INDEX-1149" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>f</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
f <em class="emphasis">filename</em>
</pre><p><a name="INDEX-1149" />Switches to viewing a different file.
</p></div>

<a name="INDEX-1150" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>H</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
H [<em class="emphasis">-number</em>]
</pre><p><a name="INDEX-1150" />Displays last
<em class="replaceable"><tt>number</tt></em> commands. If
<em class="replaceable"><tt>number</tt></em> is omitted, it lists all previous
commands. Only commands longer than one character are listed.
</p></div>

<a name="INDEX-1151" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>h</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
h [<em class="emphasis">command</em>]
</pre><p><a name="INDEX-1151" />Prints a help message, listing the
available debugger commands.
</p><p>If you supply another debugger command as an argument to the
<tt class="literal">h</tt> command, it prints out the description for just
that command. The command <tt class="literal">h h</tt> produces a more
compact help listing designed to fit on one screen.
</p></div>

<a name="INDEX-1152" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>L</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
L
</pre><p><a name="INDEX-1152" />Lists all breakpoints and actions for
the current file.
</p></div>

<a name="INDEX-1153" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>l</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
l [<em class="replaceable">linespec</em>]
</pre><p><a name="INDEX-1153" />If
<em class="replaceable"><tt>linespec</tt></em> is omitted, lists the next few
lines. Otherwise, lists the lines specified by
<em class="replaceable"><tt>linespec</tt></em>, which can be one of the
following:
</p><dl>
<dt><i><em class="replaceable"><tt>line</tt></em></i></dt>
<dd>
Lists the single line <em class="replaceable"><tt>line</tt></em></p>
</dd>


<dt><i><em class="replaceable"><tt>min</em><em class="emphasis">+</em><em class="replaceable">incr</tt></em></i></dt>
<dd>
Lists <em class="replaceable"><tt>incr</tt></em><tt class="literal">+1</tt> lines
starting at <em class="replaceable"><tt>min</tt></em></p>
</dd>


<dt><i><em class="replaceable"><tt>min</em><em class="emphasis">-</em><em class="replaceable">max</tt></em></i></dt>
<dd>
Lists lines <em class="replaceable"><tt>min</tt></em> through
<em class="replaceable"><tt>max</tt></em></p>
</dd>


<dt><i><em class="replaceable"><tt>subname</tt></em></i></dt>
<dd>
Lists the first few lines from subroutine
<em class="replaceable"><tt>subname</tt></em>.
</p>
</dd>

</dl><p>Also see the <tt class="literal">w</tt> and <tt class="literal">-</tt> commands.</p></div>

<a name="INDEX-1154" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>m</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
m <em class="emphasis">expr</em>
</pre><p><a name="INDEX-1154" /><tt class="literal">eval</tt>s the
expression in array context and prints methods callable on the first
element of the result.
</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>m</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
m <em class="emphasis">class</em>
</pre><p>Prints methods callable via the given class.</p></div>

<a name="INDEX-1155" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>n</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
n
</pre><p><a name="INDEX-1155" />Next. Passes over subroutine calls and
executes the next statement at this level.
</p></div>

<a name="INDEX-1156" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>O</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
O [<em class="emphasis">opt</em>[="<em class="emphasis">val</em>"]] [<em class="emphasis">opt</em>'val'] [<em class="emphasis">opt</em>?]
</pre><p><a name="INDEX-1156" />Sets or queries option values. If
omitted, <em class="replaceable"><tt>val</tt></em> defaults to
<tt class="literal">1</tt>. <em class="replaceable"><tt>opt?</tt></em> displays the
value of option <em class="replaceable"><tt>opt</tt></em>.
<em class="replaceable"><tt>opt</tt></em> can be abbreviated to the shortest
unique string, and multiple options can be specified. The possible
options are:
</p><dl>
<dt><b><tt class="literal">AutoTrace</tt></b></dt>
<dd>
Affects printing of messages at every possible breaking point.</p>
</dd>


<dt><b><tt class="literal">frame</tt></b></dt>
<dd>
Enables printing of messages on entry and exit from subroutines.</p>
</dd>


<dt><b><tt class="literal">inhibit_exit</tt></b></dt>
<dd>
Enables stepping off the end of the script.</p>
</dd>


<dt><b><tt class="literal">maxTraceLen</tt></b></dt>
<dd>
Gives the maximum length of evals/args listed in the stack trace.</p>
</dd>


<dt><b><tt class="literal">ornaments</tt></b></dt>
<dd>
Affects the appearance of the command line on the screen.</p>
</dd>


<dt><b><tt class="literal">pager</tt></b></dt>
<dd>
Specifies the program to use for output of pager-piped commands
(those beginning with a <tt class="literal">|</tt> character). Default
value is <tt class="literal">$ENV{PAGER}</tt>.
</p>
</dd>


<dt><b><tt class="literal">PrintRet</tt></b></dt>
<dd>
Enables printing of return value after <tt class="literal">r</tt> command.</p>
</dd>


<dt><b><tt class="literal">recallCommand</tt>, <tt class="literal">ShellBang</tt></b></dt>
<dd>
Specifies the characters used to recall previous commands or spawn a
shell. By default, these are both set to <tt class="literal">!</tt>.
</p>
</dd>

</dl><p>The following options affect what happens with the
<tt class="literal">V</tt>, <tt class="literal">X</tt>, and <tt class="literal">x</tt>
commands:
</p><dl>
<dt><b><tt class="literal">arrayDepth</tt>, <tt class="literal">hashDepth</tt></b></dt>
<dd>
Prints only to depth <em class="emphasis">n</em>
("" for all).
</p>
</dd>


<dt><b><tt class="literal">compactDump</tt>, <tt class="literal">veryCompact</tt></b></dt>
<dd>
Changes style of array and hash dumps.</p>
</dd>


<dt><b><tt class="literal">DumpDBFiles</tt></b></dt>
<dd>
Dumps arrays holding debugged files.</p>
</dd>


<dt><b><tt class="literal">DumpPackages</tt></b></dt>
<dd>
Dumps symbol tables of packages.</p>
</dd>


<dt><b><tt class="literal">globPrint</tt></b></dt>
<dd>
Specifies whether to print contents of globs.</p>
</dd>


<dt><b><tt class="literal">quote</tt>, <tt class="literal">HighBit</tt>, <tt class="literal">undefPrint</tt></b></dt>
<dd>
Changes style of string dump.</p>
</dd>


<dt><b><tt class="literal">signalLevel</tt>, <tt class="literal">warnLevel</tt>, <tt class="literal">dieLevel</tt></b></dt>
<dd>
Specifies level of verbosity.</p>
</dd>


<dt><b><tt class="literal">tkRunning</tt></b></dt>
<dd>
Runs Tk while prompting (with ReadLine).</p>
</dd>

</dl><p>During startup, debugger options are initialized from
<tt class="literal">$ENV{PERLDB_OPTS}</tt>. You can set the additional
initialization options <tt class="literal">TTY</tt>,
<tt class="literal">noTTY</tt>, <tt class="literal">ReadLine</tt>, and
<tt class="literal">NonStop</tt> there. See <a href="ch06_04.htm">Section 6.4, "Customizing the Debugger"</a> later in this chapter for
more information.
</p></div>

<a name="INDEX-1157" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>p</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
p <em class="emphasis">expr</em>
</pre><p><a name="INDEX-1157" />Same as <tt class="literal">print
DB::OUT</tt> <em class="replaceable"><tt>expr</tt></em> in the current
package. In particular, does not dump nested data structures and
objects, unlike the <tt class="literal">x</tt> command. The DB::OUT handle
is opened to <em class="emphasis">/dev/tty</em> (or perhaps an editor
window) no matter where standard output may have been redirected to.
</p></div>

<a name="INDEX-1158" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>q</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
q <em class="emphasis">or</em> ^D
</pre><p><a name="INDEX-1158" />Quits the debugger.
</p></div>

<a name="INDEX-1159" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>R</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
R
</pre><p><a name="INDEX-1159" />Restarts the debugger. As much of your
history is maintained across the sessions as possible, but some
internal settings and command-line options may be lost.
</p></div>

<a name="INDEX-1160" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>r</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
r
</pre><p><a name="INDEX-1160" />Returns from current subroutine.
</p></div>

<a name="INDEX-1161" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>S</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
S [[!]<em class="emphasis">pattern</em>]
</pre><p><a name="INDEX-1161" />Lists subroutine names matching (or,
if <tt class="literal">!</tt> is specified, not matching)
<em class="replaceable"><tt>pattern</tt></em>. If
<em class="replaceable"><tt>pattern</tt></em> is omitted, lists all subroutines.
</p></div>

<a name="INDEX-1162" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>s</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
s [<em class="emphasis">expr</em>]
</pre><p><a name="INDEX-1162" />Single steps. Executes until it
reaches the beginning of another statement, descending into
subroutine calls. If an expression is supplied that includes a
function call, the function is also single-stepped.
</p></div>

<a name="INDEX-1163" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>T</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
T
</pre><p><a name="INDEX-1163" />Produces a stack backtrace. For
example:
</p><blockquote><pre class="code">DB&lt;2&gt; T
$ = main::infested called from file 'Ambulation.pm' line 10
@ = Ambulation::legs(1, 2, 3, 4) called from file 
'camel_flea' line 7
$ = main::pests('bactrian', 4) called from file 
'camel_flea' line 4</pre></blockquote><p>The lefthand character (<tt class="literal">$</tt> or <tt class="literal">@</tt>)
tells whether the function was called in a scalar or list context.
The example shows three lines because it was three functions deep
when the stack backtrace ran.
</p></div>

<a name="INDEX-1164" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>t</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
t
</pre><p><a name="INDEX-1164" />Toggles trace mode.
</p></div>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>t</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
t <em class="emphasis">expr</em>
</pre><p>Traces through execution of <em class="replaceable">expr</em>.</p></div>

<a name="INDEX-1165" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>v</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
v
</pre><p><a name="INDEX-1165" />Shows versions of loaded modules.
</p></div>

<a name="INDEX-1166" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>V</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
V [<em class="replaceable">pkg</em> [<em class="emphasis">vars</em>]]
</pre><p><a name="INDEX-1166" />Displays all (or some) variables in
package <em class="replaceable"><tt>pkg</tt></em> using a data pretty-printer
(which displays keys and their values for hashes, makes control
characters printable, prints nested data structures in a legible
fashion, and so on). <em class="replaceable"><tt>pkg</tt></em> defaults to the
<tt class="literal">main</tt> package. Make sure you enter the identifiers
without a type specifier such as <tt class="literal">$</tt> or
<tt class="literal">@</tt>, like this:
</p><blockquote><pre class="code">V DB filename line</pre></blockquote><p>In place of a variable name, you can use
<tt class="literal">~</tt><em class="emphasis">pattern</em> or
<tt class="literal">!</tt><em class="emphasis">pattern</em> to print existing
variables with names that either match or don't
match the specified regular expression.
</p></div>

<a name="INDEX-1167" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>w</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
w [<em class="emphasis">line</em>]
</pre><p><a name="INDEX-1167" />Lists a window of a few lines around
the given <em class="replaceable"><tt>line</tt></em>, or lists the current line
if <em class="replaceable"><tt>line</tt></em> is omitted.
</p></div>

<a name="INDEX-1168" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>X</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
X [<em class="emphasis">vars</em>]
</pre><p><a name="INDEX-1168" />Same as <tt class="literal">V</tt>
<em class="replaceable"><tt>currentpackage</em>[<em class="replaceable">vars</tt></em>].
</p></div>

<a name="INDEX-1169" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>x</b</font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
x <em class="emphasis">expr</em>
</pre><p><a name="INDEX-1169" /><tt class="literal">eval</tt>s the
expression in a list context and dumps out the result in a
pretty-printed fashion. Unlike the <tt class="literal">print</tt> command
above, prints nested data structures recursively.
</p></div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch06_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">6. Debugging</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">6.3. Using the Debugger</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

</body></html>
