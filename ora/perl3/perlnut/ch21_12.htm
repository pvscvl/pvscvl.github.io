<html><head><title>The Canvas Widget (Perl in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Stephen Spainhour" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002416L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XSLT" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch21_11.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch21_13.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">21.12. The Canvas Widget</h2>

<p><a name="INDEX-2993" /><a name="INDEX-2994" /><a name="INDEX-2995" />Create a canvas for drawing with the
<tt class="literal">Canvas</tt> method. The Canvas widget uses a coordinate
system with the x coordinate increasing as you move right, and the y
coordinate increasing as you move down (i.e., the y coordinate is
mathematically upside-down). The x and y coordinates are specified in
pixels by default.
</p>

<blockquote><pre class="code">$parentwidget-&gt;Canvas (<em class="replaceable"><tt>options</tt></em>)</pre></blockquote>

<p>The standard configuration options that apply to
<tt class="literal">Canvas</tt> are: <tt class="literal">-background</tt>,
<tt class="literal">-bor</tt>-<tt class="literal">derwidth</tt>,
<tt class="literal">-cursor</tt>, <tt class="literal">-height</tt>,
<tt class="literal">-highlightbackground</tt>,
<tt class="literal">-highlightcolor</tt>,
<tt class="literal">-highlight</tt>-<tt class="literal">thickness</tt>,
<tt class="literal">-insertbackground</tt>,
<tt class="literal">-insertborderwidth</tt>,
<tt class="literal">-insertofftime</tt>,
<tt class="literal">-inserton</tt>-<tt class="literal">time</tt>,
<tt class="literal">-insertwidth</tt>, <tt class="literal">-relief</tt>,
<tt class="literal">-selectbackground</tt>,
<tt class="literal">-selectborderwidth</tt>,
<tt class="literal">-selectfore</tt>-<tt class="literal">ground</tt>,
<tt class="literal">-state</tt>, <tt class="literal">-takefocus</tt>,
<tt class="literal">-width</tt>, <tt class="literal">-xscrollcommand</tt>, and
<tt class="literal">-yscrollcommand</tt>.
</p>

<p>Other options are:</p>

<dl>
<dt><b><tt class="literal">-closeenough =&gt;</tt> <em class="replaceable">amount</em></b></dt>
<dd>
<a name="INDEX-2996" />The distance considered
"close enough" to an item to be
judged to be within it. Default is 1 pixel.
</p>
</dd>


<dt><b><tt class="literal">-confine =&gt;</tt> <em class="replaceable">boolean</em></b></dt>
<dd>
<a name="INDEX-2997" />Whether to limit the canvas to the
scroll region. Default is <tt class="literal">1</tt>.
</p>
</dd>


<dt><b><tt class="literal">-scrollregion =&gt; [</tt> <em class="replaceable">x, y, w, h</em> <b class="emphasis-bold">]</b></b></dt>
<dd>
<a name="INDEX-2998" />Sets the region that the user is
allowed to scroll. The option is a list reference that conveniently
corresponds to the return value of the <tt class="literal">bbox</tt>
method.
</p>
</dd>


<dt><b><tt class="literal">-xscrollincrement =&gt;</tt> <em class="replaceable">amount</em></b></dt>
<dd>
<a name="INDEX-2999" />The
distance to use for scrolling in the x direction.
</p>
</dd>


<dt><b><tt class="literal">-yscrollincrement =&gt;</tt> <em class="replaceable">amount</em></b></dt>
<dd>
<a name="INDEX-3000" />The
distance to use for scrolling in the y direction.
</p>
</dd>

</dl>

<a name="perlnut2-CHP-21-SECT-12.1" /><div class="sect2">
<h3 class="sect2">21.12.1. Canvas Creation Methods</h3>

<p>To place graphic elements in a canvas, there are several item
creation methods:
</p>

<dl>
<dt><b><tt class="literal">createArc</tt> </b></dt>
<dd>
<a name="INDEX-3001" />Creates an arc contained within the
given bounding box. For example, to create an oval bounded by the box
from (0,0) to (40,100):
</p>

<blockquote><pre class="code">$canvas-&gt;createArc(0,0,40,100, -extent =&gt; 360);</pre></blockquote>

<p>The <tt class="literal">-extent</tt> option gives a number between 0 and
360 defining the length of the arc. The default
<tt class="literal">-extent</tt> is <tt class="literal">90</tt>, or 1/4 of an
oval; an extent of <tt class="literal">360</tt> gives you a full oval. The
complete list of options to <tt class="literal">createArc</tt> is:
</p>

<dl>
<dt><i> <tt class="literal">-extent =&gt;</tt> <em class="replaceable"><tt>degrees</tt></em></i></dt>
<dd>
Creates an arc of the specified extent.
<em class="replaceable"><tt>degrees</tt></em> can be any number between 0 and
360, as described above.
</p>
</dd>


<dt><i> <tt class="literal">-fill =&gt;</tt> <em class="replaceable"><tt>color</tt></em></i></dt>
<dd>
Fills the arc with the specified color.</p>
</dd>


<dt><i> <tt class="literal">-outline =&gt;</tt> <em class="replaceable"><tt>color</tt></em></i></dt>
<dd>
Draws the arc with the specified color (default is
<tt class="literal">black</tt>).
</p>
</dd>


<dt><i> <tt class="literal">-outlinestipple =&gt;</tt> <em class="replaceable"><tt>bitmap</tt></em></i></dt>
<dd>
Draws the outline with the specified bitmap pattern.</p>
</dd>


<dt><i> <tt class="literal">-start =&gt;</tt> <em class="replaceable"><tt>degrees</tt></em></i></dt>
<dd>
Starts drawing the arc from the specified position, which is
represented by a number from 0 to 360. The default is
<tt class="literal">0</tt>, which means to start drawing at the 3
o'clock position.
</p>
</dd>



<dt><i> <tt class="literal">-stipple =&gt;</tt> <em class="replaceable"><tt>bitmap</tt></em></i></dt>
<dd>
Uses the specified bitmap to fill the arc (if
<tt class="literal">-fill</tt> is also specified).
</p>
</dd>


<dt><i> <tt class="literal">-style =&gt;</tt> <em class="replaceable"><tt>type</tt></em></i></dt>
<dd>
Draws the arc as specified. Values are:</p>

<dl>
<dt><i> <tt class="literal">pieslice</tt></i></dt>
<dd>
Draws lines from the center to the ends of the arc (the default)</p>
</dd>


<dt><i> <tt class="literal">chord</tt></i></dt>
<dd>
Draws a line connecting the two ends of the arc</p>
</dd>


<dt><i> <tt class="literal">arc</tt></i></dt>
<dd>
Draws the arc with no other lines</p>
</dd>

</dl>
</dd>


<dt><i> <tt class="literal">-tags =&gt;</tt> <em class="replaceable"><tt>tagnames</tt></em></i></dt>
<dd>
Associates the arc with the specified tag(s). Multiple tag names can
be supplied as an anonymous list.
</p>
</dd>


<dt><i> <tt class="literal">-width =&gt;</tt> <em class="replaceable"><tt>amount</tt></em></i></dt>
<dd>
The width of the outline. Default is <tt class="literal">1</tt>.</p>
</dd>

</dl>
</dd>


<dt><b><tt class="literal">createBitmap</tt></b></dt>
<dd>
<a name="INDEX-3002" />Inserts a bitmap. For example, to place
the <tt class="literal">calculator</tt> bitmap at the (0,0) coordinates:
</p>

<blockquote><pre class="code">$canvas -&gt; createBitmap(0, 0, -bitmap =&gt; 'calculator');</pre></blockquote>


<p>Options are:</p>

<dl>
<dt><i> <tt class="literal">-anchor =&gt;</tt> <em class="replaceable"><tt>position</tt></em></i></dt>
<dd>
Anchors the bitmap at the specified position. Values are
<tt class="literal">center</tt> (default), <tt class="literal">n</tt>,
<tt class="literal">e</tt>, <tt class="literal">s</tt>, <tt class="literal">w</tt>,
<tt class="literal">ne</tt>, <tt class="literal">nw</tt>, <tt class="literal">se</tt>,
and <tt class="literal">sw</tt>.
</p>
</dd>


<dt><i> <tt class="literal">-background =&gt;</tt> <em class="replaceable"><tt>color</tt></em></i></dt>
<dd>
Specifies the color to use for the 0 pixels in the bitmap (default is
to be transparent).
</p>
</dd>


<dt><i> <tt class="literal">-bitmap =&gt;</tt> <em class="replaceable"><tt>bitmap</tt></em></i></dt>
<dd>
Specifies the bitmap name. For a built-in bitmap, just specify the
name; for a local bitmap file, specify the name with an
<tt class="literal">@</tt> preceding it.
</p>
</dd>


<dt><i> <tt class="literal">-foreground =&gt;</tt> <em class="replaceable"><tt>color</tt></em></i></dt>
<dd>
Specifies the color to use for the 1 pixel in the bitmap (default is
<tt class="literal">black</tt>).
</p>
</dd>


<dt><i> <tt class="literal">-tags =&gt;</tt> <em class="replaceable"><tt>tagnames</tt></em></i></dt>
<dd>
Associates the bitmap with the specified tag(s). Multiple tag names
can be supplied as an anonymous list.
</p>
</dd>

</dl>
</dd>


<dt><b><tt class="literal">createImage</tt></b></dt>
<dd>
<a name="INDEX-3003" />Creates an image. For example, to place
an image at (0,0):
</p>

<blockquote><pre class="code">$canvas-&gt;createImage(0,0, -image =&gt; $imgptr);</pre></blockquote>

<p>Options are:</p>

<dl>
<dt><i> <tt class="literal">-anchor =&gt;</tt> <em class="replaceable"><tt>position</tt></em></i></dt>
<dd>
Anchors the image at the specified position. Values are
<tt class="literal">center</tt> (default), <tt class="literal">n</tt>,
<tt class="literal">e</tt>, <tt class="literal">s</tt>, <tt class="literal">w</tt>,
<tt class="literal">ne</tt>, <tt class="literal">nw</tt>, <tt class="literal">se</tt>,
and <tt class="literal">sw</tt>.
</p>
</dd>


<dt><i> <tt class="literal">-image =&gt;</tt> <em class="replaceable"><tt>$imgptr</tt></em></i></dt>
<dd>
<em class="replaceable"><tt>$imgptr</tt></em> is a pointer to a Photo or Image
object made using a GIF or PPM file. For example:
</p>

<blockquote><pre class="code">$imgptr = $mainwindow-&gt;Photo(-file =&gt; "doggie.gif");</pre></blockquote>
</dd>


<dt><i> <tt class="literal">-tags =&gt;</tt> <em class="replaceable"><tt>tagnames</tt></em></i></dt>
<dd>
Associate the image with the specified tag(s). Multiple tag names can
be supplied as an anonymous list.
</p>
</dd>

</dl>
</dd>


<dt><b><tt class="literal">createLine</tt> </b></dt>
<dd>
<a name="INDEX-3004" />Creates a line or several adjoining
lines. For example, to create a line from (0,0) to (100,100) and then
back to (100,0):
</p>


<blockquote><pre class="code">$canvas-&gt;createLine (0,0,100,100,100,0);</pre></blockquote>


<p>The first four coordinates are required. Any additional coordinates
are taken to represent a continuation of that line. Options are:
</p>

<dl>
<dt><i> <tt class="literal">-arrow =&gt;</tt> <em class="replaceable"><tt>position</tt></em></i></dt>
<dd>
Specifies where to place arrowheads. Values are
<tt class="literal">none</tt> (default), <tt class="literal">first</tt>,
<tt class="literal">last</tt>, and <tt class="literal">both</tt>.
</p>
</dd>


<dt><i> <tt class="literal">-arrowshape =&gt; [</tt> <em class="replaceable"><tt>head</em>, <em class="replaceable">length</em>, <em class="replaceable">flare</tt></em> <tt class="literal">]</tt></i></dt>
<dd>
Specifies the dimensions of the arrow as a three-element anonymous
list, describing (in order) the distance from the base to the head of
the arrow, the distance from the rear point(s) to the head of the
arrow, and the distance from the rear point(s) to the line.
</p>
</dd>


<dt><i> <tt class="literal">-capstyle =&gt;</tt> <em class="replaceable"><tt>type</tt></em></i></dt>
<dd>
Defines the type of arrowhead. Values are <tt class="literal">butt</tt>
(the default), <tt class="literal">projecting</tt>, and
<tt class="literal">round</tt>.
</p>
</dd>


<dt><i> <tt class="literal">-fill =&gt;</tt> <em class="replaceable"><tt>color</tt></em></i></dt>
<dd>
The color to use to draw the line.</p>
</dd>


<dt><i> <tt class="literal">-joinstyle =&gt;</tt> <em class="replaceable"><tt>type</tt></em></i></dt>
<dd>
Defines how multiple lines are joined. Values are
<tt class="literal">miter</tt> (default), <tt class="literal">bevel</tt>, and
<tt class="literal">round</tt>.
</p>
</dd>


<dt><i> <tt class="literal">-smooth =&gt;</tt> <em class="replaceable"><tt>boolean</tt></em></i></dt>
<dd>
Determines whether the lines are drawn with a Bezier spine. Default
is <tt class="literal">0</tt>.
</p>
</dd>


<dt><i> <tt class="literal">-splinesteps =&gt;</tt> <em class="replaceable"><tt>n</tt></em></i></dt>
<dd>
Determines how smooth the Bezier curve is.</p>
</dd>


<dt><i> <tt class="literal">-stipple =&gt;</tt> <em class="replaceable"><tt>bitmap</tt></em></i></dt>
<dd>
Draws the line with the specified bitmap pattern.</p>
</dd>


<dt><i> <tt class="literal">-tags =&gt;</tt> <em class="replaceable"><tt>tagnames</tt></em></i></dt>
<dd>
Associates the line with the specified tag(s). Multiple tag names can
be supplied as an anonymous list.
</p>
</dd>


<dt><i> <tt class="literal">-width =&gt;</tt> <em class="replaceable"><tt>amount</tt></em></i></dt>
<dd>
The width of the line (default is 1 pixel).</p>
</dd>

</dl>
</dd>


<dt><b><tt class="literal">createOval</tt></b></dt>
<dd>
<a name="INDEX-3005" />Creates an oval. For example, to create
a circle bounded by the box from (50,50) to (150,150):
</p>


<blockquote><pre class="code">$canvas-&gt;createOval(50,50,150,150);</pre></blockquote>

<p>Options are:</p>

<dl>
<dt><i> <tt class="literal">-fill =&gt;</tt> <em class="replaceable"><tt>color</tt></em></i></dt>
<dd>
Fills the arc with the specified color.</p>
</dd>


<dt><i> <tt class="literal">-outline =&gt;</tt> <em class="replaceable"><tt>color</tt></em></i></dt>
<dd>
Specifies the color for the outline (default is
<tt class="literal">black</tt>).
</p>
</dd>


<dt><i> <tt class="literal">-stipple =&gt;</tt> <em class="replaceable"><tt>bitmap</tt></em></i></dt>
<dd>
Specifies a bitmap to fill the oval with.</p>
</dd>


<dt><i> <tt class="literal">-tags =&gt;</tt> <em class="replaceable"><tt>tagnames</tt></em></i></dt>
<dd>
Associates the oval with the specified tag(s). Multiple tag names can
be supplied as an anonymous list.
</p>
</dd>


<dt><i> <tt class="literal">-width =&gt;</tt> <em class="replaceable"><tt>amount</tt></em></i></dt>
<dd>
The width of the outline (default is 1 pixel).</p>
</dd>

</dl>
</dd>


<dt><b><tt class="literal">createPolygon</tt></b></dt>
<dd>
<a name="INDEX-3006" />Creates a polygon. At least three sets
of coordinates are required; the first point is automatically
connected to the last point to complete the polygon.
</p>


<blockquote><pre class="code">$canvas -&gt; createPolygon(0,0,130, 20, 90, -35);</pre></blockquote>

<p>Options are:</p>

<dl>
<dt><i> <tt class="literal">-fill =&gt;</tt> <em class="replaceable"><tt>color</tt></em></i></dt>
<dd>
The color to use to fill the polygon.</p>
</dd>


<dt><i> <tt class="literal">-outline =&gt;</tt> <em class="replaceable"><tt>color</tt></em></i></dt>
<dd>
Specifies the color of the outline (default is
<tt class="literal">black</tt>).
</p>
</dd>


<dt><i> <tt class="literal">-smooth =&gt;</tt> <em class="replaceable"><tt>boolean</tt></em></i></dt>
<dd>
Determines whether the outline is drawn with a Bezier spine. Default
is <tt class="literal">0</tt>.
</p>
</dd>


<dt><i> <tt class="literal">-splinesteps =&gt;</tt> <em class="replaceable"><tt>n</tt></em></i></dt>
<dd>
Determines how smooth the Bezier curve is.</p>
</dd>


<dt><i> <tt class="literal">-stipple =&gt;</tt> <em class="replaceable"><tt>bitmap</tt></em></i></dt>
<dd>
Fills the polygon with the specified bitmap pattern.</p>
</dd>


<dt><i> <tt class="literal">-tags =&gt;</tt> <em class="replaceable"><tt>tagnames</tt></em></i></dt>
<dd>
Associates the polygon with the specified tag(s). Multiple tag names
can be supplied as an anonymous list.
</p>
</dd>


<dt><i> <tt class="literal">-width =&gt;</tt> <em class="replaceable"><tt>amount</tt></em></i></dt>
<dd>
The width of the outline (default is 1 pixel).</p>
</dd>

</dl>
</dd>


<dt><b><tt class="literal">createRectangle</tt></b></dt>
<dd>
<a name="INDEX-3007" />Creates a rectangle. For example, to
create a square with one corner at (0,0) and another at (100,100):
</p>

<blockquote><pre class="code">$canvas-&gt;createRectangle(0,0,100,100);</pre></blockquote>


<p>Options are:</p>

<dl>
<dt><i> <tt class="literal">-fill =&gt;</tt> <em class="replaceable"><tt>color</tt></em></i></dt>
<dd>
The color to use to fill the rectangle.</p>
</dd>


<dt><i> <tt class="literal">-outline =&gt;</tt> <em class="replaceable"><tt>color</tt></em></i></dt>
<dd>
Specifies the color of the outline (default is
<tt class="literal">black</tt>).
</p>
</dd>


<dt><i> <tt class="literal">-stipple =&gt;</tt> <em class="replaceable"><tt>bitmap</tt></em></i></dt>
<dd>
Fills the rectangle with the specified bitmap pattern.</p>
</dd>


<dt><i> <tt class="literal">-tags =&gt;</tt> <em class="replaceable"><tt>tagnames</tt></em></i></dt>
<dd>
Associates the rectangle with the specified tag(s). Multiple tag
names can be supplied as an anonymous list.
</p>
</dd>


<dt><i> <tt class="literal">-width =&gt;</tt> <em class="replaceable"><tt>amount</tt></em></i></dt>
<dd>
The width of the outline (default is 1 pixel).</p>
</dd>

</dl>
</dd>


<dt><b><tt class="literal">createText</tt></b></dt>
<dd>
<a name="INDEX-3008" />Places text in a canvas widget. For
example, to write "Broadway"
centered at the position (130,-40):
</p>


<blockquote><pre class="code">$canvas-&gt;createText(130,-40, -text =&gt; "Broadway");</pre></blockquote>

<p>Options are:</p>

<dl>
<dt><b><tt class="literal">-anchor =&gt;</tt> <em class="replaceable">position</em></b></dt>
<dd>
Anchors the text at the specified position. Values are
<tt class="literal">center</tt> (default), <tt class="literal">n</tt>,
<tt class="literal">e</tt>, <tt class="literal">s</tt>, <tt class="literal">w</tt>,
<tt class="literal">ne</tt>, <tt class="literal">nw</tt>, <tt class="literal">se</tt>,
and <tt class="literal">sw</tt>.
</p>
</dd>


<dt><b><tt class="literal">-fill =&gt;</tt> <em class="replaceable">color</em></b></dt>
<dd>
The color to use for the text.</p>
</dd>


<dt><b><tt class="literal">-font =&gt;</tt> <em class="replaceable">fontname</em></b></dt>
<dd>
The font for the text.</p>
</dd>


<dt><b><tt class="literal">-justify =&gt;</tt> <em class="replaceable">position</em></b></dt>
<dd>
The justification of the text (either <tt class="literal">left</tt>,
<tt class="literal">right</tt>, or <tt class="literal">center</tt>). The default
is <tt class="literal">left</tt>.
</p>
</dd>


<dt><b><tt class="literal">-stipple =&gt;</tt> <em class="replaceable">bitmap</em></b></dt>
<dd>
Fills the text with the specified bitmap pattern.</p>
</dd>


<dt><b><tt class="literal">-tags =&gt;</tt> <em class="replaceable">tagnames</em></b></dt>
<dd>
Associates the text with the specified tag(s). Multiple tag names can
be supplied as an anonymous list.
</p>
</dd>


<dt><b><tt class="literal">-text =&gt;</tt> <em class="replaceable">string</em></b></dt>
<dd>
Specifies the text to display.</p>
</dd>


<dt><b><tt class="literal">-width =&gt;</tt> <em class="replaceable">amount</em></b></dt>
<dd>
The maximum length of each line of text. Default is
<tt class="literal">0</tt>, which means that lines are broken only at
explicit newline characters.
</p>
</dd>

</dl>

<p>There is a set of methods for manipulating text items within a Canvas
widget. For each of these methods, the first argument is the tag name
or tag ID, and subsequent arguments use text indexes as described for
the Text widget.
</p>

<dl>
<dt><i> <tt class="literal">dchars</tt></i></dt>
<dd>
Deletes characters from a text item, given the tag name or ID, and
indexes of the first and last characters to delete
</p>
</dd>


<dt><i> <tt class="literal">icursor</tt> </i></dt>
<dd>
Places the insert cursor at the specified index</p>
</dd>


<dt><i> <tt class="literal">index</tt></i></dt>
<dd>
Gets a numerical index from a named one</p>
</dd>


<dt><i> <tt class="literal">insert</tt></i></dt>
<dd>
Adds a string to the text item</p>
</dd>

</dl>
</dd>


<dt><b><tt class="literal">createWindow</tt></b></dt>
<dd>
<a name="INDEX-3009" />Embeds another widget inside of a
canvas. The widget must have been already created as a child of the
canvas or of the canvas's parent. Options are:
</p>
<dl>

<dt><i> <tt class="literal">-anchor =&gt;</tt> <em class="replaceable"><tt>position</tt></em></i></dt>
<dd>
Anchors the widget at the specified position. Values are
<tt class="literal">center</tt> (default), <tt class="literal">n</tt>,
<tt class="literal">e</tt>, <tt class="literal">s</tt>, <tt class="literal">w</tt>,
<tt class="literal">ne</tt>, <tt class="literal">nw</tt>, <tt class="literal">se</tt>,
and <tt class="literal">sw</tt>.
</p>
</dd>


<dt><i> <tt class="literal">-height =&gt;</tt> <em class="replaceable"><tt>amount</tt></em></i></dt>
<dd>
Specifies the height of the widget.</p>
</dd>


<dt><i> <tt class="literal">-tags =&gt;</tt> <em class="replaceable"><tt>tagnames</tt></em></i></dt>
<dd>
Associates the widget with the specified tag(s). Multiple tag names
can be supplied as an anonymous list.
</p>
</dd>


<dt><i> <tt class="literal">-width =&gt;</tt> <em class="replaceable"><tt>amount</tt></em></i></dt>
<dd>
The width of the widget.</p>
</dd>


<dt><i> <tt class="literal">-window =&gt;</tt> <tt class="literal">$</tt><em class="replaceable"><tt>widget</tt></em></i></dt>
<dd>
Specifies the widget to embed.</p>
</dd>

</dl>
</dd>

</dl>

</div>
<a name="perlnut2-CHP-21-SECT-12.2" /><div class="sect2">
<h3 class="sect2">21.12.2. Item Tags and IDs</h3>

<p><a name="INDEX-3010" />Each item in a Canvas widget is given a
unique ID when it is created. This ID is returned from the canvas
creation command. In addition, each item can have a tag associated
with it, either when created or with the <tt class="literal">addtag</tt>
method. You can use either the ID or the tag to refer to an item in
the canvas. Unlike IDs, tags do not have to be unique, which makes it
possible to configure several items as a group.
</p>

<p>Two special tags are created automatically. The
<tt class="literal">"all"</tt> tag refers to all items in the canvas. The
<tt class="literal">"current"</tt> tag refers to the item that the cursor
is currently over, if any.
</p>

</div>
<a name="perlnut2-CHP-21-SECT-12.3" /><div class="sect2">
<h3 class="sect2">21.12.3. Canvas Methods</h3>

<p>In addition to <tt class="literal">configure</tt> and
<tt class="literal">cget</tt>, the following methods are supported by the
Canvas widget:
</p>

<dl>
<dt><b><tt class="literal">addtag</tt></b></dt>
<dd>
<a name="INDEX-3011" />Defines a tag for an already created
canvas item. For example, to assign a tag called
<tt class="literal">"everything"</tt> to all items in a canvas:
</p>


<blockquote><pre class="code">$canvas-&gt;addtag("everything", "all");</pre></blockquote>


<p>To assign the tag <tt class="literal">origin</tt> to the item closest to
the coordinates (0,0):
</p>

<blockquote><pre class="code">$canvas-&gt;addtag("origin", "closest", 0, 0);</pre></blockquote>

<p>The full list of identifiers is:</p>

<dl>
<dt><i> <tt class="literal">above</tt></i></dt>
<dd>
Assigns the tag to the item above the specified item in the display
list
</p>
</dd>


<dt><i> <tt class="literal">all</tt></i></dt>
<dd>
Assigns the tag to all items in the canvas</p>
</dd>


<dt><i> <tt class="literal">below</tt></i></dt>
<dd>
Assigns the tag to the item below the specified item in the display
list
</p>
</dd>


<dt><i> <tt class="literal">closest</tt></i></dt>
<dd>
Assigns the tag to the item closest to the specified x,y coordinate</p>
</dd>


<dt><i> <tt class="literal">enclosed</tt></i></dt>
<dd>
Assigns the tag to all items that are completely enclosed within the
specified bounding box
</p>
</dd>


<dt><i> <tt class="literal">overlapping</tt></i></dt>
<dd>
Assigns the tag to all items that are even partially inside the
specified bounding box
</p>
</dd>


<dt><i> <tt class="literal">withtag</tt></i></dt>
<dd>
Assigns the tag to all items with the specified tag</p>
</dd>

</dl>
</dd>


<dt><b><tt class="literal">bind</tt></b></dt>
<dd>
<a name="INDEX-3012" />Binds a callback to an item. (To bind a
callback to the Canvas widget itself, you must specify Tk::bind.)
</p>
</dd>


<dt><b><tt class="literal">bbox</tt></b></dt>
<dd>
<a name="INDEX-3013" />Returns the bounding box of an item.
For example, to get the bounding box for all items in the canvas:
</p>


<blockquote><pre class="code">$canvas-&gt;bbox("all");</pre></blockquote>
</dd>


<dt><b><tt class="literal">itemconfigure</tt></b></dt>
<dd>
<a name="INDEX-3014" />Configures one of the items within the
canvas. Works just like the <tt class="literal">configure</tt> method for
widgets, but the first argument is the tag name or ID for the canvas
item.
</p>
</dd>


<dt><b><tt class="literal">itemcget</tt></b></dt>
<dd>
<a name="INDEX-3015" />Gets configuration information for one
of the items within the canvas. Works just like the
<tt class="literal">cget</tt> method for widgets, but the first argument is
the tag name or ID for the canvas item.
</p>
</dd>


<dt><b><tt class="literal">move</tt></b></dt>
<dd>
<a name="INDEX-3016" />Moves an item on the canvas by adding
the specified x and y distances to it:
</p>

<blockquote><pre class="code">$canvas-&gt;move("circle1", 100, 100);</pre></blockquote>
</dd>


<dt><b><tt class="literal">coords</tt></b></dt>
<dd>
<a name="INDEX-3017" />Gets the current x,y coordinates for an
item, or moves an item to an explicit x,y coordinate.
</p>
</dd>


<dt><b><tt class="literal">lower</tt></b></dt>
<dd>
<a name="INDEX-3018" />Sets the priority for the item in the
display list to be lower than the item identified by the specified
tag or ID.
</p>
</dd>


<dt><b><tt class="literal">raise</tt></b></dt>
<dd>
<a name="INDEX-3019" />Sets the priority for the item in the
display list to be higher than the item identified by the specified
tag or ID.
</p>
</dd>


<dt><b><tt class="literal">delete</tt></b></dt>
<dd>
<a name="INDEX-3020" />Removes an item from the canvas. You
can specify as many tags or IDs in the argument list as you want.
</p>
</dd>


<dt><b><tt class="literal">find</tt></b></dt>
<dd>
<a name="INDEX-3021" />Finds the specified items. The first
argument can be any of:
</p>
<dl>

<dt><i> <tt class="literal">above</tt></i></dt>
<dd>
Finds the item above the specified item in the display list</p>
</dd>


<dt><i> <tt class="literal">all</tt></i></dt>
<dd>
Finds all items in the canvas</p>
</dd>


<dt><i> <tt class="literal">below</tt></i></dt>
<dd>
Finds the item below the specified item in the display list</p>
</dd>


<dt><i> <tt class="literal">closest</tt></i></dt>
<dd>
Finds the item closest to the specified x,y coordinate</p>
</dd>


<dt><i> <tt class="literal">enclosed</tt></i></dt>
<dd>
Finds all items that are completely enclosed within the specified
bounding box
</p>
</dd>


<dt><i> <tt class="literal">overlapping</tt></i></dt>
<dd>
Finds all items that are even partially inside the specified bounding
box
</p>
</dd>


<dt><i> <tt class="literal">withtag</tt></i></dt>
<dd>
Finds all items with the specified tag</p>
</dd>

</dl>
</dd>


<dt><b><tt class="literal">gettags</tt></b></dt>
<dd>
<a name="INDEX-3022" />Retrieves a list of all tags associated
with an item.
</p>
</dd>


<dt><b><tt class="literal">type</tt></b></dt>
<dd>
<a name="INDEX-3023" />Determines the type of the specified
item.
</p>
</dd>


<dt><b><tt class="literal">focus</tt></b></dt>
<dd>
<a name="INDEX-3024" />Assigns the keyboard focus to the
specified item.
</p>
</dd>


<dt><b><tt class="literal">postscript</tt></b></dt>
<dd>
<a name="INDEX-3025" />Renders the canvas as PostScript.
Options are:
</p>
<dl>

<dt><i> <tt class="literal">-colormap =&gt; \@</tt><em class="replaceable"><tt>colorcommand</tt></em></i></dt>
<dd>
Specifies a PostScript command for setting color values.</p>
</dd>


<dt><i> <tt class="literal">-colormode =&gt;</tt> <em class="replaceable"><tt>mode</tt></em></i></dt>
<dd>
Sets the mode to <tt class="literal">color</tt> (full color),
<tt class="literal">gray</tt> (grayscale), or <tt class="literal">mono</tt>
(black and white).
</p>
</dd>


<dt><i> <tt class="literal">-file =&gt;</tt> <em class="replaceable"><tt>filename</tt></em></i></dt>
<dd>
The name of the file to store the PostScript output.</p>
</dd>


<dt><i> <tt class="literal">-fontmap =&gt; \@</tt><em class="replaceable"><tt>fontspec</tt></em></i></dt>
<dd>
Specifies a font name and point size.</p>
</dd>


<dt><i> <tt class="literal">-height =&gt;</tt> <em class="replaceable"><tt>size</tt></em></i></dt>
<dd>
The height of the area to print.</p>
</dd>


<dt><i> <tt class="literal">-pageanchor =&gt;</tt> <em class="replaceable"><tt>position</tt></em></i></dt>
<dd>
The anchor position of the page. Values are <tt class="literal">center</tt>
(default), <tt class="literal">n</tt>, <tt class="literal">e</tt>,
<tt class="literal">s</tt>, and <tt class="literal">w</tt>.
</p>
</dd>


<dt><i> <tt class="literal">-pageheight =&gt;</tt> <em class="replaceable"><tt>height</tt></em></i></dt>
<dd>
The height of the printed page.</p>
</dd>


<dt><i> <tt class="literal">-pagewidth =&gt;</tt> <em class="replaceable"><tt>width</tt></em></i></dt>
<dd>
The width of the printed page.</p>
</dd>


<dt><i> <tt class="literal">-pagex =&gt;</tt> <em class="replaceable"><tt>x</tt></em></i></dt>
<dd>
The x positioning point.</p>
</dd>


<dt><i> <tt class="literal">-pagey =&gt;</tt> <em class="replaceable"><tt>y</tt></em></i></dt>
<dd>
The y positioning point.</p>
</dd>


<dt><i> <tt class="literal">-rotate =&gt;</tt> <em class="replaceable"><tt>boolean</tt></em></i></dt>
<dd>
Whether to rotate to landscape orientation. Default is
<tt class="literal">0</tt>. 
</p>
</dd>


<dt><i> <tt class="literal">-width =&gt;</tt> <em class="replaceable"><tt>size</tt></em></i></dt>
<dd>
The width of the area to print.</p>
</dd>


<dt><i> <tt class="literal">-x =&gt;</tt> <em class="replaceable"><tt>x</tt></em></i></dt>
<dd>
The left edge of the canvas.</p>
</dd>


<dt><i> <tt class="literal">-y =&gt;</tt> <em class="replaceable"><tt>y</tt></em></i></dt>
<dd>
The top edge of the canvas.</p>
</dd>

</dl>
</dd>


<dt><b><tt class="literal">scale</tt></b></dt>
<dd>
<a name="INDEX-3026" />Changes the scaling of the canvas or
any individual items. For example, to scale the entire canvas to half
its dimensions:
</p>


<blockquote><pre class="code">$canvas-&gt;scale("all", 0, 0, .5, .5);</pre></blockquote>
</dd>


<dt><b><tt class="literal">xview</tt></b></dt>
<dd>
<a name="INDEX-3027" />Manipulates the canvas area in view.
With no arguments, returns a list of two numbers between 0 and 1,
defining the portion of the canvas that is currently hidden on the
left and right sides, respectively. With arguments, the function of
<tt class="literal">xview</tt> changes:
</p>
<dl>

<dt><i> <tt class="literal">moveto</tt></i></dt>
<dd>
Moves the specified fraction of the text to the left of the visible
portion.
</p>
</dd>


<dt><i> <tt class="literal">scroll</tt></i></dt>
<dd>
Scrolls the canvas left or right by the specified number of units or
pages. Used primarily as a callback to a scrollbar; pressing on an
arrow would move by units (characters), and pressing on the trough
would move by pages. The number is either <tt class="literal">1</tt> or
<tt class="literal">-1</tt>, to move forwards or backwards, respectively.
</p>
</dd>

</dl>
</dd>


<dt><b><tt class="literal">yview</tt></b></dt>
<dd>
<a name="INDEX-3028" />Manipulates the canvas in view. With no
arguments, returns a list of two numbers between 0 and 1, defining
that portion of the canvas that is currently hidden on the top and
bottom, respectively. With arguments, its function changes:
</p>
<dl>

<dt><i> <tt class="literal">moveto</tt></i></dt>
<dd>
Moves the specified fraction of the canvas area to the top of the
visible portion.
</p>
</dd>


<dt><i> <tt class="literal">scroll</tt></i></dt>
<dd>
Scrolls the canvas up or down by the specified number of units or
pages. Used primarily as a callback to a scrollbar; pressing on an
arrow would move by units (lines), and pressing on the trough would
move by pages. The number is either <tt class="literal">1</tt> or
<tt class="literal">-1</tt>, to move forwards or backwards,
respectively.<a name="INDEX-3029" /><a name="INDEX-3030" /><a name="INDEX-3031" /> 
</p>
</dd>

</dl>
</dd>

</dl>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch21_11.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch21_13.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">21.11. The Text Widget</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">21.13. The Scale Widget</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

</body></html>