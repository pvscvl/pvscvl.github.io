<html><head><title>Function Reference (Perl in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Stephen Spainhour" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002416L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XSLT" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch04_13.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch05_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 5. Function Reference</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch05_01.htm">Perl Functions by Category</a><br />
<a href="ch05_02.htm">Perl Functions in Alphabetical Order</a><br /></p></div>

<p>This chapter gives a brief description of Perl's
built-in functions. Each description gives the syntax of the
function, with the types and order of its arguments<a name="INDEX-862" /><a name="INDEX-863" />. 
</p>

<p>Required arguments are shown in italics, separated by commas. If an
argument must be a specific variable type, that
variable's identifier will be used (e.g., a percent
sign for a hash,
<tt class="literal">%</tt><em class="replaceable"><tt>hash</tt></em>). Optional
arguments are placed in brackets. Do not use the brackets in function
calls unless you really want to use an anonymous hash reference.
</p>

<p>There are different ways to use a built-in function. For starters,
any argument that requires a scalar value can be made up of any
expression that returns one. For example, you can obtain the square
root of the first value in an array:
</p>


<blockquote><pre class="code">$root = sqrt (shift @numbers);</pre></blockquote>

<p><tt class="literal">shift</tt> removes the first element of
<tt class="literal">@numbers</tt> and returns it to be used by
<tt class="literal">sqrt</tt>.
</p>

<p>Many functions take a list of scalars for arguments. Any array
variable or other expression that returns a list can be used for all
or part of the arguments. For example:
</p>

<blockquote><pre class="code">chmod (split /,/ FILELIST&gt;); # An expression returns a list
chmod 0755, @executables;    # Array used for part of arguments</pre></blockquote>

<p>In the first line, the <tt class="literal">split</tt> expression reads a
string from a filehandle and splits it into a list. The list provides
proper arguments for <tt class="literal">chmod</tt>. The second line uses
an array that contains a list of filenames for
<tt class="literal">chmod</tt> to act upon.
</p>

<p><a name="INDEX-864" /><a name="INDEX-865" />Parentheses are not
required around a function's arguments. However,
without parentheses, functions are viewed as operators in an
expression (the same is true of predeclared subroutines). If you use
a function in a complex expression, you may want to use parentheses
for clarity. See <a href="ch04_01.htm">Chapter 4, "The Perl Language"</a> for more about
precedence in Perl expressions.
</p>
<div class="sect1"><a name="perlnut2-CHP-5-SECT-1" />
<h2 class="sect1">5.1. Perl Functions by Category</h2>

<p><a name="INDEX-866" /><a name="INDEX-867" /><a name="INDEX-868" />Here are
Perl's functions and function-like keywords,
arranged by category. Note that some functions appear in more than
one category.
</p>

<dl>
<dt><i><em class="emphasis">Scalar manipulation</em></i></dt>
<dd>
<tt class="literal">chomp</tt>, <tt class="literal">chop</tt>,
<tt class="literal">chr</tt>, <tt class="literal">crypt</tt>,
<tt class="literal">hex</tt>, <tt class="literal">index</tt>,
<tt class="literal">lc</tt>, <tt class="literal">lcfirst</tt>,
<tt class="literal">length</tt>, <tt class="literal">oct</tt>,
<tt class="literal">ord</tt>, <tt class="literal">pack</tt>,
<tt class="literal">q//</tt>, <tt class="literal">qq//</tt>,
<tt class="literal">reverse</tt>, <tt class="literal">rindex</tt>,
<tt class="literal">sprintf</tt>, <tt class="literal">substr</tt>,
<tt class="literal">tr///</tt>, <tt class="literal">uc</tt>,
<tt class="literal">ucfirst</tt>, <tt class="literal">y///</tt>
</p>
</dd>


<dt><i><em class="emphasis">Regular expressions and pattern matching</em></i></dt>
<dd>
<a name="INDEX-869" /><a name="INDEX-870" /><tt class="literal">m//</tt>,
<tt class="literal">pos</tt>, <tt class="literal">qr//</tt>,
<tt class="literal">quotemeta</tt>, <tt class="literal">s///</tt>,
<tt class="literal">split</tt>, <tt class="literal">study</tt>
</p>
</dd>


<dt><i><em class="emphasis">Numeric functions</em></i></dt>
<dd>
<a name="INDEX-871" /><tt class="literal">abs</tt>,
<tt class="literal">atan2</tt>, <tt class="literal">cos</tt>,
<tt class="literal">exp</tt>, <tt class="literal">hex</tt>,
<tt class="literal">int</tt>, <tt class="literal">log</tt>,
<tt class="literal">oct</tt>, <tt class="literal">rand</tt>,
<tt class="literal">sin</tt>, <tt class="literal">sqrt</tt>,
<tt class="literal">srand</tt>
</p>
</dd>


<dt><i><em class="emphasis">Array processing</em></i></dt>
<dd>
<a name="INDEX-872" /><tt class="literal">pop</tt>,
<tt class="literal">push</tt>, <tt class="literal">shift</tt>,
<tt class="literal">splice</tt>, <tt class="literal">unshift</tt>
</p>
</dd>


<dt><i><em class="emphasis">List processing</em></i></dt>
<dd>
<a name="INDEX-873" /><tt class="literal">grep</tt>,
<tt class="literal">join</tt>, <tt class="literal">map</tt>,
<tt class="literal">qw//</tt>, <tt class="literal">reverse</tt>,
<tt class="literal">sort</tt>, <tt class="literal">unpack</tt>
</p>
</dd>


<dt><i><em class="emphasis">Hash processing</em></i></dt>
<dd>
<a name="INDEX-874" /><tt class="literal">delete</tt>,
<tt class="literal">each</tt>, <tt class="literal">exists</tt>,
<tt class="literal">keys</tt>, <tt class="literal">values</tt>
</p>
</dd>


<dt><i><em class="emphasis">Input and output</em></i></dt>
<dd>
<a name="INDEX-875" /><a name="INDEX-876" /><tt class="literal">binmode</tt>,
<tt class="literal">close</tt>, <tt class="literal">closedir</tt>,
<tt class="literal">dbmclose</tt>, <tt class="literal">dbmopen</tt>,
<tt class="literal">die</tt>, <tt class="literal">eof</tt>,
<tt class="literal">fileno</tt>, <tt class="literal">flock</tt>,
<tt class="literal">format</tt>, <tt class="literal">getc</tt>,
<tt class="literal">print</tt>, <tt class="literal">printf</tt>,
<tt class="literal">read</tt>, <tt class="literal">readdir</tt>,
<tt class="literal">rewinddir</tt>, <tt class="literal">seek</tt>,
<tt class="literal">seekdir</tt>, <tt class="literal">select</tt>,
<tt class="literal">syscall</tt>, <tt class="literal">sysread</tt>,
<tt class="literal">sysseek</tt>, <tt class="literal">syswrite</tt>,
<tt class="literal">tell</tt>, <tt class="literal">telldir</tt>,
<tt class="literal">truncate</tt>, <tt class="literal">warn</tt>,
<tt class="literal">write</tt>
</p>
</dd>


<dt><i><em class="emphasis">Fixed-length data and records</em></i></dt>
<dd>
<a name="INDEX-877" /><a name="INDEX-878" /><tt class="literal">pack</tt>,
<tt class="literal">read</tt>, <tt class="literal">syscall</tt>,
<tt class="literal">sysread</tt>, <tt class="literal">syswrite</tt>,
<tt class="literal">unpack</tt>, <tt class="literal">vec</tt>
</p>
</dd>


<dt><i>Filehandles, files, and directories</i></dt>
<dd>
<a name="INDEX-879" /><a name="INDEX-880" /><a name="INDEX-881" /><a name="INDEX-882" /><tt class="literal">chdir</tt>,
<tt class="literal">chmod</tt>, <tt class="literal">chown</tt>,
<tt class="literal">chroot</tt>, <tt class="literal">fcntl</tt>,
<tt class="literal">glob</tt>, <tt class="literal">ioctl</tt>,
<tt class="literal">link</tt>, <tt class="literal">lstat</tt>,
<tt class="literal">mkdir</tt>, <tt class="literal">open</tt>,
<tt class="literal">opendir</tt>, <tt class="literal">readlink</tt>,
<tt class="literal">rename</tt>, <tt class="literal">rmdir</tt>,
<tt class="literal">stat</tt>, <tt class="literal">symlink</tt>,
<tt class="literal">sysopen</tt>, <tt class="literal">umask</tt>,
<tt class="literal">unlink</tt>, <tt class="literal">utime</tt>
</p>
</dd>


<dt><i><em class="emphasis">Flow of program control</em></i></dt>
<dd>
<a name="INDEX-883" /><a name="INDEX-884" /><tt class="literal">caller</tt>,
<tt class="literal">continue</tt>, <tt class="literal">die</tt>,
<tt class="literal">do</tt>, <tt class="literal">dump</tt>,
<tt class="literal">eval</tt>, <tt class="literal">exit</tt>,
<tt class="literal">goto</tt>, <tt class="literal">last</tt>,
<tt class="literal">next</tt>, <tt class="literal">redo</tt>,
<tt class="literal">return</tt>, <tt class="literal">sub</tt>,
<tt class="literal">wantarray</tt>
</p>
</dd>


<dt><i><em class="emphasis">Scoping</em></i></dt>
<dd>
<a name="INDEX-885" /><a name="INDEX-886" /><tt class="literal">caller</tt>,
<tt class="literal">import</tt>, <tt class="literal">local</tt>,
<tt class="literal">my</tt>, <tt class="literal">package</tt>,
<tt class="literal">use</tt>
</p>
</dd>


<dt><i><em class="emphasis">Miscellaneous</em></i></dt>
<dd>
<tt class="literal">defined</tt>, <tt class="literal">dump</tt>,
<tt class="literal">eval</tt>, <tt class="literal">formline</tt>,
<tt class="literal">local</tt>, <tt class="literal">my</tt>,
<tt class="literal">prototype</tt>, <tt class="literal">reset</tt>,
<tt class="literal">scalar</tt>, <tt class="literal">undef</tt>,
<tt class="literal">wantarray</tt>
</p>
</dd>


<dt><i><em class="emphasis">Processes and process groups</em></i></dt>
<dd>
<tt class="literal">alarm</tt>, <tt class="literal">exec</tt>,
<tt class="literal">fork</tt>, <tt class="literal">getpgrp</tt>,
<tt class="literal">getppid</tt>, <tt class="literal">getpriority</tt>,
<tt class="literal">kill</tt>, <tt class="literal">pipe</tt>,
<tt class="literal">qx//</tt>, <tt class="literal">setpgrp</tt>,
<tt class="literal">setpriority</tt>, <tt class="literal">sleep</tt>,
<tt class="literal">system</tt>, <tt class="literal">times</tt>,
<tt class="literal">wait</tt>, <tt class="literal">waitpid</tt>
</p>
</dd>


<dt><i><em class="emphasis">Library modules</em></i></dt>
<dd>
<a name="INDEX-887" /><tt class="literal">do</tt>,
<tt class="literal">import</tt>, <tt class="literal">no</tt>,
<tt class="literal">package</tt>, <tt class="literal">require</tt>,
<tt class="literal">use</tt>
</p>
</dd>


<dt><i><em class="emphasis">Classes and objects</em></i></dt>
<dd>
<a name="INDEX-888" /><a name="INDEX-889" /><tt class="literal">bless</tt>,
<tt class="literal">dbmclose</tt>, <tt class="literal">dbmopen</tt>,
<tt class="literal">package</tt>, <tt class="literal">ref</tt>,
<tt class="literal">tie</tt>, <tt class="literal">tied</tt>,
<tt class="literal">untie</tt>, <tt class="literal">use</tt>
</p>
</dd>


<dt><i><em class="emphasis">Low-level socket access</em></i></dt>
<dd>
<a name="INDEX-890" /><a name="INDEX-891" /><tt class="literal">accept</tt>,
<tt class="literal">bind</tt>, <tt class="literal">connect</tt>,
<tt class="literal">getpeername</tt>, <tt class="literal">getsockname</tt>,
<tt class="literal">getsockopt</tt>, <tt class="literal">listen</tt>,
<tt class="literal">recv</tt>, <tt class="literal">send</tt>,
<tt class="literal">setsockopt</tt>, <tt class="literal">shutdown</tt>,
<tt class="literal">socket</tt>, <tt class="literal">socketpair</tt>
</p>
</dd>


<dt><i><em class="emphasis">System V interprocess communication</em></i></dt>
<dd>
<a name="INDEX-892" /><a name="INDEX-893" /><tt class="literal">msgctl</tt>,
<tt class="literal">msgget</tt>, <tt class="literal">msgrcv</tt>,
<tt class="literal">msgsnd</tt>, <tt class="literal">semctl</tt>,
<tt class="literal">semget</tt>, <tt class="literal">semop</tt>,
<tt class="literal">shmctl</tt>, <tt class="literal">shmget</tt>,
<tt class="literal">shmread</tt>, <tt class="literal">shmwrite</tt>
</p>
</dd>


<dt><i><em class="emphasis">Fetching user and group information</em></i></dt>
<dd>
<a name="INDEX-894" /><a name="INDEX-895" /><tt class="literal">endgrent</tt>,
<tt class="literal">endhostent</tt>, <tt class="literal">endnetent</tt>,
<tt class="literal">endpwent</tt>, <tt class="literal">getgrent</tt>,
<tt class="literal">getgrgid</tt>, <tt class="literal">getgrnam</tt>,
<tt class="literal">get</tt>-<tt class="literal">login</tt>,
<tt class="literal">getpwent</tt>, <tt class="literal">getpwnam</tt>,
<tt class="literal">getpwuid</tt>, <tt class="literal">setgrent</tt>,
<tt class="literal">setpwent</tt>
</p>
</dd>


<dt><i><em class="emphasis">Fetching network information</em></i></dt>
<dd>
<a name="INDEX-896" /><tt class="literal">endprotoent</tt>,
<tt class="literal">endservent</tt>, <tt class="literal">gethostbyaddr</tt>,
<tt class="literal">gethostbyname</tt>, <tt class="literal">gethostent</tt>,
<tt class="literal">getnet</tt>-<tt class="literal">byaddr</tt>,
<tt class="literal">getnetbyname</tt>, <tt class="literal">getnetent</tt>,
<tt class="literal">getprotobyname</tt>,
<tt class="literal">getprotobynumber</tt>, <tt class="literal">getprotoent</tt>,
<tt class="literal">getservbyname</tt>, <tt class="literal">getservbyport</tt>,
<tt class="literal">getservent</tt>, <tt class="literal">sethostent</tt>,
<tt class="literal">setnet</tt>-<tt class="literal">ent</tt>,
<tt class="literal">setprotoent</tt>, <tt class="literal">setservent</tt>
</p>
</dd>


<dt><i><em class="emphasis">Time</em></i></dt>
<dd>
<a name="INDEX-897" /><a name="INDEX-898" /><tt class="literal">gmtime</tt>,
<tt class="literal">localtime</tt>, <tt class="literal">time</tt>,
<tt class="literal">times</tt><a name="INDEX-899" /><a name="INDEX-900" /> 
</p>
</dd>

</dl>

</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch04_13.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch05_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">4.13. Pod</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">5.2 Perl Functions in Alphabetical Order</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
      </map>

</body></html>
