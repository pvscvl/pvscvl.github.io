<html><head><title>Getting and Installing Modules (Perl in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Stephen Spainhour" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002416L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XSLT" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch02_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">2.4. Getting and Installing Modules</h2>

<p><a name="INDEX-79" /><a name="INDEX-80" /><a name="INDEX-81" />As you'll see when
you look at the lists of modules and their authors on CPAN, many
users have made their modules freely available. If you find an
interesting problem and are thinking of writing a module to solve it,
check the <em class="emphasis">modules</em> directory on CPAN first to see
if there is a module there that you can use. The chances are good
that there is a module that does what you need, or perhaps one that
you can extend, rather than starting from scratch.<a href="#FOOTNOTE-4">[4]</a> 
</p><blockquote class="footnote"> <a name="FOOTNOTE-4" /><p> [4]If
you are interested in writing and contributing modules, there are
several good starting points for learning to do so&#x2014;see the
<em class="emphasis">perlmodlib</em> manpage, the "Perl 5
Module List," and the "Perl Authors
Upload Server" (<a href="../../../../../../www.perl.com/CPAN/modules/04pause.html">http://www.perl.com/CPAN/modules/04pause.html</a>).</p>
</blockquote>

<p>Before you download a module, you might also check your system to see
if it's already installed. The following command
searches the libraries in the <tt class="literal">@INC</tt> array and
prints the names of all modules it finds:
</p>

<blockquote><pre class="code">find `perl -e 'print "@INC"'` -name '*.pm' -print</pre></blockquote>

<a name="perlnut2-CHP-2-SECT-4.1" /><div class="sect2">
<h3 class="sect2">2.4.1. Locating Modules</h3>

<p><a name="INDEX-82" />If you start from the
<em class="emphasis">modules</em> directory on CPAN,
you'll see that the modules are categorized into
three subdirectories:
</p>

<blockquote><pre class="code">by-authors       <em class="emphasis">Modules by author's registered CPAN name</em>
by-category      <em class="emphasis">Modules by subject matter (see below)</em>
by-module        <em class="emphasis">Modules by namespace (i.e., MIME)</em></pre></blockquote>

<p>If you know what module you want, you can go directly to it by
clicking on the <em class="emphasis">by-module</em> entry. If you are
looking for a module in a particular category, you can find it in the
<em class="emphasis">by-category</em> subdirectory. If you know the
author, click on <em class="emphasis">by-author</em>. However, if you
aren't familiar with the categories and want to find
a module that performs a certain task, you might want to get the file
<em class="emphasis">00modlist.long.html</em>, also in the
<em class="emphasis">modules</em> directory. This file is the
"Perl 5 Modules List." It contains
a list of all the modules, by category, with a brief description of
the purpose of each module and a link to the
author's CPAN directory for downloading.
</p>

<p><a name="INDEX-83" />Here is a
list of the Perl Module categories, plus two for modules that
don't fit anywhere else:
</p>

<blockquote><pre class="code">02_Perl_Core_Modules
03_Development_Support
04_Operating_System_Interfaces
05_Networking_Devices_IPC
06_Data_Type_Utilities
07_Database_Interface
08_User_Interfaces
09_Language_Interfaces
10_File_Names_Systems_Locking
11_String_Lang_Text_Proc
12_Opt_Arg_Param_Proc
13_Internationalization_Locale
14_Security_and_Encryption
15_World_Wide_Web_HTML_HTTP_CGI
16_Server_and_Daemon_Utilities
17_Archiving_and_Compression
18_Images_Pixmaps_Bitmaps
19_Mail_and_Usenet_News
20_Control_Flow_Utilities
21_File_Handle_Input_Output
22_Microsoft_Windows_Modules
23_Miscellaneous_Modules
24_Commercial_Software_Interfaces
99_Not_In_Modulelist
99_Not_Yet_In_Modulelist</pre></blockquote>

<p>If you are in the <em class="emphasis">by-categories</em> subdirectory and
have selected an area from which you'd like to
download a module, you'll find a list of the files
in the directory. <em class="emphasis">tar</em> files have a
<em class="emphasis">.tar.gz</em> extension, and README files have a
<em class="emphasis">.readme</em> extension. You'll
generally find a README file for each module; take a look at it
before you decide to download the file.
</p>

<p>Here's a sample directory listing from category 14,
under the MD5 directory:
</p>

<blockquote><pre class="code">Digest-MD5-2.09.readme
Digest-MD5-2.09.tar.gz
GAAS
GARY
MD5-1.5.3.readme
MD5-1.5.3.tar.gz
MD5-1.6.readme
MD5-1.6.tar.gz
MD5-1.7.readme
MD5-1.7.tar.gz
NWINT</pre></blockquote>

<p><a name="INDEX-84" />You'll notice that
multiple versions are sometimes listed&#x2014;for example, the MD5
module has Versions 1.5.3 through 1.7 available. Generally, this is
to facilitate the transition to a new version of the module.
</p>

<p>Select the <em class="emphasis">.readme</em> file of the most current
archive and review its contents carefully. README files often give
special instructions about building the module; they warn you about
other modules needed for proper functioning and if the module
can't be built under certain versions of Perl. If
you're satisfied with what you read, download the
file<a name="INDEX-85" />.
</p>

</div>
<a name="perlnut2-CHP-2-SECT-4.2" /><div class="sect2">
<h3 class="sect2">2.4.2. Module Installation</h3>

<p><a name="INDEX-86" />If you're running the
standard distribution of Perl, on either a Unix or Win32 system, and
you want to install a module, this section explains how to do it. If
you are running the ActiveState Win32 port, you can follow the
instructions covered in this section, unless you're
running on a system without a development toolkit; if this is the
case, see the next section.
</p>

<p><a name="INDEX-87" />Before
installing modules, you should understand at least a little about
<em class="emphasis">make</em>. <em class="emphasis">make</em> is a command
designed to automate compilations; it guarantees that programs are
compiled with the correct options and are linked to the current
version of program modules and libraries. But it's
not just for programmers&#x2014;<em class="emphasis">make</em> is useful
for any situation in which there are dependencies among a group of
related files.
</p>

<p><a name="INDEX-88" /><em class="emphasis">make</em>
uses a file known as a Makefile, which is a text file that describes
the dependencies and contains instructions that tell
<em class="emphasis">make</em> what to do. A Perl programmer who writes a
module creates a file called <em class="emphasis">Makefile.PL</em> that
comes with the module when you download it.
<em class="emphasis">Makefile.PL</em> is a Perl script that uses another
module, ExtUtils::MakeMaker (generally referred to as simply
MakeMaker), to generate a Makefile specific to that module on your
system.
</p>

<p>Before you can actually install the module, you need to decide where
it should go. Modules can be installed either globally, for everyone
to use, or locally, for your own use. Most system administrators
install popular software, including Perl modules, to be globally
available. In that case, the modules are generally installed in a
branch of the <em class="emphasis">lib</em> directory with the rest of the
Perl libraries.
</p>

<p>If you have root privileges or write access to the locations where
Perl modules are installed on your system, you can proceed by moving
the downloaded module file to the correct directory and running
<em class="emphasis">gunzip</em> and <em class="emphasis">tar</em> to unpack
it. Then <em class="emphasis">cd</em> to the module directory and check
any README or INSTALL files, check the MANIFEST file to be sure
everything is there. If all is well, you can run the following to
complete the installation:
</p>

<blockquote><pre class="code">% perl Makefile.PL
% make
% make test
% make install</pre></blockquote>

<p>If you're on a Win32 platform and are using Mingw32,
do the following:
</p>

<blockquote><pre class="code">C:\modulename-version&gt; perl Makefile.PL
C:\modulename-version&gt; dmake
C:\modulename-version&gt; dmake test
C:\modulename-version&gt; dmake install</pre></blockquote>

<p>It's possible that you'll need to
customize <em class="emphasis">Makefile.PL</em> before running it. If so,
see the discussion of ExtUtils::MakeMaker in <a href="ch08_01.htm">Chapter 8, "Standard Modules"</a>. Or, if you know the MakeMaker options that
you'd like to add to
<em class="filename">Makefile.PL</em>, you can add these options on the
command line. A typical scenario would be on a system where
you've installed a precompiled version of Perl, and
the CC and LD options in <em class="filename">Config.pm</em>
don't match your programming environment; thus, Perl
modules won't build correctly. To solve this
problem, you can do the following:
</p>

<blockquote><pre class="code">% perl Makefile.PL CC=gcc LD=gcc</pre></blockquote>

<p>If you are going to install the module locally (for example, if you
don't have permission to install globally or you
want to test it locally before installing it for general use), you
need to pass a PREFIX argument to Perl when you run
<em class="emphasis">Makefile.PL</em> to generate the Makefile. This
argument tells MakeMaker to use the directory following PREFIX as the
base directory when installing the module.
</p>

<p>For example, to install a module in the directory
<em class="emphasis">/home/mydir/Perl/Modules</em>, the PREFIX argument
would look like this:
</p>

<blockquote><pre class="code">% perl Makefile.PL PREFIX=/home/mydir/Perl/Modules</pre></blockquote>

<p>Then follow the remaining steps, as above:</p>

<blockquote><pre class="code">% make
% make test
% make install</pre></blockquote>

<p>The module is now available, but when you write Perl code to use the
module, there's another detail to take care of.
Since Perl looks in system-wide directories as specified in the
special array <tt class="literal">@INC</tt>, it won't find
local modules unless you tell it where they are. Instead,
you'll receive an error message such as the
following:
</p>

<blockquote><pre class="code">Can't locate &lt;ModuleName&gt;.pm in @INC.
BEGIN failed--compilation aborted.</pre></blockquote>

<p>Thus, if you installed the module in
<em class="emphasis">/home/mydir/Perl/Modules</em>, you need to tell Perl
to look in that location with the command <tt class="literal">use</tt>
<tt class="literal">lib
'</tt><em class="replaceable"><tt>path</tt></em><tt class="literal">'</tt>:
</p>

<blockquote><pre class="code">#!/usr/local/bin/perl -w
use lib '/home/mydir/Perl/Modules';
use ModuleName;</pre></blockquote>

</div>
<a name="perlnut2-CHP-2-SECT-4.3" /><div class="sect2">
<h3 class="sect2">2.4.3. Installing Modules with ActiveState Perl</h3>

<p><a name="INDEX-89" /><a name="INDEX-90" />Prior to Perl 5.005,
ActiveState's Perl for Win32 did not support
MakeMaker. If you are running Perl 5.004 (or earlier), you should
upgrade because the absense of MakeMaker prevents you from installing
and using most current Perl modules. While some modules can be
installed manually, this is <em class="emphasis">not</em> suggested, since
it's likely that something will be forgotten, and
the module won't work correctly! You should follow
all module documentation to determine which installation technique is
the proper one, so that everything will be okay.
</p>

<p>With 5.6 and later, you can use MakeMaker to install the modules, or
you can use the Perl Package Manager that comes with ActivePerl.
</p>

<a name="perlnut2-CHP-2-SECT-4.3.1" /><div class="sect3">
<h3 class="sect3">2.4.3.1. Using MakeMaker</h3>

<p><a name="INDEX-91" />To install
a module using MakeMaker, follow the procedure described earlier for
installing when you are running the standard distribution, replacing
<em class="emphasis">make</em> with <em class="emphasis">nmake</em> or
<em class="emphasis">dmake</em> as appropriate.
</p>

</div>

<a name="perlnut2-CHP-2-SECT-4.3.2" /><div class="sect3">
<h3 class="sect3">2.4.3.2. Using the Perl Package Manager</h3>

<p><a name="INDEX-92" /><a name="INDEX-93" />The Perl Package Manager (PPM) provides
a command-line interface for obtaining and installing Perl modules
and extensions. To run PPM, connect to CPAN and type:
</p>

<blockquote><pre class="code">perl ppm.pl</pre></blockquote>

<p>The PPM prompt appears, and you can begin to enter PPM commands. The
available commands are:
</p>

<dl>
<dt><b><tt class="literal">help</tt><em class="replaceable"> </em><tt class="literal">[</tt><em class="replaceable">command</em><tt class="literal">]</tt></b></dt>
<dd>
Prints the list of commands and what they do, or help for a
particular command.
</p>
</dd>


<dt><b><tt class="literal">install</tt> <em class="replaceable">packages</em></b></dt>
<dd>
Installs the specified packages.</p>
</dd>


<dt><b><tt class="literal">quit</tt></b></dt>
<dd>
Leaves PPM.</p>
</dd>


<dt><b><tt class="literal">remove</tt> <em class="replaceable">packages</em></b></dt>
<dd>
Removes the specified packages from the system.</p>
</dd>


<dt><b><tt class="literal">search</tt></b></dt>
<dd>
Searches for information about available packages.</p>
</dd>


<dt><b><tt class="literal">set</tt></b></dt>
<dd>
Sets or displays current options.</p>
</dd>


<dt><b><tt class="literal">verify</tt></b></dt>
<dd>
Verifies that your current installation is up-to-date.</p>
</dd>

</dl>

</div>
</div>
<a name="perlnut2-CHP-2-SECT-4.4" /><div class="sect2">
<h3 class="sect2">2.4.4. Installing Modules with the CPAN Module</h3>

<p><a name="INDEX-94" />If you are just getting and installing
one or a few modules, it's not a big problem to
download the module's tarball and run through the
build process manually. But if you don't want to
cope with the brute-force approach when dealing with large module
installations (such as LWP and the CPAN bundle), there is an easier
way&#x2014;you can use the CPAN module. The CPAN module (CPAN.pm) can
be used interactively from the command line to locate, download, and
install Perl modules and their dependencies, or to identify modules
and authors. CPAN.pm was designed to automate the installation of
Perl modules; it includes searching capabilities and the ability to
retrieve files from one or more of the mirrored CPAN sites and unpack
them in a dedicated directory.
</p>

<p>To run the CPAN module interactively, enter:</p>

<blockquote><pre class="code">% perl -MCPAN -e shell</pre></blockquote>

<p>The first time you use the CPAN module, it takes you through a series
of setup questions and writes
<a name="INDEX-95" />CPAN::Config
if you run the above as root or your administrative user. If the
above is run as a user who does not have administrative permissions,
CPAN.pm determines who you are and writes
<em class="emphasis">MyConfig.pm</em><a name="INDEX-96" />
in a subdirectory of your home directory (defaults to
<em class="emphasis">~/.cpan/CPAN/MyConfig.pm</em>). After that, whenever
you use the CPAN module for downloading other modules, it uses
the<a name="INDEX-97" /> <em class="emphasis">.cpan</em> directory
as the general build and cache directory, saved as
<tt class="literal">cpan_home</tt> in the configuration file. If ReadLine
support is available (i.e., Term::ReadKey and Term::ReadLine are
installed), you can use command history and command completion as you
enter commands.
</p>

<p>When the module runs and is ready for commands to be entered,
you'll see the prompt:
</p>

<blockquote><pre class="code">cpan&gt;</pre></blockquote>

<p>You can then enter <tt class="literal">h</tt> to get a brief help message,
or just start entering commands. The commands are all methods in the
CPAN::Shell package. For commands that can operate on modules,
bundles, authors, or distributions, CPAN.pm treats arguments
containing a slash (<tt class="literal">/</tt><a name="INDEX-98" />) as distributions, arguments
beginning with
<tt class="literal">Bundle::</tt><a name="INDEX-99" /> as bundles, and everything else as
modules or authors. The following is a listing of the interactive
<a name="INDEX-100" />CPAN
commands.
</p>

<div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>?</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
?
</pre><p>Displays brief help message. Same as <tt class="literal">h</tt> command.</p></div>

<a name="INDEX-101" /><a name="INDEX-102" /><a name="INDEX-103" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>!</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
! <em class="replaceable">perl-code</em>
</pre><p><tt class="literal">eval</tt>s a Perl command<a name="INDEX-101" /><a name="INDEX-102" /><a name="INDEX-103" />.
</p></div>

<a name="INDEX-104" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>a</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
a [<em class="replaceable">authorlist</em>]
</pre><p><a name="INDEX-104" />Searches
for CPAN authors. Arguments can be strings that must be matched
exactly or regular expressions, which must be enclosed in slashes and
are matched in case-insensitive fashion. With no arguments, it
returns a list of all authors, by CPAN ID. With arguments, it returns
a list of authors if there is more than one that matches the
criteria, or it returns additional information if a single author is
returned. String and regular expression arguments can be combined in
the same command.
</p><blockquote><pre class="code">cpan&gt; a /^nv/ LWALL
Author          NVPAT (Nathan V. Patwardhan)
Author          LWALL (Larry Wall. Author of Perl. Busy man.)
cpan&gt; a /^nv/
Author id = NVPAT
    EMAIL        nvp@ora.com
    FULLNAME     Nathan V. Patwardhan</pre></blockquote></div>

<a name="INDEX-105" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>autobundle</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
autobundle [<em class="replaceable">bundlelist</em>]
</pre><p><a name="INDEX-105" />Writes a bundle file containing a list
of all modules that are both available from CPAN and currently
installed within <tt class="literal">@INC</tt>. The file is written to the
<em class="emphasis">Bundle</em> subdirectory of
<tt class="literal">cpan_home</tt> with a name that contains the current
date and a counter&#x2014;for example,
<em class="emphasis">Snapshot_1998_04_27_00.pm</em>. You can use this file
as input to the <tt class="literal">install</tt> command to install the
latest versions of all the modules on your system:
</p><blockquote><pre class="code">perl -MCPAN -e 'install Bundle::Snapshot_1998_04_27_00'</pre></blockquote></div>

<a name="INDEX-106" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>b</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
b [<em class="replaceable">bundlelist</em>]
</pre><p><a name="INDEX-106" />Searches
for CPAN bundles. Arguments are the same as for the
<tt class="literal">a</tt> command, except they specify bundles. With a
single argument, <tt class="literal">b</tt> displays details about the
bundle; with multiple arguments, it displays a list.
</p></div>

<a name="INDEX-107" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>clean</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
clean [<em class="replaceable">arglist</em>]
</pre><p><a name="INDEX-107" />Does
a <em class="emphasis">make clean</em> in the distribution
file's directory. <em class="replaceable"><tt>arglist</tt></em>can include one or more modules, bundles, distributions, or one of
the values <tt class="literal">r</tt> or <tt class="literal">u</tt> to reinstall
or uninstall.
</p></div>

<a name="INDEX-108" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>d</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
d [<em class="replaceable">distriblist</em>]
</pre><p><a name="INDEX-108" />Displays
information about module distributions for the distribution(s)
specified in <em class="replaceable"><tt>distriblist</tt></em>. Arguments are
the same as for the <tt class="literal">a</tt> command. Displays details
for a single argument, or a list if the output consists of multiple
distributions.
</p></div>

<a name="INDEX-109" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>force</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
force <em class="replaceable">method</em> [<em class="replaceable">arglist</em>]
</pre><p><a name="INDEX-109" />Takes as a first argument the method
to invoke, which can be one of <tt class="literal">make</tt>,
<tt class="literal">test</tt>, or <tt class="literal">install</tt>, and executes
the command from scratch for each argument in
<em class="replaceable"><tt>arglist</tt></em>. The arguments may be modules or
distributions.
</p><p>Be warned that <tt class="literal">force</tt> also allows you to install
modules that have failed some or all of the module tests. If
installing modules that have failed their tests bothers you, then you
shouldn't use <tt class="literal">force</tt>.
</p></div>

<a name="INDEX-110" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>h</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
h
</pre><p><a name="INDEX-110" />Displays
brief help message. Same as <tt class="literal">?</tt>.
</p></div>

<a name="INDEX-111" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>i</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
i [<em class="replaceable">arglist</em>]
</pre><p><a name="INDEX-111" />Displays
information about the arguments specified in
<em class="replaceable"><tt>arglist</tt></em>, which can be an author, module,
bundle, or distribution. Arguments and output are the same as for
<tt class="literal">a</tt>.
</p></div>

<a name="INDEX-112" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>install</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
install [<em class="replaceable">arglist</em>]
</pre><p><a name="INDEX-112" />Installs the arguments specified in
<em class="replaceable"><tt>arglist</tt></em>, which can be modules or
distributions. Implies <tt class="literal">test</tt>. For a distribution,
<tt class="literal">install</tt> is run unconditionally. For a module,
CPAN.pm checks to see if the module is up-to-date, and if so, prints
a message to that effect and does not do the install. Otherwise, it
finds and processes the distribution that contains the module.
</p></div>

<a name="INDEX-113" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>look</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
look <em class="replaceable">arg</em>
</pre><p><a name="INDEX-113" />Takes
one argument, which is a module or distribution, gets and untars the
distribution file if necessary, changes to the appropriate directory,
and opens a subshell process in that directory.
</p></div>

<a name="INDEX-114" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>m</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
m [<em class="replaceable">arglist</em>]
</pre><p><a name="INDEX-114" />Displays
information about modules. Arguments are the same as for the
<tt class="literal">a</tt> command. Displays details for a single module,
or a list if there is more than one in the output.
</p></div>

<a name="INDEX-115" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>make</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
make [<em class="replaceable">arglist</em>]
</pre><p><a name="INDEX-115" />Unconditionally runs a
<em class="emphasis">make</em> on each argument in
<em class="replaceable"><tt>arglist</tt></em>, which can be a module or a
distribution. For a module, CPAN.pm finds and processes the
distribution that contains the module.
</p></div>

<a name="INDEX-116" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>o</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
o <em class="replaceable">type</em> [<em class="replaceable">option</em>] [<em class="replaceable">value</em>]
</pre><p><a name="INDEX-116" />Sets and
queries options. Takes the following arguments:
</p><dl>
<dt><i><em class="replaceable"><tt>type</tt></em></i></dt>
<dd>
Type of options to set or query. The possible values are:</p>

<dl>
<dt><b><tt class="literal">debug</tt></b></dt>
<dd>
Debugging options. Prints CPAN module options for debugging the
package.
</p>
</dd>


<dt><b><tt class="literal">conf</tt></b></dt>
<dd>
Configuration options. Lists or sets values for CPAN module
configuration variables kept in the hash
<tt class="literal">%CPAN::Config</tt>. These configuration variables are:
</p>


<a name="ch02-24-fm2xml" /><table border="1" cellpadding="3">



<tr>
<th>
<p>Variable</p>
</th>
<th>
<p>Content</p>
</th>
</tr>


<tr>
<td>
<p><tt class="literal">build_cache</tt></p>
</td>
<td>
<p>Size of cache for directories to build modules</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">build_dir</tt></p>
</td>
<td>
<p>Locally accessible directory to build modules</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">index_expire</tt></p>
</td>
<td>
<p>Number of days before refetching index files</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">cpan_home</tt></p>
</td>
<td>
<p>Local directory reserved for this package</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">gzip</tt></p>
</td>
<td>
<p>Location of external program <em class="emphasis">gzip</em></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">inactivity_timeout</tt></p>
</td>
<td>
<p>Breaks an interactive <em class="emphasis">Makefile.PL</em> after
<tt class="literal">inactivity_timeout</tt> seconds of inactivity (set to 0
to never break)
</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">inhibit_startup_message</tt></p>
</td>
<td>
<p>If true, does not print startup message</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">keep_source</tt></p>
</td>
<td>
<p>If set, keeps source in local directory</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">keep_source_where</tt></p>
</td>
<td>
<p>Where to keep source</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">make</tt></p>
</td>
<td>
<p>Location of external <em class="emphasis">make</em> program</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">make_arg</tt></p>
</td>
<td>
<p>Arguments to always pass to <em class="emphasis">make</em></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">make_install_arg</tt></p>
</td>
<td>
<p>Same as <tt class="literal">make_arg</tt> for <em class="emphasis">make
install</em>
</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">makepl_arg</tt></p>
</td>
<td>
<p>Arguments to always pass to <em class="emphasis">perl Makefile.PL</em></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">pager</tt></p>
</td>
<td>
<p>Location of external <em class="emphasis">more</em> program (or other
pager)
</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">tar</tt></p>
</td>
<td>
<p>Location of external <em class="emphasis">tar</em> program</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">unzip</tt></p>
</td>
<td>
<p>Location of external <em class="emphasis">unzip</em> program</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">urllist</tt></p>
</td>
<td>
<p>Arrayref to nearby CPAN sites (or equivalent locations, such as
CD-ROM)
</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">cache_metadata</tt></p>
</td>
<td>
<p>Uses serializer to cache metadata</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">prerequisites_policy</tt></p>
</td>
<td>
<p>Sets behavior for handling module dependencies; options are
<tt class="literal">follow</tt>, <tt class="literal">automatically</tt>,
<tt class="literal">ask</tt>, and <tt class="literal">ignore</tt>
</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">scan_cache</tt></p>
</td>
<td>
<p>Controls the cache-scanning behavior; options are
<tt class="literal">atstart</tt> and <tt class="literal">never</tt>
</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">wait_list</tt></p>
</td>
<td>
<p>An arrayref that contains the wait server(s) to try</p>
</td>
</tr>

</table><p>
</dd>

</dl>
</dd>


<dt><i><em class="replaceable"><tt>option</tt></em></i></dt>
<dd>
The CPAN module configuration option or options; used with
<tt class="literal">conf</tt>. Can be one or more scalar or list options
from the table above.
</p>
</dd>


<dt><i><em class="replaceable"><tt>value</tt></em></i></dt>
<dd>
Value to be set for a configuration option. The possibilities for
<tt class="literal">o conf</tt> are:
</p>

<dl>
<dt><b><tt class="literal">o conf</tt> <em class="replaceable">scalaropt</em></b></dt>
<dd>
Prints current value of scalar option</p>
</dd>


<dt><b><tt class="literal">o conf</tt> <em class="replaceable">scalaropt value</em></b></dt>
<dd>
Sets scalar option to <em class="replaceable"><tt>value</tt></em></p>
</dd>


<dt><b><tt class="literal">o conf</tt> <em class="replaceable">listopt</em></b></dt>
<dd>
Prints current value of list option in MakeMaker format</p>
</dd>


<dt><b><tt class="literal">o conf</tt> <em class="replaceable">listopt</em> <tt class="literal">[shift|pop]</tt></b></dt>
<dd>
Shifts or pops the array in <em class="replaceable"><tt>listopt</tt></em>variable
</p>
</dd>


<dt><b><tt class="literal">o conf</tt> <em class="replaceable">listopt</em> <tt class="literal">[unshift|push|splice]</tt> <em class="replaceable">list</em></b></dt>
<dd>
Works like the corresponding Perl functions to modify the array in
<em class="replaceable"><tt>listopt</tt></em> based on
<em class="replaceable"><tt>list</tt></em></p>
</dd>


<dt><b><tt class="literal">o conf</tt> <em class="replaceable">commit</em></b></dt>
<dd>
Wites CPAN::Config with updated options</p>
</dd>

</dl>
</dd>

</dl></div>

<a name="INDEX-117" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>q</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
q
</pre><p><a name="INDEX-117" />Quits
the CPAN module shell subroutine.
</p></div>

<a name="INDEX-118" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>r</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
r
</pre><p><a name="INDEX-118" />Recommendations
for reinstallation. With no argument, lists all distributions that
are out-of-date. With an argument, tells you whether that module or
distribution is out-of-date.
</p></div>

<a name="INDEX-119" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>readme</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
readme <em class="replaceable">arglist</em>
</pre><p><a name="INDEX-119" />Finds and displays the README file for
modules or distributions in <em class="replaceable"><tt>arglist</tt></em>.
</p></div>

<a name="INDEX-120" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>recompile</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
recompile
</pre><p><a name="INDEX-120" />Runs full
<em class="emphasis">make/test/install</em> cycle over all installed
dynamically loadable modules with <tt class="literal">force</tt> in effect.
Useful for completing a network installation on systems after the
first installation, in which the CPAN module would otherwise declare
the modules already up-to-date.
</p></div>

<a name="INDEX-121" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>reload</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
reload <em class="replaceable">arg</em>
</pre><p><a name="INDEX-121" />Reloads index files or
re-<tt class="literal">eval</tt> s CPAN.pm itself.
<em class="replaceable"><tt>arg</tt></em> may be:
</p><dl>
<dt><b><tt class="literal">cpan</tt></b></dt>
<dd>
Re-<tt class="literal">eval</tt> s CPAN.pm.</p>
</dd>


<dt><b><tt class="literal">index</tt></b></dt>
<dd>
Reloads index of files.</p>
</dd>

</dl></div>

<a name="INDEX-122" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>test</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
test
</pre><p><a name="INDEX-122" />Runs
the <em class="emphasis">make test</em> command.
</p></div>

<a name="INDEX-123" /><a name="INDEX-124" /><a name="INDEX-125" /><a name="INDEX-126" /><a name="INDEX-127" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>u</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><pre>
u
</pre><p><a name="INDEX-123" />Lists
all uninstalled distributions.<a name="INDEX-124" /><a name="INDEX-125" /><a name="INDEX-126" /><a name="INDEX-127" /> 
</p></div>
<a name="INDEX-128" />

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch02_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">2.3. Installing Perl</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">2.5. Documentation</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

</body></html>