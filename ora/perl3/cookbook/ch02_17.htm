<HTML
><HEAD
>
<TITLE>Recipe 2.16. Converting Between Octal and Hexadecimal (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:30:22Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch02_01.htm"
TITLE="2. Numbers"><LINK
REL="prev"
HREF="ch02_16.htm"
TITLE="2.15. Using Complex Numbers"><LINK
REL="next"
HREF="ch02_18.htm"
TITLE="2.17. Putting Commas in Numbers"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch02_16.htm"
TITLE="2.15. Using Complex Numbers"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.15. Using Complex Numbers"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch02_01.htm"
TITLE="2. Numbers"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch02_18.htm"
TITLE="2.17. Putting Commas in Numbers"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.17. Putting Commas in Numbers"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch02-14189"
>2.16. Converting Between Octal and Hexadecimal</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-1235"
>Problem</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch02-idx-1000008104-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008104-1"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008104-2"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008104-3"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008104-4"
></A
>You want to convert a string (e.g., &quot;<CODE
CLASS="literal"
>0x55</CODE
>&quot; or &quot;<CODE
CLASS="literal"
>0755</CODE
>&quot;) containing an octal or hexadecimal number to the correct number.</P
><P
CLASS="para"
>Perl only understands octal and hexadecimal numbers when they occur as literals in your programs. If they are obtained by reading from files or supplied as command-line arguments, no automatic conversion takes place.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-1243"
>Solution</A
></H3
><P
CLASS="para"
>Use Perl's <CODE
CLASS="literal"
>oct</CODE
> and <CODE
CLASS="literal"
>hex</CODE
> functions: <A
CLASS="indexterm"
NAME="ch02-idx-1000008105-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008105-1"
></A
></P
><PRE
CLASS="programlisting"
>$number = hex($hexadecimal);         # hexadecimal
$number = oct($octal);               # octal</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-1253"
>Discussion</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>oct</CODE
> function converts octal numbers with or without the leading &quot;<CODE
CLASS="literal"
>0</CODE
>&quot;: &quot;<CODE
CLASS="literal"
>0350</CODE
>&quot; or &quot;<CODE
CLASS="literal"
>350</CODE
>&quot;. In fact, it even converts hexadecimal (&quot;<CODE
CLASS="literal"
>0x350</CODE
>&quot;) numbers if they have a leading &quot;<CODE
CLASS="literal"
>0x</CODE
>&quot;. The <CODE
CLASS="literal"
>hex</CODE
> function only converts hexadecimal numbers, with or without a leading &quot;<CODE
CLASS="literal"
>0x</CODE
>&quot;: &quot;<CODE
CLASS="literal"
>0x255</CODE
>&quot;, &quot;<CODE
CLASS="literal"
>3A</CODE
>&quot;, &quot;<CODE
CLASS="literal"
>ff</CODE
>&quot;, or &quot;<CODE
CLASS="literal"
>deadbeef</CODE
>&quot;. (Letters may be in upper- or lowercase.)</P
><P
CLASS="para"
>Here's an example that accepts a number in either decimal, octal, or hex, and prints that number in all three bases. It uses the <CODE
CLASS="literal"
>oct</CODE
> function to convert from octal and hexadecimal if the input began with a 0. It then uses <CODE
CLASS="literal"
>printf</CODE
> to convert back into hex, octal, and decimal as needed.</P
><PRE
CLASS="programlisting"
>print &quot;Gimme a number in decimal, octal, or hex: &quot;;
$num = &lt;STDIN&gt;;
chomp $num;
exit unless defined $num;
$num = oct($num) if $num =~ /^0/; # does both oct and hex
printf &quot;%d %x %o\n&quot;, $num, $num, $num;</PRE
><P
CLASS="para"
>The following code converts Unix file permissions. They're always given in octal, so we use <CODE
CLASS="literal"
>oct</CODE
> instead of <CODE
CLASS="literal"
>hex</CODE
>.</P
><PRE
CLASS="programlisting"
>print &quot;Enter file permission in octal: &quot;;
$permissions = &lt;STDIN&gt;;
die &quot;Exiting ...\n&quot; unless defined $permissions;
chomp $permissions;
$permissions = oct($permissions);   # permissions always octal
print &quot;The decimal value is $permissions\n&quot;;</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-1287"
>See Also</A
></H3
><P
CLASS="para"
>The "Scalar Value Constructors" section in <EM
CLASS="emphasis"
>perldata</EM
> (1) and the <A
CLASS="olink"
HREF="../prog/ch02_03.htm"
>"Numeric Literals"</A
> section of <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; the <CODE
CLASS="literal"
>oct</CODE
> and <CODE
CLASS="literal"
>hex</CODE
> functions in <EM
CLASS="emphasis"
>perlfunc </EM
>(1) and <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch02_16.htm"
TITLE="2.15. Using Complex Numbers"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.15. Using Complex Numbers"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch02_18.htm"
TITLE="2.17. Putting Commas in Numbers"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.17. Putting Commas in Numbers"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>2.15. Using Complex Numbers</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>2.17. Putting Commas in Numbers</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
