<HTML
><HEAD
>
<TITLE>Recipe 11.2. Making Hashes of Arrays (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:40:32Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch11_01.htm"
TITLE="11. References and Records"><LINK
REL="prev"
HREF="ch11_02.htm"
TITLE="11.1. Taking References to Arrays"><LINK
REL="next"
HREF="ch11_04.htm"
TITLE="11.3. Taking References to Hashes"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch11_02.htm"
TITLE="11.1. Taking References to Arrays"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 11.1. Taking References to Arrays"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch11_01.htm"
TITLE="11. References and Records"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch11_04.htm"
TITLE="11.3. Taking References to Hashes"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 11.3. Taking References to Hashes"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch11-chap11_making_0"
>11.2. Making Hashes of Arrays</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch11-pgfId-332"
>Problem<A
CLASS="indexterm"
NAME="ch11-idx-1000004802-0"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004802-1"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004802-2"
></A
></A
></H3
><P
CLASS="para"
>For each key in a hash, only one scalar value is allowed, but you'd like to use one key to store and retrieve multiple values. That is, you'd like the value to be a list.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch11-pgfId-338"
>Solution</A
></H3
><P
CLASS="para"
>Use references to arrays as the hash values. Use <CODE
CLASS="literal"
>push</CODE
> to append:</P
><PRE
CLASS="programlisting"
>push(@{ $hash{&quot;KEYNAME&quot;} }, &quot;new value&quot;);</PRE
><P
CLASS="para"
>Then, dereference the value as an array reference when printing out the hash:</P
><PRE
CLASS="programlisting"
>foreach $string (keys %hash) {
    print &quot;$string: @{$hash{$string}}\n&quot;; 
} </PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch11-pgfId-354"
>Discussion</A
></H3
><P
CLASS="para"
>You can only store scalar values in a hash. References, however, are scalars. This solves the problem of storing multiple values for one key by making <CODE
CLASS="literal"
>$hash{$key}</CODE
> a reference to an array containing the values for <CODE
CLASS="literal"
>$key</CODE
>. The normal hash operations (insertion, deletion, iteration, and testing for existence) can now be written in terms of array operations like <CODE
CLASS="literal"
>push</CODE
>, <CODE
CLASS="literal"
>splice</CODE
>, and <CODE
CLASS="literal"
>foreach</CODE
>.</P
><P
CLASS="para"
>Here's how to give a key many values:</P
><PRE
CLASS="programlisting"
>$hash{&quot;a key&quot;} = [ 3, 4, 5 ];       # anonymous array</PRE
><P
CLASS="para"
>Once you have a key with many values, here's how to use them:</P
><PRE
CLASS="programlisting"
>@values = @{ $hash{&quot;a key&quot;} };</PRE
><P
CLASS="para"
>To append a new value to the array of values associated with a particular key, use <CODE
CLASS="literal"
>push</CODE
><A
CLASS="indexterm"
NAME="ch11-idx-1000004808-0"
></A
>:</P
><PRE
CLASS="programlisting"
>push @{ $hash{&quot;a key&quot;} }, $value;</PRE
><P
CLASS="para"
>The classic application of these data structures is inverting a hash that has many keys with the same associated value. When inverted, you end up with a hash that has many values for the same key. This is addressed in <A
CLASS="xref"
HREF="ch05_09.htm"
TITLE="Inverting a Hash"
>Recipe 5.8</A
>.</P
><P
CLASS="para"
>Be warned that this:</P
><PRE
CLASS="programlisting"
>@residents = @{ $phone2name{$number} };</PRE
><P
CLASS="para"
>causes a runtime exception under <CODE
CLASS="literal"
>use</CODE
> <CODE
CLASS="literal"
>strict</CODE
> because you're dereferencing an undefined reference where autovivification won't occur. You must do this instead:</P
><PRE
CLASS="programlisting"
>@residents = exists( $phone2name{$number} )
                ? @{ $phone2name{$number} }
                : ();</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch11-pgfId-390"
>See Also</A
></H3
><P
CLASS="para"
>The section on <A
CLASS="olink"
HREF="../prog/ch04_07.htm"
>"Hashs of Arrays"</A
> in <A
CLASS="olink"
HREF="../prog/ch04_01.htm"
>Chapter 4</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> and in <I
CLASS="filename"
>perldsc </I
>(1); <A
CLASS="xref"
HREF="ch05_09.htm"
TITLE="Inverting a Hash"
>Recipe 5.8</A
>; the example "Tie Example: Make a Hash That Always Appends" in <A
CLASS="xref"
HREF="ch13_16.htm"
TITLE="Creating Magic Variables with tie"
>Recipe 13.15</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch11_02.htm"
TITLE="11.1. Taking References to Arrays"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 11.1. Taking References to Arrays"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch11_04.htm"
TITLE="11.3. Taking References to Hashes"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 11.3. Taking References to Hashes"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>11.1. Taking References to Arrays</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>11.3. Taking References to Hashes</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
