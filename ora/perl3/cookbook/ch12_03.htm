<HTML
><HEAD
>
<TITLE>Recipe 12.2. Trapping Errors in require or use (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:41:23Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch12_01.htm"
TITLE="12. Packages, Libraries, and Modules"><LINK
REL="prev"
HREF="ch12_02.htm"
TITLE="12.1. Defining a Module's Interface"><LINK
REL="next"
HREF="ch12_04.htm"
TITLE="12.3. Delaying use Until Run Time"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch12_02.htm"
TITLE="12.1. Defining a Module's Interface"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 12.1. Defining a Module's Interface"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch12_01.htm"
TITLE="12. Packages, Libraries, and Modules"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch12_04.htm"
TITLE="12.3. Delaying use Until Run Time"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 12.3. Delaying use Until Run Time"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch12-25543"
>12.2. Trapping Errors in require or use</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch12-pgfId-412"
>Problem<A
CLASS="indexterm"
NAME="ch12-idx-1000005178-0"
></A
><A
CLASS="indexterm"
NAME="ch12-idx-1000005178-1"
></A
><A
CLASS="indexterm"
NAME="ch12-idx-1000005178-2"
></A
><A
CLASS="indexterm"
NAME="ch12-idx-1000005178-3"
></A
></A
></H3
><P
CLASS="para"
>You need to load in a module that might not be present on your system. This normally results in a fatal exception. You want to detect and trap these failures.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch12-pgfId-418"
>Solution</A
></H3
><P
CLASS="para"
>Wrap the <CODE
CLASS="literal"
>require</CODE
> or <CODE
CLASS="literal"
>use</CODE
> in an <CODE
CLASS="literal"
>eval</CODE
><A
CLASS="indexterm"
NAME="ch12-idx-1000005179-0"
></A
>, and wrap the <CODE
CLASS="literal"
>eval</CODE
> in a BEGIN block:</P
><PRE
CLASS="programlisting"
># no import
BEGIN {
    unless (eval &quot;require $mod&quot;) {
        warn &quot;couldn't load $mod: $@&quot;;
    }
}

# imports into current package
BEGIN {
    unless (eval &quot;use $mod&quot;) {
        warn &quot;couldn't load $mod: $@&quot;;
    }
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch12-pgfId-450"
>Discussion</A
></H3
><P
CLASS="para"
>You usually want a program to fail if it tries to load a module that is missing or doesn't compile. Sometimes, though, you'd like to recover from that error, perhaps trying an alternative module instead. As with any other exception, you insulate yourself from compilation errors with an <CODE
CLASS="literal"
>eval</CODE
>.</P
><P
CLASS="para"
>You don't want to use <CODE
CLASS="literal"
>eval</CODE
> <CODE
CLASS="literal"
>{</CODE
> <CODE
CLASS="literal"
>BLOCK</CODE
> <CODE
CLASS="literal"
>}</CODE
>, because this only traps run-time exceptions and <CODE
CLASS="literal"
>use</CODE
> is a compile-time event. Instead, you must use <CODE
CLASS="literal"
>eval</CODE
> <CODE
CLASS="literal"
>&quot;string&quot;</CODE
>, to catch compile-time problems as well. Remember, <CODE
CLASS="literal"
>require</CODE
> on a bareword has a slightly different meaning than <CODE
CLASS="literal"
>require</CODE
> on a variable. It adds a <CODE
CLASS="literal"
>&quot;.pm&quot;</CODE
> and translates double-colons into your operating system's path separators, canonically <CODE
CLASS="literal"
>/</CODE
> (as in URLs), but sometimes <CODE
CLASS="literal"
>\</CODE
>, <CODE
CLASS="literal"
>:</CODE
>, or even <CODE
CLASS="literal"
>.</CODE
> on some systems.</P
><P
CLASS="para"
>If you need to try several modules in succession, stopping at the first one that works, you could do something like this:</P
><PRE
CLASS="programlisting"
>BEGIN {
    my($found, @DBs, $mod);
    $found = 0;
    @DBs = qw(Giant::Eenie Giant::Meanie Mouse::Mynie Moe);
    for $mod (@DBs) {
        if (eval &quot;require $mod&quot;) {
            $mod-&gt;<CODE
CLASS="literal"
>import</CODE
>();         # if needed
            $found = 1;
            last;
        }
    }
    die &quot;None of @DBs loaded&quot; unless $found;
}</PRE
><P
CLASS="para"
>We wrap the <CODE
CLASS="literal"
>eval</CODE
> in a BEGIN block to ensure the module-loading happens at compile time instead of run time.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch12-pgfId-1000005607"
>See Also</A
></H3
><P
CLASS="para"
>The <A
CLASS="olink"
HREF="../prog/ch03_032.htm"
><CODE
CLASS="literal"
>eval</CODE
></A
>, <A
CLASS="olink"
HREF="../prog/ch03_027.htm"
><CODE
CLASS="literal"
>die</CODE
></A
>, <A
CLASS="olink"
HREF="../prog/ch03_185.htm"
><CODE
CLASS="literal"
>use</CODE
></A
>, and <A
CLASS="olink"
HREF="../prog/ch03_123.htm"
><CODE
CLASS="literal"
>require</CODE
></A
> functions in <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> and in <I
CLASS="filename"
>perlfunc</I
> (1); <A
CLASS="xref"
HREF="ch10_13.htm"
TITLE="Handling Exceptions"
>Recipe 10.12</A
>; <A
CLASS="xref"
HREF="ch12_04.htm"
TITLE="Delaying use Until Run Time"
>Recipe 12.3</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch12_02.htm"
TITLE="12.1. Defining a Module's Interface"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 12.1. Defining a Module's Interface"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch12_04.htm"
TITLE="12.3. Delaying use Until Run Time"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 12.3. Delaying use Until Run Time"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>12.1. Defining a Module's Interface</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>12.3. Delaying use Until Run Time</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
