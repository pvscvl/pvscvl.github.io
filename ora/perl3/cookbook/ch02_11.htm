<HTML
><HEAD
>
<TITLE>Recipe 2.10. Generating Biased Random Numbers (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:30:14Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch02_01.htm"
TITLE="2. Numbers"><LINK
REL="prev"
HREF="ch02_10.htm"
TITLE="2.9. Making Numbers Even More Random"><LINK
REL="next"
HREF="ch02_12.htm"
TITLE="2.11. Doing Trigonometry in Degrees, not Radians"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch02_10.htm"
TITLE="2.9. Making Numbers Even More Random"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.9. Making Numbers Even More Random"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch02_01.htm"
TITLE="2. Numbers"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch02_12.htm"
TITLE="2.11. Doing Trigonometry in Degrees, not Radians"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.11. Doing Trigonometry in Degrees, not Radians"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch02-10672"
>2.10. Generating Biased Random Numbers</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-653"
>Problem</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch02-idx-1000008047-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008047-1"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008047-2"
></A
>You want to pick a random value where the probabilities of the values are not equal (the distribution is not even). You might be trying to randomly select a banner to display on a web page, given a set of relative weights saying how often each banner is to be displayed. Alternatively, you might want to simulate behavior according to a normal distribution (the bell curve).</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-659"
>Solution</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch02-idx-1000008055-0"
></A
>If you want a random value distributed according to a specific function  &nbsp;-   e.g., the Gaussian (Normal) distribution  &nbsp;-   consult a statistics textbook to find the appropriate function or algorithm. This subroutine generates random numbers that are normally distributed, with a standard deviation of 1 and a mean of 0.</P
><PRE
CLASS="programlisting"
>sub gaussian_rand {
    my ($u1, $u2);  # uniformly distributed random numbers
    my $w;          # variance, then a weight
    my ($g1, $g2);  # gaussian-distributed numbers

    do {
        $u1 = 2 * rand() - 1;
        $u2 = 2 * rand() - 1;
        $w = $u1*$u1 + $u2*$u2;
    } while ( $w &gt;= 1 );

    $w = sqrt( (-2 * log($w))  / $w );
    $g2 = $u1 * $w;
    $g1 = $u2 * $w;
    # return both if wanted, else just one
    return wantarray ? ($g1, $g2) : $g1;
}</PRE
><P
CLASS="para"
>If you have a list of weights and values you want to randomly pick from, follow this two-step process: First, turn the weights into a probability distribution with <CODE
CLASS="literal"
>weight_to_dist</CODE
> below, and then use the distribution to randomly pick a value with <CODE
CLASS="literal"
>weighted_rand</CODE
>: <A
CLASS="indexterm"
NAME="ch02-idx-1000008057-0"
></A
></P
><PRE
CLASS="programlisting"
># weight_to_dist: takes a hash mapping key to weight and returns
# a hash mapping key to probability
sub weight_to_dist {
    my %weights = @_;
    my %dist    = ();
    my $total   = 0;
    my ($key, $weight);
    local $_;

    foreach (values %weights) {
        $total += $_;
    }

    while ( ($key, $weight) = each %weights ) {
        $dist{$key} = $weight/$total;
    }

    return %dist;
}

# weighted_rand: takes a hash mapping key to probability, and
# returns the corresponding element
sub weighted_rand {
    my %dist = @_;
    my ($key, $weight);

    while (1) {                     # to avoid floating point inaccuracies
        my $rand = rand;
        while ( ($key, $weight) = each %dist ) {
            return $key if ($rand -= $weight) &lt; 0;
        }
    }
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-767"
>Discussion</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>gaussian_rand</CODE
> function implements the <I
CLASS="firstterm"
>polar Box Muller</I
> method for turning two independent uniformly distributed random numbers between 0 and 1 (such as <CODE
CLASS="literal"
>rand</CODE
> returns) into two numbers with a mean of 0 and a standard deviation of 1 (i.e., a Gaussian distribution). To generate numbers with a different mean and standard deviation, multiply the output of <CODE
CLASS="literal"
>gaussian_rand</CODE
> by the new standard deviation, and then add the new mean:</P
><PRE
CLASS="programlisting"
># gaussian_rand as above
$mean = 25;
$sdev = 2;
$salary = gaussian_rand() * $sdev + $mean;
printf(&quot;You have been hired at \$%.2f\n&quot;, $salary);</PRE
><P
CLASS="para"
>The <CODE
CLASS="literal"
>weighted_rand</CODE
><A
CLASS="indexterm"
NAME="ch02-idx-1000008049-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008049-1"
></A
> function picks a random number between 0 and 1. It then uses the probabilities generated by <CODE
CLASS="literal"
>weight_to_dist</CODE
> to see which element the random number corresponds to. Because of the vagaries of floating-point representation, the accumulated errors of representation might mean we don't find an element to return. This is why we wrap the code in a <CODE
CLASS="literal"
>while</CODE
> to pick a new random number and try again.</P
><P
CLASS="para"
>In addition, the CPAN module Math::Random has functions to return random numbers from a variety of distributions.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-787"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>rand</CODE
> function in <EM
CLASS="emphasis"
>perlfunc</EM
> (1) and <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; <A
CLASS="xref"
HREF="ch02_08.htm"
TITLE="Generating Random Numbers"
>Recipe 2.7</A
>; the documentation for the CPAN module Math::Random <A
CLASS="indexterm"
NAME="ch02-idx-1000008051-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008051-1"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008051-2"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008051-3"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008051-4"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch02_10.htm"
TITLE="2.9. Making Numbers Even More Random"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.9. Making Numbers Even More Random"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch02_12.htm"
TITLE="2.11. Doing Trigonometry in Degrees, not Radians"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.11. Doing Trigonometry in Degrees, not Radians"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>2.9. Making Numbers Even More Random</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>2.11. Doing Trigonometry in Degrees, not Radians</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
