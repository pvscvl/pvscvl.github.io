<HTML
><HEAD
>
<TITLE>Recipe 14.8. Storing Complex Data in a DBM File (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:42:57Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch14_01.htm"
TITLE="14. Database Access"><LINK
REL="prev"
HREF="ch14_08.htm"
TITLE="14.7. Treating a Text File as a Database Array"><LINK
REL="next"
HREF="ch14_10.htm"
TITLE="14.9. Persistent Data"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch14_08.htm"
TITLE="14.7. Treating a Text File as a Database Array"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 14.7. Treating a Text File as a Database Array"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch14_01.htm"
TITLE="14. Database Access"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch14_10.htm"
TITLE="14.9. Persistent Data"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 14.9. Persistent Data"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch14-18811"
>14.8. Storing Complex Data in a DBM File</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch14-pgfId-1014"
>Problem<A
CLASS="indexterm"
NAME="ch14-idx-1000004991-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000004991-1"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000004991-2"
></A
></A
></H3
><P
CLASS="para"
>You want values in a DBM file to be something other than scalars. For instance, you use a hash of hashes in your program and want to store them in a DBM file for other programs to access, or you want them to persist across process runs.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch14-pgfId-1020"
>Solution</A
></H3
><P
CLASS="para"
>Use the CPAN module MLDBM to values more complex values than strings and numbers.</P
><PRE
CLASS="programlisting"
>use MLDBM 'DB_File';
tie(%HASH, 'MLDBM', [... other DBM arguments]) or die $!;</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch14-pgfId-1030"
>Discussion</A
></H3
><P
CLASS="para"
>MLDBM uses Data::Dumper (see <A
CLASS="xref"
HREF="ch11_15.htm"
TITLE="Transparently Persistent Data Structures"
>Recipe 11.14</A
>) to convert data structures to and from strings so that they can be stored in a DBM file. It doesn't store references, instead it stores the data that the references refer to:</P
><PRE
CLASS="programlisting"
># %hash is a tied hash
$hash{&quot;Tom Christiansen&quot;} = [ &quot;book author&quot;, 'tchrist@perl.com' ];          
$hash{&quot;Tom Boutell&quot;} = [ &quot;shareware author&quot;, 'boutell@boutell.com' ];

# names to compare
$name1 = &quot;Tom Christiansen&quot;;
$name2 = &quot;Tom Boutell&quot;;

$tom1 = $hash{$name1};      # snag local pointer
$tom2 = $hash{$name2};      # and another           

print &quot;Two Toming: $tom1 $tom2\n&quot;;

<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Tom Toming: ARRAY(0x73048) ARRAY(0x73e4c)</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>Each time MLDBM retrieves a data structure from the DBM file, it generates a new copy of that data. To compare data that you retrieve from a MLDBM database, you need to compare the values within the structure:</P
><PRE
CLASS="programlisting"
>if ($tom1-&gt;[0] eq $tom2-&gt;[0] &amp;&amp;
    $tom1-&gt;[1] eq $tom2-&gt;[1]) {
    print &quot;You're having runtime fun with one Tom made two.\n&quot;;
} else {
    print &quot;No two Toms are ever alike.\n&quot;;
}</PRE
><P
CLASS="para"
>This is more efficient than:</P
><PRE
CLASS="programlisting"
>if ($hash{$name1}-&gt;[0] eq $hash{$name2}-&gt;[0] &amp;&amp;     # INEFFICIENT
    $hash{$name1}-&gt;[1] eq $hash{$name2}-&gt;[1]) {
    print &quot;You're having runtime fun with one Tom made two.\n&quot;;
} else {
    print &quot;No two Toms are ever alike.\n&quot;;
}</PRE
><P
CLASS="para"
>Each time we say <CODE
CLASS="literal"
>$hash{...}</CODE
>, the DBM file is consulted. The inefficient code above accesses the database four times, whereas the code using the temporary variables <CODE
CLASS="literal"
>$tom1</CODE
> and <CODE
CLASS="literal"
>$tom2</CODE
> only accesses the database twice.</P
><P
CLASS="para"
>Current limitations of Perl's <CODE
CLASS="literal"
>tie</CODE
> mechanism prevent you from storing or modifying parts of a MLDBM value directly:</P
><PRE
CLASS="programlisting"
>$hash{&quot;Tom Boutell&quot;}-&gt;[0] = &quot;Poet Programmer&quot;;      # WRONG</PRE
><P
CLASS="para"
>Always get, change, and set pieces of the stored structure through a temporary variable:</P
><PRE
CLASS="programlisting"
>$entry = $hash{&quot;Tom Boutell&quot;};                      # RIGHT
$entry-&gt;[0] = &quot;Poet Programmer&quot;;
$hash{&quot;Tom Boutell&quot;} = $entry;</PRE
><P
CLASS="para"
>If MLDBM uses a database with size limits on values, like SDBM, you'll quickly hit those limits. To get around this, use GDBM_File or DB_File, which don't limit the size of keys or values. DB_File is the better choice because it is byte-order neutral, which lets the database be shared between both big- and little-endian architectures.<A
CLASS="indexterm"
NAME="ch14-idx-1000004996-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000004996-1"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000004996-2"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch14-pgfId-1108"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for the Data::Dumper, MLDBM, and Storable modules from CPAN; <A
CLASS="xref"
HREF="ch11_14.htm"
TITLE="Storing Data Structures to Disk"
>Recipe 11.13</A
>; <A
CLASS="xref"
HREF="ch14_10.htm"
TITLE="Persistent Data"
>Recipe 14.9</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch14_08.htm"
TITLE="14.7. Treating a Text File as a Database Array"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 14.7. Treating a Text File as a Database Array"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch14_10.htm"
TITLE="14.9. Persistent Data"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 14.9. Persistent Data"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>14.7. Treating a Text File as a Database Array</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>14.9. Persistent Data</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
