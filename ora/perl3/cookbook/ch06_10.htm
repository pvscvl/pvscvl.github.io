<HTML
><HEAD
>
<TITLE>Recipe 6.9. Matching Shell Globs as Regular Expressions (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:34:21Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch06_01.htm"
TITLE="6. Pattern Matching"><LINK
REL="prev"
HREF="ch06_09.htm"
TITLE="6.8. Extracting a Range of Lines"><LINK
REL="next"
HREF="ch06_11.htm"
TITLE="6.10. Speeding Up Interpolated Matches"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch06_09.htm"
TITLE="6.8. Extracting a Range of Lines"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.8. Extracting a Range of Lines"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch06_01.htm"
TITLE="6. Pattern Matching"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch06_11.htm"
TITLE="6.10. Speeding Up Interpolated Matches"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.10. Speeding Up Interpolated Matches"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch06-97251"
>6.9. Matching Shell Globs as Regular Expressions<A
CLASS="indexterm"
NAME="ch06-idx-1000007611-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007611-1"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007611-2"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007611-3"
></A
></A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-1069"
>Problem</A
></H3
><P
CLASS="para"
>You want to allow users to specify matches using traditional shell wildcards, not full Perl regular expressions. Wildcards are easier to type than full regular expressions for simple cases.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-1075"
>Solution</A
></H3
><P
CLASS="para"
>Use the following subroutine to convert four shell wildcard characters into their equivalent regular expression; all other characters will be quoted to render them literals.</P
><PRE
CLASS="programlisting"
>sub glob2pat {
    my $globstr = shift;
    my %patmap = (
        '*' =&gt; '.*',
        '?' =&gt; '.',
        '[' =&gt; '[',
        ']' =&gt; ']',
    );
    $globstr =~ s{(.)} { $patmap{$1} || &quot;\Q$1&quot; }ge;
    return '^' . $globstr . '$';
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-1103"
>Discussion</A
></H3
><P
CLASS="para"
>A Perl pattern is not the same as a shell wildcard pattern. The shell's <CODE
CLASS="literal"
>*.*</CODE
> is not a valid regular expression. Its meaning as a pattern would be <CODE
CLASS="literal"
>/^.*\..*$/</CODE
>, which is admittedly much less fun to type.</P
><P
CLASS="para"
>The function given in the Solution makes these conversions for you, following the standard wildcard rules used by the <CODE
CLASS="literal"
>glob</CODE
> built-in.</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><B
CLASS="emphasis.bold"
>Shell</B
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><B
CLASS="emphasis.bold"
>Perl</B
></P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>list.?</CODE
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>^list\..$</CODE
></P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>project.*</CODE
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>^project\..*$</CODE
></P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>*old</CODE
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>^.*old$</CODE
></P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>type*.[ch]</CODE
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>^type.*\.[ch]$</CODE
></P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>*.*</CODE
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>^.*\..*$</CODE
></P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>*</CODE
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>^.*$</CODE
></P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>In the shell, the rules are different. The entire pattern is implicitly anchored at the ends. A question mark maps into any character, an asterisk is any amount of anything, and brackets are character ranges. Everything else is normal.</P
><P
CLASS="para"
>Most shells do more than simple one-directory globbing. For instance, you can say <CODE
CLASS="literal"
>*/*</CODE
> to mean "all the files in all the subdirectories of the current directory." Furthermore, most shells don't list files whose names begin with a period, unless you explicitly put that leading period into your glob pattern. Our <CODE
CLASS="literal"
>glob2pat</CODE
> function doesn't do these things &nbsp;-  if you need them, use the File::KGlob module from CPAN.<A
CLASS="indexterm"
NAME="ch06-idx-1000007613-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007613-1"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007613-2"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007613-3"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-1129"
>See Also</A
></H3
><P
CLASS="para"
>Your system's <I
CLASS="filename"
>csh</I
> (1) and <I
CLASS="filename"
>ksh </I
>(1) manpages; the <CODE
CLASS="literal"
>glob</CODE
> function in <I
CLASS="filename"
>perlfunc </I
>(1) and <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; the documentation for the CPAN module Glob::DosGlob; the "I/O Operators" section of <I
CLASS="filename"
>perlop </I
>(1) and the <A
CLASS="olink"
HREF="../prog/ch02_03.htm"
>"Filename globbing operator"</A
> section of <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; we talk more about globbing in <A
CLASS="xref"
HREF="ch09_07.htm"
TITLE="Globbing, or Getting a List of Filenames Matching a Pattern"
>Recipe 9.6</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch06_09.htm"
TITLE="6.8. Extracting a Range of Lines"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.8. Extracting a Range of Lines"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch06_11.htm"
TITLE="6.10. Speeding Up Interpolated Matches"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.10. Speeding Up Interpolated Matches"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>6.8. Extracting a Range of Lines</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>6.10. Speeding Up Interpolated Matches</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
