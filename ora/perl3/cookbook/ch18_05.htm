<HTML
><HEAD
>
<TITLE>Recipe 18.4. Reading and Posting Usenet News Messages (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:45:03Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch18_01.htm"
TITLE="18. Internet Services"><LINK
REL="prev"
HREF="ch18_04.htm"
TITLE="18.3. Sending Mail"><LINK
REL="next"
HREF="ch18_06.htm"
TITLE="18.5. Reading Mail with POP3"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch18_04.htm"
TITLE="18.3. Sending Mail"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 18.3. Sending Mail"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch18_01.htm"
TITLE="18. Internet Services"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch18_06.htm"
TITLE="18.5. Reading Mail with POP3"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 18.5. Reading Mail with POP3"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch18-chap18_reading_0"
>18.4. Reading and Posting Usenet News Messages</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch18-pgfId-575"
>Problem<A
CLASS="indexterm"
NAME="ch18-idx-1000004299-0"
></A
><A
CLASS="indexterm"
NAME="ch18-idx-1000004299-1"
></A
><A
CLASS="indexterm"
NAME="ch18-idx-1000004299-2"
></A
><A
CLASS="indexterm"
NAME="ch18-idx-1000004299-3"
></A
><A
CLASS="indexterm"
NAME="ch18-idx-1000004299-4"
></A
><A
CLASS="indexterm"
NAME="ch18-idx-1000004299-5"
></A
><A
CLASS="indexterm"
NAME="ch18-idx-1000004299-6"
></A
></A
></H3
><P
CLASS="para"
>You want to connect to a Usenet news server to read and post messages. Your program could send a periodic posting to a newsgroup,[<A
CLASS="footnote"
HREF="#ch18-pgfId-1000000812"
>1</A
>] summarize a newsgroup, or identify first-time contributors in a newsgroup so you can send them a helpful welcome message.</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch18-pgfId-1000000812"
>[1]</A
> If so, be sure to check out Ian Kluft's <EM
CLASS="emphasis"
>auto-faq</EM
> program at <A
CLASS="systemitem.url"
HREF="../../../../../../www.novia.net/~pschleck/auto-faq/"
>http://www.novia.net/~pschleck/auto-faq/</A
>.</P
></DIV
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch18-pgfId-581"
>Solution</A
></H3
><P
CLASS="para"
>Use the CPAN module Net::NNTP:</P
><PRE
CLASS="programlisting"
>use Net::NNTP;

$server = Net::NNTP-&gt;new(&quot;news.host.dom&quot;)
    or die &quot;Can't connect to news server: $@\n&quot;;
($narticles, $first, $last, $name) = $server-&gt;group( &quot;misc.test&quot; )
    or die &quot;Can't select misc.test\n&quot;;
$headers  = $server-&gt;head($first)
    or die &quot;Can't get headers from article $first in $name\n&quot;;
$bodytext = $server-&gt;body($first)
    or die &quot;Can't get body from article $first in $name\n&quot;;
$article  = $server-&gt;article($first)
    or die &quot;Can't get article $first from $name\n&quot;;

$server-&gt;<CODE
CLASS="literal"
>postok()</CODE
>
    or warn &quot;Server didn't tell me I could post.\n&quot;;

$server-&gt;post( [ @lines ] )
    or die &quot;Can't post: $!\n&quot;;</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch18-pgfId-623"
>Discussion</A
></H3
><P
CLASS="para"
>Usenet is a distributed news system. Servers exchange messages to ensure that each server gets all the messages for the newsgroups it carries. Each server sets its own expiration criteria to decide how long messages stay on the server. Client newsreaders connect to their designated server (usually belonging to their company, ISP, or university) and can read existing postings and contribute new ones.</P
><P
CLASS="para"
>Each message (or article, as they're also known) has a set of headers and a body, separated by a blank line. Articles are identified in two ways: the <EM
CLASS="emphasis"
>message ID</EM
> header and an <EM
CLASS="emphasis"
>article number</EM
> within a newsgroup. An article's message ID is stored in the message itself and is guaranteed to be unique no matter which news server the article was read from. When an article references others, it does so by message ID. A message ID is a string like:</P
><PRE
CLASS="programlisting"
>&lt;0401@jpl-devvax.JPL.NASA.GOV&gt;</PRE
><P
CLASS="para"
>An article can also be identified by a newsgroup and an article number within the group. Each news server assigns its own article numbers to the articles it has, so they're only guaranteed to be good for the news server you got them from.</P
><P
CLASS="para"
>The Net::NNTP constructor connects to the specified news server. If the connection couldn't be made, it returns <CODE
CLASS="literal"
>undef</CODE
> and sets <CODE
CLASS="literal"
>$@</CODE
> to an error message. If the connection was successfully made, <CODE
CLASS="literal"
>new</CODE
> returns a new Net::NNTP object:</P
><PRE
CLASS="programlisting"
>$server = Net::NNTP-&gt;new(&quot;news.mycompany.com&quot;)
    or die &quot;Couldn't connect to news.mycompany.com: $@\n&quot;;</PRE
><P
CLASS="para"
>Once connected, you can get a list of newsgroups with the <CODE
CLASS="literal"
>list</CODE
> method. This returns a reference to a hash whose keys are newsgroup names. Each value is a reference to an array consisting of the first valid article number in the group, the last valid article number in the group, and a string of flags. The flags are typically <CODE
CLASS="literal"
>&quot;y&quot;</CODE
>, meaning you may post, but could be <CODE
CLASS="literal"
>&quot;m&quot;</CODE
> for moderated or <CODE
CLASS="literal"
>=NAME</CODE
>, meaning that the group is an alias for the newsgroup <CODE
CLASS="literal"
>NAME</CODE
>. There are over 17,000 newsgroups that your server might carry, so fetching a list of all the groups can take a while.</P
><PRE
CLASS="programlisting"
>$grouplist = $server-&gt;<CODE
CLASS="literal"
>list()</CODE
>
    or die &quot;Couldn't fetch group list\n&quot;;

foreach $group (keys %$grouplist) {
    if ($grouplist-&gt;{$group}-&gt;[2] eq 'y') {
        # I can post to $group
    }
}</PRE
><P
CLASS="para"
>Much as FTP has the concept of a current directory, the Network News Transfer Protocol (NNTP) has the concept of a current group. Make a group the current group with the <CODE
CLASS="literal"
>group</CODE
> method:</P
><PRE
CLASS="programlisting"
>($narticles, $first, $last, $name) = $server-&gt;group(&quot;comp.lang.perl.misc&quot;)
    or die &quot;Can't select comp.lang.perl.misc\n&quot;;</PRE
><P
CLASS="para"
>The <CODE
CLASS="literal"
>group</CODE
> method returns a four-element list: the number of articles in the group, the first article number, the last article number, and the name of the group. If the group does not exist, it returns an empty list.</P
><P
CLASS="para"
>There are two ways to retrieve articles: call <CODE
CLASS="literal"
>article</CODE
> with a message ID, or select a group with <CODE
CLASS="literal"
>group</CODE
> and then call <CODE
CLASS="literal"
>article</CODE
> with an article number. In scalar context, it returns a reference to an array of lines. In list context, <CODE
CLASS="literal"
>article</CODE
> returns a list of lines. If an error occurs, <CODE
CLASS="literal"
>article</CODE
> returns false:</P
><PRE
CLASS="programlisting"
>@lines = $server-&gt;article($message_id)
    or die &quot;Can't fetch article $message_id: $!\n&quot;;</PRE
><P
CLASS="para"
>You can fetch an article's header or body with the <CODE
CLASS="literal"
>head</CODE
> and <CODE
CLASS="literal"
>body</CODE
> methods. Like <CODE
CLASS="literal"
>article</CODE
>, these methods take an article number or message ID, and return a list of lines or an array reference.</P
><PRE
CLASS="programlisting"
>@group = $server-&gt;group(&quot;comp.lang.perl.misc&quot;)
    or die &quot;Can't select group comp.lang.perl.misc\n&quot;;
@lines = $server-&gt;head($group[1])
    or die &quot;Can't get headers from first article in comp.lang.perl.misc\n&quot;;</PRE
><P
CLASS="para"
>To post an article, use the <CODE
CLASS="literal"
>post</CODE
> method. Give it a list of lines or a reference to an array of lines, and it returns true if the post succeeded, false if the article couldn't be posted.</P
><PRE
CLASS="programlisting"
>$server-&gt;post(@message)
    or die &quot;Can't post\n&quot;;</PRE
><P
CLASS="para"
>Use the <CODE
CLASS="literal"
>postok</CODE
> method to find out whether the server said that you may post:</P
><PRE
CLASS="programlisting"
>unless ($server-&gt;<CODE
CLASS="literal"
>postok()</CODE
>) {
    warn &quot;You may not post.\n&quot;;
}</PRE
><P
CLASS="para"
>Read the manpage for Net::NNTP for a complete list of methods.<A
CLASS="indexterm"
NAME="ch18-idx-1000004301-0"
></A
><A
CLASS="indexterm"
NAME="ch18-idx-1000004301-1"
></A
><A
CLASS="indexterm"
NAME="ch18-idx-1000004301-2"
></A
><A
CLASS="indexterm"
NAME="ch18-idx-1000004301-3"
></A
><A
CLASS="indexterm"
NAME="ch18-idx-1000004301-4"
></A
><A
CLASS="indexterm"
NAME="ch18-idx-1000004301-5"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch18-pgfId-699"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for the Net::NNTP module from CPAN; RFC 977, <CITE
CLASS="citetitle"
>Network News Transfer Protocol </CITE
>; your system's <I
CLASS="filename"
>trn </I
>(1) and <I
CLASS="filename"
>innd</I
> (8) manpages (if you have them)</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch18_04.htm"
TITLE="18.3. Sending Mail"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 18.3. Sending Mail"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch18_06.htm"
TITLE="18.5. Reading Mail with POP3"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 18.5. Reading Mail with POP3"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>18.3. Sending Mail</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>18.5. Reading Mail with POP3</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
