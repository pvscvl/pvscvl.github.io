<HTML
><HEAD
>
<TITLE>Recipe 20.13. Processing Server Logs (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:46:03Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch20_01.htm"
TITLE="20. Web Automation"><LINK
REL="prev"
HREF="ch20_13.htm"
TITLE="20.12. Parsing a Web Server Log File"><LINK
REL="next"
HREF="ch20_15.htm"
TITLE="20.14. Program: htmlsub"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch20_13.htm"
TITLE="20.12. Parsing a Web Server Log File"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 20.12. Parsing a Web Server Log File"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch20_01.htm"
TITLE="20. Web Automation"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch20_15.htm"
TITLE="20.14. Program: htmlsub"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 20.14. Program: htmlsub"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch20-16638"
>20.13. Processing Server Logs</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch20-pgfId-1395"
>Problem<A
CLASS="indexterm"
NAME="ch20-idx-1000002688-0"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002688-1"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002688-2"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002688-3"
></A
></A
></H3
><P
CLASS="para"
>You need to summarize your server logs, but you don't have a customizable program to do it.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch20-pgfId-1401"
>Solution</A
></H3
><P
CLASS="para"
>Parse the error log yourself with regular expressions, or use the Logfile modules from CPAN.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch20-pgfId-1407"
>Discussion</A
></H3
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch20_14.htm"
TITLE="sumwww"
>Example 20.9</A
> is a sample report generator for an Apache weblog.</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch20-16450"
>Example 20.9: sumwww</A
></H4
><PRE
CLASS="programlisting"
>#!/usr/bin/perl -w
# sumwww - summarize web server log activity

$lastdate = &quot;&quot;;
daily_logs();
summary();
exit;

# read CLF files and tally hits from the host and to the URL
sub daily_logs {
    while (&lt;&gt;) {
        ($type, $what) = /&quot;(GET|POST)\s+(\S+?) \S+&quot;/ or next;
        ($host, undef, undef, $datetime) = split;
        ($bytes) = /\s(\d+)\s*$/ or next;
        ($date)  = ($datetime =~ /\[([^:]*)/);
        $posts  += ($type eq POST);
        $home++ if m, / ,;
        if ($date ne $lastdate) {
            if ($lastdate) { write_report()     }
            else           { $lastdate = $date  }
        }
        $count++;
        $hosts{$host}++;
        $what{$what}++;
        $bytesum += $bytes;
    }
    write_report() if $count;
}

# use *typeglob aliasing of global variables for cheap copy
sub summary  {
    $lastdate = &quot;Grand Total&quot;;
    *count   = *sumcount;
    *bytesum = *bytesumsum;
    *hosts   = *allhosts;
    *posts   = *allposts;
    *what    = *allwhat;
    *home    = *allhome;
    write;
}

# display the tallies of hosts and URLs, using formats
sub write_report {
    write;

    # add to summary data
    $lastdate    = $date;
    $sumcount   += $count;
    $bytesumsum += $bytesum;
    $allposts   += $posts;
    $allhome    += $home;

    # reset daily data
    $posts = $count = $bytesum = $home = 0;
    @allwhat{keys %what}   = keys %what;
    @allhosts{keys %hosts} = keys %hosts;
    %hosts = %what = ();
}

format STDOUT_TOP =
@|||||||||| @|||||| @||||||| @||||||| @|||||| @|||||| @|||||||||||||
&quot;Date&quot;,     &quot;Hosts&quot;, &quot;Accesses&quot;, &quot;Unidocs&quot;, &quot;POST&quot;, &quot;Home&quot;, &quot;Bytes&quot;
----------- ------- -------- -------- ------- ------- --------------
.

format STDOUT =
@&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; @&gt;&gt;&gt;&gt;&gt;&gt; @&gt;&gt;&gt;&gt;&gt;&gt;&gt; @&gt;&gt;&gt;&gt;&gt;&gt;&gt; @&gt;&gt;&gt;&gt;&gt;&gt; @&gt;&gt;&gt;&gt;&gt;&gt; @&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
$lastdate,  scalar(keys %hosts),
            $count, scalar(keys %what),
                             $posts,  $home,  $bytesum  
.</PRE
></DIV
><P
CLASS="para"
>Here's sample output from that program:</P
><PRE
CLASS="programlisting"
><CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    Date      Hosts  Accesses Unidocs   POST    Home       Bytes</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>----------- ------- -------- -------- ------- ------- --------------</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>19/May/1998     353     6447     3074     352      51       16058246</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>20/May/1998    1938    23868     4288     972     350       61879643</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>21/May/1998    1775    27872     6596    1064     376       64613798</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>22/May/1998    1680    21402     4467     735     285       52437374</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>23/May/1998    1128    21260     4944     592     186       55623059</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Grand Total    6050   100849    10090    3715    1248      250612120</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>Use the <A
CLASS="indexterm"
NAME="ch20-idx-1000002689-0"
></A
>Logfile::Apache module from CPAN, shown in <A
CLASS="xref"
HREF="ch20_14.htm"
TITLE="aprept"
>Example 20.10</A
>, to write a similar, but less specific, program. This module is distributed with other Logfile modules in a single Logfile distribution (Logfile-0.115.tar.gz at the time of writing).</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch20-35579"
>Example 20.10: aprept</A
></H4
><PRE
CLASS="programlisting"
>#!/usr/bin/perl -w
# aprept - report on Apache logs

use Logfile::Apache;

$l = Logfile::Apache-&gt;new(
    File  =&gt; &quot;-&quot;,                   # STDIN
    Group =&gt; [ Domain, File ]);

$l-&gt;report(Group =&gt; Domain, Sort =&gt; Records);
$l-&gt;report(Group =&gt; File,   List =&gt; [Bytes,Records]);</PRE
></DIV
><P
CLASS="para"
>The <CODE
CLASS="literal"
>new</CODE
> constructor reads a log file and builds indices internally. Supply a filename with the parameter named <CODE
CLASS="literal"
>File</CODE
> and the fields to index in the <CODE
CLASS="literal"
>Group</CODE
> parameter. The possible fields are <CODE
CLASS="literal"
>Date</CODE
> (date request), <CODE
CLASS="literal"
>Hour</CODE
> (time of day the request was received), <CODE
CLASS="literal"
>File</CODE
> (file requested), <CODE
CLASS="literal"
>User</CODE
> (username parsed from request), <CODE
CLASS="literal"
>Host</CODE
> (hostname requesting the document), and <CODE
CLASS="literal"
>Domain</CODE
> (<CODE
CLASS="literal"
>Host</CODE
> translated into "France", "Germany", etc.).</P
><P
CLASS="para"
>To produce a report on STDOUT, call the <CODE
CLASS="literal"
>report</CODE
> method. Give it the index to use with the <CODE
CLASS="literal"
>Group</CODE
> parameter, and optionally say how to sort (<CODE
CLASS="literal"
>Records</CODE
> is by number of hits, <CODE
CLASS="literal"
>Bytes</CODE
> is by number of bytes transferred) or how to further break it down (by number of bytes or number of records).</P
><P
CLASS="para"
>Here's some sample output:</P
><PRE
CLASS="programlisting"
><CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Domain                  Records </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>===============================</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>US Commercial        222 38.47% </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>US Educational       115 19.93% </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Network               93 16.12% </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Unresolved            54  9.36% </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Australia             48  8.32% </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Canada                20  3.47% </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Mexico                 8  1.39% </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>United Kingdom         6  1.04% </I
></CODE
></B
></CODE
>

<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>File                               Bytes          Records </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>=========================================================</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>/                           13008  0.89%         6  1.04% </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>/cgi-bin/MxScreen           11870  0.81%         2  0.35% </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>/cgi-bin/pickcards          39431  2.70%        48  8.32% </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>/deckmaster                143793  9.83%        21  3.64% </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>/deckmaster/admin           54447  3.72%         3  0.52% </I
></CODE
></B
></CODE
><A
CLASS="indexterm"
NAME="ch20-idx-1000002691-0"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002691-1"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002691-2"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002691-3"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002691-4"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002691-5"
></A
></PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch20-pgfId-1000003550"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for the CPAN module Logfile::Apache; <I
CLASS="filename"
>perlform </I
>(1) and the section on "Formats" in 
<A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch20_13.htm"
TITLE="20.12. Parsing a Web Server Log File"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 20.12. Parsing a Web Server Log File"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch20_15.htm"
TITLE="20.14. Program: htmlsub"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 20.14. Program: htmlsub"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>20.12. Parsing a Web Server Log File</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>20.14. Program: htmlsub</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
