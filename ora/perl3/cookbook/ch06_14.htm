<HTML
><HEAD
>
<TITLE>Recipe 6.13. Approximate Matching (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:34:32Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch06_01.htm"
TITLE="6. Pattern Matching"><LINK
REL="prev"
HREF="ch06_13.htm"
TITLE="6.12. Honoring Locale Settings in Regular Expressions"><LINK
REL="next"
HREF="ch06_15.htm"
TITLE="6.14. Matching from Where the Last Pattern Left Off"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch06_13.htm"
TITLE="6.12. Honoring Locale Settings in Regular Expressions"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.12. Honoring Locale Settings in Regular Expressions"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch06_01.htm"
TITLE="6. Pattern Matching"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch06_15.htm"
TITLE="6.14. Matching from Where the Last Pattern Left Off"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.14. Matching from Where the Last Pattern Left Off"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch06-16952"
>6.13. Approximate Matching</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-1529"
>Problem<A
CLASS="indexterm"
NAME="ch06-idx-1000007645-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007645-1"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007645-2"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007645-3"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007645-4"
></A
></A
></H3
><P
CLASS="para"
>You want to match something fuzzily.</P
><P
CLASS="para"
>Any time you want to be forgiving of misspellings in user input, you want to do fuzzy matching.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-1537"
>Solution</A
></H3
><P
CLASS="para"
>Use the String::Approx module, available from CPAN:</P
><PRE
CLASS="programlisting"
>use String::Approx qw(amatch);

if (amatch(&quot;PATTERN&quot;, @list)) {
    # matched
}

@matches = amatch(&quot;PATTERN&quot;, @list);</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-1557"
>Discussion</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch06-idx-1000007646-0"
></A
>String::Approx calculates the difference between the pattern and each string in the list. If less than a certain number (by default, 10 percent of the length of the pattern) one-character insertions, deletions, or substitutions are required to make the string from the pattern, the string "matches" the pattern. In scalar context, <CODE
CLASS="literal"
>amatch</CODE
> returns the number of successful matches. In list context, it returns those strings that matched.</P
><PRE
CLASS="programlisting"
>use String::Approx qw(amatch);
open(DICT, &quot;/usr/dict/words&quot;)               or die &quot;Can't open dict: $!&quot;;
while(&lt;DICT&gt;) {
    print if amatch(&quot;balast&quot;);
}

<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>ballast</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>balustrade</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>blast</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>blastula</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>sandblast</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>You can also pass options to <CODE
CLASS="literal"
>amatch</CODE
> to control case-insensitivity and the number of insertions, deletions, or substitutions to have. These options are passed in as a list reference; they're fully described in the String::Approx documentation.</P
><P
CLASS="para"
>It must be noted that using the module's matching function seems to run between 10 and 40 times slower than Perl's built-in matching function. Only use String::Approx if you're after fuzziness in your matching that Perl's regular expressions can't provide. <A
CLASS="indexterm"
NAME="ch06-idx-1000007648-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007648-1"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007648-2"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007648-3"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007648-4"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007648-5"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-1589"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for the CPAN module String::Approx; <A
CLASS="xref"
HREF="ch01_17.htm"
TITLE="Soundex Matching"
>Recipe 1.16</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch06_13.htm"
TITLE="6.12. Honoring Locale Settings in Regular Expressions"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.12. Honoring Locale Settings in Regular Expressions"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch06_15.htm"
TITLE="6.14. Matching from Where the Last Pattern Left Off"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.14. Matching from Where the Last Pattern Left Off"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>6.12. Honoring Locale Settings in Regular Expressions</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>6.14. Matching from Where the Last Pattern Left Off</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
