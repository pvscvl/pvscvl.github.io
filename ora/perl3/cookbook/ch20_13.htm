<HTML
><HEAD
>
<TITLE>Recipe 20.12. Parsing a Web Server Log File (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:46:02Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch20_01.htm"
TITLE="20. Web Automation"><LINK
REL="prev"
HREF="ch20_12.htm"
TITLE="20.11. Creating a Robot"><LINK
REL="next"
HREF="ch20_14.htm"
TITLE="20.13. Processing Server Logs"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch20_12.htm"
TITLE="20.11. Creating a Robot"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 20.11. Creating a Robot"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch20_01.htm"
TITLE="20. Web Automation"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch20_14.htm"
TITLE="20.13. Processing Server Logs"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 20.13. Processing Server Logs"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch20-30943"
>20.12. Parsing a Web Server Log File</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch20-pgfId-1327"
>Problem<A
CLASS="indexterm"
NAME="ch20-idx-1000002674-0"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002674-1"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002674-2"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002674-3"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002674-4"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002674-5"
></A
></A
></H3
><P
CLASS="para"
>You want to extract from a web server log file only the information you're interested in.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch20-pgfId-1333"
>Solution</A
></H3
><P
CLASS="para"
>Pull apart the log file as follows:</P
><PRE
CLASS="programlisting"
>while (&lt;LOGFILE&gt;) {
  my ($client, $identuser, $authuser, $date, $time, $tz, $method,
      $url, $protocol, $status, $bytes) =
  /^(\S+) (\S+) (\S+) \[([^:]+):(\d+:\d+:\d+) ([^\]]+) &quot;(\S+) (.*?) (\S+)&quot;
      (\S+) (\S+)$/;
  # ...
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch20-pgfId-1351"
>Discussion</A
></H3
><P
CLASS="para"
>This regular expression pulls apart entries in <A
CLASS="indexterm"
NAME="ch20-idx-1000002682-0"
></A
>Common Log Format, an informal standard that most web servers adhere to. The fields are:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>client</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>IP address or domain name of browser's machine</P
></DD
><DT
CLASS="term"
>identuser</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>If IDENT (RFC 1413) was used, what it returned</P
></DD
><DT
CLASS="term"
>authuser</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>If username/password authentication was used, whom they logged in as</P
></DD
><DT
CLASS="term"
>date</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Date of request (e.g., 01/Mar/1997)</P
></DD
><DT
CLASS="term"
>time</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Time of request (e.g., 12:55:36)</P
></DD
><DT
CLASS="term"
>tz</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Time zone (e.g., -0700)</P
></DD
><DT
CLASS="term"
>method</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Method of request (e.g., GET, POST, or PUT)</P
></DD
><DT
CLASS="term"
>url</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>URL in request (e.g., <EM
CLASS="emphasis"
>/~user/index.html</EM
>)</P
></DD
><DT
CLASS="term"
>protocol</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>HTTP/1.0 or HTTP/1.1</P
></DD
><DT
CLASS="term"
>status</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returned status (200 is okay, 500 is server error)</P
></DD
><DT
CLASS="term"
>bytes</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Number of bytes returned (could be <CODE
CLASS="literal"
>&quot;-&quot;</CODE
> for errors, redirects, and other non-document transfers)</P
></DD
></DL
><P
CLASS="para"
>Other formats include the referrer and agent information. The pattern needs only minor changes for it to work with other log file formats. Watch out that spaces in the URL field are not escaped. This means that we can't use <CODE
CLASS="literal"
>\S*</CODE
> to extract the URL. <CODE
CLASS="literal"
>.*</CODE
> would cause the regex to match the entire string and then backtrack until it could satisfy the rest of the pattern. We use <CODE
CLASS="literal"
>.*?</CODE
> and anchor the pattern to the end of the string with <CODE
CLASS="literal"
>$</CODE
> to make the regular expression engine match nothing and then add characters until the entire pattern is satisfied.<A
CLASS="indexterm"
NAME="ch20-idx-1000002684-0"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002684-1"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002684-2"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002684-3"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch20-pgfId-1385"
>See Also</A
></H3
><P
CLASS="para"
>The CLF spec at 
<A
CLASS="systemitem.url"
HREF="../../../../../../www.w3.org/Daemon/User/Config/Logging.html"
>http://www.w3.org/Daemon/User/Config/Logging.html</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch20_12.htm"
TITLE="20.11. Creating a Robot"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 20.11. Creating a Robot"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch20_14.htm"
TITLE="20.13. Processing Server Logs"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 20.13. Processing Server Logs"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>20.11. Creating a Robot</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>20.13. Processing Server Logs</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
