<HTML
><HEAD
>
<TITLE>Recipe 16.15. Installing a Signal Handler (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:44:09Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch16_01.htm"
TITLE="16. Process Management and Communication"><LINK
REL="prev"
HREF="ch16_15.htm"
TITLE="16.14. Sending a Signal"><LINK
REL="next"
HREF="ch16_17.htm"
TITLE="16.16. Temporarily Overriding a Signal Handler"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch16_15.htm"
TITLE="16.14. Sending a Signal"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 16.14. Sending a Signal"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch16_01.htm"
TITLE="16. Process Management and Communication"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch16_17.htm"
TITLE="16.16. Temporarily Overriding a Signal Handler"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 16.16. Temporarily Overriding a Signal Handler"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch16-31227"
>16.15. Installing a Signal Handler</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch16-pgfId-1000005410"
>Problem</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch16-idx-1000006390-0"
></A
><A
CLASS="indexterm"
NAME="ch16-idx-1000006390-1"
></A
><A
CLASS="indexterm"
NAME="ch16-idx-1000006390-2"
></A
><A
CLASS="indexterm"
NAME="ch16-idx-1000006390-3"
></A
>You want to control how your program responds to signals. You need to do this if you want to catch Ctrl-C, avoid accumulating finished subprocesses, or prevent your process from dying when it writes to a child that has gone away.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch16-pgfId-1000005413"
>Solution</A
></H3
><P
CLASS="para"
>Use the <CODE
CLASS="literal"
>%SIG</CODE
><A
CLASS="indexterm"
NAME="ch16-idx-1000006382-0"
></A
> hash to install your own handler by name or by code reference:</P
><PRE
CLASS="programlisting"
>$SIG{QUIT} = \&amp;got_sig_quit;     # call &amp;got_sig_quit for every SIGQUIT 
$SIG{PIPE} = 'got_sig_pipe';     # call main::got_sig_pipe for every SIGPIPE 
$SIG{INT}  = sub { $ouch++ };    # increment $ouch for every SIGINT</PRE
><P
CLASS="para"
><CODE
CLASS="literal"
>%SIG</CODE
> also lets you ignore a signal:</P
><PRE
CLASS="programlisting"
>$SIG{INT} = 'IGNORE';            # ignore the signal INT</PRE
><P
CLASS="para"
>It also restores handling for that signal to the default:</P
><PRE
CLASS="programlisting"
>$SIG{STOP} = 'DEFAULT';          # restore default STOP signal handling</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch16-pgfId-1000005423"
>Discussion</A
></H3
><P
CLASS="para"
>Perl uses the <CODE
CLASS="literal"
>%SIG</CODE
> hash to control what happens when signals are received. Each key in <CODE
CLASS="literal"
>%SIG</CODE
> corresponds to a signal. Each value is the action to take when Perl receives the corresponding signal. Perl provides two special behaviors: <CODE
CLASS="literal"
>&quot;IGNORE&quot;</CODE
> to take no action when a particular signal is received, and <CODE
CLASS="literal"
>&quot;DEFAULT&quot;</CODE
> to perform the default Unix action for that signal.</P
><P
CLASS="para"
>Although a C programmer might think of a signal as SIGINT, Perl uses just INT. Perl figures you only use signal names in functions that deal with signals, so the SIG prefix is redundant. This means that you'll assign to <CODE
CLASS="literal"
>$SIG{CHLD}</CODE
> to change what your process does when it gets a SIGCHLD.</P
><P
CLASS="para"
>If you want to run your own code when a given signal is received, you have two choices of what to put in the hash: either a code reference or a subroutine name. (This means you can't name a signal handler IGNORE or DEFAULT if you store the string, but they'd be mighty strange names for signal handlers anyway.) If you use a subroutine name that isn't qualified by a package, Perl will interpret this name to be a function in the <CODE
CLASS="literal"
>main::</CODE
> package, not one in the package in which the handler was installed. A code reference refers to a subroutine in a particular package, so it is a better choice.</P
><P
CLASS="para"
>Perl calls your handler code with a single argument: the name of the signal that triggered it, like <CODE
CLASS="literal"
>&quot;INT&quot;</CODE
> or <CODE
CLASS="literal"
>&quot;USR1&quot;</CODE
>. Returning from a signal handler takes you back to whatever you were doing when the signal hit.</P
><P
CLASS="para"
>Perl defines two special signals, <CODE
CLASS="literal"
>__DIE__</CODE
><A
CLASS="indexterm"
NAME="ch16-idx-1000007928-0"
></A
><A
CLASS="indexterm"
NAME="ch16-idx-1000007928-1"
></A
> and <CODE
CLASS="literal"
>__WARN__</CODE
>, whose handlers are called whenever a Perl program emits warnings through <CODE
CLASS="literal"
>warn</CODE
> or dies through <CODE
CLASS="literal"
>die</CODE
>. This lets you catch such warnings, and selectively trap or propagate them. The <CODE
CLASS="literal"
>die</CODE
> and <CODE
CLASS="literal"
>warn</CODE
> handlers are disabled while they run, so you can safely <CODE
CLASS="literal"
>die</CODE
> from a <CODE
CLASS="literal"
>__DIE__</CODE
> handler or <CODE
CLASS="literal"
>warn</CODE
> from a <CODE
CLASS="literal"
>__WARN__</CODE
> handler without fear of recursion.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch16-pgfId-1000005550"
>See Also</A
></H3
><P
CLASS="para"
>The <A
CLASS="olink"
HREF="../prog/ch06_02.htm"
>"Signals"</A
> sections in <A
CLASS="olink"
HREF="../prog/ch06_01.htm"
>Chapter 6</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> and in <I
CLASS="filename"
>perlipc </I
>(1); your system's <I
CLASS="filename"
>sigaction </I
>(2), <I
CLASS="filename"
>signal </I
>(3), and <I
CLASS="filename"
>kill </I
>(2) manpages (if you have them)</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch16_15.htm"
TITLE="16.14. Sending a Signal"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 16.14. Sending a Signal"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch16_17.htm"
TITLE="16.16. Temporarily Overriding a Signal Handler"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 16.16. Temporarily Overriding a Signal Handler"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>16.14. Sending a Signal</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>16.16. Temporarily Overriding a Signal Handler</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
