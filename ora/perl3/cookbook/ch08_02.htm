<HTML
><HEAD
>
<TITLE>Recipe 8.1. Reading Lines with Continuation Characters (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:38:23Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch08_01.htm"
TITLE="8. File Contents"><LINK
REL="prev"
HREF="ch08_01.htm"
TITLE="8.0. Introduction"><LINK
REL="next"
HREF="ch08_03.htm"
TITLE="8.2. Counting Lines (or Paragraphs or Records) in a File"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch08_01.htm"
TITLE="8.0. Introduction"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.0. Introduction"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch08_01.htm"
TITLE="8. File Contents"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch08_03.htm"
TITLE="8.2. Counting Lines (or Paragraphs or Records) in a File"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.2. Counting Lines (or Paragraphs or Records) in a File"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch08-chap08_reading_0"
>8.1. Reading Lines with Continuation Characters</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch08-pgfId-180"
>Problem<A
CLASS="indexterm"
NAME="ch08-idx-1000004612-0"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-1000004612-1"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-1000004612-2"
></A
></A
></H3
><P
CLASS="para"
>You have a file with long lines split over two or more lines, with backslashes to indicate that a continuation line follows. You want to rejoin those split lines. Makefiles, shell scripts, and many other scripting or configuration languages let you break a long line into several shorter ones in this fashion.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch08-pgfId-186"
>Solution</A
></H3
><P
CLASS="para"
>Build up the complete lines one at a time until reaching one without a backslash:</P
><PRE
CLASS="programlisting"
>while (defined($line = &lt;FH&gt;) ) {
    chomp $line;
    if ($line =~ s/\\$//) {
        $line .= &lt;FH&gt;;
        redo unless eof(FH);
    }
    # process full record in $line here
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch08-pgfId-208"
>Discussion</A
></H3
><P
CLASS="para"
>Here's an example input file:</P
><PRE
CLASS="programlisting"
>DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) \
        $(TEXINFOS) $(INFOS) $(MANS) $(DATA)
DEP_DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) \
        $(TEXINFOS) $(INFO_DEPS) $(MANS) $(DATA) \
        $(EXTRA_DIST)</PRE
><P
CLASS="para"
>You'd like to process that file with the escaped newlines ignored. That way the first record would in this case be the first two lines, the second record the next three lines, etc.</P
><P
CLASS="para"
>Here's how the algorithm works. The <CODE
CLASS="literal"
>while</CODE
> loop reads lines, which may or may not be complete records &nbsp;-  they might end in backslash (and a newline). The substitution operator <CODE
CLASS="literal"
>s///</CODE
> tries to remove a trailing backslash. If the substitution fails, we've found a line without a backslash at the end. Otherwise, read another record, concatenate it onto the accumulating <CODE
CLASS="literal"
>$line</CODE
> variable, and use <CODE
CLASS="literal"
>redo</CODE
> to jump back to just inside the opening brace of the <CODE
CLASS="literal"
>while</CODE
> loop. This lands us back on the <CODE
CLASS="literal"
>chomp</CODE
>.</P
><P
CLASS="para"
>A common problem with files in this format is invisible blanks between the backslash and end of line. It would be more forgiving if the substitute were like this:</P
><PRE
CLASS="programlisting"
>if ($line =~ s/\\\s*$//) { 
    # as before
}</PRE
><P
CLASS="para"
>Unfortunately, even if your program is forgiving, others doubtlessly aren't. Just remember to be liberal in what you accept and conservative in what you produce. <A
CLASS="indexterm"
NAME="ch08-idx-1000004614-0"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-1000004614-1"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-1000004614-2"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch08-pgfId-238"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>chomp</CODE
> function in <I
CLASS="filename"
>perlfunc </I
>(1) and in <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; the redo keyword in the "Loop Control" sections of <I
CLASS="filename"
>perlsyn</I
> (1) and <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch08_01.htm"
TITLE="8.0. Introduction"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.0. Introduction"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch08_03.htm"
TITLE="8.2. Counting Lines (or Paragraphs or Records) in a File"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.2. Counting Lines (or Paragraphs or Records) in a File"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>8.0. Introduction</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>8.2. Counting Lines (or Paragraphs or Records) in a File</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
