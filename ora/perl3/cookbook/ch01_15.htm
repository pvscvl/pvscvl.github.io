<HTML
><HEAD
>
<TITLE>Recipe 1.14. Trimming Blanks from the Ends of a String (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:29:20Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch01_01.htm"
TITLE="1. Strings"><LINK
REL="prev"
HREF="ch01_14.htm"
TITLE="1.13. Escaping Characters"><LINK
REL="next"
HREF="ch01_16.htm"
TITLE="1.15. Parsing Comma-Separated Data"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch01_14.htm"
TITLE="1.13. Escaping Characters"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.13. Escaping Characters"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch01_01.htm"
TITLE="1. Strings"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch01_16.htm"
TITLE="1.15. Parsing Comma-Separated Data"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.15. Parsing Comma-Separated Data"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch01-34997"
>1.14. Trimming Blanks from the Ends of a String</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-1589"
>Problem <A
CLASS="indexterm"
NAME="ch01-idx-1000010329-0"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010329-1"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010329-2"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010329-3"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010329-4"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010329-5"
></A
></A
></H3
><P
CLASS="para"
>You have read a string that may have leading or trailing whitespace, and you want to remove it.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-1595"
>Solution</A
></H3
><P
CLASS="para"
>Use a pair of pattern substitutions to get rid of them:</P
><PRE
CLASS="programlisting"
>$string =~ s/^\s+//;
$string =~ s/\s+$//;</PRE
><P
CLASS="para"
>You can also write a function that returns the new value:</P
><PRE
CLASS="programlisting"
>$string = trim($string);
@many   = trim(@many);

sub trim {
    my @out = @_;
    for (@out) {
        s/^\s+//;
        s/\s+$//;
    }
    return wantarray ? @out : $out[0];
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-1629"
>Discussion</A
></H3
><P
CLASS="para"
>This problem has various solutions, but this is the most efficient for the common case.</P
><P
CLASS="para"
>If you want to remove the last character from the string, use the <CODE
CLASS="literal"
>chop</CODE
> function. Version 5 added <CODE
CLASS="literal"
>chomp</CODE
>, which removes the last character if and only if it is contained in the <CODE
CLASS="literal"
>$/</CODE
> variable, &quot;<CODE
CLASS="literal"
>\n</CODE
>&quot; by default. These are often used to remove the trailing newline from input:</P
><PRE
CLASS="programlisting"
># print what's typed, but surrounded by &gt;&lt; symbols
while(&lt;STDIN&gt;) {
    chomp;
    print &quot;&gt;$_&lt;\n&quot;;
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-1647"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>s///</CODE
> operator in <EM
CLASS="emphasis"
>perlre </EM
>(1) and <I
CLASS="filename"
>perlop </I
>(1) and the <A
CLASS="olink"
HREF="../prog/ch02_04.htm"
>"Pattern Matching"</A
> section of <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; the <CODE
CLASS="literal"
>chomp</CODE
> and <CODE
CLASS="literal"
>chop</CODE
> functions in <EM
CLASS="emphasis"
>perlfunc</EM
> (1) and <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; we trim leading and trailing whitespace in the <CODE
CLASS="literal"
>getnum</CODE
> function in <A
CLASS="xref"
HREF="ch02_02.htm"
TITLE="Checking Whether a String Is a Valid Number"
>Recipe 2.1</A
>.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch01_14.htm"
TITLE="1.13. Escaping Characters"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.13. Escaping Characters"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch01_16.htm"
TITLE="1.15. Parsing Comma-Separated Data"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.15. Parsing Comma-Separated Data"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>1.13. Escaping Characters</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>1.15. Parsing Comma-Separated Data</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
