<HTML
><HEAD
>
<TITLE>Recipe 8.3. Processing Every Word in a File (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:38:39Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch08_01.htm"
TITLE="8. File Contents"><LINK
REL="prev"
HREF="ch08_03.htm"
TITLE="8.2. Counting Lines (or Paragraphs or Records) in a File"><LINK
REL="next"
HREF="ch08_05.htm"
TITLE="8.4. Reading a File Backwards by Line or Paragraph"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch08_03.htm"
TITLE="8.2. Counting Lines (or Paragraphs or Records) in a File"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.2. Counting Lines (or Paragraphs or Records) in a File"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch08_01.htm"
TITLE="8. File Contents"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch08_05.htm"
TITLE="8.4. Reading a File Backwards by Line or Paragraph"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.4. Reading a File Backwards by Line or Paragraph"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch08-chap08_processing_0"
>8.3. Processing Every Word in a File</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch08-pgfId-324"
>Problem<A
CLASS="indexterm"
NAME="ch08-idx-1000004629-0"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-1000004629-1"
></A
></A
></H3
><P
CLASS="para"
>You need to do something to every word in a file, similar to the <CODE
CLASS="literal"
>foreach</CODE
> function of <EM
CLASS="emphasis"
>csh</EM
>.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch08-pgfId-330"
>Solution</A
></H3
><P
CLASS="para"
>Either <CODE
CLASS="literal"
>split</CODE
><A
CLASS="indexterm"
NAME="ch08-idx-1000004635-0"
></A
> each line on whitespace:</P
><PRE
CLASS="programlisting"
>while (&lt;&gt;) {
    for $chunk (split) {
        # do something with $chunk
    }
}</PRE
><P
CLASS="para"
>Or use the <CODE
CLASS="literal"
>m//g</CODE
> operator to pull out one chunk at a time:</P
><PRE
CLASS="programlisting"
>while (&lt;&gt;) {
    while ( /(\w[\w'-]*)/g ) {
        # do something with $1
    }
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch08-pgfId-358"
>Discussion</A
></H3
><P
CLASS="para"
>Decide what you mean by "word." Sometimes you want anything but whitespace, sometimes you only want program identifiers, and sometimes you want English words. Your definition governs which regular expression to use.</P
><P
CLASS="para"
>The preceding two approaches work differently. Patterns are used in the first approach to decide what is <EM
CLASS="emphasis"
>not</EM
> a word. In the second, they're used to decide what <EM
CLASS="emphasis"
>is</EM
> a word.</P
><P
CLASS="para"
>With these techniques, it's easy to make a word frequency counter. Use a hash to store how many times each word has been seen:</P
><PRE
CLASS="programlisting"
># Make a word frequency count
%seen = ();
while (&lt;&gt;) {
    while ( /(\w['\w-]*)/g ) {
        $seen{lc $1}++;
    }
}

# output hash in a descending numeric sort of its values
foreach $word ( sort { $seen{$b} &lt;=&gt; $seen{$a} } keys %seen) {
    printf &quot;%5d %s\n&quot;, $seen{$word}, $word;
}</PRE
><P
CLASS="para"
>To make the example program count line frequency instead of word frequency, omit the second <CODE
CLASS="literal"
>while</CODE
> loop and do <CODE
CLASS="literal"
>$seen{lc</CODE
> <CODE
CLASS="literal"
>$_}++</CODE
> instead:</P
><PRE
CLASS="programlisting"
># Line frequency count
%seen = ();
while (&lt;&gt;) {
    $seen{lc $_}++;
}
foreach $line ( sort { $seen{$b} &lt;=&gt; $seen{$a} } keys %seen ) {
    printf &quot;%5d %s&quot;, $seen{$line}, $line;
}</PRE
><P
CLASS="para"
>Odd things that may need to be considered as words include "M.I.T.", "Micro$oft", "o'clock", "49ers", "street-wise", "and/or", "&amp;", "c/o", "St.", "Tschüß", and "Niño". Bear this in mind when you choosing a pattern to match. The last two require you to place a <CODE
CLASS="literal"
>use</CODE
> <CODE
CLASS="literal"
>locale</CODE
> in your program and then employ <CODE
CLASS="literal"
>\w</CODE
> for a word character in the current locale.<A
CLASS="indexterm"
NAME="ch08-idx-1000004631-0"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-1000004631-1"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch08-pgfId-414"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>split</CODE
> function in <I
CLASS="filename"
>perlfunc </I
>(1) and in <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; <A
CLASS="xref"
HREF="ch06_04.htm"
TITLE="Matching Words"
>Recipe 6.3</A
>; <A
CLASS="xref"
HREF="ch06_24.htm"
TITLE="Regular Expression Grabbag"
>Recipe 6.23</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch08_03.htm"
TITLE="8.2. Counting Lines (or Paragraphs or Records) in a File"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.2. Counting Lines (or Paragraphs or Records) in a File"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch08_05.htm"
TITLE="8.4. Reading a File Backwards by Line or Paragraph"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.4. Reading a File Backwards by Line or Paragraph"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>8.2. Counting Lines (or Paragraphs or Records) in a File</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>8.4. Reading a File Backwards by Line or Paragraph</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
