<HTML
><HEAD
>
<TITLE>Recipe 7.20. Copying Filehandles (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:37:36Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch07_01.htm"
TITLE="7. File Access"><LINK
REL="prev"
HREF="ch07_20.htm"
TITLE="7.19. Opening and Closing File Descriptors by Number"><LINK
REL="next"
HREF="ch07_22.htm"
TITLE="7.21. Program: netlock"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch07_20.htm"
TITLE="7.19. Opening and Closing File Descriptors by Number"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.19. Opening and Closing File Descriptors by Number"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch07_01.htm"
TITLE="7. File Access"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch07_22.htm"
TITLE="7.21. Program: netlock"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.21. Program: netlock"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch07-chap07_copying_0"
>7.20. Copying Filehandles</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch07-pgfId-1928"
>Problem<A
CLASS="indexterm"
NAME="ch07-idx-1000009796-0"
></A
><A
CLASS="indexterm"
NAME="ch07-idx-1000009796-1"
></A
><A
CLASS="indexterm"
NAME="ch07-idx-1000009796-2"
></A
><A
CLASS="indexterm"
NAME="ch07-idx-1000009796-3"
></A
></A
></H3
><P
CLASS="para"
>You want to make a copy of a filehandle.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch07-pgfId-1934"
>Solution</A
></H3
><P
CLASS="para"
>To create an alias for a filehandle, say:</P
><PRE
CLASS="programlisting"
>*ALIAS = *ORIGINAL;</PRE
><P
CLASS="para"
>Use <CODE
CLASS="literal"
>open</CODE
> with the <CODE
CLASS="literal"
>&amp;</CODE
> mode to create an independent copy of the file descriptor for the filehandle:</P
><PRE
CLASS="programlisting"
>open(OUTCOPY, &quot;&gt;&amp;STDOUT&quot;)   or die &quot;Couldn't dup STDOUT: $!&quot;;
open(INCOPY,  &quot;&lt;&amp;STDIN&quot; )   or die &quot;Couldn't dup STDIN : $!&quot;;</PRE
><P
CLASS="para"
>Use <CODE
CLASS="literal"
>open</CODE
> with the <CODE
CLASS="literal"
>&amp;=</CODE
> mode to create an alias for that filehandle's file descriptor:</P
><PRE
CLASS="programlisting"
>open(OUTALIAS, &quot;&gt;&amp;=STDOUT&quot;) or die &quot;Couldn't alias STDOUT: $!&quot;;
open(INALIAS,  &quot;&lt;&amp;=STDIN&quot;)  or die &quot;Couldn't alias STDIN : $!&quot;;
open(BYNUMBER, &quot;&gt;&amp;=5&quot;)      or die &quot;Couldn't alias file descriptor 5: $!&quot;;</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch07-pgfId-1956"
>Discussion</A
></H3
><P
CLASS="para"
>If you create an alias for a filehandle with <A
CLASS="indexterm"
NAME="ch07-idx-1000012077-0"
></A
>typeglobs, only one Perl I/O object is still being accessed. If you close one of these aliased filehandles, the I/O object is closed. Any subsequent attempt to use a copy of that filehandle will give you an error like <CODE
CLASS="literal"
>&quot;print</CODE
> <CODE
CLASS="literal"
>on</CODE
> <CODE
CLASS="literal"
>closed</CODE
> <CODE
CLASS="literal"
>filehandle&quot;</CODE
>. When alternating access through the aliased filehandles, writes work as you'd expect because there's no duplicated stdio data structure to get out of sync.</P
><P
CLASS="para"
>If you create a copy of a file descriptor with <CODE
CLASS="literal"
>open(COPY,</CODE
> <CODE
CLASS="literal"
>&quot;&gt;&amp;HANDLE&quot;)</CODE
>, you're really calling the <I
CLASS="filename"
>dup</I
><EM
CLASS="emphasis"
> </EM
>(2) system call. You get two independent file descriptors whose file position, locks, and flags are shared, but which have independent stdio buffers. Closing one filehandle doesn't affect its copy. Simultaneously accessing the file through both filehandles is a recipe for disaster. Instead, this technique is normally used to save and restore STDOUT and STDERR:</P
><PRE
CLASS="programlisting"
># take copies of the file descriptors
open(OLDOUT, &quot;&gt;&amp;STDOUT&quot;);
open(OLDERR, &quot;&gt;&amp;STDERR&quot;);

# redirect stdout and stderr
open(STDOUT, &quot;&gt; /tmp/program.out&quot;)  or die &quot;Can't redirect stdout: $!&quot;;
open(STDERR, &quot;&gt;&amp;STDOUT&quot;)            or die &quot;Can't dup stdout: $!&quot;;

# run the program
system($joe_random_program);

# close the redirected filehandles
close(STDOUT)                       or die &quot;Can't close STDOUT: $!&quot;;
close(STDERR)                       or die &quot;Can't close STDERR: $!&quot;;

# restore stdout and stderr
open(STDERR, &quot;&gt;&amp;OLDERR&quot;)            or die &quot;Can't restore stderr: $!&quot;;
open(STDOUT, &quot;&gt;&amp;OLDOUT&quot;)            or die &quot;Can't restore stdout: $!&quot;;

# avoid leaks by closing the independent copies
close(OLDOUT)                       or die &quot;Can't close OLDOUT: $!&quot;;
close(OLDERR)                       or die &quot;Can't close OLDERR: $!&quot;;</PRE
><P
CLASS="para"
>If you create an alias of a file descriptor using <CODE
CLASS="literal"
>open(ALIAS,</CODE
> <CODE
CLASS="literal"
>&quot;&gt;&amp;=HANDLE&quot;</CODE
>), you're really calling the <I
CLASS="filename"
>fdopen</I
><EM
CLASS="emphasis"
> </EM
>(3) stdio function. You get a single file descriptor with two stdio buffers accessed through two filehandles. Closing one filehandle closes the file descriptor of any aliases, but not their filehandles &nbsp;-  if you tried to <CODE
CLASS="literal"
>print</CODE
> to a filehandle whose alias had been <CODE
CLASS="literal"
>close</CODE
>d, Perl wouldn't give a <CODE
CLASS="literal"
>&quot;print on closed filehandle warning&quot;</CODE
> even though the <CODE
CLASS="literal"
>print</CODE
> didn't succeed. In short, accessing the file through both filehandles is also a recipe for disaster. This is really used only to open a file descriptor by number. See <A
CLASS="xref"
HREF="ch07_20.htm"
TITLE="Opening and Closing File Descriptors by Number"
>Recipe 7.19</A
> for more information on this.<A
CLASS="indexterm"
NAME="ch07-idx-1000009798-0"
></A
><A
CLASS="indexterm"
NAME="ch07-idx-1000009798-1"
></A
><A
CLASS="indexterm"
NAME="ch07-idx-1000009798-2"
></A
><A
CLASS="indexterm"
NAME="ch07-idx-1000009798-3"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch07-pgfId-2010"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>open</CODE
> function in <I
CLASS="filename"
>perlfunc </I
>(1) and in <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; your system's <I
CLASS="filename"
>dup</I
> (2) manpage</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch07_20.htm"
TITLE="7.19. Opening and Closing File Descriptors by Number"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.19. Opening and Closing File Descriptors by Number"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch07_22.htm"
TITLE="7.21. Program: netlock"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.21. Program: netlock"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>7.19. Opening and Closing File Descriptors by Number</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>7.21. Program: netlock</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
