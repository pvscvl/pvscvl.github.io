<HTML
><HEAD
>
<TITLE>Recipe 5.2. Testing for the Presence of a Key in a Hash (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:32:29Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch05_01.htm"
TITLE="5. Hashes"><LINK
REL="prev"
HREF="ch05_02.htm"
TITLE="5.1. Adding an Element to a Hash"><LINK
REL="next"
HREF="ch05_04.htm"
TITLE="5.3. Deleting from a Hash"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch05_02.htm"
TITLE="5.1. Adding an Element to a Hash"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.1. Adding an Element to a Hash"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch05_01.htm"
TITLE="5. Hashes"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch05_04.htm"
TITLE="5.3. Deleting from a Hash"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.3. Deleting from a Hash"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch05-24827"
>5.2. Testing for the Presence of a Key in a Hash</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-130"
>Problem<A
CLASS="indexterm"
NAME="ch05-idx-1000006426-0"
></A
></A
></H3
><P
CLASS="para"
>You need to know whether a hash has a particular key, regardless of any possible associated value.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-136"
>Solution</A
></H3
><P
CLASS="para"
>Use the <CODE
CLASS="literal"
>exists</CODE
> function.</P
><PRE
CLASS="programlisting"
># does %HASH have a value for $KEY ?
if (exists($HASH{$KEY})) {
    # it exists
} else {
    # it doesn't
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-154"
>Discussion</A
></H3
><P
CLASS="para"
>This code uses <CODE
CLASS="literal"
>exists</CODE
> to check whether a key is in the <CODE
CLASS="literal"
>%food_color</CODE
> hash:</P
><PRE
CLASS="programlisting"
># %food_color per the introduction
foreach $name (&quot;Banana&quot;, &quot;Martini&quot;) {
    if (exists $food_color{$name}) {
        print &quot;$name is a food.\n&quot;;
    } else {
        print &quot;$name is a drink.\n&quot;;
    }
}

<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Banana is a food.</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Martini is a drink.</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>The <CODE
CLASS="literal"
>exists</CODE
> function tests whether a key is in the hash. It doesn't test whether the value corresponding to that key is defined, nor whether the value is true or false. We may be splitting hairs, but problems caused by confusing existence, definedness, and truth can multiply like rabbits. Take this code:</P
><PRE
CLASS="programlisting"
>%age = ();
$age{&quot;Toddler&quot;} = 3;
$age{&quot;Unborn&quot;} = 0;
$age{&quot;Phantasm&quot;} = undef;

foreach $thing (&quot;Toddler&quot;, &quot;Unborn&quot;, &quot;Phantasm&quot;, &quot;Relic&quot;) {
    print &quot;$thing: &quot;;
    print &quot;Exists &quot; if exists $age{$thing};
    print &quot;Defined &quot; if defined $age{$thing};
    print &quot;True &quot; if $age{$thing};
    print &quot;\n&quot;;
}

<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Toddler: Exists Defined True </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Unborn: Exists Defined </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Phantasm: Exists </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Relic: </I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
><CODE
CLASS="literal"
>$age{&quot;Toddler&quot;}</CODE
> passes the existence, definedness, and truth tests. It exists because we gave <CODE
CLASS="literal"
>&quot;Toddler&quot;</CODE
> a value in the hash, it's defined because that value isn't <CODE
CLASS="literal"
>undef</CODE
>, and it's true because the value isn't one of Perl's false values.</P
><P
CLASS="para"
><CODE
CLASS="literal"
>$age{&quot;Unborn&quot;}</CODE
> passes only the existence and definedness tests. It exists because we gave <CODE
CLASS="literal"
>&quot;Unborn&quot;</CODE
> a value in the hash, and it's defined because that value isn't <CODE
CLASS="literal"
>undef</CODE
>. It isn't <EM
CLASS="emphasis"
>true</EM
>, however, because <CODE
CLASS="literal"
>0</CODE
> is one of Perl's false values.</P
><P
CLASS="para"
><CODE
CLASS="literal"
>$age{&quot;Phantasm&quot;}</CODE
> passes only the existence test. It exists because we gave <CODE
CLASS="literal"
>&quot;Phantasm&quot;</CODE
> a value in the hash. Because that value was <CODE
CLASS="literal"
>undef</CODE
>, it doesn't pass the definedness test. Because <CODE
CLASS="literal"
>undef</CODE
> is also one of Perl's false values, it doesn't pass the truth test either.</P
><P
CLASS="para"
><CODE
CLASS="literal"
>$age{&quot;Relic&quot;}</CODE
> passes none of the tests. We didn't put a value for <CODE
CLASS="literal"
>&quot;Relic&quot;</CODE
> into the hash, so the existence test fails. Because we didn't put a value in, <CODE
CLASS="literal"
>$age{&quot;Relic&quot;}</CODE
> is <CODE
CLASS="literal"
>undef</CODE
> whenever we try to access it. We know from <CODE
CLASS="literal"
>&quot;Phantasm&quot;</CODE
> that <CODE
CLASS="literal"
>undef</CODE
> fails the definedness and truth tests.</P
><P
CLASS="para"
>Sometimes it's useful to store <CODE
CLASS="literal"
>undef</CODE
> in a hash. This indicates "I've seen this key, but it didn't have a meaningful value associated with it." Take, for instance, a program to look up file sizes given a list of files as input. This version tries to skip files we've seen before, but it doesn't skip zero-length files, and it doesn't skip files that we've seen before but don't exist.</P
><PRE
CLASS="programlisting"
>%size = ();
while (&lt;&gt;) {
    chomp;
    next if $size{$_};              # WRONG attempt to skip
    $size{$_} = -s $_;
}</PRE
><P
CLASS="para"
>If we change the incorrect line to call <CODE
CLASS="literal"
>exists</CODE
>, we also skip files that couldn't be <CODE
CLASS="literal"
>stat</CODE
>ted, instead of repeatedly trying (and failing) to look them up:</P
><PRE
CLASS="programlisting"
>    next if exists $size{$_};</PRE
><P
CLASS="para"
>The food and drink code above assumes that which is not food must be a drink. This is a dangerous assumption to make in the real world.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-250"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>exists</CODE
> and <CODE
CLASS="literal"
>defined</CODE
> functions in <I
CLASS="filename"
>perlfunc </I
>(1) and <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; the discussion of truth in the "Scalar Values" section of <I
CLASS="filename"
>perldata </I
>(1), and the <A
CLASS="olink"
HREF="../prog/ch02_03.htm"
>"Boolean Context"</A
> section of <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>.<A
CLASS="indexterm"
NAME="ch05-idx-1000006425-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006425-1"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch05_02.htm"
TITLE="5.1. Adding an Element to a Hash"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.1. Adding an Element to a Hash"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch05_04.htm"
TITLE="5.3. Deleting from a Hash"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.3. Deleting from a Hash"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>5.1. Adding an Element to a Hash</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>5.3. Deleting from a Hash</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
