<HTML
><HEAD
>
<TITLE>Recipe 4.11. Processing Multiple Elements of an Array (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:31:57Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch04_01.htm"
TITLE="4. Arrays"><LINK
REL="prev"
HREF="ch04_11.htm"
TITLE="4.10. Reversing an Array"><LINK
REL="next"
HREF="ch04_13.htm"
TITLE="4.12. Finding the First List Element That Passes a Test"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch04_11.htm"
TITLE="4.10. Reversing an Array"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 4.10. Reversing an Array"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch04_01.htm"
TITLE="4. Arrays"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch04_13.htm"
TITLE="4.12. Finding the First List Element That Passes a Test"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 4.12. Finding the First List Element That Passes a Test"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch04-chap04_processing_0"
>4.11. Processing Multiple Elements of an Array</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch04-pgfId-929"
>Problem <A
CLASS="indexterm"
NAME="ch04-idx-1000006694-0"
></A
><A
CLASS="indexterm"
NAME="ch04-idx-1000006694-1"
></A
></A
></H3
><P
CLASS="para"
>You want to <CODE
CLASS="literal"
>pop</CODE
><A
CLASS="indexterm"
NAME="ch04-idx-1000006708-0"
></A
><A
CLASS="indexterm"
NAME="ch04-idx-1000006708-1"
></A
> or <CODE
CLASS="literal"
>shift</CODE
> multiple elements at a time.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch04-pgfId-935"
>Solution</A
></H3
><P
CLASS="para"
>Use <CODE
CLASS="literal"
>splice</CODE
>:<A
CLASS="indexterm"
NAME="ch04-idx-1000006707-0"
></A
></P
><PRE
CLASS="programlisting"
># remove $N elements from front of @ARRAY (shift $N)
@FRONT = splice(@ARRAY, 0, $N);

# remove $N elements from the end of the array (pop $N)
@END = splice(@ARRAY, -$N);</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch04-pgfId-951"
>Discussion</A
></H3
><P
CLASS="para"
>It's often convenient to wrap these as functions:</P
><PRE
CLASS="programlisting"
>sub shift2 (\@) {
    return splice(@{$_[0]}, 0, 2);
}

sub pop2 (\@) {
    return splice(@{$_[0]}, -2);
}</PRE
><P
CLASS="para"
>This makes their behavior more apparent when you use them:</P
><PRE
CLASS="programlisting"
>@friends = qw(Peter Paul Mary Jim Tim);
($this, $that) = shift2(@friends);
# $this contains Peter, $that has Paul, and
# @friends has Mary, Jim, and Tim

@beverages = qw(Dew Jolt Cola Sprite Fresca);
@pair = pop2(@beverages);
# $pair[0] contains Sprite, $pair[1] has Fresca,
# and @beverages has (Dew, Jolt, Cola)</PRE
><P
CLASS="para"
><CODE
CLASS="literal"
>splice</CODE
> returns the elements removed from the array, so <CODE
CLASS="literal"
>shift2</CODE
> replaces the first two elements in <CODE
CLASS="literal"
>@ARRAY</CODE
> with nothing (i.e., deletes them) and returns the two elements it deleted. In <CODE
CLASS="literal"
>pop2</CODE
>, the last two elements at end of the array are removed and returned.</P
><P
CLASS="para"
>These two functions are prototyped to take an array reference as their argument to better mimic the built-in <CODE
CLASS="literal"
>shift</CODE
> and <CODE
CLASS="literal"
>pop</CODE
> functions. The caller doesn't pass in an explicit reference using a backslash. Instead, the compiler, having seen the array reference prototype, arranges to pass the array by reference anyway. Advantages to this approach include efficiency, transparency, and compile-time parameter checking. One disadvantage is that the thing passed in must look like a real array with a leading <CODE
CLASS="literal"
>@</CODE
> sign, not just a scalar containing an array reference. If it did, you'd have to prepend an <CODE
CLASS="literal"
>@</CODE
>, making it less transparent:</P
><PRE
CLASS="programlisting"
>$line[5] = \@list;
@got = pop2( @{ $line[5] } );</PRE
><P
CLASS="para"
>This is another example of where a proper array and not a mere list is called for. The <CODE
CLASS="literal"
>\@</CODE
> prototype requires that whatever goes in that argument slot be an array. <CODE
CLASS="literal"
>$line[5]</CODE
> isn't an array, but an array reference. That's why we need the "extra" <CODE
CLASS="literal"
>@</CODE
> sign.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch04-pgfId-1001"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>splice</CODE
> function in <EM
CLASS="emphasis"
>perlfunc </EM
>(1) and <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; the "Prototypes" sections of <I
CLASS="filename"
>perlsub </I
>(1) and <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; we use <CODE
CLASS="literal"
>splice</CODE
> in <A
CLASS="xref"
HREF="ch04_10.htm"
TITLE="Appending One Array to Another"
>Recipe 4.9</A
> <CODE
CLASS="literal"
></CODE
><A
CLASS="indexterm"
NAME="ch04-idx-1000007437-0"
></A
><A
CLASS="indexterm"
NAME="ch04-idx-1000007437-1"
></A
><A
CLASS="indexterm"
NAME="ch04-idx-1000007438-0"
></A
><A
CLASS="indexterm"
NAME="ch04-idx-1000007438-1"
></A
><A
CLASS="indexterm"
NAME="ch04-idx-1000007438-2"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch04_11.htm"
TITLE="4.10. Reversing an Array"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 4.10. Reversing an Array"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch04_13.htm"
TITLE="4.12. Finding the First List Element That Passes a Test"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 4.12. Finding the First List Element That Passes a Test"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>4.10. Reversing an Array</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>4.12. Finding the First List Element That Passes a Test</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
