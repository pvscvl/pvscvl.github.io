<HTML
><HEAD
>
<TITLE>Recipe 11.10. Reading and Writing Hash Records to Text Files (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:40:49Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch11_01.htm"
TITLE="11. References and Records"><LINK
REL="prev"
HREF="ch11_10.htm"
TITLE="11.9. Constructing Records"><LINK
REL="next"
HREF="ch11_12.htm"
TITLE="11.11. Printing Data Structures"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch11_10.htm"
TITLE="11.9. Constructing Records"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 11.9. Constructing Records"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch11_01.htm"
TITLE="11. References and Records"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch11_12.htm"
TITLE="11.11. Printing Data Structures"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 11.11. Printing Data Structures"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch11-chap11_reading_0"
>11.10. Reading and Writing Hash Records to Text Files</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch11-pgfId-1090"
>Problem<A
CLASS="indexterm"
NAME="ch11-idx-1000004849-0"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004849-1"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004849-2"
></A
></A
></H3
><P
CLASS="para"
>You want to read or write hash records to text files.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch11-pgfId-1096"
>Solution</A
></H3
><P
CLASS="para"
>Use a simple file format with one field per line:</P
><PRE
CLASS="programlisting"
>FieldName: Value</PRE
><P
CLASS="para"
>and separate records with blank lines.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch11-pgfId-1106"
>Discussion</A
></H3
><P
CLASS="para"
>If you have an array of records that you'd like to store and retrieve from a text file, you can use a simple format based on mail headers. The format's simplicity requires that the keys have neither colons nor newlines, and the values not have newlines.</P
><P
CLASS="para"
>This code writes them out:</P
><PRE
CLASS="programlisting"
>foreach $record (@Array_of_Records) { 
    for $key (sort keys %$record) {
        print &quot;$key: $record-&gt;{$key}\n&quot;;
    } 
    print &quot;\n&quot;;
}</PRE
><P
CLASS="para"
>Reading them in is easy, too.</P
><PRE
CLASS="programlisting"
>$/ = &quot;&quot;;                # paragraph read mode
while (&lt;&gt;) {
    my @fields = split /^([^:]+):\s*/m;
    shift @fields;      # for leading null field
    push(@Array_of_Records, { map /(.*)/, @fields });
} </PRE
><P
CLASS="para"
>The <CODE
CLASS="literal"
>split</CODE
> acts upon <CODE
CLASS="literal"
>$_ </CODE
>, its default second argument, which contains a full paragraph. The pattern looks for start of line (not just start of record, thanks to the <CODE
CLASS="literal"
>/m</CODE
>) followed by one or more non-colons, followed by a colon and optional white space. When <CODE
CLASS="literal"
>split</CODE
>'s pattern contains parentheses, these are returned along with the values. The return values placed in <CODE
CLASS="literal"
>@fields</CODE
> are in key-value order, with a leading null field we shift off. The braces in the call to <CODE
CLASS="literal"
>push</CODE
> produces a reference to a new anonymous hash, which we copy <CODE
CLASS="literal"
>@fields</CODE
> into. Since that array was stored in order of the needed key-value pairing, this makes for well-ordered hash contents.</P
><P
CLASS="para"
>All you're doing is reading and writing a plain text file, so you can use related recipes for additional components. You could use <A
CLASS="xref"
HREF="ch07_12.htm"
TITLE="Locking a File"
>Recipe 7.11</A
> to ensure that you have clean, concurrent access; <A
CLASS="xref"
HREF="ch01_14.htm"
TITLE="Escaping Characters"
>Recipe 1.13</A
> to store colons and newlines in keys and values; and <A
CLASS="xref"
HREF="ch11_04.htm"
TITLE="Taking References to Hashes"
>Recipe 11.3</A
> store more complex structures.</P
><P
CLASS="para"
>If you are willing to sacrifice the elegance of a plain textfile for a quick, random-access database of records, use a DBM file, as described in <A
CLASS="xref"
HREF="ch11_15.htm"
TITLE="Transparently Persistent Data Structures"
>Recipe 11.14</A
>.<A
CLASS="indexterm"
NAME="ch11-idx-1000004851-0"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004851-1"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004851-2"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch11-pgfId-1146"
>See Also</A
></H3
><P
CLASS="para"
><CODE
CLASS="literal"
>The</CODE
> <CODE
CLASS="literal"
>split</CODE
> function in <I
CLASS="filename"
>perlfunc </I
>(1) and <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; <A
CLASS="xref"
HREF="ch11_10.htm"
TITLE="Constructing Records"
>Recipe 11.9</A
>; <A
CLASS="xref"
HREF="ch11_14.htm"
TITLE="Storing Data Structures to Disk"
>Recipe 11.13</A
>; <A
CLASS="xref"
HREF="ch11_15.htm"
TITLE="Transparently Persistent Data Structures"
>Recipe 11.14</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch11_10.htm"
TITLE="11.9. Constructing Records"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 11.9. Constructing Records"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch11_12.htm"
TITLE="11.11. Printing Data Structures"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 11.11. Printing Data Structures"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>11.9. Constructing Records</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>11.11. Printing Data Structures</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
