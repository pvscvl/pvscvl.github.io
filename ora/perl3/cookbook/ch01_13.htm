<HTML
><HEAD
>
<TITLE>Recipe 1.12. Reformatting Paragraphs (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:29:15Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch01_01.htm"
TITLE="1. Strings"><LINK
REL="prev"
HREF="ch01_12.htm"
TITLE="1.11. Indenting Here Documents"><LINK
REL="next"
HREF="ch01_14.htm"
TITLE="1.13. Escaping Characters"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch01_12.htm"
TITLE="1.11. Indenting Here Documents"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.11. Indenting Here Documents"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch01_01.htm"
TITLE="1. Strings"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch01_14.htm"
TITLE="1.13. Escaping Characters"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.13. Escaping Characters"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch01-chap01_reformatting_0"
>1.12. Reformatting Paragraphs</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-1417"
>Problem <A
CLASS="indexterm"
NAME="ch01-idx-1000010298-0"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010298-1"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010298-2"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010298-3"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010298-4"
></A
></A
></H3
><P
CLASS="para"
>Your string is too big to fit the screen, and you want to break it up into lines of words, without splitting a word between lines. For instance, a style correction script might read a text file a paragraph at a time, replacing bad phrases with good ones. Replacing a phrase like <EM
CLASS="emphasis"
>utilizes the inherent functionality of</EM
> with <EM
CLASS="emphasis"
>uses</EM
> will change the length of lines, so it must somehow reformat the paragraphs when they're output.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-1423"
>Solution</A
></H3
><P
CLASS="para"
>Use the standard Text::Wrap module to put line breaks at the right place.</P
><PRE
CLASS="programlisting"
>use Text::Wrap;
@OUTPUT = wrap($LEADTAB, $NEXTTAB, @PARA);</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-1433"
>Discussion</A
></H3
><P
CLASS="para"
>The Text::Wrap module provides the <CODE
CLASS="literal"
>wrap</CODE
> function, shown in <A
CLASS="xref"
HREF="ch01_13.htm"
TITLE="wrapdemo"
>Example 1.3</A
>, which takes a list of lines and reformats them into a paragraph having no line more than<A
CLASS="indexterm"
NAME="ch01-idx-1000010299-0"
></A
> <CODE
CLASS="literal"
>$Text::Wrap::columns</CODE
> characters long. We set <CODE
CLASS="literal"
>$columns</CODE
> to 20, ensuring that no line will be longer than 20 characters. We pass <CODE
CLASS="literal"
>wrap</CODE
> two arguments before the list of lines: the first is the indent for the first line of output, the second the indent for every subsequent line.</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch01-10808"
>Example 1.3: wrapdemo</A
></H4
><PRE
CLASS="programlisting"
>#!/usr/bin/perl -w
# <A
CLASS="indexterm"
NAME="ch01-idx-1000010671-0"
></A
>wrapdemo - show how Text::Wrap works

@input = (&quot;Folding and splicing is the work of an editor,&quot;,
          &quot;not a mere collection of silicon&quot;,
          &quot;and&quot;,
          &quot;mobile electrons!&quot;);

use Text::Wrap qw($columns &amp;wrap);

$columns = 20;
print &quot;0123456789&quot; x 2, &quot;\n&quot;;
print wrap(&quot;    &quot;, &quot;  &quot;, @input), &quot;\n&quot;;</PRE
></DIV
><P
CLASS="para"
>The result of this program is:</P
><PRE
CLASS="programlisting"
><CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>01234567890123456789</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    Folding and</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>  splicing is the</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>  work of an</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>  editor, not a</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>  mere collection</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>  of silicon and</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>  mobile electrons!</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>We get back a single string, with newlines ending each line but the last:</P
><PRE
CLASS="programlisting"
># merge multiple lines into one, then wrap one long line
use Text::Wrap;
undef $/;
print wrap('', '', split(/\s*\n\s*/, &lt;&gt;));</PRE
><P
CLASS="para"
>If you have the <A
CLASS="indexterm"
NAME="ch01-idx-1000010305-0"
></A
>Term::ReadKey module (available from CPAN) on your system, you can use it to determine your window size so you can wrap lines to fit the current screen size. If you don't have the module, sometimes the screen size can be found in <CODE
CLASS="literal"
>$ENV{COLUMNS}</CODE
> or by parsing the output of the <EM
CLASS="emphasis"
>stty</EM
> command.</P
><P
CLASS="para"
>The following program tries to reformat both short and long lines within a paragraph, similar to the <EM
CLASS="emphasis"
>fmt</EM
><A
CLASS="indexterm"
NAME="ch01-idx-1000011513-0"
></A
> program, by setting the input record separator <CODE
CLASS="literal"
>$/</CODE
> to the empty string (causing &lt; &gt; to read paragraphs) and the output record separator <CODE
CLASS="literal"
>$\</CODE
> to two newlines. Then the paragraph is converted into one long line by changing all newlines (and any surrounding whitespace) to single spaces. Finally, we call the <CODE
CLASS="literal"
>wrap</CODE
> function with both leading and subsequent tab strings set to the empty string so we can have block paragraphs.</P
><PRE
CLASS="programlisting"
>use Text::Wrap      qw(&amp;wrap $columns);
use Term::ReadKey   qw(GetTerminalSize);
($columns) = GetTerminalSize();
($/, $\)  = ('', &quot;\n\n&quot;);   # read by paragraph, output 2 newlines
while (&lt;&gt;) {                # grab a full paragraph
    s/\s*\n\s*/ /g;         # convert intervening newlines to spaces
    print wrap('', '', $_); # and format
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-1513"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>split</CODE
> and <CODE
CLASS="literal"
>join</CODE
> functions in <EM
CLASS="emphasis"
>perlfunc </EM
>(1) and <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; the manpage for the standard Text::Wrap module, also in <A
CLASS="olink"
HREF="../prog/ch07_01.htm"
>Chapter 7</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; the CPAN module Term::ReadKey, and its use in <A
CLASS="xref"
HREF="ch15_07.htm"
TITLE="Reading from the Keyboard"
>Recipe 15.6</A
> <A
CLASS="indexterm"
NAME="ch01-idx-1000010311-0"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010311-1"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010311-2"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010311-3"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010311-4"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch01_12.htm"
TITLE="1.11. Indenting Here Documents"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.11. Indenting Here Documents"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch01_14.htm"
TITLE="1.13. Escaping Characters"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.13. Escaping Characters"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>1.11. Indenting Here Documents</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>1.13. Escaping Characters</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
