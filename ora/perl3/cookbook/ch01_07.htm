<HTML
><HEAD
>
<TITLE>Recipe 1.6. Reversing a String by Word or Character (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:28:52Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch01_01.htm"
TITLE="1. Strings"><LINK
REL="prev"
HREF="ch01_06.htm"
TITLE="1.5. Processing a String One Character at a Time"><LINK
REL="next"
HREF="ch01_08.htm"
TITLE="1.7. Expanding and Compressing Tabs"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch01_06.htm"
TITLE="1.5. Processing a String One Character at a Time"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.5. Processing a String One Character at a Time"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch01_01.htm"
TITLE="1. Strings"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch01_08.htm"
TITLE="1.7. Expanding and Compressing Tabs"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.7. Expanding and Compressing Tabs"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch01-51812"
>1.6. Reversing a String by Word or Character</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-669"
>Problem <A
CLASS="indexterm"
NAME="ch01-idx-1000010224-0"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010224-1"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010224-2"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010224-3"
></A
></A
></H3
><P
CLASS="para"
>You want to reverse the characters or words of a string.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-675"
>Solution</A
></H3
><P
CLASS="para"
>Use the <CODE
CLASS="literal"
>reverse</CODE
><A
CLASS="indexterm"
NAME="ch01-idx-1000010241-0"
></A
> function in scalar context for flipping bytes.</P
><PRE
CLASS="programlisting"
>$revbytes = reverse($string);</PRE
><P
CLASS="para"
>To flip words, use <CODE
CLASS="literal"
>reverse</CODE
> in list context with <CODE
CLASS="literal"
>split</CODE
> and <CODE
CLASS="literal"
>join</CODE
>:</P
><PRE
CLASS="programlisting"
>$revwords = join(&quot; &quot;, reverse split(&quot; &quot;, $string));</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-687"
>Discussion</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>reverse</CODE
> function is two different functions in one. When called in scalar context, it joins together its arguments and returns that string in reverse order. When called in list context, it returns its arguments in the opposite order. When using <CODE
CLASS="literal"
>reverse</CODE
> for its byte-flipping behavior, use <CODE
CLASS="literal"
>scalar</CODE
> to force scalar context unless it's entirely obvious.</P
><PRE
CLASS="programlisting"
>$gnirts   = reverse($string);       # reverse letters in $string

@sdrow    = reverse(@words);        # reverse elements in @words

$confused = reverse(@words);        # reverse letters in join(&quot;&quot;, @words)</PRE
><P
CLASS="para"
>Here's an example of reversing words in a string. Using a single space, &quot; &quot;, as the pattern to <CODE
CLASS="literal"
>split</CODE
> is a special case. It causes <CODE
CLASS="literal"
>split</CODE
> to use contiguous whitespace as the separator and also discard any leading null fields, just like <EM
CLASS="emphasis"
>awk</EM
>. Normally, <CODE
CLASS="literal"
>split</CODE
> discards only trailing null fields.</P
><PRE
CLASS="programlisting"
># reverse word order
$string = 'Yoda said, &quot;can you see this?&quot;';
@allwords    = split(&quot; &quot;, $string);
$revwords    = join(&quot; &quot;, reverse @allwords);
print $revwords, &quot;\n&quot;;
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>this?&quot; see you &quot;can said, Yoda</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>We could remove the temporary array <CODE
CLASS="literal"
>@allwords</CODE
> and do it on one line:</P
><PRE
CLASS="programlisting"
>$revwords = join(&quot; &quot;, reverse split(&quot; &quot;, $string));</PRE
><P
CLASS="para"
>Multiple whitespace in <CODE
CLASS="literal"
>$string</CODE
> becomes a single space in <CODE
CLASS="literal"
>$revwords</CODE
>. If you want to preserve whitespace, use this:</P
><PRE
CLASS="programlisting"
>$revwords = join(&quot;&quot;, reverse split(/(\s+)/, $string));</PRE
><P
CLASS="para"
>One use of <CODE
CLASS="literal"
>reverse</CODE
> is to test whether a word is a palindrome (a word that reads the same backward or forward):</P
><PRE
CLASS="programlisting"
>$word = &quot;reviver&quot;;
$is_palindrome = ($word eq reverse($word));</PRE
><P
CLASS="para"
>We can turn this into a one-liner that finds big palindromes in <EM
CLASS="emphasis"
>/usr/dict/words</EM
>.</P
><PRE
CLASS="programlisting"
>% perl -nle 'print if $_ eq reverse &amp;&amp; length &gt; 5' /usr/dict/words
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>deedeed</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>degged</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>deified</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>denned</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>hallah</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>kakkak</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>murdrum</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>redder</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>repaper</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>retter</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>reviver</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>rotator</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>sooloos</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>tebbet</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>terret</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>tut-tut</I
></CODE
></B
></CODE
></PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-735"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>split</CODE
>, <CODE
CLASS="literal"
>reverse</CODE
>, and <CODE
CLASS="literal"
>scalar</CODE
> functions in <EM
CLASS="emphasis"
>perlfunc </EM
>(1) and <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; the "Switches" section of <EM
CLASS="emphasis"
>perlrun </EM
>(1) and <A
CLASS="olink"
HREF="../prog/ch06_01.htm"
>Chapter 6</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010233-0"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010233-1"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010233-2"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010233-3"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010233-4"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch01_06.htm"
TITLE="1.5. Processing a String One Character at a Time"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.5. Processing a String One Character at a Time"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch01_08.htm"
TITLE="1.7. Expanding and Compressing Tabs"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.7. Expanding and Compressing Tabs"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>1.5. Processing a String One Character at a Time</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>1.7. Expanding and Compressing Tabs</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
