<HTML
><HEAD
>
<TITLE>Recipe 19.5. Making CGI Scripts Efficient (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:45:34Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch19_01.htm"
TITLE="19. CGI Programming"><LINK
REL="prev"
HREF="ch19_05.htm"
TITLE="19.4. Writing a Safe CGI Program"><LINK
REL="next"
HREF="ch19_07.htm"
TITLE="19.6. Executing Commands Without Shell Escapes"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch19_05.htm"
TITLE="19.4. Writing a Safe CGI Program"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.4. Writing a Safe CGI Program"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch19_01.htm"
TITLE="19. CGI Programming"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch19_07.htm"
TITLE="19.6. Executing Commands Without Shell Escapes"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 19.6. Executing Commands Without Shell Escapes"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch19-40762"
>19.5. Making CGI Scripts Efficient</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch19-pgfId-442"
>Problem<A
CLASS="indexterm"
NAME="ch19-idx-1000005441-0"
></A
></A
></H3
><P
CLASS="para"
>Your CGI script is called often, and the web server is suffering as a result. You'd like to lessen the load your CGI script causes.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch19-pgfId-448"
>Solution</A
></H3
><P
CLASS="para"
>Use <CODE
CLASS="literal"
>mod_perl</CODE
><A
CLASS="indexterm"
NAME="ch19-idx-1000005442-0"
></A
><A
CLASS="indexterm"
NAME="ch19-idx-1000005442-1"
></A
> in the Apache web server along with the following section in your <EM
CLASS="emphasis"
>httpd.conf</EM
> file:</P
><PRE
CLASS="programlisting"
>Alias /perl/ /real/path/to/perl/scripts/

&lt;Location /perl&gt;
SetHandler  perl-script
PerlHandler Apache::Registry
Options ExecCGI
&lt;/Location&gt;

PerlModule Apache::Registry
PerlModule CGI
PerlSendHeader On</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch19-pgfId-476"
>Discussion</A
></H3
><P
CLASS="para"
>Using the <CODE
CLASS="literal"
>mod_perl</CODE
> Apache web server module, you can write Perl code that will step in at any part of a request's processing. You can write your own logging and authentication routines, define virtual hosts and their configuration, and write your own handlers for certain types of request.</P
><P
CLASS="para"
>The snippet above says that requests with URLs starting in <EM
CLASS="emphasis"
>/perl/</EM
> are actually in <EM
CLASS="emphasis"
>/real/path/to/perl/scripts/</EM
> and that they should be handled by Apache::Registry. This runs them in a CGI environment. <CODE
CLASS="literal"
>PerlModule</CODE
> <CODE
CLASS="literal"
>CGI</CODE
> preloads the CGI module, and <CODE
CLASS="literal"
>PerlSendHeader</CODE
> <CODE
CLASS="literal"
>On</CODE
> makes most of your CGI scripts work out of the box with <CODE
CLASS="literal"
>mod_perl</CODE
>.</P
><P
CLASS="para"
><EM
CLASS="emphasis"
>/perl/</EM
> works analogously to <EM
CLASS="emphasis"
>/cgi-bin/</EM
>. To make the suffix <EM
CLASS="emphasis"
>.perl</EM
> indicate <CODE
CLASS="literal"
>mod_perl</CODE
> CGI scripts just as the suffix <I
CLASS="filename"
>.cgi</I
> indicates regular CGI scripts, use the following in your Apache configuration file:</P
><PRE
CLASS="programlisting"
>&lt;Files *.perl&gt;
SetHandler  perl-script
PerlHandler Apache::Registry
Options ExecCGI
&lt;/Files&gt;</PRE
><P
CLASS="para"
>Because the Perl interpreter that runs your CGI script doesn't shut down when your script is done (as normally happens when the web server runs your script as a separate program), you cannot rely on your global variables being undefined when the program starts. <B
CLASS="emphasis.bold"
>-w</B
> and <CODE
CLASS="literal"
>use</CODE
> <CODE
CLASS="literal"
>strict</CODE
> check for many bad habits in these kinds of scripts. There are other gotchas, too &nbsp;-  see the <EM
CLASS="emphasis"
>mod_perl_traps</EM
> manpage.</P
><P
CLASS="para"
>Don't worry about how big your web server processes appear to grow from pre-loading all these scripts. They need to find their way into memory eventually, and it's better to happen before Apache forks off kids. That way each script has to be in memory only once, because forked children have shared memory pages (under all modern operating systems). In other words, it only appears to take up more memory this way. It actually takes less!</P
><P
CLASS="para"
>An interface to Netscape's server is also available at <EM
CLASS="emphasis"
>http://www.perl.com/CPAN-local/modules/by-module/Netscape/nsapi_perl-0.24.tar.gz</EM
> that effects a similar performance gain by avoiding forking. <A
CLASS="indexterm"
NAME="ch19-idx-1000005444-0"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch19-pgfId-502"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for Bundle::Apache, Apache, Apache::Registry, from CPAN; <A
CLASS="systemitem.url"
HREF="../../../../../../perl.apache.org/"
>http://perl.apache.org</A
>/, mod_perl FAQ at <A
CLASS="systemitem.url"
HREF="../../../../../../perl.apache.org/faqa/"
>http://perl.apache.org/faqa/</A
>, the <I
CLASS="filename"
>mod_perl </I
>(3) and<I
CLASS="filename"
> cgi_to_mod_perl </I
>(1) manpages (if you have them)</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch19_05.htm"
TITLE="19.4. Writing a Safe CGI Program"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.4. Writing a Safe CGI Program"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch19_07.htm"
TITLE="19.6. Executing Commands Without Shell Escapes"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 19.6. Executing Commands Without Shell Escapes"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>19.4. Writing a Safe CGI Program</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>19.6. Executing Commands Without Shell Escapes</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
