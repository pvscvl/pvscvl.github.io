<HTML
><HEAD
>
<TITLE>Recipe 15.8. Using POSIX termios (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:43:21Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch15_01.htm"
TITLE="15. User Interfaces"><LINK
REL="prev"
HREF="ch15_08.htm"
TITLE="15.7. Ringing the Terminal Bell"><LINK
REL="next"
HREF="ch15_10.htm"
TITLE="15.9. Checking for Waiting Input"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch15_08.htm"
TITLE="15.7. Ringing the Terminal Bell"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 15.7. Ringing the Terminal Bell"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch15_01.htm"
TITLE="15. User Interfaces"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch15_10.htm"
TITLE="15.9. Checking for Waiting Input"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 15.9. Checking for Waiting Input"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch15-30095"
>15.8. Using POSIX termios</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch15-pgfId-705"
>Problem<A
CLASS="indexterm"
NAME="ch15-idx-1000005102-0"
></A
><A
CLASS="indexterm"
NAME="ch15-idx-1000005102-1"
></A
><A
CLASS="indexterm"
NAME="ch15-idx-1000005102-2"
></A
><A
CLASS="indexterm"
NAME="ch15-idx-1000005102-3"
></A
></A
></H3
><P
CLASS="para"
>You'd like to manipulate your terminal characteristics directly.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch15-pgfId-711"
>Solution</A
></H3
><P
CLASS="para"
>Use the POSIX <CODE
CLASS="literal"
>termios</CODE
> interface.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch15-pgfId-1000004681"
>Description</A
></H3
><P
CLASS="para"
>Think of everything you can do with the <EM
CLASS="emphasis"
>stty</EM
> command &nbsp;-  you can set everything from special characters to flow control and carriage-return mapping. The standard POSIX module provides direct access to the low-level terminal interface to implement <EM
CLASS="emphasis"
>stty</EM
>-like capabilities in your program.</P
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch15_09.htm"
TITLE="demo POSIX termios"
>Example 15.2</A
> finds what your tty's erase and kill characters are (probably backspace and Ctrl-U). Then it sets them back to their original values out of antiquity, <CODE
CLASS="literal"
>#</CODE
> and <CODE
CLASS="literal"
>@</CODE
>, and has you type something. It restores them when done.</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch15-23903"
>Example 15.2: demo POSIX termios</A
></H4
><PRE
CLASS="programlisting"
>#!/usr/bin/perl -w
# demo POSIX termios

use POSIX qw(:termios_h);

$term = POSIX::Termios-&gt;new;
$term-&gt;getattr(fileno(STDIN));

$erase = $term-&gt;getcc(VERASE);
$kill = $term-&gt;getcc(VKILL);
printf &quot;Erase is character %d, %s\n&quot;, $erase, uncontrol(chr($erase));
printf &quot;Kill is character %d, %s\n&quot;, $kill, uncontrol(chr($kill));

$term-&gt;setcc(VERASE, ord('#'));
$term-&gt;setcc(VKILL, ord('@'));
$term-&gt;setattr(1, TCSANOW);

print(&quot;erase is #, kill is @; type something: &quot;);
$line = &lt;STDIN&gt;;
print &quot;You typed: $line&quot;;

$term-&gt;setcc(VERASE, $erase);
$term-&gt;setcc(VKILL, $kill);
$term-&gt;setattr(1, TCSANOW);

sub uncontrol {<A
CLASS="indexterm"
NAME="ch15-idx-1000005866-0"
></A
>
    local $_ = shift;
    s/([\200-\377])/sprintf(&quot;M-%c&quot;,ord($1) &amp; 0177)/eg;
    s/([\0-\37\177])/sprintf(&quot;^%c&quot;,ord($1) ^ 0100)/eg;
    return $_;
} </PRE
></DIV
><P
CLASS="para"
>Here's a module called <A
CLASS="indexterm"
NAME="ch15-idx-1000005113-0"
></A
>HotKey that implements a <CODE
CLASS="literal"
>readkey</CODE
> function in pure Perl. It doesn't provide any benefit over Term::ReadKey, but it shows POSIX termios in action:</P
><PRE
CLASS="programlisting"
># HotKey.pm
package HotKey;

@ISA = qw(Exporter);
@EXPORT = qw(cbreak cooked readkey);

use strict;
use POSIX qw(:termios_h);
my ($term, $oterm, $echo, $noecho, $fd_stdin);

$fd_stdin = fileno(STDIN);
$term     = POSIX::Termios-&gt;new();
$term-&gt;getattr($fd_stdin);
$oterm     = $term-&gt;getlflag();

$echo     = ECHO | ECHOK | ICANON;
$noecho   = $oterm &amp; ~$echo;

sub cbreak {
    $term-&gt;setlflag($noecho);  # ok, so i don't want echo either
    $term-&gt;setcc(VTIME, 1);
    $term-&gt;setattr($fd_stdin, TCSANOW);
}

sub cooked {
    $term-&gt;setlflag($oterm);
    $term-&gt;setcc(VTIME, 0);
    $term-&gt;setattr($fd_stdin, TCSANOW);
}

sub readkey {
    my $key = '';
    cbreak();
    sysread(STDIN, $key, 1);
    cooked();
    return $key;
}

END { cooked() }

1;<A
CLASS="indexterm"
NAME="ch15-idx-1000005104-0"
></A
><A
CLASS="indexterm"
NAME="ch15-idx-1000005104-1"
></A
><A
CLASS="indexterm"
NAME="ch15-idx-1000005104-2"
></A
></PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch15-pgfId-871"
>See Also</A
></H3
><P
CLASS="para"
><CITE
CLASS="citetitle"
>POSIX Programmer's Guide</CITE
>, by Donald Lewine; O'Reilly &amp; Associates (1991); the documentation for the standard POSIX module, also in <A
CLASS="olink"
HREF="../prog/ch07_01.htm"
>Chapter 7</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; <A
CLASS="xref"
HREF="ch15_07.htm"
TITLE="Reading from the Keyboard"
>Recipe 15.6</A
>; <A
CLASS="xref"
HREF="ch15_10.htm"
TITLE="Checking for Waiting Input"
>Recipe 15.9</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch15_08.htm"
TITLE="15.7. Ringing the Terminal Bell"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 15.7. Ringing the Terminal Bell"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch15_10.htm"
TITLE="15.9. Checking for Waiting Input"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 15.9. Checking for Waiting Input"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>15.7. Ringing the Terminal Bell</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>15.9. Checking for Waiting Input</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
