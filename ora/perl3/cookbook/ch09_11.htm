<HTML
><HEAD
>
<TITLE>Recipe 9.10. Splitting a Filename into Its Component Parts (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:39:21Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch09_01.htm"
TITLE="9. Directories"><LINK
REL="prev"
HREF="ch09_10.htm"
TITLE="9.9. Renaming Files"><LINK
REL="next"
HREF="ch09_12.htm"
TITLE="9.11. Program: symirror"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch09_10.htm"
TITLE="9.9. Renaming Files"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.9. Renaming Files"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch09_01.htm"
TITLE="9. Directories"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch09_12.htm"
TITLE="9.11. Program: symirror"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.11. Program: symirror"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch09-chap09_splitting_0"
>9.10. Splitting a Filename into Its Component Parts</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch09-pgfId-1032"
>Problem<A
CLASS="indexterm"
NAME="ch09-idx-1000004439-0"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004439-1"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004439-2"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004439-3"
></A
></A
></H3
><P
CLASS="para"
>You want to extract a filename, its enclosing directory, or the extension(s)<EM
CLASS="emphasis"
> </EM
>from a string that contains a full pathname.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch09-pgfId-1038"
>Solution</A
></H3
><P
CLASS="para"
>Use routines from the standard File::Basename module.</P
><PRE
CLASS="programlisting"
>use File::Basename;

$base = basename($path);
$dir  = dirname($path);
($base, $dir, $ext) = fileparse($path);</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch09-pgfId-1054"
>Discussion</A
></H3
><P
CLASS="para"
>The standard File::Basename module contains routines to split up a filename. <CODE
CLASS="literal"
>dirname</CODE
><A
CLASS="indexterm"
NAME="ch09-idx-1000004440-0"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004440-1"
></A
> and <CODE
CLASS="literal"
>basename</CODE
> supply the directory and filename portions respectively:</P
><PRE
CLASS="programlisting"
>$path = '/usr/lib/libc.a';
$file = basename($path);    
$dir  = dirname($path);     

print &quot;dir is $dir, file is $file\n&quot;;
# dir is /usr/lib, file is libc.a</PRE
><P
CLASS="para"
>The <CODE
CLASS="literal"
>fileparse</CODE
><A
CLASS="indexterm"
NAME="ch09-idx-1000004441-0"
></A
> function can be used to extract the extension. To do so, pass <CODE
CLASS="literal"
>fileparse</CODE
> the path to decipher and a regular expression that matches the extension. You must give <CODE
CLASS="literal"
>fileparse</CODE
> this pattern because an extension isn't necessarily dot-separated. Consider <CODE
CLASS="literal"
>&quot;.tar.gz&quot;--</CODE
>is the extension <CODE
CLASS="literal"
>&quot;.tar&quot;</CODE
>, <CODE
CLASS="literal"
>&quot;.gz&quot;</CODE
>, or <CODE
CLASS="literal"
>&quot;.tar.gz&quot;</CODE
>? By specifying the pattern, you control which of these you get.</P
><PRE
CLASS="programlisting"
>$path = '/usr/lib/libc.a';
($name,$dir,$ext) = fileparse($path,'\..*');

print &quot;dir is $dir, name is $name, extension is $ext\n&quot;;
# dir is /usr/lib/, name is libc, extension is .a</PRE
><P
CLASS="para"
>By default, these routines parse pathnames using your operating system's normal conventions for directory separators by looking at the <CODE
CLASS="literal"
>$^O</CODE
> variable, which holds a string identifying the system you're running on. That value was determined when Perl was built and installed. You can change the default by calling the <CODE
CLASS="literal"
>fileparse_set_fstype</CODE
> routine. This alters the behavior of subsequent calls to the File::Basename functions:</P
><PRE
CLASS="programlisting"
>fileparse_set_fstype(&quot;MacOS&quot;);
$path = &quot;Hard%20Drive:System%20Folder:README.txt&quot;;
($name,$dir,$ext) = fileparse($path,'\..*');

print &quot;dir is $dir, name is $name, extension is $ext\n&quot;;
# dir is Hard%20Drive:System%20Folder, name is README, extension is .txt</PRE
><P
CLASS="para"
>To pull out just the extension, you might use this:</P
><PRE
CLASS="programlisting"
>sub extension {
    my $path = shift;
    my $ext = (fileparse($path,'\..*'))[2];
    $ext =~ s/^\.//;
    return $ext;
}</PRE
><P
CLASS="para"
>When called on a file like <EM
CLASS="emphasis"
>source.c.bak</EM
>, this returns an extension of <CODE
CLASS="literal"
>&quot;c.bak&quot;</CODE
>, not just <CODE
CLASS="literal"
>&quot;bak&quot;</CODE
>. If you wanted just <CODE
CLASS="literal"
>&quot;.bak&quot;</CODE
> returned, use <CODE
CLASS="literal"
>'\..*?'</CODE
> as the second argument to <CODE
CLASS="literal"
>fileparse</CODE
>.</P
><P
CLASS="para"
>When passed a pathname with a trailing directory separator, such as <CODE
CLASS="literal"
>lib/</CODE
>, <CODE
CLASS="literal"
>fileparse</CODE
> considers the directory name to be <CODE
CLASS="literal"
>&quot;lib/&quot;</CODE
>, whereas <CODE
CLASS="literal"
>dirname</CODE
> considers it to be <CODE
CLASS="literal"
>&quot;.&quot;</CODE
>. <A
CLASS="indexterm"
NAME="ch09-idx-1000004443-0"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004443-1"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004443-2"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004443-3"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch09-pgfId-1116"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for the standard File::Basename module (also in <A
CLASS="olink"
HREF="../prog/ch07_01.htm"
>Chapter 7</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>); the entry for <CODE
CLASS="literal"
>$^O</CODE
> in <I
CLASS="filename"
>perlvar </I
>(1), and in the <A
CLASS="olink"
HREF="../prog/ch02_09.htm"
>"Special Variables"</A
> section of <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch09_10.htm"
TITLE="9.9. Renaming Files"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.9. Renaming Files"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch09_12.htm"
TITLE="9.11. Program: symirror"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.11. Program: symirror"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>9.9. Renaming Files</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>9.11. Program: symirror</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
