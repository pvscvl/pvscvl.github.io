<HTML
><HEAD
>
<TITLE>Recipe 17.15. Making a Daemon Server (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:44:44Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch17_01.htm"
TITLE="17. Sockets"><LINK
REL="prev"
HREF="ch17_15.htm"
TITLE="17.14. Writing a Multi-Homed Server"><LINK
REL="next"
HREF="ch17_17.htm"
TITLE="17.16. Restarting a Server on Demand"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch17_15.htm"
TITLE="17.14. Writing a Multi-Homed Server"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 17.14. Writing a Multi-Homed Server"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch17_01.htm"
TITLE="17. Sockets"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch17_17.htm"
TITLE="17.16. Restarting a Server on Demand"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 17.16. Restarting a Server on Demand"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch17-chap17_making_0"
>17.15. Making a Daemon Server</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch17-pgfId-1942"
>Problem<A
CLASS="indexterm"
NAME="ch17-idx-1000004871-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-1000004871-1"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-1000004871-2"
></A
></A
></H3
><P
CLASS="para"
>You want your program to run as a daemon.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch17-pgfId-1948"
>Solution</A
></H3
><P
CLASS="para"
>If you are paranoid and running as root, <CODE
CLASS="literal"
>chroot</CODE
> to a safe directory:</P
><PRE
CLASS="programlisting"
>chroot(&quot;/var/daemon&quot;)
    or die &quot;Couldn't chroot to /var/daemon: $!&quot;;</PRE
><P
CLASS="para"
>Fork once, and let the parent exit.</P
><PRE
CLASS="programlisting"
>$pid = fork;
exit if $pid;
die &quot;Couldn't fork: $!&quot; unless defined($pid);</PRE
><P
CLASS="para"
>Dissociate from the controlling terminal that started us and stop being part of whatever process group we had been a member of.</P
><PRE
CLASS="programlisting"
>use POSIX;

POSIX::setsid()
    or die &quot;Can't start a new session: $!&quot;;</PRE
><P
CLASS="para"
>Trap fatal signals, setting a flag to indicate we need to gracefully exit.</P
><PRE
CLASS="programlisting"
>$time_to_die = 0;

sub signal_handler {
    $time_to_die = 1;
}

$SIG{INT} = $SIG{TERM} = $SIG{HUP} = \&amp;signal_handler;
# trap or ignore $SIG{PIPE}</PRE
><P
CLASS="para"
>Wrap your actual server code in a loop:</P
><PRE
CLASS="programlisting"
>until ($time_to_die) {
    # ...
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch17-pgfId-2002"
>Discussion</A
></H3
><P
CLASS="para"
>Before POSIX, every operating system had its own way for a process to tell the operating system "I'm going it alone, please interfere with me as little as possible." POSIX makes it much cleaner. That said, you can still take advantage of any operating system-specific calls if you want to.</P
><P
CLASS="para"
>The <CODE
CLASS="literal"
>chroot</CODE
> call is one of those non-POSIX calls. It makes a process change where it thinks the directory <CODE
CLASS="literal"
>/</CODE
> is. For instance, after <CODE
CLASS="literal"
>chroot</CODE
> <CODE
CLASS="literal"
>&quot;/var/daemon&quot;</CODE
>, if the process tries to read the file <EM
CLASS="emphasis"
>/etc/passwd</EM
>, it will read <EM
CLASS="emphasis"
>/var/daemon/etc/passwd</EM
>. A <CODE
CLASS="literal"
>chroot</CODE
>ed process needs copies of any files it will run made available inside its new <CODE
CLASS="literal"
>/</CODE
>, of course. For instance, our chrooted process would need <EM
CLASS="emphasis"
>/var/daemon/bin/csh</EM
> if it were going to glob files. For security reasons, only the superuser may <CODE
CLASS="literal"
>chroot</CODE
>. This is done by FTP servers if you login to them anonymously. It isn't really necessary to become a daemon.</P
><P
CLASS="para"
>The operating system expects a child's parent to wait when the child dies. Our daemon process has no particular parent to do this, so we need to disinherit it. This we do by <CODE
CLASS="literal"
>fork</CODE
>ing once and having our parent exit, so that the child is not associated with the process that started the parent. The child then closes all the filehandles it got from its parent (STDIN, STDERR, and STDOUT) and calls <A
CLASS="indexterm"
NAME="ch17-idx-1000005969-0"
></A
><CODE
CLASS="literal"
>POSIX::setsid</CODE
> to ensure that it is completely dissociated from its parent's terminal.</P
><P
CLASS="para"
>Now we're almost ready to begin. We don't want signals like SIGINT to kill us immediately (its default behavior), so we use <CODE
CLASS="literal"
>%SIG</CODE
> to catch them and set a flag saying it's time to exit. Then our main program simply becomes: "While we weren't killed, do something."</P
><P
CLASS="para"
>The signal SIGPIPE is a special case. It's easy to get (by writing to a filehandle whose other end is closed) and has unforgiving default behavior (it terminates your process). You probably want to either ignore it (<CODE
CLASS="literal"
>$SIG{PIPE}</CODE
> <CODE
CLASS="literal"
>=</CODE
> <CODE
CLASS="literal"
>'IGNORE'</CODE
>) or define your own signal handler to deal with it appropriately.<A
CLASS="indexterm"
NAME="ch17-idx-1000004873-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-1000004873-1"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-1000004873-2"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch17-pgfId-2016"
>See Also</A
></H3
><P
CLASS="para"
>Your system's <I
CLASS="filename"
>setsid </I
>(2) and <I
CLASS="filename"
>chroot </I
>(1) manpage (if you have them); 

<A
CLASS="olink"
HREF="../prog/ch03_017.htm"
>&#13;the <CODE
CLASS="literal"
>chroot</CODE
></A
> function in <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> and in <I
CLASS="filename"
>perlfunc </I
>(1); the Unix Socket FAQ at <A
CLASS="systemitem.url"
HREF="../../../../../../www.ibrado.com/sock-faq/"
>http://www.ibrado.com/sock-faq/</A
>. <CITE
CLASS="citetitle"
>Unix Network Programming</CITE
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch17_15.htm"
TITLE="17.14. Writing a Multi-Homed Server"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 17.14. Writing a Multi-Homed Server"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch17_17.htm"
TITLE="17.16. Restarting a Server on Demand"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 17.16. Restarting a Server on Demand"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>17.14. Writing a Multi-Homed Server</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>17.16. Restarting a Server on Demand</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
