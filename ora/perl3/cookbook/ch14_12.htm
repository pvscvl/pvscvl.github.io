<HTML
><HEAD
>
<TITLE>Recipe 14.11. Program: ggh&nbsp- Grep Netscape Global History (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:43:02Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch14_01.htm"
TITLE="14. Database Access"><LINK
REL="prev"
HREF="ch14_11.htm"
TITLE="14.10. Executing an SQL Command Using DBI and DBD"><LINK
REL="next"
HREF="ch15_01.htm"
TITLE="15. User Interfaces"></HEAD
><BODY
BGCOLOR="#FFFFFF"><img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl Cookbook"><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map><div class="navbar"><p>
<TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch14_11.htm"
TITLE="14.10. Executing an SQL Command Using DBI and DBD"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 14.10. Executing an SQL Command Using DBI and DBD"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch14_01.htm"
TITLE="14. Database Access"
></A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="chapter"
HREF="ch15_01.htm"
TITLE="15. User Interfaces"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 15. User Interfaces"
BORDER="0"></A
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch14-94911"
>14.11. Program: ggh&nbsp;- Grep Netscape Global History</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch14-idx-1000005014-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005014-1"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005014-2"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005014-3"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005014-4"
></A
>This program divulges the contents of Netscape's <EM
CLASS="emphasis"
>history.db</EM
> file. It can be called with full URLs or with a (single) pattern. If called without arguments, it displays every entry in the history file. The <EM
CLASS="emphasis"
>~/.netscape/history.db</EM
> file is used unless the <B
CLASS="emphasis.bold"
>-database</B
> option is given.</P
><P
CLASS="para"
>Each output line shows the URL and its access time. The time is converted into <CODE
CLASS="literal"
>localtime</CODE
> representation with <B
CLASS="emphasis.bold"
>-localtime</B
> (the default), <CODE
CLASS="literal"
>gmtime</CODE
> representation with <B
CLASS="emphasis.bold"
>-gmtime </B
>&nbsp;-  or left in raw form with <B
CLASS="emphasis.bold"
>-epochtime</B
>, which is useful for sorting by date.</P
><P
CLASS="para"
>To specify a pattern to match against, give one single argument without a <CODE
CLASS="literal"
>://</CODE
>.</P
><P
CLASS="para"
>To look up one or more URLs, supply them as arguments:</P
><PRE
CLASS="programlisting"
>% ggh http://www.perl.com/index.html</PRE
><P
CLASS="para"
>To find out a link you don't quite recall, use a regular expression (a single argument without a <CODE
CLASS="literal"
>://</CODE
> is a pattern):</P
><PRE
CLASS="programlisting"
>% ggh perl</PRE
><P
CLASS="para"
>To find out all the people you've mailed:</P
><PRE
CLASS="programlisting"
>% ggh mailto:</PRE
><P
CLASS="para"
>To find out the FAQ sites you've visited, use a snazzy Perl pattern with an embedded <CODE
CLASS="literal"
>/i</CODE
> modifier:</P
><PRE
CLASS="programlisting"
>% ggh -regexp '(?i)\bfaq\b'</PRE
><P
CLASS="para"
>If you don't want the internal date converted to localtime, use <B
CLASS="emphasis.bold"
>-epoch</B
>:</P
><PRE
CLASS="programlisting"
>% ggh -epoch http://www.perl.com/perl/</PRE
><P
CLASS="para"
>If you prefer gmtime to localtime, use <B
CLASS="emphasis.bold"
>-gmtime</B
>:</P
><PRE
CLASS="programlisting"
>% ggh -gmtime http://www.perl.com/perl/</PRE
><P
CLASS="para"
>To look at the whole file, give no arguments (but perhaps redirect to a pager):</P
><PRE
CLASS="programlisting"
>% ggh | less</PRE
><P
CLASS="para"
>If you want the output sorted by date, use the <B
CLASS="emphasis.bold"
>-epoch</B
> flag:</P
><PRE
CLASS="programlisting"
>% ggh -epoch | sort -rn | less</PRE
><P
CLASS="para"
>If you want it sorted by date into your local time zone format, use a more sophisticated pipeline:</P
><PRE
CLASS="programlisting"
>% ggh -epoch | sort -rn | perl -pe 's/\d+/localtime $&amp;/e' | less</PRE
><P
CLASS="para"
>The Netscape release notes claim that they're using NDBM format. This is misleading: they're actually using Berkeley DB format, which is why we require DB_File (not supplied standard with all systems Perl runs on) instead of NDBM_File (which is). The program is shown in <A
CLASS="xref"
HREF="ch14_12.htm"
TITLE="ggh"
>Example 14.8</A
>.</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch14-14152"
>Example 14.8: ggh</A
></H4
><PRE
CLASS="programlisting"
>#!/usr/bin/perl -w
# ggh -- grovel global history in netscape logs
$USAGE = &lt;&lt;EO_COMPLAINT;
usage: $0 [-database dbfilename] [-help]
           [-epochtime | -localtime | -gmtime]
           [ [-regexp] pattern] | href ... ]
EO_COMPLAINT

use Getopt::Long;

($opt_database, $opt_epochtime, $opt_localtime,
 $opt_gmtime,   $opt_regexp,    $opt_help,
 $pattern,                                  )      = (0) x 7;

usage() unless GetOptions qw{ database=s
                              regexp=s
                              epochtime localtime gmtime
                              help
                            };

if ($opt_help) { print $USAGE; exit; }

usage(&quot;only one of localtime, gmtime, and epochtime allowed&quot;)
    if $opt_localtime + $opt_gmtime + $opt_epochtime &gt; 1;

if ( $opt_regexp ) {
    $pattern = $opt_regexp;
} elsif (@ARGV &amp;&amp; $ARGV[0] !~ m(://)) {
    $pattern = shift;
}

usage(&quot;can't mix URLs and explicit patterns&quot;)
    if $pattern &amp;&amp; @ARGV;

if ($pattern &amp;&amp; !eval { '' =~ /$pattern/; 1 } ) {
    $@ =~ s/ at \w+ line \d+\.//;
    die &quot;$0: bad pattern $@&quot;;
}

require DB_File; DB_File-&gt;import();  # delay loading until runtime
$| = 1;                              # feed the hungry PAGERs

$dotdir  = $ENV{HOME}    || $ENV{LOGNAME};
$HISTORY = $opt_database || &quot;$dotdir/.netscape/history.db&quot;;

die &quot;no netscape history dbase in $HISTORY: $!&quot; unless -e $HISTORY;
die &quot;can't dbmopen $HISTORY: $!&quot; unless dbmopen %hist_db, $HISTORY, 0666;

# the next line is a hack because the C programmers who did this
# didn't understand strlen vs strlen+1.  jwz told me so. :-)
$add_nulls   = (ord(substr(each %hist_db, -1)) == 0);

# XXX: should now do scalar keys to reset but don't 
#      want cost of full traverse, required on tied hashes.
#   better to close and reopen?

$nulled_href = &quot;&quot;;  
$byte_order  = &quot;V&quot;;         # PC people don't grok &quot;N&quot; (network order)
    
if (@ARGV) {
    foreach $href (@ARGV) {
        $nulled_href = $href . ($add_nulls &amp;&amp; &quot;\0&quot;);
        unless ($binary_time = $hist_db{$nulled_href}) {
            warn &quot;$0: No history entry for HREF $href\n&quot;;
            next;
        }
        $epoch_secs = unpack($byte_order, $binary_time);
        $stardate   = $opt_epochtime ? $epoch_secs
                                     : $opt_gmtime ? gmtime    $epoch_secs
                                                   : localtime $epoch_secs;
        print &quot;$stardate $href\n&quot;;
    }
} else {
    while ( ($href, $binary_time) = each %hist_db ) {
        chop $href if $add_nulls;
        next unless defined $href &amp;&amp; defined $binary_time;
        # gnat reports some binary times are missing
        $binary_time = pack($byte_order, 0) unless $binary_time;
        $epoch_secs = unpack($byte_order, $binary_time);
        $stardate   = $opt_epochtime ? $epoch_secs
                                     : $opt_gmtime ? gmtime    $epoch_secs
                                                   : localtime $epoch_secs;
        print &quot;$stardate $href\n&quot; unless $pattern &amp;&amp; $href !~ /$pattern/o;
    }
}

sub usage {
    print STDERR &quot;@_\n&quot; if @_;
    die $USAGE;
}<A
CLASS="indexterm"
NAME="ch14-idx-1000005016-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005016-1"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005016-2"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005016-3"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005016-4"
></A
></PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch14-pgfId-1620"
>See Also</A
></H3
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch06_18.htm"
TITLE="Expressing AND, OR, and NOT in a Single Pattern"
>Recipe 6.17</A
><A
CLASS="indexterm"
NAME="ch14-idx-1000004909-0"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><TABLE
WIDTH="684"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="sect1"
HREF="ch14_11.htm"
TITLE="14.10. Executing an SQL Command Using DBI and DBD"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 14.10. Executing an SQL Command Using DBI and DBD"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="chapter"
HREF="ch15_01.htm"
TITLE="15. User Interfaces"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 15. User Interfaces"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="228"
>14.10. Executing an SQL Command Using DBI and DBD</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="228"
><A
CLASS="index"
HREF="index/index.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="228"
>15. User Interfaces</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="684"
TITLE="footer"><FONT
SIZE="-1"
></DIV<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map> </BODY
></HTML
>
