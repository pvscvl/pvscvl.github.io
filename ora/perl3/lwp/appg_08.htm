<html><head><title>The Gory Details (Perl &amp; LWP)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Sean Burke" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001789L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl &amp; LWP" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl &amp; LWP" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appg_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">G.8. The Gory Details</h2>

<p>For sake of clarity of explanation, I had to oversimplify some of the
facts about objects. Here's a few of the gorier
details:
</p>

<ul><li>
<p>Every example I gave of a constructor was a class method. But object
methods can be constructors, too, if the class was written to work
that way: <tt class="literal">$new</tt> <tt class="literal">=</tt>
<tt class="literal">$old-&gt;copy</tt>, <tt class="literal">$node_y =
$node_x-&gt;new_subnode</tt>, or the like.
</p>
</li><li>
<p>I've given the impression that
there's two kinds of methods: object methods and
class methods. In fact, the same method can be both, because
it's not the kind of method it is, but the kind of
calls it's written to accept&#x2014;calls that pass
an object, or calls that pass a class name.
</p>
</li><li>
<p>The term "object value"
isn't something you'll find used
much anywhere else. It's just my shorthand for what
would properly be called an "object
reference" or "reference to a
blessed item." In fact, people usually say
"object" when they properly mean a
reference to that object.
</p>
</li><li>
<p>I mentioned creating objects with <em class="emphasis">con</em>structors,
but I didn't mention destroying them with
<em class="emphasis">de</em>structor&#x2014;a destructor is a kind of
method that you call to tidy up the object once
you're done with it, and want it to neatly go away
(close connections, delete temporary files, free up memory, etc.).
But because of the way Perl handles memory, most modules
won't require the user to know about destructors.
</p>
</li><li>
<p>I said that class method syntax has to have the class name, as in
<tt class="literal">$session</tt> <tt class="literal">=</tt>
<tt class="literal">Net::FTP-&gt;new($host)</tt>. Actually, you can instead
use any expression that returns a class name:
<tt class="literal">$ftp_class</tt> <tt class="literal">=</tt>
<tt class="literal">'Net::FTP';</tt> <tt class="literal">$session</tt>
<tt class="literal">=</tt> <tt class="literal">$ftp_class-&gt;new($host)</tt>.
Moreover, instead of the method name for object- or class-method
calls, you can use a scalar holding the method name:
<tt class="literal">$foo-&gt;$method($host)</tt>. But, in practice, these
syntaxes are rarely useful.
</p>
</li></ul>
<p>And finally, to learn about objects from the perspective of writing
your own classes, see the <em class="filename">perltoot</em>
documentation, or Damian Conway's exhaustive and
clear book <em class="emphasis">Object Oriented Perl</em> (Manning
Publications, 1999).
</p>


 


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appg_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">G.7. So Why Do Some Modules Use Objects?</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">Index</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

</body></html>
