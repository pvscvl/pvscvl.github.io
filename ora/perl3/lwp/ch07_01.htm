<html><head><title>HTML Processing with Tokens (Perl &amp; LWP)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Sean Burke" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001789L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl &amp; LWP" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl &amp; LWP" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch07_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 7. HTML Processing with Tokens</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4>
  <p> <a href="ch07_01.htm">HTML as Tokens<br />
    Basic HTML::TokeParser Us</a><a href="ch07_02.htm">e</a><br />
<a href="ch07_03.htm">Individual Tokens</a><br />
<a href="ch07_04.htm">Token Sequences</a><br />
<a href="ch07_05.htm">More HTML::TokeParser Methods</a><br />
<a href="ch07_06.htm">Using Extracted Text</a><br /></p></div><p>Regular expressions are powerful, but they're a
painfully low-level way of dealing with HTML. You're
forced to worry about spaces and newlines, single and double quotes,
HTML comments, and a lot more. The next step up from a regular
expression is an HTML tokenizer. In this chapter,
we'll
<a name="INDEX-401" /></a>
<a name="INDEX-402" /></a>use
HTML::TokeParser to extract information from HTML files. Using these
techniques, you can extract information from any HTML file, and never
again have to worry about character-level trivia of HTML markup.
</p><div class="sect1"><a name="perllwp-CHP-7-SECT-1" /></a>
<h2 class="sect1">7.1. HTML as Tokens</h2>

<p>Your experience with HTML code probably involves seeing raw text such
as this:
</p>

<blockquote><pre class="code">&lt;p&gt;Dear Diary,
&lt;br&gt;I'm gonna be a superstar, because I'm learning to play
the &lt;a href="http://MyBalalaika.com"&gt;balalaika&lt;/a&gt; &amp;amp; the &lt;a
href='http://MyBazouki.com'&gt;bazouki&lt;/a&gt;!!!</pre></blockquote>

<p>The HTML::TokeParser module divides the HTML into units called
<em class="emphasis">tokens</em>, which means units of parsing. The above
source code is parsed as this series of tokens:
</p>

<dl>
<dt><i>start-tag token</i></dt>
<dd>
<tt class="literal">p</tt> with no <a name="INDEX-403" /></a> <a name="INDEX-404" /></a>
<a name="INDEX-405" /></a>
<a name="INDEX-406" /></a>attributes

</dd>


<dt><i>text token</i></dt>
<dd>
<tt class="literal">Dear Diary,\n</tt>
</dd>


<dt><i>start-tag token</i></dt>
<dd>
<tt class="literal">br</tt> with no attributes
</dd>


<dt><i>text token</i></dt>
<dd>
<tt class="literal">I'm gonna be a superstar, because I'm learning to
play\nthe</tt>

</dd>


<dt><i>start-tag token</i></dt>
<dd>
<tt class="literal">a</tt>, with attribute <tt class="literal">href</tt> whose
value is <tt class="literal">http://MyBalalaika.com</tt>

</dd>


<dt><i>text token</i></dt>
<dd>
<tt class="literal">balalaika</tt>
</dd>


<dt><i>end-tag token</i></dt>
<dd>
<tt class="literal">a</tt>
</dd>


<dt><i>text token</i></dt>
<dd>
<tt class="literal">&amp;amp; the</tt> , which <a name="INDEX-407" /></a>
<a name="INDEX-408" /></a>means <tt class="literal">&amp; the</tt>

</dd>


<dt><i>start-tag token</i></dt>
<dd>
<tt class="literal">a</tt>, with attribute <tt class="literal">href</tt> equals
<tt class="literal">http://MyBazouki.com</tt>

</dd>


<dt><i>text token</i></dt>
<dd>
<tt class="literal">bazouki</tt>
</dd>


<dt><i>end-tag token</i></dt>
<dd>
<tt class="literal">a</tt>
</dd>


<dt><i>text token</i></dt>
<dd>
<tt class="literal">!!!\n</tt>
</dd>

</dl>

<p>This representation of things is more abstract, focusing on markup
concepts and not individual characters. So whereas the two
<tt class="literal">&lt;a&gt;</tt> tags have different types of quotes
around their attribute values in the raw HTML, as tokens each has a
start-tag of type <tt class="literal">a</tt>, with an
<tt class="literal">href</tt> attribute of a particular value. A program
that extracts information by working with a stream of tokens
doesn't have to worry about the idiosyncrasies of
entity encoding, whitespace, quotes, and trying to work out where a
tag ends.
</p>

</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch07_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">6.7. Example: Extracting Temperatures from Weather Underground</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">7.2. Basic HTML::TokeParser Use</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
      </map>

</body></html>