<html><head><title>Example: Babelfish (Perl &amp; LWP)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Sean Burke" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001789L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl &amp; LWP" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl &amp; LWP" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_06.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch03_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">2.7. Example: Babelfish</h2>

<p>Submitting a POST query to Babelfish <a name="INDEX-95" /> <a name="INDEX-96" /> <a name="INDEX-97" />is
as simple as:
</p>

<blockquote><pre class="code">my ($content, $message, $is_success) = do_POST(
  'http://babelfish.altavista.com/translate.dyn',
  [ 'urltext' =&gt; "I like pie", 'lp' =&gt; "en_fr", 'enc' =&gt; 'utf8' ],
);</pre></blockquote>

<p>If the request succeeded (<tt class="literal">$is_success</tt> will tell us
this), <tt class="literal">$content</tt> will be an HTML page that contains
the translation text. At time of this writing, the translation is
inside the only <tt class="literal">textarea</tt> element on the page, so
it can be extracted with just this regexp:
</p>

<blockquote><pre class="code">$content =~ m{&lt;textarea.*?&gt;(.*?)&lt;/textarea&gt;}is;</pre></blockquote>

<p>The translated text is now in <tt class="literal">$1</tt>, if the match
succeeded.
</p>

<p>Knowing this, it's easy to wrap this whole procedure
up in a function that takes the text to translate and a specification
of what language from and to, and returns the translation. <a href="ch02_07.htm">Example 2-8</a> is such a function.
</p>

<a name="perllwp-CHP-2-EX-8" /><div class="example">
<h4 class="objtitle">Example 2-8. Using Babelfish to translate </h4>
<blockquote><pre class="code">sub translate {
  my ($text, $language_path) = @_;

  my ($content, $message, $is_success) = do_POST(
    'http://babelfish.altavista.com/translate.dyn',
    [ 'urltext' =&gt; $text, 'lp' =&gt; $language_path, 'enc' =&gt; 'utf8' ],
  );
  die "Error in translation $language_path: $message\n"
   unless $is_success;

  if ($content =~ m{&lt;textarea.*?&gt;(.*?)&lt;/textarea&gt;}is) {
    my $translation;
    $translation = $1;
    # Trim whitespace:
    $translation =~ s/\s+/ /g;
    $translation =~ s/^ //s;
    $translation =~ s/ $//s;
    return $translation;
  } else {
    die "Can't find translation in response to $language_path";
  }
}</pre></blockquote>
</div>

<p>The <tt class="literal">translate( )</tt> subroutine constructs
<a name="INDEX-98" />the
request and extracts the translation from the response, cleaning up
any whitespace that may surround it. If the request
couldn't be completed, the subroutine throws an
exception by calling <tt class="literal">die( )</tt>.
</p>

<p>The <tt class="literal">translate( )</tt> subroutine could be used to
automate on-demand translation of important content from one language
to another. But machine translation is still a fairly new technology,
and the real value of it is to be found in translating from English
into another language and then back into English, just for fun.
(Incidentally, there's a CPAN module that takes care
of all these details for you, called Lingua::Translate, but here
we're interested in how to carry out the task,
rather than whether someone's already figured it out
and posted it to CPAN.)
</p>

<p>The <em class="emphasis">alienate</em> program given in <a href="ch02_07.htm">Example 2-9</a> does just this (the definitions of
<tt class="literal">translate( )</tt> and <tt class="literal">do_POST( )</tt>
have been omitted from the listing for brevity).
</p>

<a name="perllwp-CHP-2-EX-9" /><div class="example">
<h4 class="objtitle">Example 2-9. The alienate program </h4>
<blockquote><pre class="code">#!/usr/bin/perl -w
# alienate - translate text
use strict;
my $lang;
if (@ARGV and $ARGV[0] =~ m/^-(\w\w)$/s) {
  # If the language is specified as a switch like "-fr"
  $lang = lc $1;
  shift @ARGV;
} else {
  # Otherwise just pick a language at random:
  my @languages = qw(it fr de es ja pt);
  # I.e.: Italian, French, German, Spanish, Japanese, Portugese.
  $lang = $languages[rand @languages];
}

die "What to translate?\n" unless @ARGV;
my $in = join(' ', @ARGV);

print " =&gt; via $lang =&gt; ",
  translate(
    translate($in, 'en_' . $lang),
    $lang . '_en'
  ), "\n";
exit;

# definitions of do_POST() and translate( ) go here</pre></blockquote>
</div>

<p>Call the alienate program like this:</p>

<blockquote><pre class="code">% alienate [-<em class="replaceable"><tt>lang</em>] <em class="replaceable">phrase</tt></em></pre></blockquote>

<p>Specify a language with -<em class="replaceable"><tt>lang</tt></em>, for example
<tt class="literal">-fr</tt> to translate via French. If you
don't specify a language, one will be randomly
chosen for you. The phrase to translate is taken from the command
line following any switches.
</p>

<p>Here are some runs of <em class="emphasis">alienate</em>:</p>

<blockquote><pre class="code">% alienate -de "Pearls before swine!"
<b class="emphasis-bold">=&gt; via de =&gt; Beads before pigs!</b>

% alienate "Bond, James Bond"
<b class="emphasis-bold">=&gt; via fr =&gt; Link, Link Of James</b>

% alienate "Shaken, not stirred"
<b class="emphasis-bold">=&gt; via pt =&gt; Agitated, not agitated</b>

% alienate -it "Shaken, not stirred"
<b class="emphasis-bold">=&gt; via it =&gt; Mental patient, not stirred</b>

% alienate -it "Guess what! I'm a computer!"
<b class="emphasis-bold">=&gt; via it =&gt; Conjecture that what! They are a calculating!</b>

% alienate 'It was more fun than a barrel of monkeys'
<b class="emphasis-bold">=&gt; via de =&gt; It was more fun than a barrel drop hammer</b>

% alienate -ja 'It was more fun than a barrel of monkeys'
<b class="emphasis-bold">=&gt; via ja =&gt; That the barrel of monkey at times was many pleasures</b></pre></blockquote>


 


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_06.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch03_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">2.6. HTTP POST</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">3. The LWP Class Model</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

</body></html>