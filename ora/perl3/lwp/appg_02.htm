<html><head><title>Modules and Their Functional Interfaces (Perl &amp; LWP)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Sean Burke" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001789L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl &amp; LWP" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl &amp; LWP" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appg_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="appg_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">G.2. Modules and Their Functional Interfaces</h2>

<p>Modules are the main way that Perl provides for bundling up code for
later use by yourself or others. As I'm sure you
can't help noticing from reading <em class="emphasis">The Perl
Journal</em>, CPAN (the Comprehensive Perl Archive Network) is
the repository for modules (or groups of modules) that others have
written, to do anything from composing music to accessing web pages.
A good deal of those modules even come with every installation of
Perl.
</p>

<p>One module that you may have used before, and which is fairly typical
in its interface, is Text::Wrap. It comes with Perl, so you
don't even need to install it from CPAN. You use it
in a program of yours, by having your program code say early on:
</p>

<blockquote><pre class="code">use Text::Wrap;</pre></blockquote>

<p>and after that, you can access a function called
<tt class="literal">wrap</tt>, which inserts line-breaks in text that you
feed it, so that the text will be wrapped to 72 (or however many)
columns.
</p>

<p>The way this <tt class="literal">use Text::Wrap</tt> business works is that
the module Text::Wrap exists as a file
<em class="filename">Text/Wrap.pm</em> somewhere in one of your library
directories. That file contains Perl code<a href="#FOOTNOTE-6">[6]</a> which, among other things, defines
a function called <tt class="literal">Text::Wrap::wrap</tt>, and then
exports that function, which means that when you say
<tt class="literal">wrap</tt> after having said <tt class="literal">use</tt>
<tt class="literal">Text::Wrap</tt>, you'll be actually
calling the <tt class="literal">Text::Wrap::wrap</tt> function. Some
modules don't export their functions, so you have to
call them by their full name, like
<tt class="literal">Text::Wrap::wrap(</tt><em class="replaceable"><tt>parameters</tt></em><tt class="literal">)</tt>.
</p><blockquote class="footnote"> <a name="FOOTNOTE-6" /><p> [6]And mixed
in with the Perl code, there's documentation, which
is what you read with <tt class="literal">perldoc Text::Wrap</tt>. The
<em class="filename">perldoc</em> program simply ignores the code and
formats the documentation text, whereas <tt class="literal">use
Text::Wrap</tt> loads and runs the code while ignoring the
documentation.</p> </blockquote>

<p>Regardless of whether the typical module exports the functions it
provides, a module is basically just a container for chunks of code
that do useful things. The way the module allows for you to interact
with it, is its interface. And when, like with Text::Wrap, its
interface consists of functions, the module is said to have a
<em class="emphasis">functional interface</em>.<a href="#FOOTNOTE-7">[7]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-7" /><p> [7]The term
"function" (and therefore
"function<em class="emphasis">al</em>")
has various senses. I'm using the term here in its
broadest sense, to refer to routines&#x2014;bits of code that are
called by some name and take parameters and return some value.</p>
</blockquote>

<p>Using modules with functional interfaces is
straightforward&#x2014;instead of defining your own
"wrap" function with <tt class="literal">sub
wrap { ... }</tt>, you entrust <tt class="literal">use Text::Wrap</tt>
to do that for you, along with whatever other functions its defines
and exports, according to the module's
documentation. Without too much bother, you can even write your own
modules to contain your frequently used functions; I suggest having a
look at the <em class="filename">perlmod</em> manpage for more leads on
doing this.
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appg_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="appg_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">G. User's View of Object-Oriented Modules</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">G.3. Modules with Object-Oriented Interfaces</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

</body></html>