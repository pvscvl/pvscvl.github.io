<html>
<head>
<title>When an Overload Handler Is Missing (nomethod and fallback) (Programming Perl)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="When an Overload Handler Is Missing (nomethod and fallback)">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home">
<map name="banner-map"><AREA SHAPE="rect" coords="1,-2,616,66" HREF="index.htm" ALT="Programming Perl"><AREA SHAPE="rect" coords="629,-11,726,25" HREF="jobjects/fsearch.htm" ALT="Search this book">
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="684" border="0">
<tr>
<td align="left" valign="top" width="228"><a href="ch13_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="228"><a href="ch13_01.htm"></a></td><td align="right" valign="top" width="228"><a href="ch13_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>



<h2 class="sect1">13.5. When an Overload Handler Is Missing (nomethod and fallback)</h2>

<p>
<a name="INDEX-2632"></a><a name="INDEX-2633"></a><a name="INDEX-2634"></a><a name="INDEX-2635"></a>
If you apply an unoverloaded operator to an object, Perl first tries
to autogenerate a behavior from other overloaded operators using the
rules described earlier.  If that fails, Perl looks for an overloading
behavior for <tt class="literal">nomethod</tt> and uses that if available.
That handler is to operators what an <tt class="literal">AUTOLOAD</tt>
subroutine is to subroutines: it's what you do when you can't think of
what else to do.</p>

<p>If used, the <tt class="literal">nomethod</tt> key should be followed by a
reference to a handler that accepts four arguments, (not three as all
the other handlers expect).  The first three arguments are no
different than in any other handler; the fourth is a string
corresponding to the operator whose handler is missing.  This serves
the same purpose as the <tt class="literal">$AUTOLOAD</tt> variable does in
<tt class="literal">AUTOLOAD</tt> subroutines.</p>

<p>If Perl has to look for a <tt class="literal">nomethod</tt> handler but
can't find one, an exception is raised.</p>

<p>
<a name="INDEX-2636"></a>
If you want to prevent autogeneration from occurring, or you want a
failed autogeneration attempt to result in no overloading at all, you
can define the special <tt class="literal">fallback</tt> overloading key.
It has three useful states:</p>

<dl>
<dt>
<b><tt class="literal">undef</tt></b>
</dt>
<dd>
<p>If <tt class="literal">fallback</tt> is not set, or is explicitly set to
<tt class="literal">undef</tt>, the sequence of overloading events is
unaffected: handlers are sought, autogeneration is attempted, and
finally the <tt class="literal">nomethod</tt> handler is invoked.  If that
fails, an exception is raised.</p>
</dd>


<dt>
<b>false</b>
</dt>
<dd>
<p>If <tt class="literal">fallback</tt> is set to a defined but false value
(like <tt class="literal">0</tt>), autogeneration is never attempted.  Perl
will call the <tt class="literal">nomethod</tt> handler if one exists, but
raise an exception otherwise.</p>
</dd>


<dt>
<b>true</b>
</dt>
<dd>
<p>This is nearly the same behavior as for <tt class="literal">undef</tt>, but
no exception is raised if an appropriate handler cannot be synthesized
via autogeneration.  Instead, Perl reverts to following the
unoverloaded behavior for that operator, as though there were no
<tt class="literal">use overload</tt> pragma in the class at all.</p>
</dd>

</dl>

<p>
</p>


<!-- BOTTOM NAV BAR -->

<hr width="684" align="left">
<div class="navbar">
<table width="684" border="0">
<tr>
<td align="left" valign="top" width="228"><a href="ch13_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="228"><a href="ch13_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="228">13.4. The Copy Constructor (=)</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="228">13.6. Overloading Constants</td>
</tr>
</table>
</div>
<hr width="684" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

<!-- END OF BODY -->

</body>
</html>
