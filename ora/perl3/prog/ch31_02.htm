<html>
<head>
<title>use autouse (Programming Perl)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="use autouse">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home">
<map name="banner-map"><AREA SHAPE="rect" coords="1,-2,616,66" HREF="index.htm" ALT="Programming Perl"><AREA SHAPE="rect" coords="629,-11,726,25" HREF="jobjects/fsearch.htm" ALT="Search this book">
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="684" border="0">
<tr>
<td align="left" valign="top" width="228"><a href="ch31_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="228"><a href="ch31_01.htm"></a></td><td align="right" valign="top" width="228"><a href="ch31_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>



<h2 class="sect1">31.2. use autouse</h2>

<blockquote>
<pre class="programlisting">use autouse 'Carp' =&gt; qw(carp croak);
carp "this carp was predeclared and autoused";</pre>
</blockquote>

<p>
<a name="INDEX-5418"></a>
This pragma provides a mechanism for run-time demand loading of a
particular module only when a function from that module really gets
called.  It does this by providing a stub function that replaces
itself with the real call once triggered.  This is similar in spirit
to the way the standard <tt class="literal">AutoLoader</tt> and <tt class="literal">SelfLoader</tt> modules
behave.  In short, it's a performance hack to help make your Perl
program start up faster (on average) by avoiding compilation of modules
that might never ever be called during a given execution run.</p>

<p>How <tt class="literal">autouse</tt> behaves depends on whether the module is already loaded.
For example, if the module <tt class="literal">Module</tt> is already loaded, then the
declaration:
<blockquote>
<pre class="programlisting">use autouse 'Module' =&gt; qw(func1 func2($;$) Module::func3);</pre>
</blockquote>

is equivalent to the simple import of two functions:
<blockquote>
<pre class="programlisting">use Module qw(func1 func2);</pre>
</blockquote>

This assumes that <tt class="literal">Module</tt> defines <tt class="literal">func2()</tt> with prototype <tt class="literal">($;$)</tt>, and
that <tt class="literal">func1()</tt> and <tt class="literal">func3()</tt> have no prototypes.  (More generally, this also
assumes that <tt class="literal">Module</tt> uses <tt class="literal">Exporter</tt>'s standard <tt class="literal">import</tt> method;
otherwise, a fatal error is raised.) In any event, it completely ignores 
<tt class="literal">Module::func3</tt> since that is presumably already declared.</p>

<p>If, on the other hand, <tt class="literal">Module</tt> has not yet been loaded when the
<tt class="literal">autouse</tt> pragma is parsed, the pragma declares functions <tt class="literal">func1</tt> and
<tt class="literal">func2</tt> to be in the current package.  It also declares a function
<tt class="literal">Module::func3</tt> (which could be construed as mildly antisocial, were
it not for the fact that the nonexistence of the <tt class="literal">Module</tt> module
has even more antisocial consequences).  When these functions are
called, they make sure the <tt class="literal">Module</tt> in question is loaded and then
replace themselves with calls to the real functions just loaded.</p>

<p>Because the <tt class="literal">autouse</tt> pragma moves portions of your program's
execution from compile time to run time, this can have unpleasant
ramifications.  For example, if the module you <tt class="literal">autouse</tt> has some
initialization that is expected to be done early, this may not happen
early enough.  Autousing can also hide bugs in your code when
important checks are moved from compile time to run time.</p>

<p>In particular, if the prototype you've specified on <tt class="literal">autouse</tt> line
is wrong, you will not find out about it until the corresponding function
is executed (which may be months or years later, for a rarely called function).
To partially alleviate this problem, you could write your
code like this during code development:
<blockquote>
<pre class="programlisting">use Chase;
use autouse Chase =&gt; qw(hue($) cry(&amp;$));
cry "this cry was predeclared and autoused";</pre>
</blockquote>

The first line ensures that errors in your argument specification
will be found early.  When your program graduates from development
into production mode, you can comment out the regular loading of
the <tt class="literal">Chase</tt> module and leave just the autousing call in place.  That way you 
get safety during development and performance during production.</p>


<!-- BOTTOM NAV BAR -->

<hr width="684" align="left">
<div class="navbar">
<table width="684" border="0">
<tr>
<td align="left" valign="top" width="228"><a href="ch31_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="228"><a href="ch31_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="228">31.1. use attributes</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="228">31.3. use base</td>
</tr>
</table>
</div>
<hr width="684" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

<!-- END OF BODY -->

</body>
</html>
