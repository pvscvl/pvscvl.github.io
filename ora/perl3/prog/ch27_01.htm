<html>
<head>
<title>Perl Culture (Programming Perl)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Perl Culture">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home">
<map name="banner-map"><AREA SHAPE="rect" coords="1,-2,616,66" HREF="index.htm" ALT="Programming Perl"><AREA SHAPE="rect" coords="629,-11,726,25" HREF="jobjects/fsearch.htm" ALT="Search this book">
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="684" border="0">
<tr>
<td align="left" valign="top" width="228"><a href="ch26_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="228"><a href="part4.htm"></a></td><td align="right" valign="top" width="228"><a href="ch27_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>



<h1 class="chapter">Chapter 27.  Perl Culture</h1>
<div class="htmltoc">
<h4 class="tochead">Contents:</h4>
  <p> <a href="#INDEX-4381">History Made Practical</a> <br>
<a href="ch27_02.htm">Perl Poetry</a>
<br>
</p>
</div>

<p>This book is a part of Perl culture, so we can't hope to put everything
we know about Perl culture in here.  We can only whet your appetite with a
little history, and a little art--some would say "very little art".  For a
much larger dose of Perl culture, see www.perl.org and www.perl.com. (Larry keeps copies of all his (official) ravings at www.wall.org/~larry.) Or just get acquainted with some other Perl programmers. We can't tell you what sort of people they'll be--about the only personality trait Perl programmers have in common is that they're all pathologically helpful.</p>


<h2 class="sect1">27.1. History Made Practical</h2>

<a name="INDEX-4381"></a><a name="INDEX-4382"></a>
<p>In order to understand why Perl is defined the way it is (or isn't), one
must first understand why Perl even exists.  So, let's drag out the old
dusty history book....</p>

<p>Way back in 1986, Larry was a systems programmer on a project
developing multi-level-secure wide-area networks.  He was in charge of
an installation consisting of three VAXen and three Suns on the West
Coast, connected over an encrypted, 1200-baud serial line to a similar
configuration on the East Coast.  Since Larry's primary job was
support (he wasn't a programmer on the project, just the system guru),
he was able to exploit his three virtues (laziness, impatience, and
hubris) to develop and enhance all sorts of useful tools--such as
<em class="emphasis">rn</em>, <em class="emphasis">patch</em>, and
<em class="emphasis">warp</em>.<a href="#FOOTNOTE-1">[1]</a>
</p>
<blockquote class="footnote">

<a name="FOOTNOTE-1"></a>
<p>[1] It was at about this time
that Larry latched onto the phrase "feeping creaturism" in a desperate
attempt to justify on the basis of biological necessity his
overwhelming urge to add "just one more feature".  After all, if Life
Is Simply Too Complicated, why not programs too? Especially programs
like <em class="emphasis">rn</em> that really ought to be treated as
advanced Artificial Intelligence projects so that they can read your
news for you.  Of course, some people say that the
<em class="emphasis">patch</em> program is already <em class="emphasis">too</em>
smart.</p>

</blockquote>

<p>One day, after Larry had just finished ripping <em class="emphasis">rn</em>
to shreds, leaving it in pieces on the floor of his directory, the
great Manager came to him and said, "Larry, we need a configuration
management and control system for all six VAXen and all six Suns.  We
need it in a month. Go to it!"</p>

<p>So, Larry, never being one to shirk work, asked himself what was the
best way to have a bicoastal CM system, without writing it from
scratch, that would allow viewing of problem reports on both coasts,
with approvals and control.  The answer came to him in one word:
B-news.<a href="#FOOTNOTE-2">[2]</a>
</p>
<blockquote class="footnote">

<a name="FOOTNOTE-2"></a>
<p>[2]That is, the second implementation of Usenet
transport software.</p>

</blockquote>

<p>Larry went off and installed news on these machines and added two
control commands: an "append" command to append to an existing
article, and a "synchronize" command to keep the article numbers the
same on both coasts.  CM would be done using RCS (Revision Control
System), and approvals and submissions would be done using news and
<em class="emphasis">rn</em>.  Fine so far.</p>

<p>Then the great Manager asked him to produce reports.  News was
maintained in separate files on a master machine, with lots of
cross-references between files.  Larry's first thought was "Let's use
<em class="emphasis">awk</em>." Unfortunately, the <em class="emphasis">awk</em>
of that day couldn't handle opening and
closing of multiple files based on information in the files. Larry
didn't want to have to code a special-purpose tool.  As a result, a new
language was born.</p>

<p>This new tool wasn't originally called Perl.  Larry bandied about a
number of names with his officemates and cohorts (Dan Faigin, who wrote
this history, and Mark Biggar, his brother-in-law, who also helped
greatly with the initial design).  Larry actually considered and
rejected every three- or four-letter word in the dictionary.  One of the
earliest names was "Gloria", after his sweetheart (and wife).
He soon decided that this would cause too much domestic confusion.</p>

<p>The name then became "Pearl", which mutated into our present-day
"Perl", partly because Larry saw a reference to another language
called PEARL, but mostly because he's too lazy to type five letters
all the time.  And, of course, so that Perl could be used as a
four-letter word.  (You'll note, however, the vestiges of the former
spelling in the acronym's gloss: "Practical Extraction
<em class="emphasis">And</em> Report Language".)</p>

<p>This early Perl lacked many of the features of today's Perl.  Pattern
matching and filehandles were there, scalars were there, and formats
were there, but there were very few functions, no associative arrays,
and only a crippled implementation of regular expressions, borrowed from
<em class="emphasis">rn</em>.  The manpage was only 15 pages long.  But Perl
was faster than <em class="emphasis">sed</em> and <em class="emphasis">awk</em>
and began to be used on other applications on the project.</p>

<p>
<a name="INDEX-4383"></a><a name="INDEX-4384"></a>
But Larry was needed elsewhere.  Another great Manager came over one
day and said, "Larry, support R&amp;D."  And Larry said, okay.  He
took Perl with him and discovered that it was turning into a good tool
for system administration.  He borrowed Henry Spencer's beautiful
regular expression package and butchered it into something Henry would
prefer not to think about during dinner.  Then Larry added most of the
goodies he wanted, and a few goodies other people wanted.  He released
it on the network.<a href="#FOOTNOTE-3">[3]</a> The rest, as they say, is
history.<a href="#FOOTNOTE-4">[4]</a>
</p>
<blockquote class="footnote">

<a name="FOOTNOTE-3"></a>
<p>[3] More astonishingly, he kept on
releasing it as he went to work at Jet Propulsion Lab, then at NetLabs
and Seagate.  Nowadays, other people do most of the real work, and
Larry pretends to work for O'Reilly &amp; Associates (a small company
that publishes pamphlets about computers and
stuff).</p>

</blockquote>
<blockquote class="footnote">

<a name="FOOTNOTE-4"></a>
<p>[4] And this, so to speak, is a footnote to
history. When Perl was started, <em class="emphasis">rn</em> had just been
ripped to pieces in anticipation of a major rewrite.  Since he started
work on Perl, Larry hasn't touched <em class="emphasis">rn</em>. It is
still in pieces.  Occasionally, Larry threatens to rewrite
<em class="emphasis">rn</em> in Perl, but never
seriously.</p>

</blockquote>

<p>Which goes something like this: Perl 1.0 was released on December 18,
1987; some people still take Perl's Birthday seriously.  Perl 2.0
follows in June 1988, and Randal Schwartz creates the legendary "Just
Another Perl Hacker" signature.  In 1989, Tom Christiansen presents
the first public Perl tutorial at the Baltimore Usenix.  With Perl 3.0
in October 1989, the language is released and distributed for the
first time under the terms of the GNU Public License.</p>

<p>In March of 1990, Larry writes the first Perl Poem (see the following
section).  Then he and Randal write the first edition of this book,
The Pink Camel; it is published in early 1991.  Perl 4.0 is released
simultaneously; it includes an Artistic License as well as the GPL.</p>

<p>The unveiling of the much anticipated Perl 5 occurs in October 1994.
A complete rewrite of Perl, it includes objects and modules.  The
advent of Perl 5 even merits coverage by <em class="emphasis">The
Economist</em>.  In 1995, CPAN is officially introduced to the
Perl community.  Jon Orwant begins publishing <em class="emphasis">The Perl
Journal</em> in 1996.  After a long gestation, the second
edition of this book, The Blue Camel, appears that fall.  The
first O'Reilly Perl Conference (TPC) is held in San Jose, California,
in the summer of 1997.  Notable events are now occurring almost daily,
so for the rest of history, check out the Perl Timeline on CPAST,
the Comprehensive Perl Arcana Society Tapestry
(<em class="emphasis">history.perl.org</em>).</p>












<!-- BOTTOM NAV BAR -->

<hr width="684" align="left">
<div class="navbar">
<table width="684" border="0">
<tr>
<td align="left" valign="top" width="228"><a href="ch26_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="228"><a href="ch27_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="228">26.5. Documenting Your Perl Programs</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="228">27.2. Perl Poetry</td>
</tr>
</table>
</div>
<hr width="684" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

<!-- END OF BODY -->

</body>
</html>
