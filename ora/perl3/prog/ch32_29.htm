<html>
<head>
<title>IO::Socket (Programming Perl)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="IO::Socket">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home">
<map name="banner-map"><AREA SHAPE="rect" coords="1,-2,616,66" HREF="index.htm" ALT="Programming Perl"><AREA SHAPE="rect" coords="629,-11,726,25" HREF="jobjects/fsearch.htm" ALT="Search this book">
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="684" border="0">
<tr>
<td align="left" valign="top" width="228"><a href="ch32_28.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="228"><a href="ch32_01.htm"></a></td><td align="right" valign="top" width="228"><a href="ch32_30.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>



<h2 class="sect1">32.29. IO::Socket</h2>

<blockquote>
<pre class="programlisting">use IO::Socket;</pre>
</blockquote>

<p>As a client:
<blockquote>
<pre class="programlisting">$socket = new IO::Socket::INET (PeerAddr =&gt; $remote_host,
                                PeerPort =&gt; $remote_port,
                                Proto    =&gt; "tcp",
                                Type     =&gt; SOCK_STREAM)
    or die "Can't connect to $remote_host:$remote_port : $!\n";


# Or use the simpler single-argument interface.
$socket = IO::Socket::INET-&gt;new("$remote_host:$remote_port");
                              # "localhost:80", for example.

print $socket "data\n";
$line = &lt;$socket&gt;;</pre>
</blockquote>
As a server:
<blockquote>
<pre class="programlisting">$server = IO::Socket::INET-&gt;new(LocalPort =&gt; $server_port,
                                Type      =&gt; SOCK_STREAM,
                                Reuse     =&gt; 1,
                                Listen    =&gt; 10 )  # or SOMAXCONN
    or die "Can't be a TCP server on port $server_port : $!\n";

while ($client = $server-&gt;accept()) {
    # $client is the new connection
    $request = &lt;$client&gt;;
    print $client "answer\n";
    close $client;
}

# Make simple TCP connecting function that returns a filehandle
# for use in simple client programs.
sub tcp_connect {
    my ($host, $service) = @_;
    require IO::Socket;
    return  IO::Socket::INET-&gt;new(join ":", $host, $service);
}
my $fh    = tcp_connect("localhost", "smtp");  # with scalar
local *FH = tcp_connect("localhost", "smtp");  # with handle</pre>
</blockquote>
The <tt class="literal">IO::Socket</tt> module provides a higher-level
approach to socket handling than the raw <tt class="literal">Socket</tt>
module.  You may use it in an object-oriented fashion, although this
isn't mandatory, because the return values are proper filehandles and
may be used as such, as shown in the <tt class="literal">tcp_connect</tt>
function in the example.  This module inherits methods from
<tt class="literal">IO::Handle</tt>, and itself requires
<tt class="literal">IO::Socket::INET</tt> and
<tt class="literal">IO::Socket::UNIX</tt>.  See the description of the
<tt class="literal">FileHandle</tt> module for other interesting features.
See <a href="ch16_01.htm">Chapter 16, "Interprocess Communication"</a> for a
description of using sockets.</p>


<!-- BOTTOM NAV BAR -->

<hr width="684" align="left">
<div class="navbar">
<table width="684" border="0">
<tr>
<td align="left" valign="top" width="228"><a href="ch32_28.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="228"><a href="ch32_30.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="228">32.28. Getopt::Std</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="228">32.30. IPC::Open2</td>
</tr>
</table>
</div>
<hr width="684" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

<!-- END OF BODY -->

</body>
</html>
