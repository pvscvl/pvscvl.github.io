<html>
<head>
<title>Bits and Pieces (Programming Perl)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Bits and Pieces">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home">
<map name="banner-map"><AREA SHAPE="rect" coords="1,-2,616,66" HREF="index.htm" ALT="Programming Perl"><AREA SHAPE="rect" coords="629,-11,726,25" HREF="jobjects/fsearch.htm" ALT="Search this book">
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="684" border="0">
<tr>
<td align="left" valign="top" width="228"><a href="part2.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="228"><a href="part2.htm"></a></td><td align="right" valign="top" width="228"><a href="ch02_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>



<h1 class="chapter">Chapter 2.  Bits and Pieces</h1>
<div class="htmltoc">
<h4 class="tochead">Contents:</h4>
  <p> <a href="#INDEX-402">Atoms</a> <br>
<a href="ch02_02.htm">Molecules</a>
<br>
<a href="ch02_03.htm">Built-in Data Types</a>
<br>
<a href="ch02_04.htm">Variables</a>
<br>
<a href="ch02_05.htm">Names</a>
<br>
<a href="ch02_06.htm">Scalar Values</a>
<br>
<a href="ch02_07.htm">Context</a>
<br>
<a href="ch02_08.htm">List Values and Arrays</a>
<br>
<a href="ch02_09.htm">Hashes</a>
<br>
<a href="ch02_10.htm">Typeglobs and Filehandles</a>
<br>
<a href="ch02_11.htm">Input Operators</a>
<br>
</p>
</div>


<p>We're going to start small, so this chapter is about the elements of Perl.</p>

<p>Since we're starting small, the progression through the next several
chapters is necessarily from small to large.  That is, we take a
bottom-up approach, beginning with the smallest components of Perl
programs and building them into more elaborate structures, much like
molecules are built out of atoms.  The disadvantage of this approach
is that you don't necessarily get the Big Picture before getting lost
in a welter of details.  The advantage is that you can understand the
examples as we go along.  (If you're a top-down person, just turn the
book over and read the chapters backward.)</p>

<p>Each chapter does build on the preceding chapter (or the <em class="emphasis">subsequent</em>
chapter, if you're reading backward), so you'll need to be careful if
you're the sort of person who skips around.</p>

<p>You're certainly welcome to peek at the reference materials toward the
end of the book as we go along.  (That doesn't count as skipping
around.)  In particular, any isolated word in <tt class="literal">typewriter</tt>
font is likely to be found in <a href="ch29_01.htm">Chapter 29, "Functions"</a>.  And
although we've tried to stay
operating-system neutral, if you are unfamiliar with Unix terminology
and run into a word that doesn't seem to mean what you think it ought
to mean, you should check whether the word is in the Glossary.  If the
Glossary doesn't work, the index probably will.</p>


<h2 class="sect1">2.1. Atoms</h2>

<p>
<a name="INDEX-401"></a><a name="INDEX-402"></a><a name="INDEX-403"></a>
Although there are various invisible things going on behind the scenes
that we'll explain presently, the smallest things you generally work with
in Perl are individual characters.  And we do mean characters;
historically, Perl freely confused bytes with characters and characters
with bytes, but in this new era of global networking, we must be careful
to distinguish the two.</p>

<p>
<a name="INDEX-404"></a>
Perl may, of course, be written entirely in the 7-bit ASCII
character set.  Perl also allows you to write in any 8-bit or 16-bit
character set, whether it's a national character set or some other
legacy character set.  However, if you choose to write in one of
these older, non-ASCII character sets, you may use non-ASCII
characters only within string literals.  You are responsible for
making sure that the semantics of your program are consistent with
the particular national character set you've chosen.  For instance,
if you're using a 16-bit encoding for an Asian national character
set, keep in mind that Perl will generally think of each of your
characters as two bytes, not as one character.</p>

<p>
<a name="INDEX-405"></a><a name="INDEX-406"></a> 
As described in <a href="ch15_01.htm">Chapter 15, "Unicode"</a>, we've recently added
support for Unicode to
Perl.<a href="#FOOTNOTE-1">[1]</a> This support is pervasive
throughout the language: you can use Unicode characters in identifiers
(variable names and such) as well as within literal strings.  When you
are using Unicode, you don't need to worry about how many bits or
bytes it takes to represent a character.  Perl just pretends all
Unicode characters are the same size (that is, size 1), even though
any given character might be represented by multiple bytes internally.
Perl normally represents Unicode internally as UTF-8, a
variable-length encoding.  (For instance, a Unicode smiley character,
U-263A, would be represented internally as a three-byte sequence.)</p>
<blockquote class="footnote">

<a name="FOOTNOTE-1"></a>
<p>[1] As excited as we are about Unicode support, most
of our examples will be in ASCII, since not everyone has a decent
Unicode editor yet.</p>

</blockquote>

<p>If you'll let us drive our analogy of the physical elements a bit
further, characters are atomic in the same sense as the individual
atoms of the various elements.  Yes, they're composed of smaller
particles known as bits and bytes, but if you break a character apart
(in a character accelerator, no doubt), the individual bits and bytes
lose the distinguishing chemical properties of the character as a
whole.  Just as neutrons are an implementation detail of the U-238
atom, so too bytes are an implementation detail of the U-263A character.</p>

<p>So we'll be careful to say "characters" when we mean characters, and
"bytes" when we mean bytes.  But we don't mean to scare you--you can
still do the good old-fashioned byte processing easily enough.  All you
have to do is tell Perl that you still want to think of bytes as
characters.  You can do that with a <tt class="literal">use bytes</tt> pragma (see 
<a href="ch31_01.htm">Chapter 31, "Pragmatic Modules"</a>).  But even if you don't do that, Perl will
still do a pretty good job of keeping small characters in 8 bits when
you expect it to.</p>

<p>So don't sweat the small stuff.  Let's move on to bigger and better things.</p>





























































































<!-- BOTTOM NAV BAR -->

<hr width="684" align="left">
<div class="navbar">
<table width="684" border="0">
<tr>
<td align="left" valign="top" width="228"><a href="part2.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="228"><a href="ch02_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="228"></td><td align="right" valign="top" width="228">2.2. Molecules</td>
</tr>
</table>
</div>
<hr width="684" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="index.htm"><area shape="rect" coords="448,0,526,132" href="../tk/index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm">
</map>

<!-- END OF BODY -->

</body>
</html>
