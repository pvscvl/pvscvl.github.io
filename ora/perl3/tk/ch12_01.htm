<html><head><title>The Menu System (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch12_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 12. The Menu System</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4>
  <p> <a href="#mastperltk-CHP-12-SECT-1">Menu System Components</a><br />
<a href="ch12_02.htm">Menubars and Pulldown Menus</a><br />
<a href="ch12_03.htm">The Win32 System Menu Item</a><br />
<a href="ch12_04.htm">Classical Menubars</a><br />
<a href="ch12_05.htm">Popup Menus</a><br />
<a href="ch12_06.htm">Option Menus</a><br />
<a href="ch12_07.htm">Menu Virtual Events</a><br />
<a href="ch12_08.htm">Pie Menus</a><br /></p></div>

<p>This chapter describes the menu system: its components, how to use
them, and how they behave in a Unix and Win32 environment. Of primary
interest are menubars and conventional linear menus (pulldown,
option, and popup), although at chapter's end, we do visit a
new kind of menu, the pie menu.
</p>

<p>Typically, a menu contains commands that aren't used
frequently, such as configuration options, File Open, File Close,
Help, and so on. Commands that are used frequently may not be
appropriate for menus and should be placed directly in the window to
provide easier access for the user. Some examples of how menus might
be used are for:
</p>

<ul><li>
<p>Creating a File, Edit, and Help menubar across the top of your
application
</p>
</li><li>
<p>Displaying a list of fonts from which the user can choose, with the
selected font marked with a checkmark
</p>
</li><li>
<p>Displaying a list of editing commands that become available when the
user right-clicks on another object in your window (such as a Listbox
or Entry widget)
</p>
</li><li>
<p>Making a Menu pop up with a click of a button</p>
</li></ul>
<p>You can build each of these different types of menus with the basic
Menu widget.
</p>
<div class="sect1"><a name="mastperltk-CHP-12-SECT-1" /></a>
<h2 class="sect1">12.1. Menu System Components</h2>

<p>First, let's take a quick tour of the components of a menu.  </p>

<a name="mastperltk-CHP-12-SECT-1.1" /></a><div class="sect2">
<h3 class="sect2">12.1.1. Menus and Menu Items</h3>

<p><a name="INDEX-1717" /></a><a name="INDEX-1718" /></a><a name="INDEX-1719" /></a><a name="INDEX-1720" /></a>The
foundation of the menu system is the Menu widget, a rectangular
window that, as a result of some event, appears out of the ether and
displays one or more columns of <em class="emphasis">menu items</em>. The
event that causes the menu to appear is often the press of a
Menubutton or keyboard character, but could just as well be a
mouseclick or even a callback. The action of making a menu appear is
called <em class="emphasis">posting</em>; making a menu disappear is
called <em class="emphasis">unposting</em>. There are six flavors of menu
item, shown in <a href="ch12_01.htm">Figure 12-1</a>:
<em class="emphasis">cascade</em>, <em class="emphasis">checkbutton</em>,
<em class="emphasis">command</em>, <em class="emphasis">radiobutton</em>,
<em class="emphasis">separator</em>, and <em class="emphasis">tearoff</em>.
</p>

<a name="mastperltk-CHP-12-FIG-1" /></a><div class="figure"><img src="figs/mptk.1201.gif" alt="Figure 12-1" width="392" height="289" /></div><h4 class="objtitle">Figure 12-1. Important components of the menu system</h4>

<p><a name="INDEX-1721" /></a><a name="INDEX-1722" /></a><a name="INDEX-1723" /></a><a name="INDEX-1724" /></a><a name="INDEX-1725" /></a>With the exception of a separator, clicking
a menu item initiates item-specific behavior, such as executing a
callback, posting a menu, or perhaps setting a Perl variable.
We'll examine the various menu items in detail shortly.
Briefly:
</p>

<ul><li>
<p><a name="INDEX-1726" /></a>Clicking a
cascade menu item posts another menu immediately to the right of the
cascade. The new menu may have menu items of any number or type,
including another cascade. A series of cascades are posted in quick
succession from left to right, hence the menu item's name.
</p>
</li><li>
<p>A checkbutton menu item works just like the Checkbutton widget
described in <a href="ch04_01.htm">Chapter 4, "
Button, Checkbutton, and Radiobutton Widgets"</a>. 
</p>
</li><li>
<p><a name="INDEX-1727" /></a>Clicking a command menu item invokes a
callback.
</p>
</li><li>
<p>A radiobutton menu item works just like the Radiobutton widget
described in <a href="ch04_01.htm">Chapter 4, "
Button, Checkbutton, and Radiobutton Widgets"</a>.
</p>
</li><li>
<p>A separator menu item is a passive line used to divide a Menu into
logical sections.
</p>
</li><li>
<p><a name="INDEX-1728" /></a>A tearoff
menu item (when present) is always Menu index zero. After clicking a
tearoff, you can drag the Menu somewhere so it's always
available for fast access.
</p>
</li></ul>
</div>
<a name="mastperltk-CHP-12-SECT-1.2" /></a><div class="sect2">
<h3 class="sect2">12.1.2. Menu Indexes</h3>

<p><a name="INDEX-1729" /></a>Many Menu
methods expect a menu item <em class="emphasis">index</em> that specifies
which menu item to operate upon. The following are valid menu
indexes:
</p>

<ul><li>
<p>Every menu item is identified by an integer ordinal, starting at zero
for the topmost menu item and increasing linearly downward. By
default, each menu has a tearoff menu item that is ordinal zero
(tearoffs are the dashed lines at the tops of menus). Pressing the
tearoff reparents the menu by cloning it in a new Toplevel, so you
can move the menu about in its own window.
</p>
</li><li>
<p><a name="INDEX-1730" /></a>The keyword <tt class="literal">active</tt>,
which means the menu item that is currently selected (the mouse is
over it and it is highlighted). If there are no menu items active,
<tt class="literal">active</tt> means the same as <tt class="literal">none</tt>.
</p>
</li><li>
<p><a name="INDEX-1731" /></a><a name="INDEX-1732" /></a>The keywords <tt class="literal">end</tt> or
<tt class="literal">last</tt>, which mean the last menu item in the Menu.
If there are no items in the Menu, <tt class="literal">end</tt> means the
same as <tt class="literal">none</tt>.
</p>
</li><li>
<p><a name="INDEX-1733" /></a>The keyword
<tt class="literal">none</tt>, which means no menu item is selected.
</p>
</li><li>
<p>A pixel y coordinate of the form <tt class="literal">@pixel_offset</tt>,
where <tt class="literal">pixel_offset</tt> is an integer, relative to the
Menu's top-left corner.
</p>
</li><li>
<p><a name="INDEX-1734" /></a>A regular expression matched against the
menu item's -<tt class="literal">label</tt> option. Typically,
referring to a menu item by label rather than by ordinal is
preferred, because the code should still work even if the number of
menu items changes.
</p>
</li></ul>
</div>
<a name="mastperltk-CHP-12-SECT-1.3" /></a><div class="sect2">
<h3 class="sect2">12.1.3. Manipulating Menus</h3>

<p><a name="INDEX-1735" /></a><a name="INDEX-1736" /></a>Configure a Menu widget using the
<tt class="literal">configure</tt> and <tt class="literal">cget</tt> methods,
just like any other widget. If you're unfamiliar with these
methods, see <a href="ch13_01.htm">Chapter 13, "Miscellaneous Perl/Tk Methods"</a>.
</p>

<p><a name="INDEX-1737" /></a>Here are some
other Menu methods:
</p>

<dl>
<dt>$<tt class="literal">menu-&gt;clone(</tt><tt><em class="replaceable"><tt>parent_menu</tt></em><tt class="literal">,</tt> <tt><em class="replaceable">clone_type</em></tt></tt><tt class="literal">)</tt> </dt>
<dd>
<a name="INDEX-1738" /></a>Clones a Menu,
but you never call it yourself. Tk makes clones of menubar and
tearoff Menus. Enter <tt class="userinput"><b>perldoc</b></tt>
<tt class="userinput"><b>Tk::Menu</b></tt> for details.
<p></p>
</dd>


<dt><tt class="literal">$menu-&gt;post(</tt><tt><em class="replaceable"><tt>x</tt></em><tt class="literal">,</tt> <tt><em class="replaceable">y</em></tt></tt><tt class="literal">)</tt> </dt>
<dd>
<a name="INDEX-1739" /></a>Posts a Menu at
root window coordinates
(<em class="replaceable"><tt><tt>x</tt></tt></em><tt><tt><em class="replaceable">,</em></tt></tt>
<em class="replaceable"><tt><tt>y</tt></tt></em>). This method is most often superseded
by the <tt class="literal">Post</tt> or <tt class="literal">Popup</tt> methods.
<p></p>
</dd>


<dt><tt class="literal">$menu-&gt;unpost</tt> </dt>
<dd>
<a name="INDEX-1740" /></a>Unmaps a Menu
so it's no longer displayed.
<p></p>
</dd>

</dl>

</div>
<a name="mastperltk-CHP-12-SECT-1.4" /></a><div class="sect2">
<h3 class="sect2">12.1.4. Manipulating Menu Items</h3>

<p><a name="INDEX-1741" /></a><a name="INDEX-1742" /></a>Configuring menu items is analogous to
configuring widgets, except that we want to limit our activities to
one menu item; that's what the
<tt class="literal">entryconfigure</tt> and <tt class="literal">entrycget</tt>
methods are for. The format is:
</p>

<blockquote><pre class="code">$menu-&gt;entryconfigure(<tt><em class="replaceable">index</em></tt>, -<tt><em class="replaceable">option</em></tt> =&gt; <tt><em class="replaceable">value</em></tt>);</pre></blockquote>

<p><a name="INDEX-1743" /></a>The index,
which can be in any of the previously described forms, specifies
which menu item to configure. To fetch the value of a particular menu
item option, use:
</p>

<blockquote><pre class="code">$menu-&gt;entrycget(<tt><em class="replaceable">index</em></tt>, -<tt><em class="replaceable">option</em></tt>);</pre></blockquote>

<p>Of course, there are other things you can do with menu items:</p>

<dl>
<dt><tt class="literal">$menu-&gt;activate(</tt><tt><em class="replaceable"><tt>index</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
<a name="INDEX-1744" /></a>Makes the
menu item at <tt><em class="replaceable"><tt>index</tt></em></tt> the sole active menu
item.
<p></p>
</dd>


<dt><tt class="literal">$menu-&gt;delete(</tt><tt><em class="replaceable"><tt>index</tt></em> <tt class="literal">[,</tt> <tt><em class="replaceable">index_end</em></tt></tt><tt class="literal">])</tt> </dt>
<dd>
<a name="INDEX-1745" /></a>Deletes menu
item <tt><em class="replaceable"><tt>index</tt></em></tt> or the range
<tt><em class="replaceable"><tt>index</tt></em></tt> through
<tt><em class="replaceable"><tt>index_end</tt></em></tt>
<p></p>
</dd>


<dt><tt class="literal">$menu-&gt;index(</tt><tt><em class="replaceable"><tt>index</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
<a name="INDEX-1746" /></a>Returns the
integer ordinal of the menu item at <tt><em class="replaceable"><tt>index</tt></em></tt>,
where <tt><em class="replaceable"><tt>index</tt></em></tt> can be any of the previously
described forms
<p></p>
</dd>


<dt><tt class="literal">$menu-&gt;insert(</tt><tt><em class="replaceable"><tt>index</tt></em><tt class="literal">,</tt> <tt><em class="replaceable">type</em></tt> <tt class="literal">[,</tt> <tt><em class="replaceable">options</em></tt></tt><tt class="literal">])</tt> </dt>
<dd>
<a name="INDEX-1747" /></a>Inserts a
new menu item of <tt><em class="replaceable"><tt>type</tt></em></tt> before
<tt><em class="replaceable"><tt>index</tt></em></tt>, where
<tt><em class="replaceable"><tt>type</tt></em></tt> may be <tt class="literal">cascade</tt>,
<tt class="literal">checkbutton</tt>, <tt class="literal">command</tt>,
<tt class="literal">radiobutton</tt>, or <tt class="literal">separator</tt>
<p></p>
</dd>


<dt><tt class="literal">$menu-&gt;invoke(</tt><tt><em class="replaceable"><tt>index</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
<a name="INDEX-1748" /></a>Executes the
callback associated with menu item <tt><em class="replaceable"><tt>index</tt></em></tt>
<p></p>
</dd>


<dt><tt class="literal">$menu-&gt;postcascade(</tt><tt><em class="replaceable"><tt>index</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
<a name="INDEX-1749" /></a>Posts the
menu associated with the cascade menu item
<tt><em class="replaceable"><tt>index</tt></em></tt>
<p></p>
</dd>


<dt><tt class="literal">$menu-&gt;type(</tt><tt><em class="replaceable"><tt>index</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
<a name="INDEX-1750" /></a>Returns a string
indicating the type of menu item at <tt><em class="replaceable"><tt>index</tt></em></tt>
<p></p>
</dd>


<dt><tt class="literal">$menu-&gt;yposition(</tt><tt><em class="replaceable"><tt>index</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
<a name="INDEX-1751" /></a>Returns the
y coordinate of the top-left pixel of the menu item at
<tt><em class="replaceable"><tt>index</tt></em></tt><a name="INDEX-1752" /></a>
<p></p>
</dd>

</dl>

</div>
<a name="mastperltk-CHP-12-SECT-1.5" /></a><div class="sect2">
<h3 class="sect2">12.1.5. Menubars</h3>

<p><a name="INDEX-1753" /></a><a name="INDEX-1754" /></a><a name="INDEX-1755" /></a>Most nontrivial applications have
<em class="emphasis">menubars</em> arrayed across the tops of their
MainWindows (or any Toplevels for that matter). Arranged within a
menubar is a series of <em class="emphasis">menubuttons</em>, which, when
pressed, post menus. Unfortunately, these days the term menubutton is
somewhat of a misnomer, because in modern Tks, the menubutton is not
an actual Menubutton widget but a cascade menu item. This came about
because of menu system support for multiple operating systems.
</p>

<p>Prior to Perl/Tk Version 8, menubars were Frames filled with
Menubutton widgets, and programmers were responsible for managing the
geometry and appearance of the entire apparatus. Perl/Tk Versions 8
and above support a native look and feel for Unix and
Win32,<a href="#FOOTNOTE-24">[24]</a> so to keep menubar management simple
and consistent from the user and application developer points of
view, a new menubar management scheme was devised. The basic idea is
that the menubar is just a standard Menu widget associated with a
MainWindow or Toplevel widget, and cascade menu items fill the role
of Menubuttons. In fact, these statements created the menubar portion
of <a href="ch12_01.htm">Figure 12-1</a>:
</p><blockquote class="footnote"> <a name="FOOTNOTE-24" /></a><p> [24] Tcl/Tk also supports MacOS Classic.
We'll mention menubar support code for this operating system
even though it's not currently supported by Perl/Tk. But
Apple's next generation operating system, Mac OS X, is BSD
Unix-based, so it's possible to run Perl/Tk with a Unix look
and feel on a Mac today. Work is in progress to convert the Tcl/Tk
widgets to native Aqua, so we may see Perl/Tk with a Mac OS X look in
the future.</p> </blockquote>

<blockquote><pre class="code">$mw-&gt;configure(-menu =&gt; my $menubar = $mw-&gt;Menu);

my $file = $menubar-&gt;cascade(-label =&gt; '~File');
my $edit = $menubar-&gt;cascade(-label =&gt; '~Edit');
my $help = $menubar-&gt;cascade(-label =&gt; '~Help');</pre></blockquote>

<p>To keep things simple, we'll call menubar buttons that post
menus "menubuttons," whether they're real
Menubuttons or just cascade menu items. Menubutton widgets are
discussed in a later section.
</p>

<p><a name="INDEX-1756" /></a><a name="INDEX-1757" /></a><a name="INDEX-1758" /></a><a name="INDEX-1759" /></a>The
menu system is also aware of special operating system-dependent
menubuttons, which is why the Help menubutton in <a href="ch12_01.htm">Figure 12-1</a> is right justified (a custom in the Unix
world). Under Mac OS, which always has a Help menubutton at the top
of the display, Help menu items are <em class="emphasis">appended</em> to
the existing Help items. Similarly, Apple menu items are
<em class="emphasis">prepended</em> to the existing Apple menu items.
Later on, we'll see how to augment the System menubutton on
Win32 systems.
</p>

<p><a name="INDEX-1760" /></a>In summary, Tk 8 menubars have these
benefits over the classical Frame/Menubutton approach:
</p>

<ul><li>
<p>Identical programming interface regardless of the underlying
operating system
</p>
</li><li>
<p>Native look and feel for enhanced user experience </p>
</li><li>
<p>Automatic geometry management of the menubar and its buttons
(cascades)
</p>
</li><li>
<p>Special processing for Apple, Help, and System menubuttons</p>
</li></ul>
<p><a href="ch12_01.htm">Figure 12-2</a> shows how the code that produced <a href="ch12_01.htm">Figure 12-1</a> is rendered on a Win32 machine. In particular,
note how the Help menubutton is <em class="emphasis">not</em> treated
specially and <em class="emphasis">not</em> right justified.
</p>

<a name="mastperltk-CHP-12-FIG-2" /></a><div class="figure"><img src="figs/mptk.1202.gif" alt="Figure 12-2" width="243" height="200" /></div><h4 class="objtitle">Figure 12-2.  Compare this picture produced on Win32 with <a href="ch12_01.htm">Figure 12-1</a>, produced on Unix</h4>

</div>
<a name="mastperltk-CHP-12-SECT-1.6" /></a><div class="sect2">
<h3 class="sect2">12.1.6. Menu Options</h3>

<p><a name="INDEX-1761" /></a>As with
any widget, there are options that affect how the Menu looks and
behaves. The following is a list of the options available for the
Menu widget:
</p>

<dl>
<dt><tt class="literal">-activebackground =&gt;</tt> <tt><em class="replaceable"><tt>color</tt></em></tt></dt>
<dd>
<a name="INDEX-1762" /></a>Sets the background color behind
the active menu item.
<p></p>
</dd>


<dt><tt class="literal">-activeborderwidth =&gt;</tt> <tt><em class="replaceable"><tt>amount</tt></em></tt></dt>
<dd>
<a name="INDEX-1763" /></a>Sets the edge width of the active menu
item's border.
<p></p>
</dd>


<dt><tt class="literal">-activeforeground =&gt;</tt> <tt><em class="replaceable"><tt>color</tt></em></tt></dt>
<dd>
<a name="INDEX-1764" /></a>Sets the text color of the active
menu item.
<p></p>
</dd>


<dt><tt class="literal">-background =&gt;</tt> <tt><em class="replaceable"><tt>color</tt></em></tt></dt>
<dd>
<a name="INDEX-1765" /></a>Sets the background color of the
entire menu.
<p></p>
</dd>


<dt><tt class="literal">-borderwidth =&gt;</tt> <tt><em class="replaceable"><tt>amount</tt></em></tt></dt>
<dd>
<a name="INDEX-1766" /></a>Sets the width of the menu's
edge.
<p></p>
</dd>


<dt><tt class="literal">-cursor =&gt;</tt> <tt><em class="replaceable"><tt>cursorname</tt></em></tt></dt>
<dd>
<a name="INDEX-1767" /></a>Sets the cursor displayed when the mouse
cursor is over the menu.
<p></p>
</dd>


<dt><tt class="literal">-disabledforeground =&gt;</tt> <tt><em class="replaceable"><tt>color</tt></em></tt></dt>
<dd>
<a name="INDEX-1768" /></a>Sets the text color of any disabled menu
items.
<p></p>
</dd>


<dt><tt class="literal">-font =&gt;</tt> <tt><em class="replaceable"><tt>font</tt></em></tt></dt>
<dd>
<a name="INDEX-1769" /></a>Sets the font of the menu text.
<p></p>
</dd>


<dt><tt class="literal">-foreground =&gt;</tt> <tt><em class="replaceable"><tt>color</tt></em></tt></dt>
<dd>
<a name="INDEX-1770" /></a>Sets the color of the text in the
menu.
<p></p>
</dd>


<dt><tt class="literal">-menuitems =&gt;</tt> <tt><em class="replaceable"><tt>list</tt></em></tt></dt>
<dd>
<a name="INDEX-1771" /></a>Defines a list of items to create
in the menu.
<p></p>
</dd>


<dt><tt class="literal">-postcommand =&gt;</tt> <tt><em class="replaceable"><tt>callback</tt></em></tt></dt>
<dd>
<a name="INDEX-1772" /></a>Sets the
callback that is invoked before the menu is posted to the screen.
<p></p>
</dd>


<dt><tt class="literal">-relief =&gt; 'flat' | 'groove' | '</tt><tt class="userinput"><b>raised</b></tt><tt class="literal">' | 'ridge' | 'sunken'</tt></dt>
<dd>
<a name="INDEX-1773" /></a>Sets the relief of the menu's edges.
<p></p>
</dd>


<dt><tt class="literal">-selectcolor =&gt;</tt> <tt><em class="replaceable"><tt>color</tt></em></tt></dt>
<dd>
<a name="INDEX-1774" /></a>Sets the color of the selection
box in checkbutton or radiobutton items.
<p></p>
</dd>


<dt><tt class="literal">-takefocus =&gt;</tt> <tt class="userinput"><b>0</b></tt> <tt class="literal">| 1| undef</tt></dt>
<dd>
<a name="INDEX-1775" /></a>Controls the ability to use the
keyboard to traverse the menu.
<p></p>
</dd>


<dt><tt class="literal">-tearoff =&gt; 0 |</tt> <tt class="userinput"><b>1</b></tt></dt>
<dd>
<a name="INDEX-1776" /></a>Determines
whether or not the menu will contain the tearoff item as the first
item.
<p></p>
</dd>


<dt><tt class="literal">-tearoffcommand =&gt; callback | 1</tt></dt>
<dd>
<a name="INDEX-1777" /></a>Invokes the callback when a Menu is torn
off. The callback is passed references to the Menu and new Toplevel
widgets.
<p></p>
</dd>


<dt><tt class="literal">-title =&gt;</tt> <tt><em class="replaceable"><tt>string</tt></em></tt></dt>
<dd>
<a name="INDEX-1778" /></a>Title of the torn-off Toplevel.<a name="INDEX-1779" /></a>
<p></p>
</dd>

</dl>

</div>
</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch12_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">11.7. Putting Two MainWindows to Work</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">12.2. Menubars and Pulldown Menus</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>
