<html><head><title>Tags (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_08.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch09_10.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">9.9. Tags</h2>

<p>Each item can also have a tag (or more than one tag) associated with
it. We have seen tags used before in the Text widget, where sections
of text could be assigned a tag. A tag can be assigned when the item
is created, or you can use the <tt class="literal">addtag</tt> method to
assign a tag after the item has been created.
</p>

<p>There are two special tags that are assigned and maintained
automatically: <tt class="literal">"current"</tt> and
<tt class="literal">"all"</tt>. The <tt class="literal">"all"</tt> tag refers to
all the items in the Canvas. The <tt class="literal">"current"</tt> tag
refers to the topmost item that the mouse cursor is over. If the
mouse cursor is outside the Canvas widget or not over an item, the
<tt class="literal">"current"</tt> tag does not exist.
</p>

<p><a name="INDEX-1458" />You can use tags to
make changes to many different items at once. For instance, if you
want all circles to have the same color, but you want to be able to
change it from time to time, give all circles a
<tt class="literal">"circle"</tt> tag when you create them, using the
<tt class="literal">itemconfigure</tt> method to change the configuration
options of the items with the <tt class="literal">"circle"</tt> tag.
</p>

<p><a name="INDEX-1459" /><a name="INDEX-1460" /><a name="INDEX-1461" /><a name="INDEX-1462" /><a name="INDEX-1463" /><a name="INDEX-1464" /><a name="INDEX-1465" /><a name="INDEX-1466" /><a name="INDEX-1467" /><a name="INDEX-1468" /><a name="INDEX-1469" />Tags can also be logical expressions by
using the operators: <tt class="literal">&amp;&amp;</tt>,
<tt class="literal">||</tt>, <tt class="literal">^</tt>, <tt class="literal">!</tt>,
and parenthetical subexpressions. For example:
</p>

<blockquote><pre class="code">$c-&gt;find('withtag',  '(a&amp;&amp;!b)|(!a&amp;&amp;b)');</pre></blockquote>

<p>or equivalently:</p>

<blockquote><pre class="code">$c-&gt;find('withtag', 'a^b');</pre></blockquote>

<p>will find only those items with either <tt class="literal">a</tt> or
<tt class="literal">b</tt> tags, but not both.
</p>

<p>The following are some sample syntax lines for creating tags:</p>

<dl>
<dt><tt class="literal">$canvas-&gt;addtag("newtag", "above",</tt> <tt><em class="replaceable"><tt>tag/id</tt></em></tt><tt class="literal">);</tt></dt>
<dd>
<a name="INDEX-1470" />The
<tt class="literal">"newtag"</tt> tag is added to the item that is above
the <tt><em class="replaceable"><tt>tag/id</tt></em></tt> item. If there is more than one
match for <tt><em class="replaceable"><tt>tag/id</tt></em></tt>, the last item found will
be used so the <tt class="literal">"newtag"</tt> is directly above the
<tt><em class="replaceable"><tt>tag/id</tt></em></tt> item in the display list. The
display list is created as you add items to the Canvas and can be
manipulated with the <tt class="literal">raise</tt> and
<tt class="literal">lower</tt> methods.
</p>
</dd>


<dt><tt class="literal">$canvas-&gt;addtag("newtag", "all");</tt></dt>
<dd>
The keyword <tt class="literal">"all"</tt> is a special tag that includes
every item currently in the Canvas. Items added to the Canvas after
the call to <tt class="literal">add</tt> tag will not contain
<tt class="literal">"newtag"</tt> in their tag lists.
</p>
</dd>


<dt><tt class="literal">$canvas-&gt;addtag("newtag", "below",</tt> <tt><em class="replaceable"><tt>tag/id</tt></em></tt><tt class="literal">);</tt></dt>
<dd>
The <tt class="literal">"newtag"</tt> tag is added to the item that is
directly below the <tt><em class="replaceable"><tt>tag/id</tt></em></tt> item. If more
than one item matches the below <tt><em class="replaceable"><tt>tag/id</tt></em></tt>
search, the lowest item in the list will be used.
</p>
</dd>


<dt><tt class="literal">$canvas-&gt;addtag("newtag", "closest",</tt> <tt><em class="replaceable"><tt>x</em></tt>, <tt><em class="replaceable">y</tt></em></tt><tt class="literal">);</tt></dt>
<dd>
Use the <tt class="literal">"closest"</tt> tag to select the item closest
to the (x, y) coordinates (in Canvas coordinates). If more than one
item matches, the last one found is used.
</p>
</dd>

</dl>

<p>There are two more possible arguments for this form of
<tt class="literal">addtag</tt>. You can specify a number that indicates
how far out from the (x, y) coordinates items are to be considered.
For instance, if you want an item that is within 10 pixels to be
considered <tt class="literal">"closest"</tt>, make the call as follows:
</p>

<blockquote><pre class="code">$canvas-&gt;addtag("newtag", "closest", 50, 100, 10);</pre></blockquote>

<p>You can also specify a starting tag or ID to start a search. The call
would then look like this:
</p>

<blockquote><pre class="code">$canvas-&gt;addtag("newtag", "closest", x, y, 10, $tag_or_id);</pre></blockquote>

<p> Using this form, you can loop through all the closest items.</p>

<dl>
<dt><tt class="literal">$canvas-&gt;addtag("newtag", "enclosed",</tt> <tt><em class="replaceable"><tt>x1</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">y1</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">x2</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">y2</tt></em></tt><tt class="literal">);</tt></dt>
<dd>
You can use the <tt class="literal">"enclosed"</tt> form of
<tt class="literal">addtag</tt> to assign the same tag to several items
within the area bounded by (<tt><em class="replaceable"><tt>x1</em></tt><tt><em class="replaceable">,</tt></em></tt>
<tt><em class="replaceable"><tt>y1</tt></em></tt>) to
(<tt><em class="replaceable"><tt>x2</em></tt><em class="emphasis">,</tt></em></tt>
<tt><em class="replaceable"><tt>y2</tt></em></tt>). Items will be given
<tt class="literal">"newtag"</tt> only if they are completely within the
area. The coordinates must make sense when you specify them:
<tt><em class="replaceable"><tt>x1</em></tt> &lt; <tt><em class="replaceable">x2</tt></em></tt> and
<tt><em class="replaceable"><tt>y1</em></tt> &lt; <tt><em class="replaceable">y2</tt></em></tt>.
</p>
</dd>


<dt><tt class="literal">$canvas-&gt;addtag("newtag", "overlapping",</tt> <tt><em class="replaceable"><tt>x1</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">y1</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">x2</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">y2</tt></em></tt><tt class="literal">);</tt></dt>
<dd>
To assign tags to any item that has any part inside a bounded region,
use <tt class="literal">"overlapping"</tt> instead of
<tt class="literal">"enclosed"</tt>. Even if the item has only one pixel
inside this area, it will still count. All other rules for the
bounding area are the same as for <tt class="literal">"enclosed"</tt>.
</p>
</dd>


<dt><tt class="literal">$canvas-&gt;addtag("newtag", "withtag",</tt><tt><em class="replaceable"><tt> tag/id</tt></em></tt><tt class="literal">);</tt></dt>
<dd>
Assigns <tt class="literal">"newtag"</tt> to all the items with the tag or
ID specified.
</p>
</dd>

</dl>

<a name="mastperltk-CHP-9-SECT-9.1" /><div class="sect2">
<h3 class="sect2">9.9.1. Binding Items Using Tags</h3>

<p>Each item in a Canvas can have an event sequence bound to it so that
a callback will be invoked when that event sequence happens. This is
similar to adding an event sequence binding for widgets, except item
tags or item IDs are used. (Remember, if you want to add a normal
binding to the Canvas widget itself, you must use
<tt class="literal">CanvasBind</tt> instead of just
<tt class="literal">bind</tt>.)
</p>

<p>The general form of <tt class="literal">bind</tt> is as follows:</p>

<blockquote><pre class="code">$canvas-&gt;bind(<tt><em class="replaceable">tag/id</em></tt> [ , <tt><em class="replaceable">sequence</em></tt>, <tt><em class="replaceable">command</em></tt> ] );</pre></blockquote>

<p>The <tt><em class="replaceable">sequence</em></tt> would be similar to
<tt class="literal">"&lt;Button-1&gt;"</tt> or
<tt class="literal">"&lt;Double-1&gt;"</tt>. A complete definition and
explanation of event sequences is available in <a href="ch15_01.htm">Chapter 15, "Anatomy of the MainLoop"</a>.
</p>

<p>When you create item bindings, keep in mind that only mouse and
keyboard bindings are valid for items. You can't do any of the
weird, esoteric bindings that are available for all widgets.
</p>

<p>Here is an example that changes the color of any items tagged with
<tt class="literal">"blue"</tt> when the mouse is over them:
</p>

<blockquote><pre class="code"># When the mouse is over the item, color it blue
$c-&gt;bind("blue", "&lt;Enter&gt;", 
         sub { $c-&gt;itemconfigure("blue", -fill =&gt; "blue"); });
# When the mouse is not over, color it black.
$c-&gt;bind("blue", "&lt;Leave&gt;",
         sub { $c-&gt;itemconfigure("blue", -fill =&gt; "black"); });</pre></blockquote>

</div>
<a name="mastperltk-CHP-9-SECT-9.2" /><div class="sect2">
<h3 class="sect2">9.9.2. Finding Tags</h3>

<p><a name="INDEX-1471" /><a name="INDEX-1472" />You can use the <tt class="literal">find</tt>
command to determine which items have a certain tag. The possible
ways to call <tt class="literal">find</tt> are the same as those of
<tt class="literal">addtag</tt> (except for the newtag argument). Here are
the basic formats (see "Tags" earlier in this chapter for
more details on what they mean and how they work):
</p>

<blockquote><pre class="code">$canvas-&gt;find("above", <tt><em class="replaceable">tag/id</em></tt>);
$canvas-&gt;find("all");
$canvas-&gt;find("below", <tt><em class="replaceable">tag/id</em></tt>);
$canvas-&gt;find("closest", <tt><em class="replaceable">x, y [ , additional_area ] [ , tag/id ]</em></tt>);
$canvas-&gt;find("enclosed", <tt><em class="replaceable">x1, y1, x2, y2</em></tt>);
$canvas-&gt;find("overlapping", <tt><em class="replaceable">x1, y1, x2, y2</em></tt>);
$canvas-&gt;find("withtag", <tt><em class="replaceable">tag/id</em></tt>);</pre></blockquote>

</div>
<a name="mastperltk-CHP-9-SECT-9.3" /><div class="sect2">
<h3 class="sect2">9.9.3. Getting Tags from a Specific Item</h3>

<p><a name="INDEX-1473" />To get a list
of all the tags associated with an item, use:
</p>

<blockquote><pre class="code">@list = $canvas-&gt;gettags(<tt><em class="replaceable">tag/id</em></tt>);</pre></blockquote>

<p>If the <tt><em class="replaceable">tag/id</em></tt> matches more than one item,
the first item found is used. If the
<tt><em class="replaceable">tag/id</em></tt> doesn't match anything, an
empty string is returned.<a name="INDEX-1474" /> 
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_08.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch09_10.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">9.8. Configuring Items in the Canvas Widget</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">9.10. Retrieving Bounding Box Coordinates</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>