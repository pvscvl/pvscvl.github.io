<html><head><title>Waiting for Events to Happen (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch13_20.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch13_22.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">13.21. Waiting for Events to Happen</h2>

<p><a name="INDEX-2140" />At certain points in your application, it
makes sense to wait until something happens. For instance, if you
create a ColorEditor window and want it to assign the color the user
selects to a variable, you can use <tt class="literal">waitVariable</tt> to
wait until the variable is set. For complete details, see <a href="ch15_01.htm">Chapter 15, "Anatomy of the MainLoop"</a>.
</p>

<p><a name="INDEX-2141" />To have
a program wait until a variable's value is changed, call
<tt class="literal">waitVariable</tt>:
</p>

<blockquote><pre class="code">$widget-&gt;waitVariable(\$var);</pre></blockquote>

<p>Processing will continue as soon as the value contained within
<tt class="literal">$var</tt> is changed to something different. To wait
until a <tt class="literal">$widget</tt> is visible, use
<tt class="literal">waitVisibility</tt>:
</p>

<blockquote><pre class="code">$widget-&gt;waitVisibility;</pre></blockquote>

<p>To wait until a widget is destroyed, call
<tt class="literal">waitWindow</tt>:
</p>

<blockquote><pre class="code">$widget-&gt;waitWindow;</pre></blockquote>

<p>When you call these methods, nothing will happen in your program
until the requested event has taken place.
</p>

<p><a name="INDEX-2142" />An
alternative to <tt class="literal">waitWindow</tt> is
<tt class="literal">OnDestroy</tt>, where you specify a callback. The
widget methods are still available when you use
<tt class="literal">OnDestroy</tt>:
</p>

<blockquote><pre class="code">$widget-&gt;OnDestroy(sub { ... });</pre></blockquote>

<a name="mastperltk-CHP-13-SECT-21.1" /><div class="sect2">
<h3 class="sect2">13.21.1. File Events</h3>

<p><a name="INDEX-2143" /><a name="INDEX-2144" /><a name="INDEX-2145" />There is a special method in Perl/Tk
called <tt class="literal">fileevent</tt>, which watches and notifies you
when a file is readable or writable. For complete details see <a href="ch15_01.htm">Chapter 15, "Anatomy of the MainLoop"</a>, <a href="ch19_01.htm">Chapter 19, "Interprocess Communicationwith Pipes and Sockets"</a>, and <a href="ch22_01.htm">Chapter 22, "Perl/Tk and the Web"</a>.
</p>

<p><a name="INDEX-2146" />Here is an
example that shows how <tt class="literal">fileevent</tt> can be used (this
code is meant to be executed on a Unix system because we use the Unix
<em class="emphasis">tail</em> command):<a href="#FOOTNOTE-31">[31]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-31" /><p> [31] Thanks to Phivu
Nguyen for sharing this code.</p> </blockquote>

<blockquote><pre class="code">use Tk;
open (FH, "tail -f -n 25 text_file|") || die "Could not open file!\n";
my $mw = MainWindow-&gt;new;
my $text = $mw-&gt;Scrolled("Text", 
                         -width =&gt; 80, 
                         -height =&gt; 25)-&gt;pack(-expand =&gt; 1);
$mw-&gt;fileevent(FH, 'readable', [\&amp;insert_text]);
MainLoop;

sub insert_text{
  my $curline;
  if ($curline = &lt;FH&gt;)   {
    $text-&gt;insert('end', $curline);
    $text-&gt;yview('moveto', 100);
  } else {
    $mw-&gt;fileevent(FH, 'readable', "");
  }
}</pre></blockquote>

<p>This short program sits around and waits until a file is readable and
then inserts the newly read information into a Listbox. You can also
use <tt class="literal">'writable'</tt>.
</p>

<blockquote><pre class="code">$mw-&gt;fileevent(FH, 'writable', <em class="replaceable"><tt>callback</tt></em>);</pre></blockquote>

<p><a name="INDEX-2147" />If you omit the callback portion, the
callback will be returned. Replace the callback with an empty string
(<tt class="literal">""</tt>) and the callback is removed.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch13_20.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch13_22.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">13.20. Interapplication Communication</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">13.22. Time Delays</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>