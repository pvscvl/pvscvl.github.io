<html><head><title>Packaging a Mega-Widget for Public Distribution (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch14_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch15_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">14.6. Packaging a Mega-Widget for Public Distribution</h2>

<p><a name="INDEX-2300" /><a name="INDEX-2301" /><a name="INDEX-2302" /><a name="INDEX-2303" /><a name="INDEX-2304" />Before you even begin writing a publicly
consumable Perl/Tk widget, check the Perl/Tk mega-widget home page at
<a href="../../../../../../www.lehigh.edu/sol0/ptk/modlist">http://www.lehigh.edu/sol0/ptk/modlist</a>,<a href="#FOOTNOTE-38">[38]</a> where you'll learn about
your responsibilities as a module writer. The idea is to stop
duplication of effort and coordinate the naming, development, and
testing of modules. It's also important to keep the Perl/Tk
mailing list <em class="email">ptk@lists.stanford.edu</em> and the news group
<em class="emphasis">comp.lang.perl.tk</em> advised of your module.
You'll get invaluable feedback that will make your final result
more polished.
</p><blockquote class="footnote">
<a name="FOOTNOTE-38" /><p> [38] Originally developed by Graham Barr, the page is now maintained
by Achim Bohnet.</p> </blockquote>

<p><a name="INDEX-2305" /><a name="INDEX-2306" />Assuming you've followed the protocol
and have a pure Perl/Tk widget module ready for distribution, you
must register yourself as a CPAN developer and get a CPAN ID. Link to
<a href="../../../../../../www.perl.com/CPAN-local/modules/04pause.html">http://www.perl.com/CPAN-local/modules/04pause.html</a>
to get registration and upload instructions.
</p>

<p><a name="INDEX-2307" />With all the paperwork complete,
you need to package your new module so it installs in the standard
Perl manner:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>perl Makefile.PL</b></tt>
% <tt class="userinput"><b>make</b></tt>
% <tt class="userinput"><b>make test</b></tt>
% <tt class="userinput"><b>make install</b></tt></pre></blockquote>

<p><a name="INDEX-2308" /><a name="INDEX-2309" />We'll use the NavListbox
widget as our example in the next two sections. The first section
details packaging the widget for CPAN and the second for
ActiveState's Perl Package Manager (PPM).
</p>

<p><a name="INDEX-2310" /><a name="INDEX-2311" />To begin, create a new, empty distribution
directory and copy to it the widget module file,
<em class="filename">NavListbox.pm</em>. For completeness, we need to
populate the distribution directory with at least three more files,
as shown in the next section. The files are
<em class="filename">MANIFEST</em>, <em class="filename">Makefile.PL</em>, and
<em class="filename">test.pl</em>.
</p>

<a name="mastperltk-CHP-14-SECT-6.1" /><div class="sect2">
<a name="INDEX-2312" /><a name="INDEX-2313" /><h3 class="sect2">14.6.1. Packaging for CPAN</h3>

<p><a name="INDEX-2314" /><a name="INDEX-2315" /><a name="INDEX-2316" />Every well-formed Perl module requires a
file named <em class="filename">Makefile.PL</em>, which is an actual Perl
program that describes the module. Perl executes this file, resulting
in a generated <em class="filename">Makefile</em> that we use to build,
test, and install the module.
</p>

<p>Now create a file named <em class="filename">Makefile.PL</em>, containing
these lines:
</p>

<blockquote><pre class="code">use ExtUtils::MakeMaker;

my $pm = 'NavListbox';

WriteMakefile(
    NAME          =&gt; "Tk::$pm",
    DISTNAME      =&gt; "Tk-$pm",
    VERSION_FROM  =&gt; "$pm.pm",
    dist          =&gt; {COMPRESS =&gt; 'gzip', SUFFIX =&gt; 'gz'},
    ($] &gt;= 5.005 ?
        (ABSTRACT =&gt; 'Navigatible Listbox',
         AUTHOR   =&gt; 'Flaz T. Bizzo (ftb@xy.zz.y)') : ( ),
    ),
);</pre></blockquote>

<p><a name="INDEX-2317" /><a name="INDEX-2318" />This
<em class="filename">Makefile.PL</em> program stores the module name in a
Perl variable, so it's easy to reuse. The
<tt class="literal">WriteMakefile</tt> subroutine can take many arguments,
fully described in its POD:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>perldoc ExtUtils::MakeMaker</b></tt></pre></blockquote>

<p>The minimum attributes we require are:</p>

<dl>
<dt><tt class="literal">NAME</tt></dt>
<dd>
The actual module name.</p>
</dd>


<dt><tt class="literal">DISTNAME</tt></dt>
<dd>
The distribution tar filename.</p>
</dd>


<dt><tt class="literal">VERSION_FROM</tt></dt>
<dd>
The name of the file containing the module's version
information. We've always included it in the module itself.
</p>
</dd>


<dt><tt class="literal">dist</tt></dt>
<dd>
The distribution is compressed with <i class="command">gzip</i> and given
the extension <em class="filename">.gz</em>.
</p>
</dd>


<dt><tt class="literal">ABSTRACT</tt></dt>
<dd>
The description line from the module list entry.</p>
</dd>


<dt><tt class="literal">AUTHOR</tt></dt>
<dd>
Who wrote the module.</p>
</dd>

</dl>

<p>The last two attributes, particularly important for modules destined
for a PPM archive, are conditional, because they weren't
available prior to Perl 5.005.
</p>

<p>To complete our distribution, we need two more
files&#x2014;<em class="filename">MANIFEST</em>, which lists all the
filenames in the distribution, and <em class="filename">test.pl</em>, a
Perl program for the make test phase&#x2014;for a total of four files:
<em class="filename">NavListbox.pm</em>, <em class="filename">Makefile.PL</em>,
<em class="filename">MANIFEST</em>, and <em class="filename">test.pl</em>.
</p>

<p>This configuration will likely work, but instead of using
<tt class="literal">ExtUtils::MakeMaker::WriteMakefile</tt>, we should use
its Tk counterpart, <tt class="literal">Tk::MMutil::TkExtMakefile</tt>.
</p>

<p>As it happens, without even resorting to trickery, an improved
<em class="filename">Makefile.PL</em> program using
<em class="filename">TkExtMakefile</em> can do several more things:
</p>

<ul><li>
<p>Create the <em class="filename">MANIFEST</em> file automatically.</p>
</li><li>
<p>Create the <em class="filename">test.pl</em> file automatically.</p>
</li></ul>
<p>Add an optional sample program to <i class="command">widget</i>'s
User Contributed Demonstrations section. <i class="command">widget</i> is
a Perl/Tk program that demonstrates most of the toolkit's
capabilities and is installed in your normal Unix or Win32 path.
It's a multisection hypertext application that contains a
special User Contributed Demonstrations section for highlighting
nonstandard toolkit features. You can use the following special
<em class="filename">Makefile.PL</em> to include a special demonstration
of your new widget. For our purposes, this optional fifth
file&#x2014;the "widget contributed" (widtrib)
demonstration file&#x2014;is included.
</p>

<p>Here's the widtrib file, <em class="filename">navtest.pl</em>:</p>

<blockquote><pre class="code"># A NavListbox sample program.
use Tk;
use Tk::NavListbox;
use strict;

my $mw = MainWindow-&gt;new;
my $nlb = $mw-&gt;NavListbox-&gt;pack;
for (qw/one two three four five six seven eight none ten/) {
    $nlb-&gt;insert('end', $_);
}
MainLoop;</pre></blockquote>

<p>Our new <em class="filename">Makefile.PL</em> first writes the
<em class="filename">MANIFEST</em> file containing the names of the four
archive files plus the widtrib demonstration file, then writes
<em class="filename">test.pl</em> after first substituting our
module's name in the template.
</p>

<blockquote><pre class="code"># A generic Makefile.PL file for any pure Perl/Tk mega-widget. Set
# $pm to the name of the Perl module, and update %widinfo.  Leave
# $widtrib undefined unless you have an addition for widget's User
# Contributed Demonstrations section.
#
# This program creates the MANIFEST and test.pl files, then invokes
# MakeMaker to create the Makefile.  sol0@Lehigh.EDU, 2001/01/01

use Tk::MMutil;
use vars qw/$pm $widinfo $widtrib %widtrib/;

$pm = 'NavListbox';             # widget Class name
%widinfo = (                    # PPM widget information
    ABSTRACT =&gt; 'Navigatible Listbox',
    AUTHOR   =&gt; 'Nancy Walsh (nw@xy.zz.y)',
);
$widtrib = 'navtest.pl';        # widtrib demo file name

print "Writing MANIFEST for Tk::$pm\n";
open MANIFEST, "&gt;MANIFEST" or die "Cannot open MANIFEST: $!";
print MANIFEST &lt;&lt;"end-of-manifest";
MANIFEST
Makefile.PL
$pm.pm
test.pl
end-of-manifest
print MANIFEST "$widtrib\n" if $widtrib;
close MANIFEST or die $!;

print "Writing test.pl for Tk::$pm\n";
open TEST, "&gt;test.pl" or die "Cannot open test.pl: $!";
while (&lt;DATA&gt;) {
    s/NavListbox/$pm/o;
    print TEST;
}
close TEST or die $!;

%widtrib = 
  ($widtrib =&gt; "\$(INST_ARCHLIB)/Tk/demos/widtrib/$widtrib") if $widtrib;

Tk::MMutil::TkExtMakefile(
    NAME          =&gt; "Tk::$pm",
    DISTNAME      =&gt; "Tk-$pm",
    VERSION_FROM  =&gt; "$pm.pm",
    PM            =&gt; {"$pm.pm" =&gt; "\$(INST_LIBDIR)/$pm.pm", %widtrib},
    dist          =&gt; {COMPRESS =&gt; 'gzip', SUFFIX =&gt; 'gz'},
    ($] &gt;= 5.005 ? %widinfo  : ( )),
);
__DATA__
#!perl -w
use Test;
use strict;

BEGIN { plan tests =&gt; 12 };

eval { require Tk; };
ok($@, "", "loading Tk module");

my $mw;
eval {$mw = Tk::MainWindow-&gt;new( );};
ok($@, "", "can't create MainWindow");
ok(Tk::Exists($mw), 1, "MainWindow creation failed");
eval { $mw-&gt;geometry('+10+10'); };

my $w;
my $class = 'NavListbox';

print "Testing $class\n";

eval "require Tk::$class;";
ok($@, "", "Error loading Tk::$class");

eval { $w = $mw-&gt;$class( ); };
ok($@, "", "can't create $class widget");
skip($@, Tk::Exists($w), 1, "$class instance does not exist");

if (Tk::Exists($w)) {
    eval { $w-&gt;pack; };

    ok ($@, "", "Can't pack a $class widget");
    eval { $mw-&gt;update; };
    ok ($@, "", "Error during 'update' for $class widget");

    eval { my @dummy = $w-&gt;configure; };
    ok ($@, "", "Error: configure list for $class");
    eval { $mw-&gt;update; };
    ok ($@, "", "Error: 'update' after configure for $class widget");

    eval { $w-&gt;destroy; };
    ok($@, "", "can't destroy $class widget");
    ok(!Tk::Exists($w), 1, "$class: widget not really destroyed");
} else  { 
    for (1..5) { skip (1,1,1, "skipped because widget couldn't be created"); }
}

1;</pre></blockquote>

<p>So now we have three files, <em class="filename">NavListbox.pm</em>,
<em class="filename">navtest.pl</em>, and
<em class="filename">Makefile.PL</em>, in an otherwise empty directory.
Type this:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>perl Makefile.PL</b></tt>
% <tt class="userinput"><b>make</b></tt></pre></blockquote>

<p>This automatically creates <em class="filename">MANIFEST</em> and
<em class="filename">test.pl</em> for us. Now type this:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>make test</b></tt></pre></blockquote>

<p>This creates the final distribution file,
<em class="filename">Tk-NavListbox-1.0.tar.gz</em>, which you should then
unpack and test as if you had just retrieved in from CPAN. If all is
well, follow the CPAN upload instructions.<a name="INDEX-2319" /><a name="INDEX-2320" /><a name="INDEX-2321" />
</p>

</div>
<a name="mastperltk-CHP-14-SECT-6.2" /><div class="sect2">
<h3 class="sect2">14.6.2. Packaging for PPM</h3>

<p><a name="INDEX-2322" /><a name="INDEX-2323" /><a name="INDEX-2324" /><a name="INDEX-2325" /><a name="INDEX-2326" /><a name="INDEX-2327" /><a name="INDEX-2328" />If you're creating a PPM archive,
we assume you're running in a Win32 environment, which usually
lacks <i class="command">make</i>, <i class="command">tar</i>, and
<i class="command">gzip</i> programs. So first get
<i class="command">nmake</i> from <a href="ftp://ftp.microsoft.com/Softlib/MSLFILES/nmake15.exe">ftp://ftp.microsoft.com/Softlib/MSLFILES/nmake15.exe</a>
and <i class="command">gzip</i> from <a href="../../../../../../www.itribe.net/virtunix">http://www.itribe.net/virtunix</a>.
</p>

<p>Create the four distribution files
(<em class="filename">NavListbox.pm</em>,
<em class="filename">Makefile.PL</em>, <em class="filename">MANIFEST</em>, and
<em class="filename">test.pl</em>) as described in the previous section
and build the distribution directory, <em class="filename">blib</em>:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>perl Makefile.PL</b></tt>
% <tt class="userinput"><b>nmake</b></tt></pre></blockquote>

<p>Then pack the directory into an archive: </p>

<blockquote><pre class="code">% <tt class="userinput"><b>tar -cvpf Tk-NavListbox-1.0.tar blib</b></tt>
% <tt class="userinput"><b>gzip --best Tk-NavListbox-1.0.tar</b></tt></pre></blockquote>

<p>You now have an archive called (hopefully)
<em class="emphasis">Tk</em><em class="filename">-NavListbox-1.0.tar.gz</em>.
Generate the PPD file:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>nmake ppd</b></tt></pre></blockquote>

<p>You have to edit the resulting PPD file and add the location of the
package archive into <tt class="literal">&lt;CODEBASE HREF=""/&gt;</tt>.
The location is relative to the PPD file.
</p>

<p>And that's it with regard to Perl/Tk mega-widgets. If
you're interested in C-level widget information, check out
<a href="ch21_01.htm">Chapter 21, "C Widget Internals"</a>.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch14_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch15_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">14.5. Derived Mega-Widgets</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">15. Anatomy of the MainLoop</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>