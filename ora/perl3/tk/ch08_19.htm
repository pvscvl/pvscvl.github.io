<html><head><title>The Perl/Tk Text Widget Extended Methods (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_18.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch08_20.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">8.19. The Perl/Tk Text Widget Extended Methods</h2>

<p>These methods are available only with the Perl/Tk Text widget and are
documented nowhere else but in this book. Another unique feature is
the built-in Menu, activated by a <tt class="literal">&lt;Button-3&gt;</tt>
click, which calls many of these methods for common text-related
activities. The built-in Menu is shown in <a href="ch08_19.htm">Figure 8-7</a>. 
</p>

<a name="mastperltk-CHP-8-FIG-7" /><div class="figure"><img src="figs/mptk.0807.gif" alt="Figure 8-7" /></div><h4 class="objtitle">Figure 8-7. Built-in Menu</h4>

<p>To disable the default Menu, use
<tt class="literal">$text-&gt;menu(undef)</tt>. To supply your own Menu,
first create it and then use
<tt class="literal">$text-&gt;menu(my_menu)</tt>.
</p>

<p>Here, then, is the complete list of extended Text widget methods.
These methods should be considered experimental, so use them with
caution and expect that you may have to change your code in the
future.
</p>

<dl>
<dt><tt class="literal">$text-&gt;adjustSelect</tt></dt>
<dd>
Moves the end point of selection and anchor point to the mouse
pointer location.
</p>
</dd>


<dt><tt class="literal">$text-&gt;clipboardColumnCopy</tt> </dt>
<dd>
Performs a rectangular copy of the currently selected text, with
basic compensation for tab characters.
</p>
</dd>


<dt><tt class="literal">$text-&gt;clipboardColumnCut</tt> </dt>
<dd>
Performs a rectangular cut of the currently selected text, with basic
compensation for tab characters.
</p>
</dd>


<dt><tt class="literal">$text-&gt;clipboardColumnPaste</tt> </dt>
<dd>
Performs a rectangular paste of the text in the clipboard. The
upper-left corner is specified by the current position of the
<tt class="literal">insert</tt> mark, with basic compensation for tab
characters.
</p>
</dd>


<dt><tt class="literal">$text-&gt;deleteSelected</tt> </dt>
<dd>
Deletes the currently selected text.</p>
</dd>


<dt><tt class="literal">$text-&gt;DeleteTextTaggedWith(</tt><tt><em class="replaceable"><tt>tag</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
Deletes the text tagged with the <em class="replaceable"><tt><tt>tag</tt></tt></em>
parameter.
</p>
</dd>


<dt><tt class="literal">$text-&gt;deleteToEndofLine</tt> </dt>
<dd>
Deletes from the <tt class="literal">insert</tt> mark location to end of
line.
</p>
</dd>


<dt><tt class="literal">$text-&gt;FindAll(</tt><tt><em class="replaceable"><tt>mode</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">case</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">pattern</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
First removes any current selections, then performs a global text
search, tagging all matches with the <tt class="literal">sel</tt> tag.
<em class="replaceable"><tt><tt>mode</tt></tt></em> can be <tt class="literal">-exact</tt> or
<tt class="literal">-regexp</tt>, and <em class="replaceable"><tt><tt>case</tt></tt></em> can
be <tt class="literal">-nocase</tt> or <tt class="literal">-case</tt>.
<em class="replaceable"><tt><tt>pattern</tt></tt></em> is an exact string to match if
<em class="replaceable"><tt><tt>mode</tt></tt></em> is <tt class="literal">-exact</tt> or a
regular expression if the match <em class="replaceable"><tt><tt>mode</tt></tt></em> is
<tt class="literal">-regexp</tt>.
</p>
</dd>


<dt><tt class="literal">$text-&gt;FindAndReplaceAll(</tt><tt><em class="replaceable"><tt>mode</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">case</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">find</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">replace</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
Works just like <tt class="literal">FindAll</tt>, but additionally
substitutes the matched text with the characters
<tt><em class="replaceable"><tt>replace</tt></em></tt>.
</p>
</dd>


<dt><tt class="literal">$text-&gt;FindAndReplacePopUp</tt> </dt>
<dd>
Creates a find-and-replace popup if one doesn't already exist.
If there is text currently selected, pre-fills the "find"
field with it.
</p>
</dd>


<dt><tt class="literal">$text-&gt;FindNext(</tt><tt><em class="replaceable"><tt>direction</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">mode</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">case</em></tt><tt class="literal">,</tt> <tt><em class="replaceable">pattern</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
First removes any current selections, then performs a forward or
reverse text search, tagging a match with the <tt class="literal">sel</tt>
tag. <tt><em class="replaceable"><tt>direction</tt></em></tt> can be
<tt class="literal">-forward</tt> or <tt class="literal">-reverse</tt>.
<tt><em class="replaceable"><tt>mode</em></tt>, <tt><em class="replaceable">case</tt></em></tt>, and
<tt><em class="replaceable"><tt>pattern</tt></em></tt> are as for
<tt class="literal">FindAll</tt>.
</p>
</dd>


<dt><tt class="literal">$text-&gt;FindPopUp</tt> </dt>
<dd>
Creates a find popup, if one doesn't already exist. If there is
text currently selected, pre-fills the "find" field with
it.
</p>
</dd>


<dt><tt class="literal">$text-&gt;FindSelectionNext</tt> </dt>
<dd>
Gets the currently selected text and removes all selections. It then
finds the next exact, case-sensitive string that matches in a forward
direction, selects the new text, and makes it visible.
</p>
</dd>


<dt><tt class="literal">$text-&gt;FindSelectionPrevious</tt> </dt>
<dd>
Gets the currently selected text and removes all selections. It then
finds the next exact, case-sensitive string that matches in a reverse
direction, selects the new text, and makes it visible.
</p>
</dd>


<dt><tt class="literal">$text-&gt;getSelected</tt> </dt>
<dd>
Returns the currently selected text.</p>
</dd>


<dt><tt class="literal">$text-&gt;GetTextTaggedWith(</tt><tt><em class="replaceable"><tt>tag</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
Returns the text tagged with the <em class="replaceable"><tt><tt>tag</tt></tt></em>
parameter.
</p>
</dd>


<dt><tt class="literal">$text-&gt;GotoLineNumber(</tt><tt><em class="replaceable"><tt>line_number</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
Sets the insert mark to <tt><em class="replaceable"><tt>line_number</tt></em></tt> and
displays the line.
</p>
</dd>


<dt><tt class="literal">$text-&gt;GotoLineNumberPopUp</tt> </dt>
<dd>
Displays a popup, pre-filling it with selected numeric text, if any,
or the line number from <tt class="literal">GotoLineNumber</tt>, if any.
</p>
</dd>


<dt><tt class="literal">$text-&gt;Insert(</tt><tt><em class="replaceable"><tt>string</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
Inserts <tt><em class="replaceable"><tt>string</tt></em></tt> at the point of the
insertion cursor. If there is a selection in the text, and it covers
the point of the insertion cursor, delete the selection before
inserting.
</p>
</dd>


<dt><tt class="literal">$text-&gt;InsertKeypress(</tt><tt><em class="replaceable"><tt>character</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
Inserts <em class="replaceable"><tt><tt>character</tt></tt></em> at the
<tt class="literal">insert</tt> mark. If in overstrike mode, delete the
character at the <tt class="literal">insert</tt> mark first.
</p>
</dd>


<dt><tt class="literal">$text-&gt;InsertSelection</tt> </dt>
<dd>
Inserts the current selection at the <tt class="literal">insert</tt> mark.</p>
</dd>


<dt><tt class="literal">$text-&gt;insertTab</tt> </dt>
<dd>
Inserts a tab (<tt class="literal">\t</tt>) character at the
<tt class="literal">insert</tt> mark.
</p>
</dd>


<dt><tt class="literal">$text-&gt;markExists(</tt><tt><em class="replaceable"><tt>markname</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
Returns true if <tt><em class="replaceable"><tt>markname</tt></em></tt> exists.</p>
</dd>


<dt><tt class="literal">$text-&gt;menu(?</tt><tt><em class="replaceable"><tt>menu</tt></em></tt><tt class="literal">?)</tt> </dt>
<dd>
Returns the Text widget's Menu reference if
<em class="replaceable"><tt><tt>menu</tt></tt></em> is omitted, disables the Menu if
<em class="replaceable"><tt><tt>menu</tt></tt></em> is <tt class="literal">undef</tt>, or
changes the Menu if <em class="replaceable"><tt><tt>menu</tt></tt></em> is another Menu
reference.
</p>
</dd>


<dt><tt class="literal">$text-&gt;openLine</tt> </dt>
<dd>
Inserts a newline (<tt class="literal">\n</tt>) at the
<tt class="literal">insert</tt> mark.
</p>
</dd>


<dt><tt class="literal">$text-&gt;OverstrikeMode(?</tt><tt><em class="replaceable"><tt>boolean</tt></em></tt><tt class="literal">?)</tt> </dt>
<dd>
Returns the overstrike mode if <em class="replaceable"><tt><tt>boolean</tt></tt></em> is
omitted or sets the overstrike mode to
<em class="replaceable"><tt><tt>boolean</tt></tt></em>. True means overstrike mode is
enabled.
</p>
</dd>


<dt><tt class="literal">$text-&gt;PostPopupMenu(x, y)</tt> </dt>
<dd>
Creates a popup Menu at the specified (x, y) pixel coordinates. The
default Menu has File, Edit, Search, and View menu items that cascade
to submenus for further commands. There is an implicit
<tt class="literal">&lt;Button-3&gt;</tt> binding to this method that posts
the Menu over the cursor.
</p>
</dd>


<dt><tt class="literal">$text-&gt;ResetAnchor</tt> </dt>
<dd>
Sets the selection anchor to whichever end is farthest from the index
argument.
</p>
</dd>


<dt><tt class="literal">$text-&gt;selectAll</tt> </dt>
<dd>
Selects all the text in the widget.</p>
</dd>


<dt><tt class="literal">$text-&gt;selectLine</tt> </dt>
<dd>
Selects the line with the <tt class="literal">insert</tt> mark.</p>
</dd>


<dt><tt class="literal">$text-&gt;selectWord</tt> </dt>
<dd>
Selects the word with the <tt class="literal">insert</tt> mark.</p>
</dd>


<dt><tt class="literal">$text-&gt;SetCursor(</tt><tt><em class="replaceable"><tt>position</tt></em></tt><tt class="literal">)</tt> </dt>
<dd>
Moves the <tt class="literal">insert</tt> mark to
<em class="replaceable"><tt><tt>position</tt></tt></em>.
</p>
</dd>


<dt><tt class="literal">$text-&gt;ToggleInsertMode</tt> </dt>
<dd>Toggles the current overstrike mode.</p></dd>


<dt><tt class="literal">$text-&gt;unselectAll</tt> </dt>
<dd>
Unselects all the text in the widget.</p>
</dd>


<dt><tt class="literal">$text-&gt;WhatLineNumberPopUp</tt> </dt>
<dd>
Creates a popup that displays the current line number of the
<tt class="literal">insert</tt> mark.
</p>
</dd>

</dl>

<p>For a demonstration of these extended Text widget features, run the
widget demonstration "Gedi master advanced text
editor"<a href="#FOOTNOTE-18">[18]</a> from the "User Contributed Demonstrations"
section of the program.
</p><blockquote class="footnote"> <a name="FOOTNOTE-18" /><p> [18] Yes, that's "Gedi,"
not "Jedi" (with apologies to George Lucas).</p>
</blockquote>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_18.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch08_20.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">8.18. Internal Debug Flag</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">8.20. The TextUndo Widget</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>
