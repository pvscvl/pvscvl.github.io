<html><head><title>Hello World Example (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch01_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">1.4. Hello World Example</h2>

<p><a name="INDEX-91" />Every
programming language goes through the Hello World example, which is a
complete program that prints a string (typically "Hello
World") and exits. "Hello World" may get its share
of ridicule, but it's a remarkably effective tool that shows
readers how to write and execute a working program while
they're still in the first chapter of the book. In our Hello
World example, we'll have the title of our window say
"Hello World" and create a Button that will dismiss the
application:
</p>

<blockquote><pre class="code">#!/usr/bin/perl
use Tk;
my $mw = MainWindow-&gt;new;
$mw-&gt;title("Hello World");
$mw-&gt;Button(-text =&gt; "Done", -command =&gt; sub { exit })-&gt;pack;
MainLoop;</pre></blockquote>

<p>Despite being only six lines long, there is quite a bit going on in
our little program. The first line, as any Perl programmer knows,
invokes Perl.<a href="#FOOTNOTE-8">[8]</a> The second line tells Perl to use
the Tk module.
</p><blockquote class="footnote"> <a name="FOOTNOTE-8" /><p> [8] On Unix, that is. In Win32 you have to
type <tt class="userinput"><b>perl hello.pl</b></tt> to invoke the program or
twiddle with Explorer to call up the <i class="command">perl</i>
executable when <em class="filename">.pl</em> files are
double-clicked.</p> </blockquote>

<p>The third line:</p>

<blockquote><pre class="code">my $mw = MainWindow-&gt;new; </pre></blockquote>

<p>is how we create a window. The window will have the same basic window
manager decorations as all your other windows.
</p>

<p><a name="INDEX-92" />The title of
our window is changed using the <tt class="literal">title</tt>
method<em class="emphasis">.</em> If we hadn't used this method, the
text across the top of the window would be the same as the name of
the file containing the code, excluding any extension. For instance,
if the code were stored in a file named
<em class="emphasis">hello_world</em>, the string
"Hello_world" would appear across the title bar of the
application (Tk automatically capitalizes the first character for
you). Using the <tt class="literal">title</tt> method is not required, but
it makes the application look more polished.
</p>

<p>Any string we put as an argument becomes the title. If we wanted the
title to be "Hey! Look at my great program!," this would
be the place. This is akin to using the <em class="emphasis">-title</em>
option when starting any standard X Windows application. We cover
more methods for a MainWindow object later in <a href="ch11_01.htm">Chapter 11, "
Frame, MainWindow,and Toplevel Widgets"</a>.
</p>

<p>The next line creates a Button widget, sets basic properties, and
packs the widget. (See <a href="ch04_01.htm">Chapter 4, "
Button, Checkbutton, and Radiobutton Widgets"</a> for all available
configuration options for <tt class="literal">Button</tt>.)
</p>

<p>The Button is set to display the text "Done" and to
perform the Perl command <tt class="literal">exit</tt> when pushed.
Finally, the last item of concern is the <tt class="literal">MainLoop</tt>
command. This starts the event loop in motion, and from then on the
application will do only what we have told it to do: if the user
clicks on the Button, the application will exit. Anything else the
user does&#x2014;minimizing, resizing, changing to other
applications&#x2014;will be processed by the window manager and
ignored by our application. See <a href="ch01_04.htm">Figure 1-2</a> for a
picture of the Hello World window.
</p>

<a name="mastperltk-CHP-1-FIG-2" /><div class="figure"><img src="figs/mptk.0102.gif" alt="Figure 1-2" width="135" height="50" /></div><h4 class="objtitle">Figure 1-2. Hello World window</h4>

<a name="mastperltk-CHP-1-SECT-4.1" /><div class="sect2">
<h3 class="sect2">1.4.1. exit Versus destroy</h3>

<p><a name="INDEX-93" />In most of
the examples in this book, you will see <tt class="literal">sub</tt>
<tt class="literal">{</tt> <tt class="literal">exit;</tt> <tt class="literal">}</tt> (
or its equivalent, <tt class="literal">\&amp;exit</tt>) used to quit the
Perl/Tk application. This works fine as long as you have done a
<tt class="literal">use Tk;</tt> in the same file. Perl/Tk defines its own
<tt class="literal">exit</tt> routine, which does some cleanup and various
other things that are important to Tk. The program is then
unconditionally terminated, and control returns to the operating
system.
</p>

<p><a name="INDEX-94" />Another way to quit the Tk portion of the
application is to call <tt class="literal">$mw-&gt;destroy</tt>, which
destroys the MainWindow and returns to the code listed after
<tt class="literal">MainLoop</tt>. This allows your program to do post-GUI
processing before exiting.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch01_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">1.3. Getting Started with Perl/Tk</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">1.5. Unsolicited Advice</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>