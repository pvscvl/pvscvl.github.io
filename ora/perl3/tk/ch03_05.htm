<html><head><title>Font Manipulation Methods (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch03_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch04_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">3.5. Font Manipulation Methods</h2>

<p>Once you've created a font using <tt class="literal">fontCreate</tt>,
you can use the following methods.
</p>

<p><a name="INDEX-432" /><a name="INDEX-433" />For a description of the font's
attributes (some or all), use <tt class="literal">fontActual</tt> to query
the font:
</p>

<blockquote><pre class="code">$mw-&gt;fontCreate('bigfont', -family =&gt; 'Arial', -size =&gt; 48);

%big = $mw-&gt;fontActual('bigfont');
print %big;
# prints:
-size 48 -overstrike 0 -underline 0 
-weight normal -slant roman -family Arial

$size = $mw-&gt;fontActual('bigfont', -size);
print $size;
#prints: 
48</pre></blockquote>

<p><a name="INDEX-434" /><a name="INDEX-435" />To change (or query) a property of a font
once it has been created, use <tt class="literal">fontConfigure</tt>:
</p>

<blockquote><pre class="code">if ($mw-&gt;fontConfigure('bigfont', -size) &lt; 24) {
  $mw-&gt;fontConfigure('bigfont', -size =&gt; 48);
}

# same as $mw-&gt;fontActual('bigfont');
%bigfont = $mw-&gt;fontConfigure('bigfont');</pre></blockquote>

<p><a name="INDEX-436" /><a name="INDEX-437" />If you'd like to delete a font
definition, use <tt class="literal">fontDelete</tt>:
</p>

<blockquote><pre class="code">$mw-&gt;fontDelete('bigfont');</pre></blockquote>

<p>If you delete a font that is being used, the widgets using it
won't change what they display. They display whatever font they
were last. If you try to manipulate the font programmatically after
it's been deleted, you will get an error.
</p>

<p><a name="INDEX-438" />To get a
list of all the font families available on your system, use
<tt class="literal">fontFamilies</tt>:
</p>

<blockquote><pre class="code">@families = $mw-&gt;fontFamilies;</pre></blockquote>

<p><a name="INDEX-439" /><a name="INDEX-440" />To get a list of the currently defined
named fonts on your system, use <tt class="literal">fontNames</tt>:
</p>

<blockquote><pre class="code">@definedfonts = $mw-&gt;fontNames;</pre></blockquote>

<p>The <tt class="literal">fontNames</tt> method returns a list of object
references to Font objects. The list will be empty if there
aren't any fonts defined on your system. Keep in mind this list
contains only those fonts defined using the
<tt class="literal">fontCreate</tt> method.
</p>

<p><a name="INDEX-441" /><a name="INDEX-442" /><a name="INDEX-443" />If you want to determine how much
<em class="emphasis">horizontal</em> space a piece of text will take up
with a given font, use <tt class="literal">fontMeasure</tt>. The answer is
given in pixels. Don't count on this figure to be the exact
size; it's more of an estimate.
</p>

<blockquote><pre class="code">print $mw-&gt;fontMeasure('bigfont', "SHORT"), "\n";
225
print $mw-&gt;fontMeasure('bigfont', "MUCH LONGER"), "\n";
480</pre></blockquote>

<p><a name="INDEX-444" /><a name="INDEX-445" /><a name="INDEX-446" /><a name="INDEX-447" /><a name="INDEX-448" /><a name="INDEX-449" />For those of you who really understand
the different ways you can measure a font, you'll be interested
in the <tt class="literal">fontMetrics</tt> method. The vertical options it
describes are <tt class="literal">-ascent</tt> (very top to baseline),
<tt class="literal">-descent</tt> (very bottom to baseline),
<tt class="literal">-linespace</tt> (separation between lines of text), and
<tt class="literal">-fixed</tt> (whether or not the font is proportional).
</p>

<blockquote><pre class="code">$ascent = $mw-&gt;fontMetrics('bigfont', -ascent);
%metrics = $mw-&gt;fontMetrics('bigfont');
print %metrics;

-linespace 72 -descent 14 -ascent 58 -fixed 0</pre></blockquote>

<a name="mastperltk-CHP-3-SECT-5.1" /><div class="sect2">
<h3 class="sect2">3.5.1. One Last Example</h3>

<p>Just for fun we'll look at one last example. This program will
display a banner in the selected font that continually rotates the
text within it (see Figures <a href="ch03_05.htm">Figure 3-4</a> and <a href="ch03_05.htm">Figure 3-5</a>). 
</p>

<a name="mastperltk-CHP-3-FIG-4" /><div class="figure"><img src="figs/mptk.0304.gif" alt="Figure 3-4" width="481" height="98" /></div><h4 class="objtitle">Figure 3-4.  Banner program showing the font configuration widgets</h4>

<a name="mastperltk-CHP-3-FIG-5" /><div class="figure"><img src="figs/mptk.0305.gif" alt="Figure 3-5" width="455" height="117" /></div><h4 class="objtitle">Figure 3-5.  Banner program without font configuration widgets</h4>

<p>Here's the code for the banner program:</p>

<blockquote><pre class="code">use Tk;
use strict;

# initial banner text. Entry is not read-only
my $str = "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789";

my $mw = MainWindow-&gt;new;
my $lframe = $mw-&gt;Frame-&gt;pack(-fill =&gt; 'both', 
  -side =&gt; 'left', -expand =&gt; 1);
my $lb = $lframe-&gt;Scrolled("Listbox", -scrollbars =&gt; "e", 
  -height =&gt; 3)-&gt;pack(-fill =&gt; 'both', -expand =&gt; 1, -side =&gt; 'top');

$lb-&gt;insert('end', sort $mw-&gt;fontFamilies);

# Button that will pop the config widgets in and out
my $hidebutton = $mw-&gt;Button(-text =&gt; "&gt;")-&gt;pack(-side =&gt; 'left', 
  -fill =&gt; 'y');
$hidebutton-&gt;configure(-command =&gt; 
  sub { 
		if ($hidebutton-&gt;cget(-text) eq "&gt;") {
		  $lframe-&gt;packForget; $hidebutton-&gt;configure(-text =&gt; "&lt;")
		} else {
		  $lframe-&gt;pack(-before =&gt; $hidebutton, -fill =&gt; 'both',
        -side =&gt; 'left', -expand =&gt; 1); 
		  $hidebutton-&gt;configure(-text =&gt; "&gt;");
		}
  }, -font =&gt; "courier 8");

my $entry = $mw-&gt;Entry(
		-textvariable =&gt; \$str,
		-width =&gt; 12, 
		-font =&gt; "{Comic Sans MS} 72",
		-relief =&gt; 'raised',
		-highlightthickness =&gt; 0,
		)-&gt;pack(-expand =&gt; 1, -fill =&gt; 'x', -side =&gt; 'left');
		
$lb-&gt;bind("&lt;Button&gt;", sub { $entry-&gt;configure(
   -font =&gt; "{". $lb-&gt;get($lb-&gt;curselection) . "} 72"); });

my $repeat_id = $mw-&gt;repeat(300, \&amp;shift_banner);

my $f = $lframe-&gt;Frame-&gt;pack(-side =&gt; 'bottom', -fill =&gt; 'y');
my $start_button;
$start_button = $f-&gt;Button(-text =&gt; "Start", 
  -command =&gt; sub { 
    $repeat_id = $mw-&gt;repeat(300,\&amp;shift_banner);
    $start_button-&gt;configure(-state =&gt; 'disabled'); }, 
  -state =&gt; 'disabled')-&gt;pack(-side =&gt; 'left', -padx =&gt; 3);
my $stop_button = $f-&gt;Button(-text =&gt; "Stop", -command =&gt; sub {
    $repeat_id-&gt;cancel( ); 
    $start_button-&gt;configure(-state =&gt; 'normal'); }
  )-&gt;pack(-side =&gt; 'left', -padx =&gt; 3);

MainLoop;

# Causes text to be wrapped around in entry
sub shift_banner {
		my $newstr = substr($str, 1) . substr($str, 0, 1);
		$str = $newstr;
}</pre></blockquote>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch03_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch04_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">3.4. Using Fonts Dynamically</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">4. 
Button, Checkbutton, and Radiobutton Widgets</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>