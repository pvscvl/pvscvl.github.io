<html><head><title>Debugging and PrototypingPerl/Tk Programs (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch02_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">1.6. Debugging and PrototypingPerl/Tk Programs</h2>

<p><a name="INDEX-108" /><a name="INDEX-109" /><a name="INDEX-110" /><a name="INDEX-111" /><a name="INDEX-112" />Debugging a Perl/Tk program need not
be different from debugging a nongraphical program; you can always
sprinkle <tt class="literal">warn</tt> statements throughout the code to
track progress and display intermediate results. We suggest using
<tt class="literal">warn</tt> rather than <tt class="literal">print</tt> for
three reasons: it adds the newline to the message automatically; the
output includes the line number of the <tt class="literal">warn</tt>
statement; and the output goes to STDERR, which is not normally
buffered, thus the output appears immediately. Furthermore, you type
fewer characters.
</p>

<p>You normally run programs by typing the program name at the command
prompt:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>hello_world</b></tt></pre></blockquote>

<p>or: </p>

<blockquote><pre class="code">C:\&gt;<tt class="userinput"><b>perl hello_world</b></tt></pre></blockquote>

<p><a name="INDEX-113" /><a name="INDEX-114" /><a name="INDEX-115" />When you invoke the program this way, any
printed output goes to that terminal window. If you don't put a
<tt class="literal">\n</tt> on the end of the string to be printed, you
won't see the information actually printed until you quit the
program. You may have to unbuffer a file handle by setting the
special Perl variable <tt class="literal">$|</tt>. If you use
<tt class="literal">warn</tt> rather than <tt class="literal">print</tt>, these
drawbacks are eliminated.
</p>

<p><a name="INDEX-116" /><a name="INDEX-117" /><a name="INDEX-118" /><a name="INDEX-119" />If that old-fashioned way isn't to
your liking, perhaps the slightly newer old-fashioned way of using
the standard Perl debugger is. The debugger has built-in Tk support,
though you must use the <tt class="literal">O</tt> command and enable it by
setting the variable <tt class="literal">tkRunning</tt>:
</p>

<blockquote><pre class="code">[bug@Pandy atk]$ <tt class="userinput"><b>perl -de 0</b></tt>
Default die handler restored.

Loading DB routines from perl5db.pl version 1.07
Editor support available.

Enter h or `h h' for help, or `man perldebug' for more help.

main::(-e:1):   0
  DB&lt;1&gt; <tt class="userinput"><b>O tkRunning</b></tt>
           tkRunning = '1'
  DB&lt;2&gt; <tt class="userinput"><b>use Tk</b></tt>    
  DB&lt;3&gt; <tt class="userinput"><b>$mw = MainWindow-&gt;new</b></tt>
  DB&lt;4&gt; <tt class="userinput"><b>$b = $mw-&gt;Button(-text =&gt; 'Beep', -command =&gt; sub{$mw-&gt;bell})</b></tt>
  DB&lt;5&gt; <tt class="userinput"><b>$b-&gt;pack</b></tt>
  DB&lt;6&gt; <tt class="userinput"><b>x $b</b></tt>
0  Tk::Button=HASH(0x82ed434)
   '_TkValue_' =&gt; '.button'
  DB&lt;7&gt; <tt class="userinput"><b>q</b></tt></pre></blockquote>

<p>As you see, we can not only print debug information, but also do
simple prototyping.
</p>

<p><a name="INDEX-120" />An even better
environment for this sort of activity is the program
<i class="command">ptksh</i>. It's part of a standard Perl/Tk
installation and, as its name suggests, it's a Perl/Tk shell
that allows us to interactively enter and test Perl and Tk commands.
<a href="ch01_06.htm">Figure 1-3</a> shows a sample <i class="command">ptksh</i>
session.
</p>

<a name="mastperltk-CHP-1-FIG-3" /><div class="figure"><img src="figs/mptk.0103.gif" alt="Figure 1-3" width="481" height="309" /></div><h4 class="objtitle">Figure 1-3. ptksh session</h4>

<p><a name="INDEX-121" /><a name="INDEX-122" />If you're really into graphical
debugging, treat yourself to the CPAN module
<em class="filename">Devel::ptkdb</em>, an excellent, sophisticated
Perl/Tk debugger. Simply invoke Perl with a <tt class="literal">-d</tt>
argument such as this:
</p>

<blockquote><pre class="code">[bug@Pandy atk]$ <tt class="userinput"><b>perl -d:ptkdb group</b></tt></pre></blockquote>

<p><a href="ch01_06.htm">Figure 1-4</a> shows a <em class="emphasis">ptkdb</em>
session.
</p>

<a name="mastperltk-CHP-1-FIG-4" /><div class="figure"><img src="figs/mptk.0104.gif" alt="Figure 1-4" width="481" height="343" /></div><h4 class="objtitle">Figure 1-4. ptkdb session</h4>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch02_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">1.5. Unsolicited Advice</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">2. Geometry Management</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>