<html><head><title>Popup Menus (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch12_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch12_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">12.5. Popup Menus</h2>

<p><a name="INDEX-1847" /><a name="INDEX-1848" />Perl/Tk provides several ways to pop up
menus. Thus far, all menus have been posted automatically by pressing
a menubutton, but we can do it ourselves by binding keystrokes or
button clicks to callbacks.
</p>

<a name="mastperltk-CHP-12-SECT-5.1" /><div class="sect2">
<h3 class="sect2">12.5.1. The post and Post Methods</h3>

<p><a name="INDEX-1849" />The lowest-level
mechanism is the Menu <tt class="literal">post</tt> method, which posts a
menu at a specific screen coordinate. The <tt class="literal">Post</tt>
method works like <tt class="literal">post</tt>, but additionally activates
a specific menu item. In either case, we are responsible for
determining <em class="emphasis">where</em> the menu is displayed.
</p>

<a name="mastperltk-CHP-12-FIG-5" /><div class="figure"><img src="figs/mptk.1205.gif" alt="Figure 12-5" width="334" height="138" /></div><h4 class="objtitle">Figure 12-5.  Post posts a menu and activates a menu item (here, index 4)</h4>

<p>Let's start with the code that produced <a href="ch12_05.htm">Figure 12-5</a>. It creates one menu, then displays it several
ways. The toolbar across the top of the window contains a
left-justified Menubutton and a right-justified labeled Optionmenu.
The menu contains nine menu items, four separators, and five command
menus at indexes 0, 2, 4, 6, and 8. Of course, the first way to post
the menu is to press the File menubutton.
</p>

<blockquote><pre class="code">my $toolbar = $mw-&gt;Frame-&gt;pack(qw/-fill x -expand 1/);
my $file = $toolbar-&gt;Menubutton(
    -text   =&gt; 'File',
    -relief =&gt; 'raised',
);
$file-&gt;pack(qw/-side left/);;

my $menu = $file-&gt;Menu(-tearoff =&gt; 0, -menuitems =&gt; [
    [qw/command ~New/],
    '',
    [qw/command ~Open/],
    '',
    [qw/command ~Save/],
    '',
    [qw/command ~Close/],
    '',
    [qw/command ~Quit/, -command =&gt; \&amp;exit],
]);
$file-&gt;configure(-menu =&gt; $menu);

my $menu_index = 0;
my $cursor = $toolbar-&gt;LabOptionmenu(
    -label    =&gt; 'menu_index',
    -labelPack =&gt; [qw/-side left/],
    -variable =&gt; \$menu_index,
    -options  =&gt; [(0, 2, 4, 6, 8)],
);
$cursor-&gt;pack(qw/-side right/);</pre></blockquote>

<p>Here are two other ways to post the menu. Typing the character
"p" invokes the <tt class="literal">post</tt> method and posts
the menu so that its northwest corner is over the cursor. Typing the
character "P" invokes the <tt class="literal">Post</tt> method
and posts the menu so menu item <tt class="literal">$menu_index</tt> is
centered over the cursor.
</p>

<blockquote><pre class="code">my $t = $mw-&gt;Text-&gt;pack;
$t-&gt;insert('end', &lt;&lt;"EOT");

&lt;p&gt; invokes \$menu-&gt;post(cursor_x, cursor_y)

&lt;P&gt; invokes \$menu-&gt;Post(cursor_x, cursor_y, menu_index)
EOT

$mw-&gt;bind('&lt;p&gt;' =&gt; [sub {
    my($w, $x, $y) = @_;
    $menu-&gt;post($x, $y);
}, Ev('X'), Ev('Y')]);

$mw-&gt;bind('&lt;P&gt;' =&gt; [sub {
    my($w, $x, $y) = @_;
    $menu-&gt;Post($x, $y, $menu_index);
}, Ev('X'), Ev('Y')]);</pre></blockquote>

</div>
<a name="mastperltk-CHP-12-SECT-5.2" /><div class="sect2">
<h3 class="sect2">12.5.2. The Popup Method</h3>

<p><a name="INDEX-1850" /><a name="INDEX-1851" /><a name="INDEX-1852" /><a name="INDEX-1853" /><a name="INDEX-1854" /><a name="INDEX-1855" />You've probably had occasion to use
a Dialog (or DialogBox) widget. These widgets are derived from a
Toplevel and spend most of their time in a withdrawn state.
It's also common to use Toplevels as containers for
custom-built popup windows.<a href="#FOOTNOTE-26">[26]</a>
When it's time to display these dialogs, we call the special
Perl/Tk window manager <tt class="literal">Popup</tt> method.
<tt class="literal">Popup</tt> is essentially a wrapper around a call to
<tt class="literal">Post</tt>, with three special purpose options that
specify placement information in high-level terms rather than
numerical coordinates. It's <tt class="literal">Popup</tt>'s
responsibility to take our human specifications and turn them into
actual screen coordinates suitable for <tt class="literal">Post</tt>.
</p><blockquote class="footnote"> <a name="FOOTNOTE-26" /><p> [26] If you want a dialog
window without window manager decorations, create the Toplevel and
then call <tt class="literal">overrideredirect(1)</tt>.</p> </blockquote>

<p><a name="INDEX-1856" /><a name="INDEX-1857" />What has this got to do with Menus? As
<a href="ch12_05.htm">Figure 12-6</a> indicates, the <i class="command">isa</i>
program from <a href="ch14_01.htm">Chapter 14, "Creating Custom Widgets in Pure Perl/Tk"</a> shows us that a Menu widget
is a subclass of Tk::Wm, the window manager class. This means that
Menus can invoke <tt class="literal">Popup</tt> too. Let's define
some terms, then examine the three special options.
</p>

<a name="mastperltk-CHP-12-FIG-6" /><div class="figure"><img src="figs/mptk.1206.gif" alt="Figure 12-6" width="177" height="182" /></div><h4 class="objtitle">Figure 12-6.  Popup is a method of Tk::Wm</h4>

<p><a name="INDEX-1858" /><a name="INDEX-1859" /><a name="INDEX-1860" /><a name="INDEX-1861" /><a name="INDEX-1862" />We can
direct a popup menu (or, in general, any Toplevel) to appear in two
general locations: either over another window&#x2014;for example, the
root window (screen) or a particular widget&#x2014;or over the cursor.
This is called the <em class="emphasis">popover location</em>. Once
we've made this decision, we can further refine the exact
placement of the popup relative to the popover location by specifying
the intersection of two <em class="emphasis">anchor points</em>. The
<em class="emphasis">popanchor point</em> is associated with the popup
menu and the <em class="emphasis">overanchor point</em> is associated with
the popover location (whether it be a window or the cursor). The
point where the two anchor points coincide is the <em class="emphasis">popup
locus</em>. Anchor points are string values and can be
<tt class="literal">c</tt> (for center) or any of the eight cardinal
compass points: n, <tt class="literal">ne</tt>, <tt class="literal">e</tt>,
<tt class="literal">se</tt>, <tt class="literal">s</tt>, <tt class="literal">sw</tt>,
<tt class="literal">w</tt>, or <tt class="literal">nw</tt>. See <a href="ch12_05.htm">Figure 12-7</a>.
</p>

<a name="mastperltk-CHP-12-FIG-7" /><div class="figure"><img src="figs/mptk.1207.gif" alt="Figure 12-7" width="221" height="257" /></div><h4 class="objtitle">Figure 12-7.  Two anchor positions define the popup locus</h4>

<p><a name="INDEX-1863" />This spatial
information is embodied in the following three options (which are
applicable for any widget derived from Tk::Wm, including Menus,
Toplevels, and dialog widgets like Dialog and DialogBox):
</p>

<dl>
<dt><i>-<tt class="literal">popover</tt> </i></dt>
<dd>
<a name="INDEX-1864" />Specifies
the popover location. It may be the string <tt class="literal">cursor</tt>,
a widget reference, or <tt class="literal">undef</tt> to specify the root
window (screen).
</p>
</dd>


<dt><i>-<tt class="literal">overanchor</tt></i></dt>
<dd>
<a name="INDEX-1865" />Specifies
where the popup should anchor relative to the popover location. For
instance, if east is specified, the popup appears over the right side
of the popup location; if it's north, the popup is positioned
above the popover location; and if it's northeast, the popup is
positioned at the upper-right corner of the popover location.
</p>
</dd>


<dt><i>-<tt class="literal">popanchor</tt></i></dt>
<dd>
<a name="INDEX-1866" />Specifies
the anchor point of the popup. If east, the right side of the popup
is the anchor; if north, the top of the popup is the anchor; and if
southwest, the lower-left corner of the popup is the anchor.
</p>
</dd>

</dl>

<a name="mastperltk-CHP-12-SECT-5.2.1" /><div class="sect3">
<h3 class="sect3">12.5.2.1. Popup examples</h3>

<p>This program, <i class="command">pop3</i>, shows various ways to pop up a
Dialog widget; the same principles apply to menus:
</p>

<a name="INDEX-1867" /><a name="INDEX-1868" /><blockquote><pre class="code">my(@popup_opts) = (-popover =&gt; undef, qw/-overanchor sw -popanchor sw/);

my $d1 = $mw-&gt;Dialog(
    @popup_opts,
    -text =&gt; "Original options:\n" . join(' ', say(@popup_opts)) . 
             "This Dialog should be in the screen's lower-left " .
             "corner.  When you dismiss this Dialog another will " .
             "popup in the southeast corner.",
);
$d1-&gt;Show;

@popup_opts = qw/-overanchor se -popanchor  se/;
$d1-&gt;configure(
    @popup_opts,
    -text =&gt; "Changed options:\n" . join(' ', say(@popup_opts)) . 
             "1 second after you dismiss this Dialog another " .
             "will popup, without window manager decorations ". 
             "(overrideredirect on), with its southeast corner " .
             "over the cursor.",
);
$d1-&gt;Show;
$mw-&gt;after(1000);

@popup_opts = qw/-popover cursor -popanchor se/;
$d1-&gt;configure(
    @popup_opts,
    -text =&gt; "Changed options:\n" . join(' ', say(@popup_opts)) . 
             "1 second after you dismiss this Dialog another " .
             "will popup, with window manager decorations once ". 
             "again (overrideredirect off), with its northwest " .
             "corner over the cursor.",
);
$d1-&gt;overrideredirect(1);
$d1-&gt;Show;

@popup_opts = qw/-popanchor  nw/;
$d1-&gt;configure(
    @popup_opts,
    -wraplength =&gt; '3i',
    -text =&gt; "Changed options:\n" . join(' ', say(@popup_opts)) . 
             "End of demonstration.",
);

$d1-&gt;overrideredirect(0);
$mw-&gt;after(1000);
$d1-&gt;Show;

sub say {
    map {defined($_) ? $_ : 'undef'} (@_, "\n\n");
}</pre></blockquote>

</div>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch12_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch12_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">12.4. Classical Menubars</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">12.6. Option Menus</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>