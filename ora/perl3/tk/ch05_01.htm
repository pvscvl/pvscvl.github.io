<html><head><title>Label and Entry Widgets (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch04_23.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch05_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 5. Label and Entry Widgets</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4>
  <p> <a href="#mastperltk-CHP-5-SECT-1">The Label Widget</a><br />
<a href="ch05_02.htm">The Entry Widget</a><br />
<a href="ch05_03.htm">The Perl/Tk LabEntry Mega-Widget</a><br /></p></div>

<p>There are times you'll want users to type in specific
information, such as their names, addresses, or even serial numbers.
The simplest way to do this is to use Entry widgets. You can use a
Label widget with an Entry to clearly communicate to the user what
should be typed in the Entry. Most often, you'll see the Label
and Entry combination used multiple times in a database Entry-type
window where there are many different pieces of information the user
must enter.
</p>
<div class="sect1"><a name="mastperltk-CHP-5-SECT-1" /></a>
<h2 class="sect1">5.1. The Label Widget</h2>

<p>A Label is
like a Button that doesn't do anything. It is a noninteractive
widget and by default cannot have the keyboard focus (meaning you
can't tab to it). It does nothing when you click on it (see
<a href="ch05_01.htm">Figure 5-1</a>)<a name="INDEX-632" /></a>.
</p>

<a name="mastperltk-CHP-5-FIG-1" /></a><div class="figure"><img src="figs/mptk.0501.gif" alt="Figure 5-1" width="95" height="23" /></div><h4 class="objtitle">Figure 5-1. Label widget</h4>

<p>Excluding Frame-like widgets, the Label is the simplest widget. It is
similar to a Button in that it can show text (or a bitmap), have
relief (default is <tt class="literal">flat</tt>), display multiple lines
of text, have a different font, and so on. <a href="ch05_01.htm">Figure 5-2</a> shows a simple window, with both a Button and
Label, created with this code:
</p>

<blockquote><pre class="code">use Tk;
$mw = MainWindow-&gt;new( );
$mw-&gt;Label(-text =&gt; "Label Widget")-&gt;pack( );
$mw-&gt;Button(-text =&gt; "Exit", -command =&gt; sub { exit })-&gt;pack( );
MainLoop;</pre></blockquote>

<a name="mastperltk-CHP-5-FIG-2" /></a><div class="figure"><img src="figs/mptk.0502.gif" alt="Figure 5-2" width="118" height="71" /></div><h4 class="objtitle">Figure 5-2. A simple window with Label and Button</h4>

<p>Here are some typical uses for a Label:</p>

<ul><li>
<p>Put a Label to the left of an Entry widget so the user knows what
type of data is expected.
</p>
</li><li>
<p>Put a Label above a group of Radiobuttons to clarify its purpose
(e.g., "Background Color:"). You can do the same with
Checkbuttons if they happen to be related or along the same theme.
</p>
</li><li>
<p>Use a Label to tell users what they did wrong: "The number
entered must be between 10 and 100." (Typically, you would use
a Dialog composite widget to give messages to the user like this, but
not always.)
</p>
</li><li>
<p>Put an informational line across the bottom of your window. Each of
the other widgets would have a mapping that displays a string
containing information about that widget.
</p>
</li><li>
<p>Add an icon or decorative image to your application.</p>
</li></ul>
<a name="mastperltk-CHP-5-SECT-1.1" /></a><div class="sect2">
<h3 class="sect2">5.1.1. Creating a Label</h3>

<p>The command to create a Label is, of course,
<tt class="literal">Label</tt>. Here's the basic usage:
</p>

<blockquote><pre class="code">$label = $parent-&gt;Label( <em class="replaceable"><tt>[ option =&gt; value . . . ] </tt></em>)-&gt;pack( );</pre></blockquote>

<p>Hopefully you are starting to see a trend in the creation command. As
you might expect, when you create a Label, you can specify options
that will change its appearance and how it behaves.
</p>

</div>
<a name="mastperltk-CHP-5-SECT-1.2" /></a><div class="sect2">
<h3 class="sect2">5.1.2. Label Options</h3>

<p>The following is a comprehensive list of options for Labels:</p>

<dl>
<a name="INDEX-633" /></a><dt><tt class="literal">-anchor =&gt; 'n' | 'ne' | 'e' | 'se' | 's' | 'sw' | 'w' | 'nw' | '</tt><tt class="userinput"><b>center</b></tt><tt class="literal">'</tt></dt>
<dd>
<a name="INDEX-634" /></a><a name="INDEX-635" /></a>Causes the text to stick to that position
in the Label widget. This won't be obvious unless the Label is
forced to be larger than standard size.
<p></p>
</dd>


<a name="INDEX-636" /></a><dt><tt class="literal">-background =&gt;</tt> <tt><em class="replaceable"><tt>color</tt></em></tt></dt>
<dd>
<a name="INDEX-637" /></a><a name="INDEX-638" /></a>Sets the background color of the Label
to <tt><em class="replaceable"><tt>color</tt></em></tt>.
<p></p>
</dd>


<dt><tt class="literal">-bitmap =&gt;</tt> <tt><em class="replaceable"><tt>bitmap</tt></em></tt></dt>
<dd>
<a name="INDEX-639" /></a>Displays the bitmap contained in
<tt><em class="replaceable"><tt>bitmap</tt></em></tt> instead of text.
<p></p>
</dd>


<dt><tt class="literal">-borderwidth =&gt;</tt> <tt><em class="replaceable"><tt>amount</tt></em></tt></dt>
<dd>
<a name="INDEX-640" /></a><a name="INDEX-641" /></a>Changes the width of the edges of the
Label.
<p></p>
</dd>


<dt><tt class="literal">-cursor =&gt;</tt> <tt><em class="replaceable"><tt>cursorname</tt></em></tt></dt>
<dd>
<a name="INDEX-642" /></a><a name="INDEX-643" /></a>Changes
the cursor to <tt><em class="replaceable"><tt>cursorname</tt></em></tt> when the mouse is
over this widget.
<p></p>
</dd>


<dt><tt class="literal">-font =&gt;</tt> <tt><em class="replaceable"><tt>fontname</tt></em></tt></dt>
<dd>
<a name="INDEX-644" /></a><a name="INDEX-645" /></a>Indicates that the text in the
widget will be displayed with <tt><em class="replaceable"><tt>fontname</tt></em></tt>.
<p></p>
</dd>


<a name="INDEX-646" /></a><a name="INDEX-647" /></a><dt><tt class="literal">-foreground =&gt;</tt> <tt><em class="replaceable"><tt>color</tt></em></tt></dt>
<dd>
<a name="INDEX-648" /></a><a name="INDEX-649" /></a><a name="INDEX-650" /></a><a name="INDEX-651" /></a>Changes the text of the Button (or the
bitmap) to <tt><em class="replaceable"><tt>color</tt></em></tt>.
<p></p>
</dd>


<dt><tt class="literal">-height =&gt;</tt> <tt><em class="replaceable"><tt>amount</tt></em></tt></dt>
<dd>
<a name="INDEX-652" /></a>Sets the height of the Label to
<em class="replaceable"><tt><tt>amount</tt></tt></em><tt>; <tt><em class="replaceable">amount</em></tt></tt>
is a valid screen distance.
<p></p>
</dd>


<a name="INDEX-653" /></a><a name="INDEX-654" /></a><dt><tt class="literal">-highlightbackground =&gt;</tt> <tt><em class="replaceable"><tt>color</tt></em></tt></dt>
<dd>
<a name="INDEX-655" /></a>Sets the color of the focus rectangle when
the widget is not in focus to <tt><em class="replaceable"><tt>color</tt></em></tt>.
<p></p>
</dd>


<a name="INDEX-656" /></a><a name="INDEX-657" /></a><a name="INDEX-658" /></a><a name="INDEX-659" /></a><a name="INDEX-660" /></a><a name="INDEX-661" /></a><a name="INDEX-662" /></a><a name="INDEX-663" /></a><a name="INDEX-664" /></a><a name="INDEX-665" /></a><a name="INDEX-666" /></a><a name="INDEX-667" /></a><a name="INDEX-668" /></a><a name="INDEX-669" /></a><a name="INDEX-670" /></a><a name="INDEX-671" /></a><a name="INDEX-672" /></a><a name="INDEX-673" /></a><a name="INDEX-674" /></a><a name="INDEX-675" /></a><a name="INDEX-676" /></a><a name="INDEX-677" /></a><a name="INDEX-678" /></a><a name="INDEX-679" /></a><a name="INDEX-680" /></a><a name="INDEX-681" /></a><a name="INDEX-682" /></a><a name="INDEX-683" /></a><a name="INDEX-684" /></a><a name="INDEX-685" /></a><a name="INDEX-686" /></a><a name="INDEX-687" /></a><a name="INDEX-688" /></a><a name="INDEX-689" /></a><a name="INDEX-690" /></a><dt><tt class="literal">-highlightcolor =&gt;</tt> <tt><em class="replaceable"><tt>color</tt></em></tt></dt>
<dd>
<a name="INDEX-691" /></a><a name="INDEX-692" /></a><a name="INDEX-693" /></a>Sets the color of the focus rectangle when
the widget has focus to <tt><em class="replaceable"><tt>color</tt></em></tt>.
<p></p>
</dd>


<dt><tt class="literal">-highlightthickness =&gt;</tt> <tt><em class="replaceable"><tt>amount</tt></em></tt></dt>
<dd>
<a name="INDEX-694" /></a>Sets the width of the focus rectangle.
Default is 0 for the Label.
<p></p>
</dd>


<dt><tt class="literal">-image =&gt;</tt> <tt><em class="replaceable"><tt>imgptr</tt></em></tt></dt>
<dd>
<a name="INDEX-695" /></a>Displays the image to which
<tt><em class="replaceable"><tt>imgptr</tt></em></tt> points, instead of text.
<p></p>
</dd>


<dt><tt class="literal">-justify =&gt; 'left' | 'right' | '</tt><tt class="userinput"><b>center</b></tt><tt class="literal">'</tt></dt>
<dd>
<a name="INDEX-696" /></a>Sets the side of the Label against which
multiline text will justify.
<p></p>
</dd>


<dt><tt class="literal">-padx =&gt;</tt> <tt><em class="replaceable"><tt>amount</tt></em></tt></dt>
<dd>
<a name="INDEX-697" /></a>Adds extra space inside the edge to the
left and right of the Label.
<p></p>
</dd>


<dt><tt class="literal">-pady =&gt;</tt> <tt><em class="replaceable"><tt>amount</tt></em></tt></dt>
<dd>
<a name="INDEX-698" /></a>Adds extra space inside the edge to the
top and bottom of the Label.
<p></p>
</dd>


<dt><tt class="literal">-relief =&gt; '</tt><tt class="userinput"><b>flat</b></tt><tt class="literal">' | 'groove' | 'raised' | 'ridge' | 'sunken'</tt></dt>
<dd>
<a name="INDEX-699" /></a>Changes the type of edges drawn around the
Button.
<p></p>
</dd>


<dt><tt class="literal">-takefocus =&gt;</tt> <tt class="userinput"><b>0</b></tt> <tt class="literal">| 1 | undef</tt></dt>
<dd>
<a name="INDEX-700" /></a>Changes the ability of the Label
to have the focus or not.
<p></p>
</dd>


<dt><tt class="literal">-text =&gt;</tt> <tt><em class="replaceable"><tt>text</tt></em></tt></dt>
<dd>
<a name="INDEX-701" /></a>Displays a text string in the Label.
<p></p>
</dd>


<dt><tt class="literal">-textvariable =&gt; \$variable</tt></dt>
<dd>
<a name="INDEX-702" /></a>Points to the variable containing
text to be displayed in the Label. Label will change automatically as
<tt class="literal">$variable</tt> changes.
<p></p>
</dd>


<dt><tt class="literal">-underline =&gt;</tt> <tt><em class="replaceable"><tt>n</tt></em></tt></dt>
<dd>
<a name="INDEX-703" /></a>Causes the
<tt><em class="replaceable"><tt>n</tt></em></tt>th character to be underlined. Allows
that key to invoke the widget when it has the focus. Default value is
-1 (no character underlined).
<p></p>
</dd>


<dt><tt class="literal">-width =&gt;</tt> <tt><em class="replaceable"><tt>amount</tt></em></tt></dt>
<dd>
<a name="INDEX-704" /></a>Causes the Label width to be
<tt><em class="replaceable"><tt>amount</tt></em></tt>.
<p></p>
</dd>


<dt><tt class="literal">-wraplength =&gt;</tt> <tt><em class="replaceable"><tt>amount</tt></em></tt></dt>
<dd>
<a name="INDEX-705" /></a>Indicates that the text in the
Label will wrap when it gets longer than
<em class="replaceable"><tt><tt><tt>amount</tt></tt></tt></em>.
<p></p>
</dd>

</dl>

<p>This list briefly describes each option and what it does. Some of the
options have different defaults for the Label widget than we are used
to seeing with Button-type widgets, causing the Label to behave a bit
differently.
</p>

</div>
<a name="mastperltk-CHP-5-SECT-1.3" /></a><div class="sect2">
<h3 class="sect2">5.1.3. How a Label Differs from Other Widgets</h3>

<p>When we created Button-type widgets, we could either click them with
the mouse or tab to them and then use the keyboard to press the
Button. A Label widget, on the other hand, does not interact with the
user unless we add explicit bindings. It is there for informational
purposes only, so there is no <tt class="literal">-command</tt> option.
</p>

<p>The default value for the <tt class="literal">-takefocus</tt> option is 0,
which means you cannot tab to it. When tabbing between widgets on the
screen, the highlight rectangle shows us which widget currently has
the keyboard focus. Since we don't allow the Label to have the
focus (remember, <tt class="literal">-takefocus</tt> is set to 0), it
doesn't make sense to have a visible highlight rectangle. The
default value for the <tt class="literal">-highlightthickness</tt> option
in a Label widget is 0. You can make a rectangle appear around a
Label by setting <tt class="literal">-highlightthickness</tt> to something
greater than 0, and setting <tt class="literal">-highlightbackground</tt>
to a color, such as blue or red.
</p>

<p>The Label widget also doesn't have a <tt class="literal">-state</tt>
option. Since we shouldn't be able to click a Label, we should
never have to disable it.
</p>

</div>
<a name="mastperltk-CHP-5-SECT-1.4" /></a><div class="sect2">
<h3 class="sect2">5.1.4. Relief</h3>

<p><a name="INDEX-706" /></a>In <a href="ch05_01.htm">Figure 5-3</a>, you can see what happens when you
change the Label's <tt class="literal">-relief</tt> option. Notice that the edges of the widget are very close
to the text. Unlike a Button, you usually don't want much extra
space around the Label (space is controlled by the
<tt class="literal">-padx</tt> and <tt class="literal">-pady</tt> options). Normally you want the Label widget to sit right
next to the widget (or widgets) it is describing.
</p>

<a name="mastperltk-CHP-5-FIG-3" /></a><div class="figure"><img src="figs/mptk.0503.gif" alt="Figure 5-3" width="453" height="49" /></div><h4 class="objtitle">Figure 5-3. Labels with different relief values; window on right has a -borderwidth of 10</h4>

<p>Seeing what a widget looks like with different relief values
sometimes helps determine where the widget ends, especially with a
widget that has a default value of <tt class="literal">'flat'</tt>. Also,
changing the relief of different widgets ensures that we know which
widgets are where on the screen. After creating 10 Entries and Labels
with less-than-creative variable names, it's easy to lose
track. Changing the border width is bound to make that one widget
stand out. Color is also a good way to make a diagnostic message.
</p>

</div>
<a name="mastperltk-CHP-5-SECT-1.5" /></a><div class="sect2">
<h3 class="sect2">5.1.5. Status Message Example</h3>

<p><a name="INDEX-707" /></a>You can use the
<tt class="literal">groove</tt> or <tt class="literal">ridge</tt> relief when
making a help or status Label along the bottom of a window. Such a
Label is packed with <tt class="literal">-side =&gt; 'bottom'</tt> and
<tt class="literal">-fill =&gt;</tt> <tt class="literal">'x'</tt>. There are two
different ways you can use a status Label:
</p>

<ul><li>
<p>Set the variable associated with it so it changes as your program
progresses, announcing to the user that it is busy or that something
is happening.
</p>
</li><li>
<p>Have the help Label give information on each of the different widgets
in your application when it becomes active, using the
<tt class="literal">bind</tt> command.
</p>
</li></ul>
<p>Both types are demonstrated in the following sample code.</p>

<p>This code shows the "What I'm doing now" type of
help Label:
</p>

<blockquote><pre class="code">$mw-&gt;Label(-textvariable =&gt; \$message, -borderwidth =&gt; 2, 
           -relief =&gt; 'groove')-&gt;pack(-fill =&gt; 'x', 
                                      -side =&gt; 'bottom');
$mw-&gt;Text( )-&gt;pack(-side =&gt; 'top', 
                            -expand =&gt; 1, 
                            -fill =&gt; 'both');

$message = "Loading file index.html...";
...
$message = "Done";</pre></blockquote>

<p>The Label is created across the bottom of the screen. We
<tt class="literal">pack</tt> it first because we want it to stay on the
screen if we resize the window (remember, the last widgets packed get
lower priority if the window runs out of room). As the program
executes (represented by the <tt class="literal">...</tt>), it changes the
Label accordingly.
</p>

<p>This code shows an example of using a widget-helper help Label:</p>

<blockquote><pre class="code">$mw-&gt;title("Help Label Example");

$mw-&gt;Label(-textvariable =&gt; \$message)
   -&gt;pack(-side =&gt; 'bottom', -fill =&gt; 'x');

$b = $mw-&gt;Button(-text =&gt; "Exit", -command =&gt; \&amp;exit, -relief =&gt; 'groove')
        -&gt;pack(-side =&gt; 'left');
&amp;bind_message($b, "Press to quit the application");

$b2 = $mw-&gt;Button(-text =&gt; "Do Nothing")-&gt;pack(-side =&gt; 'left');
&amp;bind_message($b2, "This Button does absolutely nothing!");

$b3 = $mw-&gt;Button(-text =&gt; "Something", 
  -command =&gt; sub { print "something\n"; })-&gt;pack(-side =&gt; 'left');
&amp;bind_message($b3, "Prints the text 'something'");

sub bind_message {
  my ($widget, $msg) = @_;
  $widget-&gt;bind('&lt;Enter&gt;', [ sub { $message = $_[1]; }, $msg ]);
  $widget-&gt;bind('&lt;Leave&gt;', sub { $message = ""; });
}</pre></blockquote>

<p>This example is a bit longer, because we are using the
<tt class="literal">bind</tt> method (the <tt class="literal">bind</tt> method is
explained in more detail in <a href="ch15_01.htm">Chapter 15, "Anatomy of the MainLoop"</a>). We want to
associate a help message with each widget we create. We do this by
adding bindings to each widget, which change the variable
<tt class="literal">$message</tt> to a specified string when the mouse
enters the widget and to an empty string if the mouse leaves the
widget. We use a subroutine to avoid writing the same two
<tt class="literal">bind</tt> lines over and over. <a href="ch05_01.htm">Figure 5-4</a> shows what our window looks like with the
mouse over the center Button.
</p>

<a name="mastperltk-CHP-5-FIG-4" /></a><div class="figure"><img src="figs/mptk.0504.gif" alt="Figure 5-4" width="228" height="211" /></div><h4 class="objtitle">Figure 5-4. Window with Label across the bottom</h4>

</div>
<a name="mastperltk-CHP-5-SECT-1.6" /></a><div class="sect2">
<h3 class="sect2">5.1.6. Container Frames</h3>

<p><a name="INDEX-708" /></a>In <a href="ch05_01.htm">Figure 5-4</a>, you can
see the example text is centered within the Label widget. When using
a single line Label and filling the widget across the screen, the
text remains centered, even if you add the<tt class="literal">-justify</tt> <tt class="literal">=&gt;</tt>
<tt class="literal">'left'</tt> option. You can get around this by creating
a container Frame, giving it the desired relief, filling the Frame
across the screen (instead of the Label), and placing the Label
widget within the Frame:
</p>

<blockquote><pre class="code">$f = $mw-&gt;Frame(-relief =&gt; 'groove',
                -bd =&gt; 2)-&gt;pack(-side =&gt; 'bottom',
                                -fill =&gt; 'x');
$f-&gt;Label(-textvariable =&gt; \$message,)-&gt;pack(-side =&gt; 'left');</pre></blockquote>

<p>This allows the Label to grow and shrink within the Frame as
necessary, while the text sticks to the left side. Even better,
perhaps, is to simply use <tt class="literal">-anchor =&gt; 'w'</tt> when
configuring the Label.
</p>

<p>If you've typed in this short example and played with the
strings bound to each widget, you might have noticed that the window
will resize itself if the text assigned to
<tt class="literal">$message</tt> is too long to display in the Label. This
can get annoying if your window is fairly small to begin with. There
are two ways to deal with this: first, you can always use really
short text strings; second, you can tell the window not to resize
when the Label changes size.
</p>

<p>The drawbacks with each approach aren't too bad, and which one
you pick just depends on the application you are working on. If you
can write really short sentences that make sense, great. Telling the
window not to resize is almost as easy, though; it is accomplished by
adding one line to your program:
</p>

<blockquote><pre class="code">$mw-&gt;packPropagate(0);</pre></blockquote>

<p><a name="INDEX-709" /></a>Using
<tt class="literal">packPropagate</tt> will cause your window not to resize
when a widget is placed inside the window (we first talked about
<tt class="literal">packPropagate</tt> in <a href="ch02_01.htm">Chapter 2, "Geometry Management"</a>).
This means that your window might not show all your widgets right
away. You can deal with this by keeping
<tt class="literal">packPropagate</tt> on until you get all your widgets
in, figuring out a good starting size for your window, and using
<tt class="literal">$mw-&gt;geometry(<em class="replaceable"><tt>size</tt></em>)</tt> to request that size initially. (See <a href="ch11_01.htm">Chapter 11, "Frame, MainWindow,and Toplevel Widgets"</a> for
info on the <tt class="literal">geometry</tt> method.)
</p>

</div>
<a name="mastperltk-CHP-5-SECT-1.7" /></a><div class="sect2">
<h3 class="sect2">5.1.7. Label Configuration</h3>

<p>Label is a pretty boring widget, so there are only two methods
available to change or get information on it: <tt class="literal">cget</tt>
and <tt class="literal">configure</tt>. Both methods work for Label the
same way they work for the Button widget. Please refer to
<a href="ch05_01.htm">Chapter 5, "Label and Entry Widgets"</a> 
for details on arguments and return values.
</p>

</div>
</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch04_23.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch05_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">4.23. Turning a Checkbutton/Radiobutton On and Off</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">5.2. The Entry Widget</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>
