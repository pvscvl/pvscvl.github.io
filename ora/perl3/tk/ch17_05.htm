<html><head><title>The Bitmap Image Type (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch17_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch17_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">17.5. The Bitmap Image Type</h2>

<p><a name="INDEX-2672" /><a name="INDEX-2673" />The
<tt class="literal">Bitmap</tt> command can read XBM data from a file or
directly from data embedded in your Perl/Tk program. Suppose we have
a bitmap of a circle. The following code creates the bitmap image
from the XBM file and gives it a black foreground (the circle) and a
white background. The image is placed inside a Label with a gray
background, and then it's packed:
</p>

<blockquote><pre class="code">my $b = $mw-&gt;Bitmap(-file       =&gt; 'circle.xbm',
                    -foreground =&gt; 'black',
                    -background =&gt; 'white',
);

my $l = $mw-&gt;Label(-image =&gt; $b, -background =&gt; 'gray')-&gt;pack;</pre></blockquote>

<p>Since the Label shrink-wraps around the image, all we see is the
picture shown in <a href="ch17_05.htm">Figure 17-5</a>. Notice also that
we've omitted any mask file.
</p>

<a name="mastperltk-CHP-17-FIG-5" /><div class="figure"><img src="figs/mptk.1705.gif" alt="Figure 17-5" width="64" height="84" /></div><h4 class="objtitle">Figure 17-5.  A bitmap of a circle without a mask</h4>

<p>Suppose we copy the original bitmap and invert it (that is, toggle
all the bits so ones become zeros and zeros become ones) and save the
result as a mask file. This statement reconfigures the Bitmap image
and adds a <tt class="literal">-maskfile</tt> option, producing a
transparent area where the circle used to be (<a href="ch17_05.htm">Figure 17-6</a>), allowing the Label's gray color to
show through:
</p>

<blockquote><pre class="code">$b-&gt;configure(-maskfile =&gt; 'images/circle.msk');</pre></blockquote>

<p>Notice the bitmap's background color appears wherever the mask
has an on bit and the original source bit is off.
</p>

<a name="mastperltk-CHP-17-FIG-6" /><div class="figure"><img src="figs/mptk.1706.gif" alt="Figure 17-6" width="64" height="84" /></div><h4 class="objtitle">Figure 17-6.  Mask that's an inverted version of bitmap makes the bitmap's foreground transparent</h4>

<p><a href="ch17_05.htm">Figure 17-7</a> shows a similar mask that has some bits
set where the original source bits are also set, allowing the source
foreground to show through.
</p>

<a name="mastperltk-CHP-17-FIG-7" /><div class="figure"><img src="figs/mptk.1707.gif" alt="Figure 17-7" width="64" height="84" /></div><h4 class="objtitle">Figure 17-7.  Mask bits set over on source bits show the foreground color</h4>

<p>The <tt class="literal">Bitmap</tt> command can read data inline instead of
from a file, using the <tt class="literal">-data</tt> and
<tt class="literal">-maskdata</tt> options.
</p>

<a name="mastperltk-CHP-17-SECT-5.1" /><div class="sect2">
<h3 class="sect2">17.5.1. Cool Tricks with an Empty Bitmap</h3>

<p><a name="INDEX-2674" />We can make the cursor totally invisible
by assigning it an empty, or transparent, bitmap such as this:
</p>

<blockquote><pre class="code">#define trans_cur_width 1
#define trans_cur_height 1
#define trans_cur_x_hot 0
#define trans_cur_y_hot 0
static unsigned char trans_cur_bits[] = {
   0x00};</pre></blockquote>

<p>a mask such as this:</p>

<blockquote><pre class="code">#define trans_cur_width 1
#define trans_cur_height 1
static unsigned char trans_cur_bits[] = {
   0x01};</pre></blockquote>

<p>and a -<tt class="literal">cursor</tt> specification similar to this:</p>

<blockquote><pre class="code">my $c = $mw-&gt;Canvas-&gt;grid;
$c-&gt;configure(-cursor =&gt;
 ['@trans_cur.xbm', 'trans_cur.msk', 'black', 'white']);</pre></blockquote>

<p>How can this possibly be useful? Just wait and see.</p>

<a name="mastperltk-CHP-17-SECT-5.1.1" /><div class="sect3">
<h3 class="sect3">17.5.1.1. An invisible cursor</h3>

<p><a name="INDEX-2675" />The
tiny mote that represents the display's cursor is an X11
bitmap. For some applications (mostly games), the built-in cursors
are not sufficient. Playing Doom with an X pointer just won't
work! But if we use a transparent bitmap, the cursor is completely
invisible when it's over the Canvas, although it's
possible to track it programmatically with a simple
<tt class="literal">&lt;Motion&gt;</tt> binding:
</p>

<blockquote><pre class="code">$c-&gt;CanvasBind('&lt;Motion&gt;' =&gt; sub {
    my($c) = @_;
    my($x, $y) = ($Tk::event-&gt;x, $Tk::event-&gt;y);
    print "cursor at canvas coordinate ($x,$y)\n";
});</pre></blockquote>

</div>

<a name="mastperltk-CHP-17-SECT-5.1.2" /><div class="sect3">
<h3 class="sect3">17.5.1.2. Filling a transparent Canvas item</h3>

<p><a name="INDEX-2676" /><a name="INDEX-2677" />An interesting problem cropped up on the
pTk mailing list. The task at hand was to create a series of
transparent Canvas items that also responded to bound events.
Creating a transparent item such as an oval, polygon, or rectangle is
simple enough: just don't give it a -<tt class="literal">fill</tt>
color. Then all we see is the item's outline, and the Canvas
background color or image shows through. Unfortunately, events such
as <tt class="literal">&lt;Motion&gt;</tt> aren't generated unless
the cursor is precisely over the item's outline. Waggling the
cursor in the item's interior has no effect. To verify, run
this code and notice that the <tt class="literal">print</tt> statement is
executed only if we carefully and deliberately position the cursor
over the oval's red outline.
</p>

<blockquote><pre class="code">my $cb = sub {
    print "Over circle, args = @_!\n";
};

my $c = $mw-&gt;Canvas-&gt;grid;
my $o1 = $c-&gt;createOval(25, 25, 100, 100,
    -outline =&gt; 'red',
);
$c-&gt;bind($o1, '&lt;Motion&gt;' =&gt; $cb);</pre></blockquote>

<p>If we give the oval a -<tt class="literal">fill</tt> color, the binding is
triggered anywhere over the item, as we'd like, but the
transparent effect is lost, and the Canvas background is obscured.
But we can surmount this problem with an empty stipple bitmap (even a
cursor bitmap!) coupled with any -<tt class="literal">fill</tt> color.
</p>

<blockquote><pre class="code">my $o2 = $c-&gt;createOval(155, 25, 225, 100,
    -outline =&gt; 'red',
    -fill    =&gt; 'blue',
    -stipple =&gt; '@trans_cur.xbm',
);
$c-&gt;bind($o2, '&lt;Motion&gt;' =&gt; $cb);</pre></blockquote>

<p>This oval has a red outline just like the first but is transparently
filled such that it generates events anywhere, yet allows us to see
through it. This feature was deemed important enough that a new
built-in bitmap named <tt class="literal">transparent</tt> was added to Tk
800.020, which means that we can say -<tt class="literal">stipple</tt>
<tt class="literal">=&gt;</tt> <tt class="literal">'transparent'</tt> in newer
Tks.<a name="INDEX-2678" />
</p>

</div>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch17_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch17_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">17.4. DefineBitmap</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">17.6. The Pixmap Image Type</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>