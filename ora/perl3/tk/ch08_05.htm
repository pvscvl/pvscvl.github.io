<html><head><title>Text Tags (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch08_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">8.5. Text Tags</h2>

<p><a name="INDEX-1044" /><a name="INDEX-1045" />Text tags give you another way to address
portions of text in the Text widget. A tag has three purposes, and
the same tag can serve all three or only one:
</p>

<ul><li>
<p>Assigning formatting information to a portion (or portions) of text</p>
</li><li>
<p>Associating a binding with text in the widget</p>
</li><li>
<p>Managing selected text</p>
</li></ul>
<p>Tags can change how the text appears on the screen; font, size,
coloring, and spacing are a few of the text properties affected by
tags. You change text properties by creating your own tags (with
their own names) and using option/value pairs to assign formatting
information. In addition to changing the formatting, you can use a
tag to apply a specific binding (such as perform a task when the user
double-clicks on that text). A special tag, <tt class="literal">"sel"</tt>,
manages the selected text. Any time the user selects some text, the
location of that text is marked with the <tt class="literal">"sel"</tt>
tag.
</p>

<p>Any of the text within the Text widget can have one or more tags
associated with it. If you apply two tags to the same piece of text
and they both alter the font, the last tag applied wins.
</p>

<a name="mastperltk-CHP-8-SECT-5.1" /><div class="sect2">
<h3 class="sect2">8.5.1. Tag Options</h3>

<p>The options you can use to configure tagged text are mostly a subset
of the configuration options of the Text widget itself. The
configuration options for the Text widget are the defaults for all
text in the Text widget. Using a tag allows you to change that
formatting or binding on a case-by-case basis. There are some options
that can be used only through tagged text.
</p>

<dl>
<dt><tt class="literal">-background =&gt;</tt> <tt><em class="replaceable">color</em></tt></dt>
<dd>
<a name="INDEX-1046" />Sets the color of the area behind
the text.
</p>
</dd>


<dt><tt class="literal">-bgstipple =&gt;</tt> <tt><em class="replaceable">pattern</em></tt></dt>
<dd>
<a name="INDEX-1047" />Sets the
pattern used to draw the area behind the text. Can create a shaded
look.
</p>
</dd>


<dt><tt class="literal">-borderwidth =&gt;</tt> <tt><em class="replaceable">amount</em></tt></dt>
<dd>
<a name="INDEX-1048" />Sets the width of the relief drawn
around the edges of the text, line by line.
</p>
</dd>


<dt><tt class="literal">-data =&gt;</tt> <tt><em class="replaceable">scalar</em></tt></dt>
<dd>
<a name="INDEX-1049" />Associates
<em class="replaceable"><tt><tt>scalar</tt></tt></em> with a tag, which allows you to
store any amount of information for the tag. It can, of course, be a
reference.
</p>
</dd>


<dt><tt class="literal">-elide =&gt;</tt> <tt><em class="replaceable">boolean</em></tt></dt>
<dd>
<a name="INDEX-1050" /> If
<tt><em class="replaceable">boolean</em></tt> is true, text covered by the tag
is not displayed.
</p>
</dd>


<dt><tt class="literal">-fgstipple =&gt;</tt> <tt><em class="replaceable">pattern</em></tt></dt>
<dd>
<a name="INDEX-1051" />Sets the
pattern used to draw the text.
</p>
</dd>


<dt><tt class="literal">-font =&gt;</tt> <tt><em class="replaceable">fontname</em></tt></dt>
<dd>
Sets the font used for the text.</p>
</dd>


<dt><tt class="literal">-foreground =&gt;</tt> <tt><em class="replaceable">color</em></tt></dt>
<dd>
<a name="INDEX-1052" />Sets the color of the text.
</p>
</dd>


<dt><tt class="literal">-justify =&gt; '</tt><tt class="userinput"><b>left</b></tt><tt class="literal">' | 'right' | 'center'</tt></dt>
<dd>
<a name="INDEX-1053" />Sets the position of the text within the
Text widget.
</p>
</dd>


<dt><tt class="literal">-lmargin1=&gt;</tt> <tt><em class="replaceable">amount</em></tt></dt>
<dd>
<a name="INDEX-1054" />Sets the
amount of indentation from the left edge for the first line of a
paragraph.
</p>
</dd>


<dt><tt class="literal">-lmargin2=&gt;</tt> <tt><em class="replaceable">amount</em></tt></dt>
<dd>
<a name="INDEX-1055" /><a name="INDEX-1056" />Sets the amount of
indentation from the left edge for the second and greater lines of a
paragraph. Sometimes called a hanging indent.
</p>
</dd>


<dt><tt class="literal">-offset =&gt;</tt> <tt><em class="replaceable">amount</em></tt></dt>
<dd>
<a name="INDEX-1057" />Sets the
amount the text is raised or lowered from the baseline. Can be used
to create superscripts and subscripts.
</p>
</dd>


<dt><tt class="literal">-overstrike =&gt;</tt> <tt class="userinput"><b>0</b></tt> <tt class="literal">| 1</tt></dt>
<dd>
<a name="INDEX-1058" />If a true
value, causes the text to have a line drawn through it.
</p>
</dd>


<dt><tt class="literal">-relief =&gt; 'flat' | 'groove' | 'raised' | 'ridge' | 'sunken'</tt></dt>
<dd>
<a name="INDEX-1059" />Determines the way the edges of the text
are drawn, line by line.
</p>
</dd>


<dt><tt class="literal">-rmargin =&gt;</tt> <tt><em class="replaceable">amount</em></tt> </dt>
<dd>
<a name="INDEX-1060" />Sets the
amount of space left between the text and the right edge of the
widget.
</p>
</dd>


<dt><tt class="literal">-spacing1 =&gt;</tt> <tt><em class="replaceable">amount</em></tt></dt>
<dd>
<a name="INDEX-1061" />Sets the
amount of additional space left on top of a line of text that begins
on its own line. Default is 0.
</p>
</dd>


<dt><tt class="literal">-spacing2 =&gt;</tt> <tt><em class="replaceable">amount</em></tt></dt>
<dd>
<a name="INDEX-1062" />Sets the
amount of additional space left on top of a line of text after it has
been wrapped around automatically by the Text widget. Default is 0.
</p>
</dd>


<dt><tt class="literal">-spacing3 =&gt;</tt> <tt><em class="replaceable">amount</em></tt></dt>
<dd>
<a name="INDEX-1063" />Sets the
amount of additional space left after a line of text has been ended
by a <tt class="literal">"\n"</tt>. Default is 0.
</p>
</dd>


<dt><tt class="literal">-state =&gt;</tt><tt class="literal">'</tt><tt class="userinput"><b>normal</b></tt><tt class="literal">' | 'hidden'</tt></dt>
<dd>
<a name="INDEX-1064" />Text is normally visible, but you may hide
it if desired.
</p>
</dd>


<dt><tt class="literal">-tabs =&gt;</tt> <tt><em class="replaceable">list</em></tt></dt>
<dd>
<a name="INDEX-1065" />Indicates the
set of tab stops for this text. See <a href="ch08_02.htm">Section 8.2.5, "Tab Stops"</a> earlier in this chapter for more
detailed information.
</p>
</dd>


<dt><tt class="literal">-underline =&gt;</tt> <tt><em class="replaceable">boolean</em></tt></dt>
<dd>
<a name="INDEX-1066" />Indicates that the text should be
drawn with an underline.
</p>
</dd>


<dt><tt class="literal">-wrap =&gt; 'none' | '</tt><tt class="userinput"><b>char</b></tt><tt class="literal">' | 'word'</tt></dt>
<dd>
<a name="INDEX-1067" />Determines the
mode in which the text is wrapped. <tt class="literal">'none'</tt> means
lines that are longer than the Text widget is wide are not wrapped.
<tt class="literal">'char'</tt> will wrap at each character.
<tt class="literal">'word'</tt> will wrap between words.
</p>
</dd>

</dl>

</div>
<a name="mastperltk-CHP-8-SECT-5.2" /><div class="sect2">
<h3 class="sect2">8.5.2. A Simple Tag Example</h3>

<p>Let's look at an example of how a simple tag is created and use
it to insert some text into a Text widget (the resulting screen is
shown in <a href="ch08_05.htm">Figure 8-4</a>):
</p>

<blockquote><pre class="code">$t = $mw-&gt;Text()-&gt;pack( );
$t-&gt;tagConfigure('bold', -font =&gt; "Courier 24 bold");
$t-&gt;insert('end', "This is some normal text\n");
$t-&gt;insert('end', "This is some bold text\n", 'bold');</pre></blockquote>

<p>Line 1 creates the Text widget and places it on the screen.</p>

<p>Line 2 creates the <tt class="literal">'bold'</tt> tag. Don't be
fooled by the use of the word "configure" instead of
"create." When you configure a tag, you are creating it.
We created a tag named <tt class="literal">'bold'</tt> and associated a
different font with it (it happens to be the same as our Unix Text
widget default font, just the bold version).
</p>

<p>At this point, we haven't changed anything in the Text widget.
We are just setting up to use the tag later in the code. You can use
any name to indicate a tag as long as it is a valid text string. We
could have named the tag <tt class="literal">"bold_font"</tt> or
<tt class="literal">"big_bold_font"</tt> or <tt class="literal">"tag1"</tt>. If
you have good programming style (and want to be able to maintain your
code), use a name that indicates what the tag does.
</p>

<p>Line 3 inserts some text into the Text widget using the default
formatting.
</p>

<p>Line 4 inserts some more text into the Text widget but uses the
<tt class="literal">'bold'</tt> tag. The <tt class="literal">insert</tt> method
allows us to specify a tag as the third argument. This causes that
string of text to be inserted into the Text widget and assigned the
tag <tt class="literal">'bold'</tt>. The <tt class="literal">'bold'</tt> tag was
configured to change the font, so any text with the
<tt class="literal">'bold'</tt> tag will be shown with the different font.
</p>

<a name="mastperltk-CHP-8-FIG-4" /><div class="figure"><img src="figs/mptk.0804.gif" alt="Figure 8-4" /></div><h4 class="objtitle">Figure 8-4. Text widget with normal and bold text</h4>

<p>This is a pretty simplified example. What if we want to alter text
that has been typed in by the user? We can't use the
<tt class="literal">insert</tt> method then. We use the
<tt class="literal">tagAdd</tt> method specifying a range of indexes to
apply the tag to:
</p>

<blockquote><pre class="code">$t-&gt;tagAdd('bold', '1.0', 'end');</pre></blockquote>

<p>This applies the <tt class="literal">'bold'</tt> tag to all the text within
the Text widget.
</p>

</div>
<a name="mastperltk-CHP-8-SECT-5.3" /><div class="sect2">
<h3 class="sect2">8.5.3. Selections in a Text Widget Using the  "sel" Tag</h3>

<p><a name="INDEX-1068" />The <tt class="literal">"sel"</tt> tag is a
special tag maintained by the Text widget. Any text the user selects
will be assigned the <tt class="literal">"sel"</tt> tag. Unfortunately,
there are no easy methods provided that help you determine if there
is a selection or where it's located. Here are a few of the
basic things you'll want to do with the selection.
</p>

<p>To determine if the selection exists:</p>

<blockquote><pre class="code">$if ($t-&gt;tagRanges('sel')) {
   ... do something with sel as an index ...
}</pre></blockquote>

<p>You may want to force the selection programmatically by using some of
the tag methods (which we haven't covered yet) to put the
<tt class="literal">"sel"</tt> tag on some text. For instance, to add the
third line to the selected text:
</p>

<blockquote><pre class="code">$t-&gt;tagAdd('sel', '3.0', '3.0 lineend');</pre></blockquote>

<p>You can have multiple selections in the Text widget, and each time
you call <tt class="literal">tagAdd</tt>, you're adding to the
selection.
</p>

<p>Here's an example that shows how to add another tag to the
currently selected text:
</p>

<blockquote><pre class="code">$t-&gt;tagAdd('bold', 'sel.first', 'sel.last') if ($t-&gt;tagRanges('sel'));</pre></blockquote>

<p><a name="INDEX-1069" />When you
use the <tt class="literal">"sel"</tt> tag as part of an index, you need to
make sure the tag exists (using <tt class="literal">tagRanges</tt>) within
the Text widget first or you'll get a really nasty error.
</p>

<p>Here are two ways to get the currently selected text:</p>

<blockquote><pre class="code"># Harder way:
$s1 = $t-&gt;get('sel.first', 'sel.last') if ($t-&gt;tagRanges('sel'));
# Easier way ($s2 is always set to something):
$s2 = $t-&gt;getSelected( );</pre></blockquote>

<p><a name="INDEX-1070" />The
<tt class="literal">getSelected</tt> method is a convenience method for the
Perl/Tk version of the Text widget. Look towards the end of this
chapter in <a href="ch08_19.htm">Section 8.19, "The Perl/Tk Text Widget Extended Methods"</a> for more selection
convenience methods.
</p>

</div>
<a name="mastperltk-CHP-8-SECT-5.4" /><div class="sect2">
<h3 class="sect2">8.5.4. Configuring and Creating Tags</h3>

<p><a name="INDEX-1071" /><a name="INDEX-1072" />The first thing you'll do with a
tag is create it by using <tt class="literal">tagConfigure</tt> (unless
you're using the automatically defined <tt class="literal">"sel"</tt>
tag). The first argument to <tt class="literal">tagConfigure</tt> is the
name of the tag. The rest of the arguments (which are optional) are
option/value pairs, as described earlier in <a href="ch08_05.htm">Section 8.5.1, "Tag Options"</a>. Here are some examples:
</p>

<blockquote><pre class="code"># creating a tag with no options
$text-&gt;tagConfigure("special");
# Creating a tag that will change the color
$text-&gt;tagConfigure("blue", -foreground =&gt; "blue");
# Creating a tag that will make underlined text
$text-&gt;tagConfigure("underline", -underline =&gt; 1);
# Creating a tag that changes the color and spacing
$text-&gt;tagConfigure("bigblue", -foreground =&gt; "blue", -spacing2 =&gt; 6);</pre></blockquote>

<p>You can change the settings for an already created tag by using
<tt class="literal">tagConfigure</tt> a second time. Any changes you make
to the tag immediately affect any text on the screen that has that
tag:
</p>

<blockquote><pre class="code"># Add background color to "blue" tag
$text-&gt;tagConfigure("blue", -background =&gt; "red");
# Change the spacing for "bigblue"
$text-&gt;tagConfigure("bigblue", -spacing2 =&gt; 12);</pre></blockquote>

<p>As with widget <tt class="literal">configure</tt> methods, you can use
<tt class="literal">tagConfigure</tt> to find the current settings for a
specific tag. To get all the tag options and their values in a list
of lists:
</p>

<blockquote><pre class="code">@listoflists = $text-&gt;tagConfigure("blue");
foreach $l (@list) { print "@$l\n"; }  # print it out</pre></blockquote>

<p>Each list within the list contains two elements: the option name and
the value. You can limit the information you retrieve to a single
option:
</p>

<blockquote><pre class="code">($option, $value) = $text-&gt;tagConfigure("blue", -font);</pre></blockquote>

<p><a name="INDEX-1073" />If you only
want information on the value for a particular option, use
<tt class="literal">tagCget</tt>:
</p>

<blockquote><pre class="code">$value = $text-&gt;tagCget("bigblue", -spacing2)</pre></blockquote>

</div>
<a name="mastperltk-CHP-8-SECT-5.5" /><div class="sect2">
<h3 class="sect2">8.5.5. Adding a Tag to Existing Text</h3>

<p><a name="INDEX-1074" /><a name="INDEX-1075" />We've already seen an example of
using the <tt class="literal">tagAdd</tt> method. It allows you to add a
tag to portions of text in the Text widget. The usage of
<tt class="literal">tagAdd</tt> is as follows:
</p>

<blockquote><pre class="code">$text-&gt;tagAdd('tagname', <em class="replaceable"><tt>index1</em><i class="command"> [ , </i><em class="replaceable">index2</em><i class="command">, </i><em class="replaceable">index1</em><i class="command">, </i><em class="replaceable">index2</tt></em>, ... ] )</pre></blockquote>

<p>You can add a tag to a single index or a range of indexes. This means
you can add a tag to multiple places in the Text widget at the same
time. Let's say you wanted to add the tag
<tt class="literal">'heading'</tt> to the 1st, 12th, and 30th lines because
they are the location of some heading information that you want to
look different than the rest of the text. The
<tt class="literal">tagAdd</tt> line would look like this:
</p>

<blockquote><pre class="code">$text-&gt;tagAdd('heading', '1.0',  '1.0 lineend', 
                         '12.0', '12.0 lineend', 
                         '30.0', '30.0 lineend');</pre></blockquote>

<p>Now, assuming the formatting of <tt class="literal">'heading'</tt> makes
the font bigger, those lines show up differently than the defaults
from the rest of the text in the widget.
</p>

<p>You can add more than one tag to a section of text. For example, you
can have both a <tt class="literal">'heading'</tt> tag and a
<tt class="literal">'color'</tt> tag. If both tags try to alter the same
option (such as <tt class="literal">-font</tt>), the last setting for that
option wins.
</p>

<p>Once you place a tag on a range of text, any text inserted between
the beginning and ending indexes of that text will automatically get
the tag of the characters surrounding it. This happens whether you
are using <tt class="literal">insert</tt> without any specific tags or the
user just types text into the Text widget. If you specify a tag with
<tt class="literal">insert</tt>, it overrides the surrounding tags.
</p>

</div>
<a name="mastperltk-CHP-8-SECT-5.6" /><div class="sect2">
<h3 class="sect2">8.5.6. Using bind with Tags</h3>

<p><a name="INDEX-1076" /><a name="INDEX-1077" /><a name="INDEX-1078" /><a name="INDEX-1079" />One of the main reasons for tags is the
ability to assign a binding to certain portions of the text. After
creating a tag with <tt class="literal">tagConfigure</tt>, you can use
<tt class="literal">bind</tt> so a callback will execute when a sequence of
events happens (such as a mouseclick) on that tagged text. On our
Button widgets, we have a default binding of
<tt class="literal">&lt;Button-1&gt;</tt> that invokes the callback
associated with the <tt class="literal">-command</tt> option. We can do the
same thing with tagged text.
</p>

<p><a name="INDEX-1080" /><a name="INDEX-1081" />The best example is using text like a web
hyperlink. When you click on the link, something happens: a new
document is loaded, or another window is created and presented to the
user. The basic form of a <tt class="literal">tagBind</tt> call is as
follows:
</p>

<blockquote><pre class="code">$text-&gt;tagBind(<em class="replaceable"><tt>tagname</em> [, <em class="replaceable">sequence</em>, <em class="replaceable">callback</tt></em> ] )</pre></blockquote>

<p>The callback is similar to that specified for the
<tt class="literal">-command</tt> callback on a Button. The sequence is a
description of the event that triggers the script. The only sequences
you can specify are those that are keyboard or mouse related. (See
<a href="ch15_01.htm">Chapter 15, "Anatomy of the MainLoop"</a> for more details on available events.)
</p>

<p>The following code shows a psuedo-link example. All the link does
when we click on it is show the end of the Text widget:
</p>

<blockquote><pre class="code">$t = $mw-&gt;Scrolled("Text", -width =&gt; 40)-&gt;pack(-expand =&gt; 1, 
                                               -fill =&gt; 'both');
$t-&gt;tagConfigure('goto_end', -underline =&gt; 1, -foreground =&gt; 'red');
$t-&gt;tagBind('goto_end', "&lt;Button-1&gt;", sub { shift-&gt;see('end'); } );

# Setup Bindings to change cursor when over that line
$t-&gt;tagBind('goto_end', "&lt;Any-Enter&gt;", 
             sub { shift-&gt;configure(-cursor =&gt; 'hand2') });
$t-&gt;tagBind('goto_end', "&lt;Any-Leave&gt;", 
             sub { shift-&gt;configure(-cursor =&gt; 'xterm') });
$t-&gt;insert('end', "END\n", "goto_end");

# Insert a bunch of lines
for ($i = 1; $i &lt;= 100; $i++) {
  $t-&gt;insert('end', "$i\n");
}</pre></blockquote>

<p><a name="INDEX-1082" />Inside the
subs in the <tt class="literal">tagBind</tt> calls, we use the
<tt class="literal">shift</tt> command to invoke a method. We can do this
because the first argument sent to the <tt class="literal">bind</tt>
callback is the Text widget. This is done implicitly for you.
Whichever widget <tt class="literal">tagBind</tt> is invoked on is the
widget that will be sent as the first argument to the callback. To
use the Text widget more than once in the callback, assign it to a
lexical variable; for example, <tt class="literal">my $widget</tt>
<tt class="literal">=</tt> <tt class="literal">shift</tt>.
</p>

<p><a name="INDEX-1083" />If we created our Text widget in the
global scope of the program and placed a reference to the widget in
the variable <tt class="literal">$t</tt>, we could also access the Text
widget in the callback via the <tt class="literal">$t</tt> variable. This
is only possible because <tt class="literal">$t</tt> is in the global scope
and available during the callback. If you have two different Text
widgets with which you want to use the same callback, use
<tt class="literal">shift</tt> to get the correct Text widget:
</p>

<blockquote><pre class="code">$t1-&gt;tagBind('goto_end', "&lt;Button-1&gt;", \&amp;goto_end );
$t2-&gt;tagBind('goto_end', "&lt;Button-1&gt;", \&amp;goto_end );
sub goto_end {
  my $text = shift;
  $text-&gt;see('end');
}</pre></blockquote>

<p>Using the same callback for both Text widgets helps save space in
your program.
</p>

<p><a name="INDEX-1084" />To determine
the bindings for a tagname, use <tt class="literal">tagBind</tt> with the
tag name argument only:
</p>

<blockquote><pre class="code">@bindings = $text-&gt;tagBind("tagname");</pre></blockquote>

<p>The list will be empty if there are no bindings currently for that
tag.
</p>

<a name="mastperltk-CHP-8-SECT-5.6.1" /><div class="sect3">
<h3 class="sect3">8.5.6.1. The Perl/Tk Text widget extended bindings</h3>

<p>These bindings are particular to the Perl/Tk Text widget and do not
exist in Tcl/Tk. The class methods are explained in <a href="ch08_19.htm">Section 8.19, "The Perl/Tk Text Widget Extended Methods"</a>. 
</p>

<dl>
<dt><tt class="literal">&lt;F1&gt;</tt></dt>
<dd>
<a name="INDEX-1085" />Invokes the
<tt class="literal">clipboardColumnCopy</tt> method.
</p>
</dd>


<dt><tt class="literal">&lt;F2&gt;</tt></dt>
<dd>
<a name="INDEX-1086" />Invokes the
<tt class="literal">clipboardColumnCut</tt> method.
</p>
</dd>


<dt><tt class="literal">&lt;F3&gt;</tt></dt>
<dd>
<a name="INDEX-1087" />Invokes the
<tt class="literal">clipboardColumnPaste</tt> method.
</p>
</dd>


<dt><tt class="literal">&lt;Insert&gt;</tt></dt>
<dd>
<a name="INDEX-1088" />Invokes the
<tt class="literal">ToggleInsertMode</tt> method.
</p>
</dd>


<dt><tt class="literal">&lt;3&gt;</tt></dt>
<dd>
<a name="INDEX-1089" />Invokes
the <tt class="literal">PostPopupMenu</tt> method.
</p>
</dd>

</dl>

</div>
</div>
<a name="mastperltk-CHP-8-SECT-5.7" /><div class="sect2">
<h3 class="sect2">8.5.7. Deleting All Instances of a Tag</h3>

<p>Once a tag is created, you can use the <tt class="literal">tagDelete</tt>
method to delete the tag:
</p>

<blockquote><pre class="code">$text-&gt;tagDelete(<tt><em class="replaceable">tagname</em></tt> [ , <tt><em class="replaceable">tagname</em></tt> ... ])</pre></blockquote>

<p>The tags are deleted completely when you use
<tt class="literal">tagDelete</tt>. This means the text reverts back to the
default configuration values, and any bindings or other information
associated with those tags is also deleted.
</p>

<p>The <tt class="literal">tagDelete</tt> method can be used if you are
creating temporary tags dynamically within the program and need to
delete the tags later when the information is no longer valid.
</p>

</div>
<a name="mastperltk-CHP-8-SECT-5.8" /><div class="sect2">
<h3 class="sect2">8.5.8. Removing a Tag from the Text</h3>

<p><a name="INDEX-1090" />To remove
the tag from a specific block of text, you can use the
<tt class="literal">tagRemove</tt> method:
</p>

<blockquote><pre class="code">$text-&gt;tagRemove(<tt><em class="replaceable">tagname, index1 [, index2, index1, index2 ...]</em></tt>)</pre></blockquote>

<p>Specify the name of the tag and an index or range of indexes from
which to remove the tag. This leaves the tag intact; it merely
removes it from the specific text indicated with the indexes.
</p>

</div>
<a name="mastperltk-CHP-8-SECT-5.9" /><div class="sect2">
<h3 class="sect2">8.5.9. Raising and Lowering Tags</h3>

<p><a name="INDEX-1091" /><a name="INDEX-1092" />When there are several tags applied to
the same text, the last tag added to the text overrides the previous
ones, and its configuration options are given priority. You can
change the priority of the tags by using
<tt class="literal">tagLower</tt> and
<tt class="literal">tagRaise</tt>:
</p>

<blockquote><pre class="code">$text-&gt;tagLower(<tt><em class="replaceable">tagname [, belowtag ]</em></tt>)
$text-&gt;tagRaise(<tt><em class="replaceable">tagname [ , abovetag ]</em></tt>)</pre></blockquote>

<p>These methods take a tag name as the first argument. If there is no
second tag argument, the first tag is given the highest or lowest
priority. This affects the entire text in the Text widget, no matter
where the tags are applied. If a second tag is specified, the first
tag is placed specifically before or after the second tag.
</p>

<p>Think of it as reordering a stack of tags (all applied to the same
text). The tag on the top has the most say, and if it has a
<tt class="literal">-foreground</tt> option of <tt class="literal">'red'</tt>,
all the text with that tag will be red, regardless of what the other
text tags set <tt class="literal">-foreground</tt> to. If we use
<tt class="literal">tagRaise</tt> to move a tag with
<tt class="literal">-foreground</tt> of <tt class="literal">'blue'</tt> to the
top, the tagged text will change to blue.
</p>

</div>
<a name="mastperltk-CHP-8-SECT-5.10" /><div class="sect2">
<h3 class="sect2">8.5.10. Getting Tag Names</h3>

<p><a name="INDEX-1093" />You can find
all the different tags that apply to a specific index, or to the
whole Text widget, by using the <tt class="literal">tagNames</tt> method:
</p>

<blockquote><pre class="code">$text-&gt;tagNames([ <tt><em class="replaceable">index</em></tt> ])</pre></blockquote>

<p>If you specify an index, the list returned contains tags that apply
only to that index. If a specific index isn't given, the list
returned contains all the tags that apply to the entire Text widget
whether or not that tag has been applied to text within the widget.
</p>

</div>
<a name="mastperltk-CHP-8-SECT-5.11" /><div class="sect2">
<h3 class="sect2">8.5.11. Determining Where a Tag Applies</h3>

<p><a name="INDEX-1094" />If you know
the name of the tag, you can find where it applies in the Text widget
by using the range methods. The first method,
<tt class="literal">tagRanges</tt>, returns a list that contains pairs of
index values for the whole Text widget:
</p>

<blockquote><pre class="code">@list = $text-&gt;tagRanges("tagname")
# returns ( begin1, end1, begin2, end2 ... )</pre></blockquote>

<p>If no text in the Text widget has that tag, the returned list will be
empty.
</p>

<p><a name="INDEX-1095" />You can
use the <tt class="literal">tagNextrange</tt> method to get the pairs of
index values one at a time:
</p>

<blockquote><pre class="code">($start, $end) = $text-&gt;tagNextrange("tagname", <tt><em class="replaceable">index1</em></tt> [ , <tt><em class="replaceable">index2</em></tt> ])</pre></blockquote>

<p>The search for <tt class="literal">"tagname"</tt> will begin at
<tt><em class="replaceable">index1</em></tt> and go no farther than
<tt><em class="replaceable">index2</em></tt>. If
<tt><em class="replaceable">index2</em></tt> is not specified, the search will
continue until the end of the Text widget or until it finds the
<tt class="literal">tagname</tt>, whichever comes first.<a name="INDEX-1096" /><a name="INDEX-1097" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch08_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">8.4. Text Indexes</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">8.6. Inserting Text</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>
