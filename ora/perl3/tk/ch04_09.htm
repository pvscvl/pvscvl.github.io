<html><head><title>The -command Option (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch04_08.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch04_10.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">4.9. The -command Option</h2>

<p><a name="INDEX-555" /><a name="INDEX-556" />You'll almost always create Button
widgets with the <tt class="literal">-command</tt> option. This is because
for the Button to do something when pressed, we have to associate a
callback with the Button. A <em class="firstterm">callback</em> (see
<a href="ch15_01.htm">Chapter 15, "Anatomy of the MainLoop"</a>) is actually a Perl subroutine
that's invoked when mouse button 1 is released over the
Button.<a href="#FOOTNOTE-12">[12]</a> (Note that we specified <em class="emphasis">released</em>; if
you click down on the Button but move the cursor away from it before
releasing, nothing happens, because the mouseclick was aborted.)
</p><blockquote class="footnote"> <a name="FOOTNOTE-12" /><p> [12] Mouse button 1 is the leftmost mouse button,
mouse button 2 is the middle mouse button, and mouse button 3 is the
rightmost mouse button. On a 2-button mouse, mouse button 2 is often
simulated by pressing buttons 1 and 3 simultaneously.</p>
</blockquote>

<p><a name="INDEX-557" />The simplest
way to specify a <tt class="literal">-command</tt> callback is using a
<em class="emphasis">code reference</em>. In many of our examples, we use
an <em class="emphasis">anonymous</em> code reference to a subroutine that
simply executes an <tt class="literal">exit</tt> statement:
</p>

<blockquote><pre class="code">$mw-&gt;Button(-text =&gt; "Done", -command =&gt; sub { exit })-&gt;pack;</pre></blockquote>

<p>We might also reference an <em class="emphasis">explicit</em> subroutine
(that can then be called from multiple places):
</p>

<blockquote><pre class="code">$mw-&gt;Button(-text =&gt; "Done", -command =&gt; \&amp;save_and_exit)-&gt;pack;</pre></blockquote>

<p>Note that in both examples, <tt class="literal">-command</tt> expects a
reference to some Perl code. There are other callback formats, fully
explained in <a href="ch15_01.htm">Chapter 15, "Anatomy of the MainLoop"</a>.
</p>

<p><a name="INDEX-558" /><a name="INDEX-559" /><a name="INDEX-560" />Whereas Button widgets are nearly useless
without callbacks, Checkbutton and Radiobutton widgets are designed
to change the value of variables. Often, no immediate action is
necessary: when a Checkbutton or Radiobutton is toggled, the value of
a variable is changed, and then the widget simply waits until the
user tells it to do something about it. However, sometimes we do want
immediate results, as in the previous Radiobutton example.
</p>

<p>One thing a Checkbutton might do immediately when clicked is alter
the appearance of the window. The Checkbutton might look something
like the one in <a href="ch04_09.htm">Figure 4-13</a>.
</p>

<a name="mastperltk-CHP-4-FIG-13" /><div class="figure"><img src="figs/mptk.0413.gif" alt="Figure 4-13" width="121" height="43" /></div><h4 class="objtitle">Figure 4-13. Checkbutton that will display other widgets on the screen when clicked</h4>

<p>When the user clicks the Checkbutton to turn it on, the window
changes to look like <a href="ch04_09.htm">Figure 4-14</a>.
</p>

<a name="mastperltk-CHP-4-FIG-14" /><div class="figure"><img src="figs/mptk.0414.gif" alt="Figure 4-14" width="334" height="70" /></div><h4 class="objtitle">Figure 4-14. Window after clicking the Checkbutton</h4>

<p>Here's the code that makes the magic happen:</p>

<blockquote><pre class="code">#!/usr/bin/perl -w
use Tk;
$mw = MainWindow-&gt;new;
$mw-&gt;title("Checkbutton");

## Create other widgets, but don't pack them yet!
for ($i = 1; $i &lt;= 5; $i++) {
  push (@buttons, $mw-&gt;Button(-text =&gt; "Button$i"));
}

$mw-&gt;Checkbutton(-text =&gt; "Show all widgets",
                 -variable =&gt; \$cb_value,
                 -command =&gt; sub { 
                   if ($cb_value) {
                     foreach (@buttons) {
                       $_-&gt;pack(-side =&gt; 'left');
                     }
                   } else {
                     foreach (@buttons) {
                       $_-&gt;pack('forget');
                     }
                   }
                  })-&gt;pack(-side =&gt; 'top');
MainLoop;</pre></blockquote>

<p>To display some widgets later in the program, we create them ahead of
time and store references to them in the <tt class="literal">@buttons</tt>
array. (Observant readers will notice that the Buttons in this
example are rigged just for show and don't even have
<tt class="literal">-command</tt> options associated with them. Normally,
each would have a specific task to perform when pressed.)
</p>

<p>Then we create our Checkbutton. When the Button is clicked
(regardless of the status of its indicator), it will call the
subroutine pointed to by <tt class="literal">-command</tt>. Our subroutine
looks at the current value of <tt class="literal">$cb_value</tt>, shows the
Buttons if it is on, and hides them if it is off. The value in
<tt class="literal">$cb_value</tt> is changed before this subroutine is
called. When our Checkbutton is clicked again, the extra Buttons will
be removed from the window and the window will shrink back to its
previous size.
</p>

<p><a name="INDEX-561" />This setup is great when you want
to keep a basic window uncluttered while maintaining the ability to
show more widgets (if the user can handle the advanced functions of
the extra widgets). For example, you can create a Find window that
has a place to enter text, a Button to start the find, and an
Advanced Search Checkbutton. Clicking on Advanced Search would add
more widgets to the bottom of the window, allowing you to match case,
use regular expressions, and use other fancy search
mechanisms.<a name="INDEX-562" /> 
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch04_08.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch04_10.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">4.8. Radiobutton Values</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">4.10. Disabling a Button</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>