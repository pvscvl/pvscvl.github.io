<html><head><title>Miscellaneous Perl/Tk Methods (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch12_08.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch13_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 13. Miscellaneous Perl/Tk Methods</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4>
  <p> <a href="#mastperltk-CHP-13-SECT-1">Managing Widgets with configure and 
    cget</a><br />
<a href="ch13_02.htm">Building a Family Tree</a><br />
<a href="ch13_03.htm">Widget's ID</a><br />
<a href="ch13_04.htm">Color-Related Methods</a><br />
<a href="ch13_05.htm">The Application's Name</a><br />
<a href="ch13_06.htm">Widget Existence</a><br />
<a href="ch13_07.htm">Is the Widget Mapped?</a><br />
<a href="ch13_08.htm">Converting Screen Distances</a><br />
<a href="ch13_09.htm">Size of Widget</a><br />
<a href="ch13_10.htm">Widget Position</a><br />
<a href="ch13_11.htm">Screen Information</a><br />
<a href="ch13_12.htm">Atom Methods</a><br />
<a href="ch13_13.htm">Ringing a Bell</a><br />
<a href="ch13_14.htm">Clipboard and Selection Methods</a><br />
<a href="ch13_15.htm">Destroying a Widget</a><br />
<a href="ch13_16.htm">Focus Methods</a><br />
<a href="ch13_17.htm">Grab Methods</a><br />
<a href="ch13_18.htm">Marking a Widget Busy and Unbusy</a><br />
<a href="ch13_19.htm">Widget Mapping and Layering</a><br />
<a href="ch13_20.htm">Interapplication Communication</a><br />
<a href="ch13_21.htm">Waiting for Events to Happen</a><br />
<a href="ch13_22.htm">Time Delays</a><br />
<a href="ch13_23.htm">Parsing Command-Line Options</a><br />
<a href="ch13_24.htm">Really Miscellaneous Methods</a><br /></p></div>

<p>So far, most of the chapters in this book have concentrated on
specific widgets. This chapter covers the methods and subroutines
that can be invoked from any widget. You'll probably never need
most of these methods, but there are a few that you'll use
frequently, particularly <tt class="literal">configure</tt> and
<tt class="literal">cget</tt>.
</p>

<p>Most of the methods are based on the Tcl <tt class="literal">winfo</tt>
command (window information). Generally, the commands are
informational only, meaning you pass no arguments to them; you only
get a value back.
</p>

<p>This chapter also documents clipboard and selection methods for
cut-and-paste operations between applications, focus and grab
methods, and a few esoteric goodies.
</p>
<div class="sect1"><a name="mastperltk-CHP-13-SECT-1" /></a>
<h2 class="sect1">13.1. Managing Widgets with configure and cget</h2>

<p>Every widget included in the Perl/Tk distribution, as well as all
user-contributed widgets available separately, can use the
<tt class="literal">configure</tt> and <tt class="literal">cget</tt> methods,
which set, change, and query widget attributes. No matter the widget,
the format of the arguments to these functions is the same, and the
results passed back have the same format.
</p>

<p>The <tt class="literal">configure</tt> method allows you to assign or
change the value of a widget option. It can also be used to retrieve
the current value of the option. The <tt class="literal">cget</tt> method
cannot assign values but simply retrieves them with simpler syntax
than that of <tt class="literal">configure</tt>.
</p>

<a name="mastperltk-CHP-13-SECT-1.1" /></a><div class="sect2">
<h3 class="sect2">13.1.1. The configure Method</h3>

<p><a name="INDEX-1906" /></a>The basic
format of the <tt class="literal">configure</tt> method is as follows:
</p>

<blockquote><pre class="code">$widget-&gt;configure( [ <em class="replaceable"><tt>option</tt></em><tt> =&gt; <em class="replaceable">newvalue</em></tt>, ... ] );</pre></blockquote>

<p>Depending on the arguments passed to it, the
<tt class="literal">configure</tt> method can do three things:
</p>

<ul><li>
<p>Set or change the values of the options for <tt class="literal">$widget</tt>.
</p>
</li><li>
<p>Get the current value of any option for <tt class="literal">$widget</tt>.
</p>
</li><li>
<p>Get the current values of all of the options for <tt class="literal">$widget</tt>.
</p>
</li></ul>
<p>To set or change the value of an option, send the option pair exactly
as it would have appeared in the widget creation command:
</p>

<blockquote><pre class="code">$widget-&gt;configure(<em class="replaceable"><tt>-option</tt></em><tt> =&gt; <em class="replaceable">newvalue</em></tt>);</pre></blockquote>

<p>Whatever effect the option has will take place immediately. To see
the current values for a single option, send it as the argument. The
return value depends on whether <tt class="literal">configure</tt> is
called in list context or scalar context. In the following line,
<tt class="literal">configure</tt> is called in list context (since its
return value is being assigned to an array):
</p>

<blockquote><pre class="code">@info = $widget-&gt;configure(-highlightthickness);</pre></blockquote>

<p>In list context, an array of scalars is returned:</p>

<blockquote><pre class="code">-highlightthickness highlightThickness HighlightThickness 2 2</pre></blockquote>

<p>The following five values are in the returned array: </p>

<dl>
<dt><i>0</i></dt>
<dd>
Option name<p></p>
</dd>


<dt><i>1</i></dt>
<dd>
<a name="INDEX-1907" /></a>Option name from the option database (also
as it would appear in the <em class="emphasis">.Xdefaults</em> file)
<p></p>
</dd>


<dt><i>2</i></dt>
<dd>
Class in the option database<p></p>
</dd>


<dt><i>3</i></dt>
<dd>
Default value of the option<p></p>
</dd>


<dt><i>4</i></dt>
<dd>
Current value of the option<p></p>
</dd>

</dl>

<p><a name="INDEX-1908" /></a><a name="INDEX-1909" /></a>Calling
<tt class="literal">configure</tt> in scalar context returns a reference to
the five <tt class="literal">configure</tt> items.
</p>

<p>If you want to see the list of values for all the options the widget
supports, use this format:
</p>

<blockquote><pre class="code">@config = $widget-&gt;configure;</pre></blockquote>

<p><tt class="literal">@config</tt><a name="INDEX-1910" /></a> is now an array of anonymous lists. The
easiest way to print this information is to utilize Tk::Pretty, which
will do all the hard work of traversing the arrays and then put the
information into a readable form:
</p>

<blockquote><pre class="code">use Tk::Pretty;
@config = $widget-&gt;configure;
print Pretty @config;</pre></blockquote>

<p>The result is as follows:</p>

<blockquote><pre class="code">['-activebackground',activeBackground,Foreground,'#ececec','#ececec'],
['-activeforeground',activeForeground,Background,Black,Black],['-activeimage',
activeImage,ActiveImage,undef,undef],['-anchor','anchor',Anchor,'center',
'center'],['-background','background',Background,'#d9d9d9','#d9d9d9'],['-bd',
borderWidth],['-bg','background'],['-bitmap','bitmap',Bitmap,undef,undef],
['-borderwidth',borderWidth,BorderWidth,2,2],['-command','command',Command,
undef,bless([CODE(0x8189888)],Tk::Callback)],['-cursor','cursor',Cursor,
undef,undef],['-disabledforeground',disabledForeground,DisabledForeground,
'#a3a3a3','#a3a3a3'],['-fg','foreground'],['-font','font',Font,'-Adobe
-Helvetica-Bold-R-Normal--*-120-*-*-*-*-*-*','-Adobe-Helvetica-Bold-R-Normal
--*-120-*-*-*-*-*-*'],['-foreground','foreground',Foreground,Black,Black],
['-height','height',Height,0,0],['-highlightbackground',highlightBackground,
HighlightBackground,'#d9d9d9','#d9d9d9'],['-highlightcolor',highlightColor,
HighlightColor,Black,Black],['-highlightthickness',highlightThickness,
HighlightThickness,2,2],['-image','image',Image,undef,undef],['-justify',
'justify',Justify,'center','center'],['-padx',padX,Pad,3m,9],['-pady',padY,
Pad,1m,3],['-relief','relief',Relief,'raised','raised'],['-state','state',
State,'normal','normal'],['-takefocus',takeFocus,TakeFocus,undef,undef],
['-text','text',Text,undef,Do_Something],['-textvariable',textVariable,
Variable,undef,undef],['-underline','underline',Underline,-1,-1],['-width',
'width',Width,0,0],['-wraplength',wrapLength,WrapLength,0,0]</pre></blockquote>

<p><a name="INDEX-1911" /></a><a name="INDEX-1912" /></a><a name="INDEX-1913" /></a><a name="INDEX-1914" /></a>Although this list may look nasty and
ugly, it distinguishes between the different lists of lists for you
by adding the <tt class="literal">[</tt> and <tt class="literal">]</tt>
characters and the commas that separate them. Usually, you would look
at this list only for debugging purposes.
</p>

<p><a name="INDEX-1915" /></a>You may find
the output of Data::Dumper more pleasing:
</p>

<blockquote><pre class="code">use Data::Dumper;
@config = $widget-&gt;configure;
print Dumper @config;</pre></blockquote>

<p>Producing output similar to this:</p>

<blockquote><pre class="code">$VAR22 = [
           '-highlightthickness',
           'highlightThickness',
           'HighlightThickness',
           '1',
           1
         ];</pre></blockquote>

<p>The configuration options for each widget described in this book are
listed in <a href="appb_01.htm">Appendix B, "
Options and Default Valuesfor Each Widget"</a>.<a name="INDEX-1916" /></a> 
</p>

</div>
<a name="mastperltk-CHP-13-SECT-1.2" /></a><div class="sect2">
<h3 class="sect2">13.1.2. The cget Method</h3>

<p><a name="INDEX-1917" /></a>Instead of
using <tt class="literal">configure</tt> to retrieve values, you can use
the <tt class="literal">cget</tt> method:
</p>

<blockquote><pre class="code">$widget-&gt;cget(-option)</pre></blockquote>

<p>It returns only the current value (or address if the option stores a
reference) of the option rather than the entire list that
<tt class="literal">configure</tt> returns. Think of
<tt class="literal">cget</tt> as standing for "configuration
get." Here is an example of how to use <tt class="literal">cget</tt>:
</p>

<blockquote><pre class="code">print $b-&gt;cget(-highlightthickness), "\n";
## Prints this:
2
# return reference :
print $option_menu-&gt;cget(-textvariable), "\n";
# return actual value :
print ${$option_menu-&gt;cget(-textvariable)}, "\n";
# or...
$ref = $option_menu-&gt;cget(-textvariable);
print $$ref, "\n";</pre></blockquote>

</div>
</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch12_08.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch13_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">12.8. Pie Menus</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">13.2. Building a Family Tree</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>