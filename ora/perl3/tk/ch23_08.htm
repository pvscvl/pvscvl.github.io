<html><head><title>The NoteBook Widget (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch23_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch23_09.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">23.8. The NoteBook Widget</h2>

<p><a name="INDEX-3332" />Displaying a lot of information in a
small space is often the biggest challenge given to GUI programmers.
The NoteBook widget is designed to help do just this. It allows us to
have many pages of text, but lets only one be shown at a time. Each
page in the NoteBook has a tab associated with it. The tab can
display text or an image. Let's look at a simple example:
</p>

<blockquote><pre class="code">use Tk;
$mw = MainWindow-&gt;new( );
# Create the notebook and fill the whole window
$nb = $mw-&gt;NoteBook( )-&gt;pack(-expand =&gt; 1, -fill =&gt; 'both');
# Page 1 on the notebook, with button on that page
$p1 = $nb-&gt;add('page1', -label =&gt; 'Page 1');
$p1-&gt;Button(-text =&gt; 'Click me!')-&gt;pack( );
# Empty page 2
$nb-&gt;add('page2', -label =&gt; 'Page 2');
MainLoop;</pre></blockquote>

<p>It creates a window with a NoteBook widget, shown in <a href="ch23_08.htm">Figure 23-15</a>. The notebook has two pages, named Page 1 and
Page 2, respectively. Page 1 has a button on it, so the size of the
NoteBook is determined by Page 1 (because it is the largest).
</p>

<a name="mastperltk-CHP-23-FIG-15" /><div class="figure"><img src="figs/mptk.2315.gif" alt="Figure 23-15" width="98" height="70" /></div><h4 class="objtitle">Figure 23-15. Simple NoteBook example</h4>

<a name="mastperltk-CHP-23-SECT-8.1" /><div class="sect2">
<h3 class="sect2">23.8.1. Creating Pages</h3>

<p><a name="INDEX-3333" /><a name="INDEX-3334" />When you create a page in a NoteBook, you
assign it a name using the <tt class="literal">add</tt> method. From then
on, when calling NoteBook methods, you refer to that page by that
name. In our example, we used <tt class="literal">page1</tt> and
<tt class="literal">page2</tt> as the internal page names. The displayed
label can either be the same or something completely different. It is
important that you use different internal names for every single page
in the NoteBook, or you'll get an error. Here are some examples
using the <tt class="literal">add</tt> method:
</p>

<blockquote><pre class="code">$p = $notebook-&gt;add('internalname', -label =&gt; 'Displayed Name');
$p2 = $notebook-&gt;add('internalname2', -bitmap =&gt; 'bitmapname');</pre></blockquote>

<p>The first argument passed to <tt class="literal">add</tt> is the internal
storage name of the page. There are several options that will
determine how the tab information is displayed:
</p>

<dl>
<dt><tt class="literal">-anchor</tt> =&gt; <tt><em class="replaceable"><tt>anchordir</tt></em></tt></dt>
<dd>
<a name="INDEX-3335" />Anchors the text or image within the
notebook tab. Values are: <tt class="literal">'n'</tt>,
<tt class="literal">'ne'</tt>, <tt class="literal">'e'</tt>,
<tt class="literal">'se'</tt>, <tt class="literal">'s'</tt>, <tt class="literal">'sw'</tt>,
<tt class="literal">'w'</tt>, <tt class="literal">'nw'</tt>, or
<tt class="literal">'center'</tt>.
</p>
</dd>


<dt><tt class="literal">-bitmap</tt> =&gt; <tt><em class="replaceable"><tt>bitmap</tt></em></tt></dt>
<dd>
<a name="INDEX-3336" />A bitmap to use on the tab, instead of a
label.
</p>
</dd>


<dt><tt class="literal">-image</tt> =&gt; <tt><em class="replaceable"><tt>imageptr</tt></em></tt></dt>
<dd>
<a name="INDEX-3337" />An image to display instead of a label.
Overrides both <tt class="literal">-bitmap</tt> and
<tt class="literal">-label</tt>.
</p>
</dd>


<dt><tt class="literal">-label</tt> =&gt; <tt><em class="replaceable"><tt>string</tt></em></tt></dt>
<dd>
<a name="INDEX-3338" />A string with which to label the tab.
</p>
</dd>


<dt><tt class="literal">-justify =&gt; 'left' | 'right' | 'center'</tt></dt>
<dd>
<a name="INDEX-3339" />Direction for the text to justify within
the tab.
</p>
</dd>


<dt><tt class="literal">-createcmd</tt> =&gt; <tt><em class="replaceable"><tt>callback</tt></em></tt></dt>
<dd>
<a name="INDEX-3340" />A callback
that is invoked the first time the page is shown. This is useful if
you have a lot of processing that can be delayed.
</p>
</dd>


<dt><tt class="literal">-raisecmd</tt> =&gt; <tt><em class="replaceable"><tt>callback</tt></em></tt></dt>
<dd>
<a name="INDEX-3341" />Invoked
every time the page is shown to the user.
</p>
</dd>


<dt><tt class="literal">-state</tt> =&gt; <tt class="literal">'normal' | 'disabled'</tt></dt>
<dd>
<a name="INDEX-3342" />The state of the page.
</p>
</dd>


<dt><tt class="literal">-underline</tt> =&gt; <tt><em class="replaceable"><tt>index</tt></em></tt></dt>
<dd>
<a name="INDEX-3343" />Which character to underline in the tab.
Starts at 0.
</p>
</dd>


<dt><tt class="literal">-wraplength</tt> =&gt; <tt><em class="replaceable"><tt>length</tt></em></tt></dt>
<dd>
<a name="INDEX-3344" />The maximum length of a line of text on
the tab.
</p>
</dd>

</dl>

<p>Once the page is created, you still need to put something on it. Use
the reference returned by the <tt class="literal">add</tt> method and
create widgets using that reference as the parent widget.
</p>

<p>There are three ways to put something on a page:</p>

<ul><li>
<p>Using <tt class="literal">MainLoop</tt> when you create the page, before
the window is displayed.
</p>
</li><li>
<p>Using the <tt class="literal">-createcmd</tt> option, which creates the
page the first time the user clicks on that tab.
</p>
</li><li>
<p>Using the <tt class="literal">-raisecmd</tt>, which can change what is
displayed on the page every time the user raises that page.
</p>
</li></ul>
<p>To delete a page, use the <tt class="literal">delete</tt> method and pass
it the internal name of the page:
</p>

<blockquote><pre class="code">$notebook-&gt;delete("page1");</pre></blockquote>

<p>There are two methods used to get and set information associated with
a page: <tt class="literal">pagecget</tt> and
<tt class="literal">pageconfigure</tt>. Both methods will work only with
the same options that can be used with the <tt class="literal">add</tt>
method.
</p>

<p><a name="INDEX-3345" />To get the
value of an individual option, use <tt class="literal">pagecget</tt>:
</p>

<blockquote><pre class="code">$state = $notebook-&gt;pagecget("pagename", -state);</pre></blockquote>

<p><a name="INDEX-3346" />To
change the value of one or more options, use
<tt class="literal">pageconfigure</tt>:
</p>

<blockquote><pre class="code">$notebook-&gt;pageconfigure('pagename', -label =&gt; 'new label');
$notebook-&gt;pageconfigure('pagename', -label =&gt; 'new label', -underline =&gt; 3);</pre></blockquote>

<p><a name="INDEX-3347" />You can
cause a page to be displayed (or raised) by using the
<tt class="literal">raise</tt> method:
</p>

<a name="INDEX-3348" /><blockquote><pre class="code">$notebook-&gt;raise("page4");
## OR check to see if that page is already showing:
$page = $notebook-&gt;raised( );
if ($page ne "page4")
    $notebook-&gt;raise("page4");</pre></blockquote>

</div>
<a name="mastperltk-CHP-23-SECT-8.2" /><div class="sect2">
<h3 class="sect2">23.8.2. WordCount Example Using a NoteBook</h3>

<p>A NoteBook allows us to display data in an organized fashion. In this
example, we are going to parse through some files (passed in as
command-line parameters) and index out all the words contained within
the files. The resulting window is shown in <a href="ch23_08.htm">Figure 23-16</a>; the code follows.
</p>

<a name="mastperltk-CHP-23-FIG-16" /><div class="figure"><img src="figs/mptk.2316.gif" alt="Figure 23-16" width="481" height="260" /></div><h4 class="objtitle">Figure 23-16. WordCount results displayed using a NoteBook</h4>

<p>Half of the following code preps the list of words to display and the
other half does the work of displaying it. To sort the words, we use
a hash based on the first character in each word.
</p>

<blockquote><pre class="code">use Tk;
require Tk::NoteBook;

$mw = MainWindow-&gt;new( );
# Show the user the names of files we are parsing
# This might end up too long to see it all
$mw-&gt;title('Word Count:' . join (',', @ARGV));

# Use a courier font to display the tab text
$nb = $mw-&gt;NoteBook(-font =&gt; 'Courier 10 bold')-&gt;pack;

my %textWidgets;

%seen = ( );
while (&lt;&gt;) {
  while ( /(\w['\w-]*)/g) {
    $seen{lc $1}++;
  }
}

# go through the index in order and create the tabs and text widgets.
foreach my $word (sort (keys %seen)) {
  if ($word =~ /^(.)/) {
    $letter = $1;
    $t = $textWidgets{$letter};
    
    # Create the text widget if it doesn't already exist
    if (! defined $t) {
      my $p = $nb-&gt;add($letter, -label =&gt; $letter);
      $t = $p-&gt;Scrolled("Text")-&gt;pack(-expand =&gt; 1, -fill =&gt; 'both');
      $textWidgets{$letter} = $t;
    }
    $t-&gt;insert("end", $seen{$word} . "        " . $word . "\n");
  }
}

MainLoop;</pre></blockquote>

</div>
<a name="mastperltk-CHP-23-SECT-8.3" /><div class="sect2">
<h3 class="sect2">23.8.3. NoteBook Limitations</h3>

<p>You can't have the tabs for a NoteBook automatically wrap
around and make more than one line of tabs. Consequently, you might
make so many tabs that your window will be too big to be displayed
properly. In that case, you might consider having a page contain
another NoteBook widget, which will essentially give you two rows of
tabs.
</p>

<p><a name="INDEX-3349" /><a name="INDEX-3350" />In order to disable a tab page, the
recommended solution is to use an InputO widget, which covers
everything on that tab page. However, InputO isn't supported on
Win32 systems.<a name="INDEX-3351" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch23_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch23_09.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">23.7. The LabFrame Widget</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">23.9. The Pane Widget</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>