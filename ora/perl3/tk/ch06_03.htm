<html><head><title>The Scrollbar Widget (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch06_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">6.3. The Scrollbar Widget</h2>

<p><a name="INDEX-786" />Instead of
automatically creating one or more Scrollbars with the
<tt class="literal">Scrolled</tt> method, you can use the
<tt class="literal">Scrollbar</tt> widget method and perform the
configuration yourself. It is better to create and configure your own
Scrollbars when you need to do something nonstandard, such as have
one Scrollbar scroll two Listboxes. <a href="ch06_03.htm">Figure 6-6</a>
shows a Scrollbar widget.
</p>

<a name="mastperltk-CHP-6-FIG-6" /><div class="figure"><img src="figs/mptk.0606.gif" alt="Figure 6-6" width="199" height="27" /></div><h4 class="objtitle">Figure 6-6. Scrollbar widget</h4>

<a name="mastperltk-CHP-6-SECT-3.1" /><div class="sect2">
<h3 class="sect2">6.3.1. Creating a Scrollbar Widget</h3>

<p><a name="INDEX-787" /><a name="INDEX-788" />To create
the Scrollbar, invoke the <tt class="literal">Scrollbar</tt> method from
the parent widget. It returns a reference to the newly created
Scrollbar that you can use for configuration:
</p>

<blockquote><pre class="code">$scrollbar = $mw-&gt;Scrollbar(<em class="replaceable">[ options ...]</em>)</pre></blockquote>

<p><a name="INDEX-789" /><a name="INDEX-790" /><a name="INDEX-791" />There are at least two other things you
need to do to get a Scrollbar working with another widget. First,
create the to-be-scrolled widget and use the Scrollbar with its
<tt class="literal">-xscrollcommand</tt> or
<tt class="literal">-yscrollcommand</tt> option. Then configure the
Scrollbar so that it knows to talk to that widget. Here's an
example that creates a Listbox widget (don't worry if you
don't quite follow all of this now; we just want to show a
complete example before we go on to talk about all the options):
</p>

<blockquote><pre class="code"># Create the vertical Scrollbar
$scrollbar = $mw-&gt;Scrollbar( );
$lb = $mw-&gt;Listbox(-yscrollcommand =&gt; ['set' =&gt; $scrollbar]);
#Configure the Scrollbar to talk to the Listbox widget
$scrollbar-&gt;configure(-command =&gt; ['yview' =&gt; $lb]);

#Pack the Scrollbar first so that it doesn't disappear when we resize
$scrollbar-&gt;pack(-side =&gt; 'right', -fill =&gt; 'y');
$lb-&gt;pack(-side =&gt; 'left', -fill =&gt; 'both');</pre></blockquote>

<p>Creating the Scrollbar is pretty simple; we want all the default
options for it. As we create the Listbox, we have to set up a
callback so the Listbox can communicate with the Scrollbar when the
contents of the Listbox move around. Our Scrollbar is vertical, so
the <tt class="literal">-yscrollcommand</tt> option has the
<tt class="literal">set</tt> command and our Scrollbar assigned to it (if
it is horizontal, use <tt class="literal">-xscrollcommand</tt>). When the
contents of the Listbox are scrolled by the user without using the
Scrollbar, the Listbox will alert the Scrollbar by invoking
<tt class="literal">$scrollbar-&gt;set(...)</tt>.
</p>

<p>The line <tt class="literal">$scrollbar-&gt;configure(-command</tt>
<tt class="literal">=&gt;</tt> <tt class="literal">['yview'</tt>
<tt class="literal">=&gt;</tt> <tt class="literal">$lb])</tt> does almost the
opposite: it configures the Scrollbar to communicate with the
Listbox. When the user clicks the Scrollbar, it will invoke
<tt class="literal">$lb-&gt;yview(...)</tt> to tell the Listbox how to
change the view of the contents. Use the <tt class="literal">y</tt> version
of the view command, as it's a vertical Scrollbar.
</p>

<p>There is more information on the details of <tt class="literal">yview</tt>
in <a href="ch06_03.htm">Section 6.3.8, "How the Scrollbar Communicates with Other Widgets"</a>, later in this chapter. The
last two lines in this example pack the Scrollbar and the Listbox in
the window so the Scrollbar is the same height and lies to the right
of the Listbox.
</p>

<p><a name="INDEX-792" />Always pack your Scrollbars first within
the window or Frame. This allows the Scrollbars to remain visible
when the user resizes the window smaller. It will then resize the
Listbox (or other widget) but leave the Scrollbars visible on the
edges of the screen.
</p>

<p>Now that we've seen a complete example of how to create a
Scrollbar and how to set up the widget it will scroll, we can go over
the options with an idea of how they are used.
</p>

</div>
<a name="mastperltk-CHP-6-SECT-3.2" /><div class="sect2">
<h3 class="sect2">6.3.2. Scrollbar Options</h3>

<p>This list contains the options available with a Scrollbar and their
quick definitions. The important options are discussed in more detail
later in this chapter.
</p>

<dl>
<dt><tt class="literal">-activebackground =&gt;</tt> <tt><em class="replaceable">color</em></tt></dt>
<dd>
<a name="INDEX-793" /><a name="INDEX-794" /><a name="INDEX-795" /><a name="INDEX-796" /><a name="INDEX-797" />Sets
the color the Scrollbar should be when the mouse pointer is over it.
</p>
</dd>


<dt><tt class="literal">-activerelief =&gt; 'flat' | 'groove' | '</tt><tt class="userinput"><b>raised</b></tt><tt class="literal">' | 'ridge' | 'sunken'</tt></dt>
<dd>
<a name="INDEX-798" />Determines how active elements are drawn.
The elements in question are <tt class="literal">arrow1</tt>,
<tt class="literal">arrow2</tt>, and <tt class="literal">slider</tt>.
</p>
</dd>


<a name="INDEX-799" /><a name="INDEX-800" /><a name="INDEX-801" /><a name="INDEX-802" /><dt><tt class="literal">-background =&gt;</tt> <tt><em class="replaceable">color</em></tt></dt>
<dd>
<a name="INDEX-803" /><a name="INDEX-804" /><a name="INDEX-805" /><a name="INDEX-806" />Sets the background color of the
Scrollbar (not the trough color).
</p>
</dd>


<dt><tt class="literal">-borderwidth =&gt;</tt> <tt><em class="replaceable">amount</em></tt></dt>
<dd>
<a name="INDEX-807" />Sets
the width of the edges of the Scrollbar and the
<tt class="literal">arrow1</tt>, <tt class="literal">arrow2</tt>, and
<tt class="literal">slider</tt> elements.
</p>
</dd>


<dt><tt class="literal">-command =&gt;</tt> <tt><em class="replaceable">callback</em></tt></dt>
<dd>
<a name="INDEX-808" /><a name="INDEX-809" />Sets the callback that is invoked when the
Scrollbar is clicked.
</p>
</dd>


<dt><tt class="literal">-cursor =&gt;</tt> <tt><em class="replaceable">cursorname</em></tt></dt>
<dd>
<a name="INDEX-810" />Sets the cursor that is displayed when the
mouse pointer is over the Scrollbar.
</p>
</dd>


<dt><tt class="literal">-elementborderwidth =&gt;</tt> <tt><em class="replaceable">amount</em></tt></dt>
<dd>
<a name="INDEX-811" />Sets the width of the borders of the
<tt class="literal">arrow1</tt>, <tt class="literal">arrow2</tt>, and
<tt class="literal">slider</tt> elements.
</p>
</dd>


<dt><tt class="literal">-highlightbackground =&gt;</tt> <tt><em class="replaceable">color</em></tt></dt>
<dd>
<a name="INDEX-812" />Sets
the color the highlight rectangle around the Scrollbar widget should
be when it does not have the keyboard focus.
</p>
</dd>


<dt><tt class="literal">-highlightcolor =&gt;</tt> <tt><em class="replaceable">color</em></tt></dt>
<dd>
<a name="INDEX-813" />Sets
the color the highlight rectangle around the Scrollbar should be when
it does have the keyboard focus.
</p>
</dd>


<dt><tt class="literal">-highlightthickness =&gt;</tt> <tt><em class="replaceable">amount</em></tt></dt>
<dd>
<a name="INDEX-814" />Sets
the thickness of the highlight rectangle. Default is 2.
</p>
</dd>


<dt><tt class="literal">-jump =&gt;</tt> <tt class="userinput"><b>0</b></tt> <tt class="literal">| 1</tt></dt>
<dd>
<a name="INDEX-815" />Indicates
whether or not the Scrollbar will jump scroll.
</p>
</dd>


<dt><tt class="literal">-orient =&gt; "horizontal" | "</tt><tt class="userinput"><b>vertical</b></tt><tt class="literal">"</tt></dt>
<dd>
<a name="INDEX-816" />Sets the orientation of the Scrollbar.
</p>
</dd>


<dt><tt class="literal">-relief =&gt; 'flat'|'groove'|'raised'|'ridge'|'</tt><tt class="userinput"><b>sunken</b></tt><tt class="literal">'|'solid'</tt></dt>
<dd>
<a name="INDEX-817" />Sets the edges of the widget.
</p>
</dd>


<dt><tt class="literal">-repeatdelay =&gt;</tt> <tt><em class="replaceable">time</em></tt></dt>
<dd>
<a name="INDEX-818" /><a name="INDEX-819" />Sets
the number of milliseconds required to hold down an arrow before it
will auto-repeat. Default is 300 ms.
</p>
</dd>


<dt><tt class="literal">-repeatinterval =&gt;</tt> <tt><em class="replaceable">time</em></tt></dt>
<dd>
<a name="INDEX-820" />Sets
the number of milliseconds in between auto-repeats. Default is 100
ms.
</p>
</dd>


<dt><tt class="literal">-takefocus =&gt; 0 | 1 |</tt> <tt class="userinput"><b>undef</b></tt></dt>
<dd>
<a name="INDEX-821" />Controls whether the Scrollbar can obtain
the keyboard focus.
</p>
</dd>


<dt><tt class="literal">-troughcolor =&gt;</tt> <tt><em class="replaceable">color</em></tt></dt>
<dd>
<a name="INDEX-822" />Changes
the color of the trough (both <tt class="literal">trough1</tt> and
<tt class="literal">trough2</tt>).
</p>
</dd>


<dt><tt class="literal">-width =&gt;</tt> <tt><em class="replaceable">amount</em></tt></dt>
<dd>
<a name="INDEX-823" />Sets the width of the Scrollbar.
</p>
</dd>

</dl>

</div>
<a name="mastperltk-CHP-6-SECT-3.3" /><div class="sect2">
<h3 class="sect2">6.3.3. Scrollbar Colors</h3>

<p><a name="INDEX-824" /><a name="INDEX-825" /><a name="INDEX-826" />Within the Scrollbar, we have a new part of
the widget called a trough. This trough gets its own coloring through
the <tt class="literal">-troughcolor</tt> option. The trough is considered
the part behind the arrows and slider. <a href="ch06_03.htm">Figure 6-7</a>
shows an example.
</p>

<a name="mastperltk-CHP-6-FIG-7" /><div class="figure"><img src="figs/mptk.0607.gif" alt="Figure 6-7" width="217" height="42" /></div><h4 class="objtitle">Figure 6-7. Scrollbar with -troughcolor set to 'green'</h4>

<p>The background of the Scrollbar consists of the arrows, the slider,
and a small portion around the outside of the trough. You change the
color of the background by using the <tt class="literal">-background</tt>
option. The <tt class="literal">-activebackground</tt> option controls the
color displayed when the mouse cursor is over one of the arrows or
the slider. <a href="ch06_03.htm">Figure 6-8</a> shows two examples of
<tt class="literal">-background</tt>; the second window uses both
<tt class="literal">-background</tt> and <tt class="literal">-troughcolor</tt>.
</p>

<a name="mastperltk-CHP-6-FIG-8" /><div class="figure"><img src="figs/mptk.0608.gif" alt="Figure 6-8" width="423" height="34" /></div><h4 class="objtitle">Figure 6-8. Examples of -background option</h4>

</div>
<a name="mastperltk-CHP-6-SECT-3.4" /><div class="sect2">
<h3 class="sect2">6.3.4. Scrollbar Style</h3>

<p><a name="INDEX-827" /><a name="INDEX-828" /><a name="INDEX-829" />The <tt class="literal">-relief</tt> and
<tt class="literal">-borderwidth</tt> options affect both the outside edges
of the Scrollbar and the <tt class="literal">arrow1</tt>,
<tt class="literal">arrow2</tt>, and <tt class="literal">slider</tt> elements.
This is similar to how the Checkbutton and Radiobutton widgets are
affected by the <tt class="literal">-relief</tt> and
<tt class="literal">-borderwidth</tt> options. See <a href="ch06_03.htm">Figure 6-9</a> for a screenshot of different values for these
two options, in the order <tt class="literal">'flat'</tt>,
<tt class="literal">'groove'</tt>, <tt class="literal">'raised'</tt>,
<tt class="literal">'sunken'</tt>, and <tt class="literal">'solid'</tt>.
</p>

<a name="mastperltk-CHP-6-FIG-9" /><div class="figure"><img src="figs/mptk.0609.gif" alt="Figure 6-9" width="234" height="67" /></div><h4 class="objtitle">Figure 6-9. Different relief values; second row relief values have -borderwidth =&gt; 4</h4>

<p><a name="INDEX-830" /><a name="INDEX-831" /><a name="INDEX-832" />The <tt class="literal">-activerelief</tt>
option affects the decoration of three
elements&#x2014;<tt class="literal">arrow1</tt>, <tt class="literal">arrow2</tt>,
and <tt class="literal">slider</tt>&#x2014;when the mouse cursor is over
them. The <tt class="literal">-elementborderwidth</tt> affects the same
three elements: <tt class="literal">arrow1</tt>, <tt class="literal">arrow2</tt>,
and <tt class="literal">slider</tt>. The width of these elements'
edges can be changed with this option. The
<tt class="literal">-borderwidth</tt> option also changes the width of
these elements but changes the width of the edges of the widget as
well. Notice in <a href="ch06_03.htm">Figure 6-10</a> how the edges of the
Scrollbar remain at a width of 2.
</p>

<a name="mastperltk-CHP-6-FIG-10" /><div class="figure"><img src="figs/mptk.0610.gif" alt="Figure 6-10" width="232" height="43" /></div><h4 class="objtitle">Figure 6-10. Example of -elementborderwidth set to 4</h4>

<p><a name="INDEX-833" />The <tt class="literal">-width</tt> of the
Scrollbar is the distance across the skinny part of the Scrollbar,
not including the borders. <a href="ch06_03.htm">Figure 6-11</a> demonstrates
how the Scrollbar changes when you alter the
<tt class="literal">-width</tt>.
</p>

<a name="mastperltk-CHP-6-FIG-11" /><div class="figure"><img src="figs/mptk.0611.gif" alt="Figure 6-11" width="306" height="66" /></div><h4 class="objtitle">Figure 6-11. Top Scrollbar has width of 15 (default), bottom Scrollbar has width of 20</h4>

</div>
<a name="mastperltk-CHP-6-SECT-3.5" /><div class="sect2">
<h3 class="sect2">6.3.5. Scrollbar Orientation</h3>

<p><a name="INDEX-834" /><a name="INDEX-835" />As
mentioned earlier, a Scrollbar can be vertical or horizontal. The
default for a Scrollbar is <tt class="literal">'vertical'</tt>. To change
this, use the <tt class="literal">-orient</tt> option:
</p>

<blockquote><pre class="code">$scrollbar = $mw-&gt;Scrollbar(-orient =&gt; 'horizontal');</pre></blockquote>

<p>You could also use <tt class="literal">-orient</tt>
<tt class="literal">=&gt;</tt> <tt class="literal">'vertical'</tt>, but
it's the default, so it's not necessary.
</p>

</div>
<a name="mastperltk-CHP-6-SECT-3.6" /><div class="sect2">
<h3 class="sect2">6.3.6. Using the Arrows and the Slider</h3>

<p><a name="INDEX-836" /><a name="INDEX-837" /><a name="INDEX-838" />When
you click on one of the arrows in a Scrollbar, you cause the slider
to move in that direction by one unit. If you continue to hold down
the mouse button, after a bit of a delay, the slider will auto-repeat
that movement. The <tt class="literal">-repeatdelay</tt> option determines
the amount of time you must wait before the auto-repeat kicks in. The
default is 300 milliseconds.
</p>

<p><a name="INDEX-839" />Once
you have held the mouse button down long enough to start
auto-repeating, there is a short delay between each time it repeats
the action. This delay is controlled by the
<tt class="literal">-repeatinterval</tt> option. The default for
<tt class="literal">-repeatinterval</tt> is 100 milliseconds.
</p>

<p><a name="INDEX-840" />Normally, when
you click on the slider and move it around, the data within the
widget will move accordingly. This is because the Scrollbar is
updating the widget continuously as you move the slider. To change
the Scrollbar so it will only update the widget when you let go of
the slider, use the <tt class="literal">-jump</tt> option and set it to 1.
The default for <tt class="literal">-jump</tt> is 0. You would most likely
want to use <tt class="literal">-jump =&gt; 1</tt> when your scrolled
widget contains a large amount of data and waiting for the screen to
update while you slide through it would make the application seem
slow.
</p>

</div>
<a name="mastperltk-CHP-6-SECT-3.7" /><div class="sect2">
<h3 class="sect2">6.3.7. Assigning a Callback</h3>

<p><a name="INDEX-841" /><a name="INDEX-842" />When
you create a Scrollbar, you tell it which widget to talk to and which
method in that widget to call by using the
<tt class="literal">-command</tt> option with an anonymous list. The list
contains the name of the method to call and the widget from which
that method should be invoked. In this code snippet, we can see that
we want to use the <tt class="literal">yview</tt> command to scroll the
widget <tt class="literal">$lb</tt> (a Listbox):
</p>

<blockquote><pre class="code">$scrollbar-&gt;configure(-command =&gt; ['yview' =&gt; $lb])</pre></blockquote>

<p>Now when the user clicks on the Scrollbar, it will invoke
<tt class="literal">$lb-&gt;yview</tt>. We know that the Scrollbar
associated with <tt class="literal">$lb</tt> is vertical because it uses
the <tt class="literal">yview</tt> command. For a horizontal Scrollbar, use
<tt class="literal">xview</tt>. Both <tt class="literal">yview</tt> and
<tt class="literal">xview</tt> tell the widget to move the widget contents
an amount that is determined by where the user clicked in the
Scrollbar. The <tt class="literal">yview</tt> and <tt class="literal">xview</tt>
methods are covered in the next section.
</p>

</div>
<a name="mastperltk-CHP-6-SECT-3.8" /><div class="sect2">
<h3 class="sect2">6.3.8. How the Scrollbar Communicates with Other Widgets</h3>

<p><a name="INDEX-843" /><a name="INDEX-844" />As
described earlier, you use the <tt class="literal">-command</tt> option
with the Scrollbar so it knows which widget and method to use when
the Scrollbar is clicked. The command should be
<tt class="literal">xview</tt> for horizontal Scrollbars and
<tt class="literal">yview</tt> for vertical Scrollbars. You can call these
methods yourself, but most of the time you won't want to.
</p>

<p>Both <tt class="literal">xview</tt> and <tt class="literal">yview</tt> take the
same type of arguments. Where the user clicks in the Scrollbar
determines the value used, but the value will always be sent as one
of the following forms:
</p>

<dl>
<dt><tt class="literal">$widget-&gt;xviewMoveto(fraction);</tt></dt>
<dt><tt class="literal">$widget-&gt;yviewMoveto(fraction);</tt></dt>
<dd>
This form is used when the user clicks on the slider, moves it
around, and drops it again. The argument is a fraction, a real number
from 0 to 1 that represents the first part of the data to be shown
within the widget. If the user moves the slider all the way to the
top or left of the Scrollbar, the very first part of the data in the
widget should be seen on the screen. This means the argument should
be 0:
</p>

<blockquote><pre class="code">$widget-&gt;xviewMoveto(0);</pre></blockquote>

<p>If the slider is moved to the center of the Scrollbar, the argument
is 0.5:
</p>

<blockquote><pre class="code">$widget-&gt;xviewMoveto(0.5);</pre></blockquote>
</dd>


<dt><tt class="literal">$widget-&gt;xviewScroll(</tt><tt><em class="replaceable">number</em></tt><tt class="literal">, "units");</tt> </dt>

<dt><tt class="literal">$widget-&gt;yviewScroll(</tt><tt><em class="replaceable">number</em></tt><tt class="literal">, "units");</tt></dt>

<dd>
This form is used when the user clicks on one of the arrow elements
in the Scrollbar. The widget should move its data up/down or
left/right unit by unit.
</p>

<p>The first argument is the <em class="replaceable">number</em>of units to scroll by. The value for
<em class="replaceable">number</em> can be any number, but it's
typically either 1 or -1. A value of 1 means the next unit of data on
the bottom or right of the widget becomes visible (scrolling one unit
of data off the left or top). A value of -1 means that a previous
unit of data will become visible in the top or right of the widget
(one unit will scroll off the bottom or right of the widget). For
example, every time the user clicks on the down arrow in a vertical
Scrollbar associated with a Listbox, a new line shows up at the
bottom of the Listbox.
</p>

<p>The second argument is the string <tt class="literal">"units"</tt>. What a
unit is depends on the widget. In a Listbox, a unit would be one line
of text. In an Entry widget, it would be one character.
</p>


<p>Here are some example calls:</p>


<blockquote><pre class="code">	# User clicked down arrow
	$listbox-&gt;yviewScroll(1, "units");

	# User clicked up arrow
	$listbox-&gt;yviewScroll(-1, "units");

	# User clicked right arrow
	$entry-&gt;xviewScroll(1, "units");</pre></blockquote>


</dd>



<dt><tt class="literal">$widget-&gt;xviewScroll(</tt><tt><em class="replaceable">number</em></tt><tt class="literal">, "page");</tt></dt>

<dt><tt class="literal">$widget-&gt;yviewScroll(</tt><tt><em class="replaceable">number</em></tt><tt class="literal">, "page");</tt></dt>
<dd>
This form is exactly like our previous one except the last argument
is <tt class="literal">"page"</tt> instead of <tt class="literal">"units"</tt>.
When users click in the trough area of the Scrollbar (between the
slider and arrows), they expect to see the data move by an entire
page.
</p>


<p>The type of page is defined by the widget being scrolled. For
example, a Listbox would page up or down by the number of lines shown
in the Listbox. It would page right or left by the width of the
Listbox.
</p>
</dd>

</dl>


</div>
<a name="mastperltk-CHP-6-SECT-3.9" /><div class="sect2">
<h3 class="sect2">6.3.9. Scrollbar Configuration</h3>

<p><a name="INDEX-845" /><a name="INDEX-846" /><a name="INDEX-847" />You
can get and set any of the options available with a Scrollbar by
using <tt class="literal">cget</tt> and <tt class="literal">configure</tt>. See
<a href="ch13_01.htm">Chapter 13, "Miscellaneous Perl/Tk Methods"</a> for complete details on these methods.
</p>

</div>
<a name="mastperltk-CHP-6-SECT-3.10" /><div class="sect2">
<h3 class="sect2">6.3.10. Defining What We Can See</h3>

<p><a name="INDEX-848" />The <tt class="literal">set</tt> method,
which we tell the scrolled widget about when we create it, defines
what is visible. In our first example, we created a Listbox and told
it to use our Scrollbar and the <tt class="literal">set</tt> method:
</p>

<blockquote><pre class="code">$scrollbar = $mw-&gt;Scrollbar( );   # Vertical Scrollbar
$lb = $mw-&gt;Listbox(-yscrollcommand =&gt; ['set' =&gt; $scrollbar ]);</pre></blockquote>

<p>When the widget invokes the <tt class="literal">set</tt> command, it sends
two fractions (<em class="replaceable">first</em> and
<em class="replaceable">last</em>) as the arguments:
</p>

<blockquote><pre class="code">$scrollbar-&gt;set(<em class="replaceable">first</em>, <em class="replaceable">last</em>);</pre></blockquote>

<p>This will change the position in the data we are seeing. The
arguments <em class="replaceable">first</em> and
<em class="replaceable">last</em> are real numbers
between 0 and 1. They represent the position of the first data item
we can see and the position of the last data item we can see,
respectively. If we can see all the data in our widget, they would be
and 1. The <em class="replaceable">first</em> value gets larger as more
data is scrolled off the top, and the <em class="replaceable">last</em>
value gets smaller as more data is scrolled off the bottom. You will
probably never find a case in which to call
<tt class="literal">set</tt> yourself, so just try to
get an idea of what it does behind the scenes.
</p>

<p><a href="ch06_03.htm">Figure 6-12</a> shows a hypothetical document that we
are viewing with a vertically scrolled widget. The dashed rectangle
represents the view of what we can currently see within the widget.
When the widget calls <tt class="literal">set</tt>, it determines how far
into the document the first viewable item is and sends this as the
first argument. In <a href="ch06_03.htm">Figure 6-12</a>, this would be 10%,
or 0.10. The second argument to <tt class="literal">set</tt> is how far
into the document the last viewable item is. In our example, this
would be 90%, or 0.90.
</p>

<a name="mastperltk-CHP-6-FIG-12" /><div class="figure"><img src="figs/mptk.0612.gif" alt="Figure 6-12" width="305" height="213" /></div><h4 class="objtitle">Figure 6-12. View of data through widget by set method (assumes vertical Scrollbar)</h4>

</div>
<a name="mastperltk-CHP-6-SECT-3.11" /><div class="sect2">
<h3 class="sect2">6.3.11. Getting the Current View</h3>

<p><a name="INDEX-849" />The <tt class="literal">get</tt> method returns
in a list whatever the latest arguments to <tt class="literal">set</tt>
were:
</p>

<blockquote><pre class="code">($first, $last) = $scrollbar-&gt;get( );</pre></blockquote>

<p>This data can change if the widget requests a change in position of
the data or if the Scrollbar requests a change.
</p>

</div>
<a name="mastperltk-CHP-6-SECT-3.12" /><div class="sect2">
<h3 class="sect2">6.3.12. Activating Elements in a Scrollbar</h3>

<p>To determine which part of the Scrollbar is active, you can use the
<tt class="literal">activate</tt> method:
</p>

<blockquote><pre class="code">$elem = $scrollbar-&gt;activate( );</pre></blockquote>

<p>The value returned is an empty string (which means no element is
currently active) or the name of the currently active element. The
possible elements are <tt class="literal">"arrow1"</tt>,
<tt class="literal">"arrow2"</tt>, or <tt class="literal">"slider"</tt>.
</p>

<p>If you send an element name as the argument to
<tt class="literal">activate</tt>, that element will change to the color
and relief specified by the <tt class="literal">-activebackground</tt> and
<tt class="literal">-activerelief</tt> options. The element will continue
to display that color and relief until an event (such as the mouse
cursor passing over the element) causes it to change. Contrary to
what you might believe, using <tt class="literal">activate</tt> does not
invoke that element. Here are some examples:
</p>

<blockquote><pre class="code">$scrollbar-&gt;activate("arrow1");
$scrollbar-&gt;activate("arrow2");
$scrollbar-&gt;activate("slider");</pre></blockquote>

<p><a name="INDEX-850" />There is no <tt class="literal">activate</tt>
for <tt class="literal">"trough"</tt>, because the trough doesn't
change color when the mouse is over it.
</p>

</div>
<a name="mastperltk-CHP-6-SECT-3.13" /><div class="sect2">
<h3 class="sect2">6.3.13. Calculating Change from Pixels</h3>

<p><a name="INDEX-851" /><a name="INDEX-852" />The number returned by
<tt class="literal">delta</tt> indicates how much the Scrollbar must change
to move the slider <em class="replaceable">deltax</em> pixels for
horizontal Scrollbars and <em class="replaceable">deltay</em> pixels
for vertical Scrollbars. (The inapplicable argument is ignored for
each type of Scrollbar.)
</p>

<blockquote><pre class="code">$amount = $scrollbar-&gt;delta(<em class="replaceable">deltax</em>, <em class="replaceable">deltay</em>)</pre></blockquote>

<p>The amount returned can be positive or negative.</p>

</div>
<a name="mastperltk-CHP-6-SECT-3.14" /><div class="sect2">
<h3 class="sect2">6.3.14. Locating a Point in the Trough</h3>

<p>Given a point at (x, y), <tt class="literal">fraction</tt> will return a
real number between 0 and 1 indicating where that coordinate point
would fall in the trough of the Scrollbar:
</p>

<blockquote><pre class="code">$loc = $scrollbar-&gt;fraction(<em class="replaceable">x</em>, <em class="replaceable">y</em>);</pre></blockquote>

<p>The point (x, y) must be relative to the Scrollbar. <a href="ch06_03.htm">Figure 6-13</a> shows the location of three possible results
from <em class="replaceable">fraction</em>: 0.0, 0.5, and 1.0.
</p>

<a name="mastperltk-CHP-6-FIG-13" /><div class="figure"><img src="figs/mptk.0613.gif" alt="Figure 6-13" width="209" height="46" /></div><h4 class="objtitle">Figure 6-13. Example of values returned by the fraction method</h4>

</div>
<a name="mastperltk-CHP-6-SECT-3.15" /><div class="sect2">
<h3 class="sect2">6.3.15. Identifying Elements</h3>

<p><a name="INDEX-853" />The
<tt class="literal">identify</tt> method returns a string containing the
name of the element located at the (x, y) coordinate:
</p>

<blockquote><pre class="code">$elem = $scrollbar-&gt;identify(<em class="replaceable">x</em>,<em class="replaceable">y</em>);</pre></blockquote>

<p>If (x, y) is not in any element, the string will be empty. Both
<em class="replaceable">x</em> and <em class="replaceable">y</em> must be
pixel coordinates relative to the Scrollbar. The possible element
names are <tt class="literal">"arrow1"</tt>, <tt class="literal">"arrow2"</tt>,
<tt class="literal">"trough"</tt>, and <tt class="literal">"slider"</tt>.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch06_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">6.2. The Scrolled Method</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">6.4. Examples</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>
