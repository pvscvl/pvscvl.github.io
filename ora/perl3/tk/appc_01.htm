<html><head><title>Complete Program Listings (Mastering Perl/Tk)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Steve Lidie and Nancy Walsh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565927168L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Mastering Perl/Tk" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Mastering Perl/Tk" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_39.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="appc_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Appendix C. Complete Program Listings</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4>
  <p> <a href="#mastperltk-APP-C-SECT-1">Tk::CollapsableFrame</a><br />
<a href="appc_02.htm">Tk::MacCopy</a><br />
<a href="appc_03.htm">Tk::ExecuteCommand</a><br />
<a href="appc_04.htm">Proc::Killfam</a><br />
<a href="appc_05.htm">tkmpg123</a><br />
<a href="appc_06.htm">Tk::Trace</a><br />
<a href="appc_07.htm">tkhp16c</a><br />
<a href="appc_08.htm">Tk::MacProgressBar</a><br />
<a href="appc_09.htm">TclRobots.pm</a><br />
<a href="appc_10.htm">Robot Control Program complex.ptr</a><br />
<a href="appc_11.htm">clock-bezier.ppl</a><br />
<a href="appc_12.htm">tkhanoi.ppl</a><br /></p></div>

<p>This appendix contains program listings that, for one reason or
another, did not appear in the book proper. This is mostly because
only a small portion of the code was applicable to the chapter in
which it appeared. Nonetheless, seeing the program in its entirety is
useful, so here's a chapter full of code. Enjoy!
</p>
<div class="sect1"><a name="mastperltk-APP-C-SECT-1" /></a>
<h2 class="sect1">C.1. Tk::CollapsableFrame</h2>

<p>Use a CollapsableFrame to hide information until the widget is
opened. This widget is used by the MacCopy widget, described next.
Both Tk::CollapsableFrame and Tk::MacCopy are more examples of
composite mega-widgets, described in <a href="ch14_01.htm">Chapter 14, "Creating Custom Widgets in Pure Perl/Tk"</a>.
</p>

<p>See <a href="appc_01.htm">Figure C-1</a> for a demonstration of a
CollapsableFrame widget.
</p>

<a name="mastperltk-APP-C-FIG-1" /></a><div class="figure"><img src="figs/mptk.ac01.gif" alt="Figure C-1" width="467" height="70" /></div><h4 class="objtitle">Figure C-1. A CollapsableFrame, shown both hidden and displayed</h4>

<blockquote><pre class="code">$Tk::CollapsableFrame::VERSION = '1.0';

package Tk::CollapsableFrame;

use Carp;
use Tk::widgets qw/Frame/;
use vars qw/$cf_height_bias $im_Close $im_Open/;
use strict;

use base qw/Tk::Frame/;
Construct Tk::Widget 'CollapsableFrame';

sub ClassInit {

    # Define global variables and images for the class.

    my($class, $mw) = @_;

    $cf_height_bias = 22;

    $im_Close = $mw-&gt;Photo(-data =&gt;
     'R0lGODlhEAAQAKIAAP///9TQyICAgEBAQAAAAAAAAAAAAAAAACwAAAAAEAAQAAADMxi63BMg
      yinFAy0HC3XjmLeA4ngpRKoSZoeuDLmo38mwtVvKu93rIo5gSCwWB8ikcolMAAA7');

    $im_Open = $mw-&gt;Photo(-data =&gt;
     'R0lGODlhEAAQAKIAAP///9TQyICAgEBAQAAAAAAAAAAAAAAAACwAAAAAEAAQAAADNhi63BMg
      yinFAy0HC3Xj2EJoIEOM32WeaSeeqFK+say+2azUi+5ttx/QJeQIjshkcsBsOp/MBAA7');
    
    $class-&gt;SUPER::ClassInit($mw);

} # end ClassInit

sub Populate {

    # Create an instance of a CollapsableFrame.  Instance variables are:
    #
    # {frame} = the ridged frame, which contains the open/close
    #           Label image, the id Label for the collapsable Frame,
    #           and the container Frame within which the user manages
    #           collapsable widgets.  It's ALMOST possible to forgo
    #           this extra internal frame, were it not for the -pady
    #           packer attribute we use to make the widget look pretty.
    # {opcl}  = the open/close image Label.
    # {ident} = the identifying Label.
    # {colf}  = the user's container Frame, advertised as "colf".

    my($self, $args) = @_;

    my $height = $args-&gt;{-height};
    croak "Tk::CollapsableFrame: -height must be &gt;= $cf_height_bias" unless
        $height &gt;= $cf_height_bias;
    $self-&gt;SUPER::Populate($args);

    $self-&gt;{frame} = $self-&gt;Frame(
        qw/-borderwidth 2 -height 16 -relief ridge/,
    );
    $self-&gt;{frame}-&gt;pack(
        qw/-anchor center -expand 1 -fill x -pady 7 -side left/,
    );

    $self-&gt;{opcl} = $self-&gt;Label(
        qw/-borderwidth 0 -relief raised/, -text =&gt; $height,
    );
    $self-&gt;{opcl}-&gt;bind('&lt;Button-1&gt;' =&gt; [sub {$_[1]-&gt;toggle}, $self]);
    $self-&gt;{opcl}-&gt;place(
        qw/-x 5 -y -1 -width 21 -height 21 -anchor nw -bordermode ignore/,
    );

    $self-&gt;{ident} = $self-&gt;Label(qw/-anchor w -borderwidth 1/);
    $self-&gt;{ident}-&gt;place(
        qw/-x 23 -y 3  -height 12 -anchor nw -bordermode ignore/,
    );

    $self-&gt;{colf} = $self-&gt;{frame}-&gt;Frame;
    $self-&gt;{colf}-&gt;place(qw/-x 20 -y 15/);
    $self-&gt;Advertise('colf' =&gt; $self-&gt;{colf});

    if (not defined $args-&gt;{-width}) {
	$args-&gt;{-width} = $self-&gt;parent-&gt;cget(-width);
    }

    $self-&gt;ConfigSpecs(
      -background  =&gt; [qw/SELF background Background/],
      -height      =&gt; [qw/METHOD height Height 47/],
      -image       =&gt; [$self-&gt;{opcl}, 'image', 'Image', $im_Open],
      -title       =&gt; '-text',
      -text        =&gt; [$self-&gt;{ident}, qw/text Text NoTitle/],
      -width       =&gt; [$self-&gt;{frame}, qw/width Width 250/],
    );
   
} # end Populate

sub bias {return $cf_height_bias}

# Instance methods.

sub toggle {
    my($self) = @_;
    my $i = $self-&gt;{opcl}-&gt;cget(-image);
    my $op = ($i == $im_Open) ? 'open' : 'close';
    $self-&gt;$op( );
}

sub close {
    my($self) = @_;
    $self-&gt;{opcl}-&gt;configure(-image  =&gt; $im_Open);
    $self-&gt;{frame}-&gt;configure(-height =&gt; 16);
}

sub open  {
    my($self) = @_;
    $self-&gt;{opcl}-&gt;configure(-image  =&gt; $im_Close);
    $self-&gt;{frame}-&gt;configure(-height =&gt; $self-&gt;{opcl}-&gt;cget(-text));
}

sub height {
    my($self, $h) = @_;
    $self-&gt;{opcl}-&gt;configure(-text =&gt; $h);
}

1;

__END__

=head1 NAME

Tk::CollapsableFrame - a Frame that opens and closes via a mouse click.

=head1 SYNOPSIS

S&lt;    &gt;I&lt;$cf&gt; = I&lt;$parent&gt;-E&lt;gt&gt;B&lt;CollapsableFrame&gt;(I&lt;-option&gt; =E&lt;gt&gt; I&lt;value&gt;);

=head1 DESCRIPTION

This widget provides a switchable open or closed Frame
that provides for the vertical arrangement of widget
controls. This is an alternative to Notebook style
tabbed widgets.

The following option/value pairs are supported:

=over 4

=item B&lt;-title&gt;

Title of the CollapsableFrame widget.

=item B&lt;-height&gt;

The maximun open height of the CollapsableFrame.

=back

=head1 METHODS

=over 4

=item B&lt;close&gt;

Closes the CollapsableFrame.

=item B&lt;open&gt;

Opens the CollapsableFrame.

=item B&lt;toggle&gt;

Toggles the open/close state of the CollapsableFrame.

=back

=head1 ADVERTISED WIDGETS

Component subwidgets can be accessed via the B&lt;Subwidget&gt; method.
Valid subwidget names are listed below.

=over 4

=item Name:  colf, Class:  Frame

  Widget reference of the internal Frame widget within which user
  widgets are managed.

=back

=head1 EXAMPLE

 use Tk::widgets qw/CollapsableFrame Pane/;

 my $mw = MainWindow-&gt;new;

 my $pane = $mw-&gt;Scrolled(
      qw/Pane -width 250 -height 50 -scrollbars osow -sticky nw/,
 )-&gt;pack;

 my $cf = $pane-&gt;CollapsableFrame(-title =&gt; 'Frame1 ', -height =&gt; 50);
 $cf-&gt;pack(qw/-fill x -expand 1/);
 $cf-&gt;toggle;

 my $colf = $cf-&gt;Subwidget('colf');
 my $but = $colf-&gt;Button(-text =&gt; 'Close Frame 1!');
 $but-&gt;pack;
 $but-&gt;bind('&lt;Button-1&gt;' =&gt; [sub {$_[1]-&gt;close}, $cf]);

=head1 AUTHOR and COPYRIGHT

Stephen.O.Lidie@Lehigh.EDU, 2000/11/27.

Copyright (C) 2000 - 2001, Stephen O. Lidie.

This program is free software, you can redistribute it and/or modify
it under the same terms as Perl itself.

Based on the Tck/Tk CollapsableFrame widget by William J Giddings.

=head1 KEYWORDS

CollapsableFrame, Frame, Pane

=cut</pre></blockquote>

</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_39.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="appc_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">B.39. Tree</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">C.2. Tk::MacCopy</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="1,0,85,94" href="../index.htm"><area shape="rect" coords="86,1,178,103" href="../lwp/index.htm"><area shape="rect" coords="180,0,265,103" href="../lperl/index.htm"><area shape="rect" coords="267,0,353,105" href="../perlnut/index.htm"><area shape="rect" coords="354,1,446,115" href="../prog/index.htm"><area shape="rect" coords="448,0,526,132" href="index.htm"><area shape="rect" coords="528,1,615,119" href="../cookbook/index.htm"><area shape="rect" coords="617,0,690,135" href="../pxml/index.htm"></map>

</body></html>