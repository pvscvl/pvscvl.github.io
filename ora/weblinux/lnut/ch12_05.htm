<?label 12.5. Alphabetical Summary of sed Commands?><html><head><title>Alphabetical Summary of sed Commands (Linux in a Nutshell, 3rd Edition)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Ellen Siever, Stephen Spainhour, Stephen Figgins and Jessica P. Hekman" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="0596000251L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Linux in a Nutshell, 3rd Edition" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Linux in a Nutshell" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch12_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">Linux in a Nutshell, 3rd Edition</a></td><td width="172" valign="top" align="right"><a href="ch13_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">12.5. Alphabetical Summary of sed Commands</h2>


<table cellpadding="5" border="1">

<tr><td valign="top">#</td><td><p>#</p><p>Begin a comment in a <b class="emphasis-bold">sed</b> script.  Valid only as the first
character of the first line.
(Some versions of <b class="emphasis-bold">sed</b>, including the GNU version on Linux, allow comments anywhere, but it is better not to
rely on this.)
If the first line of the script is <b class="emphasis-bold">#n</b>,
<b class="emphasis-bold">sed</b> behaves as if
<b class="emphasis-bold">-n</b> had been specified.<a name="INDEX-1865" /><a name="INDEX-1866" /></p>


</td></tr><tr><td valign="top">:</td><td><p><b class="emphasis-bold">:</b><em class="emphasis">label</em></p><a name="INDEX-1867" /><p>Label a line in the script for the transfer of control by <b class="emphasis-bold">b</b> or <b class="emphasis-bold">t</b>. <em class="emphasis">label</em>
may contain up to seven characters.</p>


</td></tr><tr><td valign="top">=</td><td><p>[<em class="emphasis">/</em><em class="emphasis">pattern</em><em class="emphasis">/</em>]<b class="emphasis-bold">=</b></p><a name="INDEX-1868" /><p>Write to standard output the line number of each line containing
<em class="emphasis">pattern</em>.</p>


</td></tr><tr><td valign="top">a</td><td><p>[<em class="emphasis">address</em>]<b class="emphasis-bold">a\</b></p><p><em class="emphasis">text</em></p><a name="INDEX-1869" /><p>Append <em class="emphasis">text</em> following each line matched by
<em class="emphasis">address</em>. If <em class="emphasis">text</em>
goes over more than one line, newlines must be "hidden" by preceding
them with a backslash. The <em class="emphasis">text</em> will be terminated by the first
newline that is not hidden in this way. The <em class="emphasis">text</em> is
not available in the pattern space, and subsequent commands
cannot be applied to it. The results of this command
are sent to standard output when the list of editing commands is finished,
regardless of what happens to the current line in the pattern space.</p>


<h4 class="refsect2">Example</h4>


<blockquote><pre class="code"><tt class="userinput"><b>$a\
This goes after the last line in the file\
(marked by $). This text is escaped at the\
end of each line, except for the last one.</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">b</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">b</b>[<em class="emphasis">label</em>]</p><a name="INDEX-1870" /><p>Transfer control unconditionally to <b class="emphasis-bold">:</b><em class="emphasis">label</em> elsewhere in script.
That is, the command following
the <em class="emphasis">label</em> is the next command applied to the current line.
If no <em class="emphasis">label</em> is specified, control falls through
to the end of the script, so no more commands are applied
to the current line.</p>


<h4 class="refsect2">Example</h4>


<p>Ignore lines between <b class="emphasis-bold">.TS</b> and <b class="emphasis-bold">.TE</b>; resume script after <b class="emphasis-bold">.TE</b>:</p>


<blockquote><pre class="code"><tt class="userinput"><b>/^\.TS/,/^\.TE/b</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">c</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">c\</b></p><p><em class="emphasis">text</em></p><a name="INDEX-1871" /><p>Replace the lines selected by the address with <em class="emphasis">text</em>.
When a range of lines is specified, all lines as a group are replaced
by a single copy of <em class="emphasis">text</em>.
The newline following each line of <em class="emphasis">text</em> must be escaped by
a backslash, except the last line.
The contents of the pattern space are, in effect, deleted, and
no subsequent editing commands can be applied.</p>


<h4 class="refsect2">Example</h4>


<p>Replace first 100 lines in a file:</p>


<blockquote><pre class="code"><tt class="userinput"><b>1,100c\
\
&lt;First 100 names to be supplied&gt;</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">d</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">d</b></p><a name="INDEX-1872" /><p>Delete the addressed line (or lines) from the pattern space. Thus, the 
line is not passed to standard
output. A new line of input is read, and editing re

sumes with the first
command in the script.</p>


<?troff .rm CURRENT?><h4 class="refsect2">Example</h4>


<p>Delete all blank lines:</p>


<blockquote><pre class="code"><tt class="userinput"><b>/^$/d</b></tt></pre></blockquote>


</td></tr>
<?troff .Nd 10?><tr><td valign="top">D</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">D</b></p><a name="INDEX-1873" /><p>Delete first part (up to embedded newline) of multiline pattern space created
by <b class="emphasis-bold">N</b> command, and resume editing with first command in
script. If this command empties the pattern space, then a new line
of input is read, as if the <b class="emphasis-bold">d</b> had been executed.</p>


<h4 class="refsect2">Example</h4>


<p>Strip multiple blank lines, leaving only one:</p>


<blockquote><pre class="code"><tt class="userinput"><b>/^$/{
N
/^\n$/D</b></tt>
}</pre></blockquote>


</td></tr><tr><td valign="top">g</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">g</b></p><a name="INDEX-1874" /><p>Paste the contents of the hold space (see <b class="emphasis-bold">h</b> or <b class="emphasis-bold">H</b> command) back
into the pattern space, wiping out the previous contents of the pattern space.
The example shows a simple way to copy lines.</p>


<h4 class="refsect2">Example</h4>


<p>This script collects all lines containing the word <em class="emphasis">Item:</em>
and copies them to a place marker later in the file.
The place marker is overwritten.</p>


<blockquote><pre class="code"><tt class="userinput"><b>/Item:/H
/&lt;Replace this line with the item list&gt;/g</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">G</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">G</b></p><a name="INDEX-1875" /><p>Same as <b class="emphasis-bold">g</b>, except that the hold space is pasted below the address
instead of overwriting it.
The example shows a simple way to cut and paste lines.</p>


<h4 class="refsect2">Example</h4>


<p>This script collects all lines containing the word <em class="emphasis">Item</em>:
and moves them after a place marker later in the file.
The original <em class="emphasis">Item</em>: lines are deleted.</p>


<blockquote><pre class="code"><tt class="userinput"><b>/Item:/{
H
d
}
/Summary of items:/G</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">h</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">h</b></p><a name="INDEX-1876" /><p>Copy the pattern space into the hold space, a special temporary buffer.
The previous contents of the hold space are obliterated.
You can use <b class="emphasis-bold">h</b> to save a line before editing it.</p>


<h4 class="refsect2">Example</h4>


<blockquote><pre class="code"><tt class="userinput"><b># Edit a line; print the change; replay the original
/Linux/{
h
s/.* Linux \(.*\) .*/\1:/
p
x
}</b></tt></pre></blockquote>


<p>Sample input:</p>


<blockquote><pre class="code"><tt class="userinput"><b>This describes the Linux ls command.
This describes the Linux cp command.</b></tt></pre></blockquote>


<p>Sample output:</p>


<blockquote><pre class="code">ls:
This describes the Linux ls command.
cp:
This describes the Linux cp command.</pre></blockquote>


</td></tr><tr><td valign="top">H</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">H</b></p><a name="INDEX-1877" /><p>Append the contents of the pattern space (preceded by a newline)
to the contents of the hold space. Even if the hold space is empty,
<b class="emphasis-bold">H</b> still appends a newline. <b class="emphasis-bold">H</b> is like an incremental copy.
See examples under <b class="emphasis-bold">g</b> and <b class="emphasis-bold">G</b>.</p>


</td></tr><tr><td valign="top">i</td><td><p>[<em class="emphasis">address1</em>]<b class="emphasis-bold">i\</b></p><p><em class="emphasis">text</em></p><a name="INDEX-1878" /><p>Insert <em class="emphasis">text</em> before each line matched by <em class="emphasis">address</em>. 
(See <b class="emphasis-bold">a</b> for details on <em class="emphasis">text</em>.)</p>


<h4 class="refsect2">Example</h4>


<blockquote><pre class="code"><tt class="userinput"><b>/Item 1/i\
The five items are listed below:</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">l</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">l</b></p><a name="INDEX-1879" /><p>List the contents of the pattern space, showing nonprinting
characters as ASCII codes. Long lines are wrapped.</p>


</td></tr><tr><td valign="top">n</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">n</b></p><a name="INDEX-1880" /><p>Read next line of input into pattern space. The current line is sent to
standard output, and the next line becomes the current line.
Control passes to the command following <b class="emphasis-bold">n</b> instead of resuming at the top
of the script.</p>


<h4 class="refsect2">Example</h4>


<p>In the <b class="emphasis-bold">ms</b> macros, a section header occurs on the line
below an <b class="emphasis-bold">.NH</b> macro. To print all lines of header text, invoke this
script with <b class="emphasis-bold">sed -n</b>:</p>


<blockquote><pre class="code"><tt class="userinput"><b>/^\.NH/{
n
p
}</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">N</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">N</b></p><a name="INDEX-1881" /><p>Append next input line to contents of pattern space; the two lines are
separated by an embedded newline.
(This command is designed to allow pattern matches across two
lines.) Using <b class="emphasis-bold">\n</b> to match the embedded newline, you can match
patterns across multiple lines. See example at <b class="emphasis-bold">D</b>.</p>


<h4 class="refsect2">Examples</h4>


<p>Like previous example, but print <b class="emphasis-bold">.NH</b> line as well as header title:</p>


<blockquote><pre class="code"><tt class="userinput"><b>/^\.NH/{
N
p
}</b></tt></pre></blockquote>


<p>Join two lines (replace newline with space):</p>


<blockquote><pre class="code"><tt class="userinput"><b>/^\.NH/{
N
s/\n/ /
p
}</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">p</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">p</b></p><a name="INDEX-1882" /><p>Print the addressed lines. Unless the <b class="emphasis-bold">-n</b> command-line
option is used, this command causes duplicate lines to be
output. Also, it typically is used before commands that
change flow control (<b class="emphasis-bold">d</b>, <b class="emphasis-bold">N</b>, <b class="emphasis-bold">b</b>) and that might


prevent the current line from being output.
See examples at <b class="emphasis-bold">h</b>, <b class="emphasis-bold">n</b>, and <b class="emphasis-bold">N</b>.</p>


</td></tr><tr><td valign="top">P</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">P</b></p><a name="INDEX-1883" /><p>Print first part (up to embedded newline) of multiline pattern created
by <b class="emphasis-bold">N</b> command. Same as <b class="emphasis-bold">p</b> if <b class="emphasis-bold">N</b> has not been applied
to a line.
</p>


</td></tr><tr><td valign="top">q</td><td><p>[<em class="emphasis">address</em>]<b class="emphasis-bold">q</b></p><a name="INDEX-1884" /><p>Quit when <em class="emphasis"> address</em>  is encountered. The addressed line first is
written to output (if default output is not suppressed),
along with any text appended to it by 
previous <b class="emphasis-bold">a</b> or <b class="emphasis-bold">r</b> commands.</p>


<h4 class="refsect2">Examples</h4>


<p>Delete everything after the addressed line:</p>


<blockquote><pre class="code"><tt class="userinput"><b>/Garbled text follows:/q</b></tt></pre></blockquote>


<p>Print only the first 50 lines of a file:</p>


<blockquote><pre class="code"><tt class="userinput"><b>50q</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">r</td><td><p>[<em class="emphasis">address</em>]<b class="emphasis-bold">r</b> <em class="emphasis">file</em></p><a name="INDEX-1885" /><p>Read contents of <em class="emphasis">file</em> and append after the contents of the
pattern space.
Exactly one space must be put between the <b class="emphasis-bold">r</b> and the filename.</p>


<h4 class="refsect2">Example</h4>


<blockquote><pre class="code"><tt class="userinput"><b>/The list of items follows:/r item_file</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">s</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">s/</b><em class="emphasis">pattern</em><b class="emphasis-bold">/</b><em class="emphasis">replacement</em><b class="emphasis-bold">/</b>[<em class="emphasis">flags</em>]</p><a name="INDEX-1886" /><p>Substitute <em class="emphasis">replacement</em> for <em class="emphasis">pattern</em> on each addressed line.
If pattern addresses are used, the pattern <b class="emphasis-bold">//</b> represents the last
pattern address specified.
The following flags can be specified:</p>


<dl>
<dt><b><em class="emphasis">n</em></b></dt><dd><p>Replace <em class="emphasis">n</em>th instance of <b class="emphasis-bold">/</b><em class="emphasis">pattern</em><b class="emphasis-bold">/</b> on each addressed line. <em class="emphasis">n</em> is any number in the range 1 to 512; the default is 1.</p></dd>



<dt><b><b class="emphasis-bold">g</b></b></dt><dd><p>Replace all instances of <b class="emphasis-bold">/</b><em class="emphasis">pattern</em><b class="emphasis-bold">/</b> on each addressed line, not
just the first instance.</p></dd>



<dt><b><b class="emphasis-bold">p</b></b></dt><dd><p>Print the line if a successful substitution is done. If several
successful substitutions are done, multiple copies of the line will be
printed.</p></dd>



<dt><b><b class="emphasis-bold">w</b><em class="emphasis"> file</em></b></dt><dd><p>Write the line to a <em class="emphasis">file</em> if a replacement was done.</p></dd>

</dl>


<h4 class="refsect2">Examples</h4>


<p>Here are some short, commented scripts:</p>


<blockquote><pre class="code"><tt class="userinput"><b># Change third and fourth quote to ( and ):
/function/{
s/"/(/3
s/"/)/4
}</b></tt>

<tt class="userinput"><b># Remove all quotes on a given line:
/Title/s/"//g</b></tt>

<tt class="userinput"><b># Remove first colon or all quotes; print resulting lines:
s/://p
s/"//gp</b></tt>

<tt class="userinput"><b># Change first "if" but leave "ifdef" alone:
/ifdef/!s/if/   if/</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">t</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">t</b> [<em class="emphasis">label</em>]</p><a name="INDEX-1887" /><p>Test if any substitutions have been made on addressed lines,
and if so, branch to line marked by <b class="emphasis-bold">:</b><em class="emphasis">label</em>.
(See <b class="emphasis-bold">b</b> and <b class="emphasis-bold">:</b>.)  If
<em class="emphasis">label</em> is not specified, control falls through to bottom of script.
The <b class="emphasis-bold">t</b> command is like a case statement in the C
programming language or the shell programming languages.
You test each case; when it's true, you exit the construct.</p>


<h4 class="refsect2">Example</h4>


<p>Suppose you want to fill empty fields of a database. You have this:</p>


<blockquote><pre class="code">ID: 1   Name: greg   Rate: 45
ID: 2   Name: dale
ID: 3</pre></blockquote>


<p>You want this:</p>


<blockquote><pre class="code">ID: 1   Name: greg   Rate: 45   Phone: ??
ID: 2   Name: dale   Rate: ??   Phone: ??
ID: 3   Name: ????   Rate: ??   Phone: ??</pre></blockquote>


<p>You need to test the number of fields already there.
Here's the script (fields are tab-separated):</p>


<blockquote><pre class="code"><tt class="userinput"><b>/ID/{
s/ID: .* Name: .* Rate: .*/&amp;   Phone: ??/p
t
s/ID: .* Name: .*/&amp;   Rate: ??   Phone: ??/p
t
s/ID: .*/&amp;   Name: ??     Rate: ??   Phone: ??/p
}</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">w</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">w</b><em class="emphasis"> file</em></p><a name="INDEX-1888" /><p>Append contents of pattern space to <em class="emphasis">file</em>. This action occurs
when the command is encountered, rather than when the pattern space is
output. Exactly one space
must separate the <b class="emphasis-bold">w</b> and the filename.
This command will create the file if it does not exist; if the file
exists, its contents will be overwritten each time the script
is executed. Multiple write commands that direct output to the
same file append to the end of the file.</p>


<h4 class="refsect2">Example</h4>


<?troff .rm CURRENT?><blockquote><pre class="code"><tt class="userinput"><b># Store tbl and eqn blocks in a file:
/^\.TS/,/^\.TE/w troff_stuff
/^\.EQ/,/^\.EN/w troff_stuff</b></tt></pre></blockquote>


</td></tr><tr><td valign="top">x</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">x</b></p><a name="INDEX-1889" /><p>Exchange contents of the pattern space with the contents of the
hold space. See <b class="emphasis-bold">h</b> for an example.</p>


</td></tr><tr><td valign="top">y</td><td><p>[<em class="emphasis">address1</em>[<b class="emphasis-bold">,</b><em class="emphasis">address2</em>]]<b class="emphasis-bold">y/</b><em class="emphasis">abc</em><b class="emphasis-bold">/</b><em class="emphasis">xyz</em><b class="emphasis-bold">/</b></p><a name="INDEX-1890" /><p>Translate characters. Change every instance of <em class="emphasis">a</em>
to <em class="emphasis">x</em>, <em class="emphasis">b</em> to <em class="emphasis">y</em>, <em class="emphasis">c</em> to <em class="emphasis">z</em>, etc.</p>


<h4 class="refsect2">Example</h4>


<blockquote><pre class="code"><tt class="userinput"><b># Change item 1, 2, 3 to Item A, B, C ...
/^item [1-9]/y/123456789/ABCDEFGHI/</b></tt></pre></blockquote>









</td></tr></table><p><a name="INDEX-1891" /><a name="INDEX-1892" /></p>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch12_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch13_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">12.4. Group Summary of sed Commands</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">13. The gawk Scripting Language</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>