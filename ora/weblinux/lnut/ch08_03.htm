<?label 8.3. Syntax?><html><head><title>Syntax (Linux in a Nutshell, 3rd Edition)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Ellen Siever, Stephen Spainhour, Stephen Figgins and Jessica P. Hekman" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="0596000251L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Linux in a Nutshell, 3rd Edition" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Linux in a Nutshell" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch08_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">Linux in a Nutshell, 3rd Edition</a></td><td width="172" valign="top" align="right"><a href="ch08_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">8.3. Syntax</h2>


<p>This section describes the many symbols peculiar to
<b class="emphasis-bold">csh</b> and <b class="emphasis-bold">tcsh</b>. The topics are arranged as follows:</p>


<ul><li><p>Special files</p></li><li><p>Filename metacharacters</p></li>
<?troff .Nd 10?><li><p>Quoting</p></li><li><p>Command forms</p></li><li><p>Redirection forms</p></li></ul><a name="ln.ch05.div.5" /><div class="sect2">
<h3 class="sect2">8.3.1. Special Files</h3>


<a name="INDEX-1491" /><a name="ln.ch05.tbl.1" /><table cellpadding="4" border="1">




<tr>
<th>Filename</th>
<th>Description</th>
</tr>






<tr>
<td><p>

<em class="emphasis">~/.cshrc</em>
or <em class="emphasis">~/.tcshrc</em></p></td>
<td><p>Executed at each instance of shell startup. For 
<b class="emphasis-bold">tcsh</b>, if no
<em class="filename">~/.tcshrc</em>, uses <em class="filename">~/.cshrc</em> if
present.</p></td>
</tr>


<tr>
<td>

<em class="emphasis">~/.login</em></td>
<td>Executed by login shell after <em class="emphasis">.cshrc</em> at login.</td>
</tr>


<tr>
<td>

<em class="emphasis">~/.cshdirs</em></td>
<td><p>Executed by login shell after <em class="filename">.login</em>
(<b class="emphasis-bold">tcsh</b>).</p></td>
</tr>


<tr>
<td>

<em class="emphasis">~/.logout</em></td>
<td>Executed by login shell at logout.</td>
</tr>


<tr>
<td>

<em class="emphasis">/etc/passwd</em></td>
<td>Source of home directories for <b class="emphasis-bold">~</b><em class="emphasis">name</em> abbreviations.</td>
</tr>



</table>
</div>








<a name="ln.ch05.div.6" /><div class="sect2">
<h3 class="sect2">8.3.2. Filename Metacharacters</h3>


<a name="INDEX-1492" /><a name="INDEX-1493" /><a name="ln.ch05.tbl.2" /><table cellpadding="4" border="1">





<tr>
<th>Characters</th>
<th>Meaning</th>
</tr>






<tr>
<td>

<b class="emphasis-bold">*</b></td>
<td>Match any string of 0 or more characters.</td>
</tr>



<tr>
<td>

<b class="emphasis-bold">?</b></td>
<td>Match any single character.</td>
</tr>



<tr>
<td>

<b class="emphasis-bold">[</b><em class="emphasis">abc</em><b class="emphasis-bold">...]</b></td>
<td><p>Match any one of the enclosed characters; a hyphen can be used to
specify a range (e.g., a-z, A-Z, 0-9).
</p></td>
</tr>


<tr>
<td>

<b class="emphasis-bold">{</b><em class="emphasis">abc</em>,<em class="emphasis">xxx</em>,<b class="emphasis-bold">...}</b></td>
<td><p>Expand each comma-separated string inside braces.


</p></td>
</tr>


<tr>
<td>

<b class="emphasis-bold">~</b></td>
<td>Home directory for the current user.</td>
</tr>



<tr>
<td>

<b class="emphasis-bold">~</b><em class="emphasis">name</em></td>
<td>Home directory of user <em class="emphasis">name</em>.</td>
</tr>



</table><a name="ln.ch05.div.7" /><div class="sect3">
<h3 class="sect3">8.3.2.1. Examples</h3>


<blockquote><pre class="code">% <tt class="userinput"><b>ls new*</b></tt>          Match new and new.1
% <tt class="userinput"><b>cat ch?</b></tt>          Match ch9 but not ch10
% <tt class="userinput"><b>vi [D-R]*</b></tt>        Match files that begin with uppercase D through R
% <tt class="userinput"><b>ls {ch,app}?</b></tt>     Expand, then match ch1, ch2, app1, app2
% <tt class="userinput"><b>cd ~tom</b></tt>          Change to tom's home directory</pre></blockquote>
</div>
</div>








<a name="ln.ch05.div.8" /><div class="sect2">
<h3 class="sect2">8.3.3. Quoting</h3>


<a name="INDEX-1494" /><p>Quoting disables a character's special meaning and
allows it to be used literally, as itself.
The following characters have special meaning to the C shell:
</p>


<a name="ln.ch05.tbl.3" /><table cellpadding="4" border="1">




<tr>
<th>Characters</th>
<th>Description</th>
</tr>






<tr>
<td><tt class="userinput"><b>;</b></tt></td>
<td>Command separator</td>
</tr>



<tr>
<td><tt class="userinput"><b>&amp;</b></tt></td>
<td>Background execution</td>
</tr>



<tr>
<td><tt class="userinput"><b>(  )</b></tt></td>
<td>Command grouping</td>
</tr>



<tr>
<td><tt class="userinput"><b>|</b></tt></td>
<td>Pipe</td>
</tr>



<tr>
<td><tt class="userinput"><b>* ? [ ] ~</b></tt></td>
<td>Filename metacharacters</td>
</tr>



<tr>
<td><tt class="userinput"><b>{ }</b></tt></td>
<td><p>String expansion characters (usually don't require quoting)
</p></td>
</tr>


<tr>
<td><tt class="userinput"><b>&gt; &lt; &amp; !</b></tt></td>
<td>Redirection symbols</td>
</tr>



<tr>
<td><tt class="userinput"><b>! ^</b></tt></td>
<td>History substitution, quick substitution</td>
</tr>



<tr>
<td><tt class="userinput"><b>" ' \</b></tt></td>
<td>Used in quoting other characters</td>
</tr>



<tr>
<td><tt class="userinput"><b><literal>`</literal></b></tt></td>
<td>Command substitution</td>
</tr>



<tr>
<td><tt class="userinput"><b>$</b></tt></td>
<td>Variable substitution</td>
</tr>



<tr>
<td><p>

newline space tab
</p></td>
<td>Word separators</td>
</tr>




</table>

<p>The characters that follow can be used for quoting:</p>


<dl>
<dt><b><tt class="userinput"><b>" "</b></tt></b></dt><dd><p>Everything between <b class="emphasis-bold">"</b> 
and <b class="emphasis-bold">"</b> is taken literally, except for
the following characters, which keep their special meaning:</p>


<dl>
<dt><b><tt class="userinput"><b>$</b></tt></b></dt><dd><p>Variable substitution will occur.</p></dd>



<dt><b><tt class="userinput"><b><literal>`</literal></b></tt></b></dt><dd><p>Command substitution will occur.</p></dd>



<dt><b><tt class="userinput"><b>"</b></tt></b></dt><dd><p>This marks the end of the double quote.</p></dd>



<dt><b><tt class="userinput"><b>\</b></tt></b></dt><dd><p>Escape next character.</p></dd>



<dt><b><tt class="userinput"><b>!</b></tt></b></dt><dd><p>The history character.</p></dd>



<dt><b>newline</b></dt><dd><p>The newline character.</p></dd>

</dl></dd>



<dt><b><tt class="userinput"><b>' '</b></tt></b></dt><dd><p>Everything between <tt class="userinput"><b>'</b></tt> and <tt class="userinput"><b>'</b></tt> is taken literally
except for <b class="emphasis-bold">!</b> (history) and another <tt class="userinput"><b>'</b></tt>, and newline.</p></dd>



<dt><b><tt class="userinput"><b>\</b></tt></b></dt><dd><p>The character following a <b class="emphasis-bold">\</b> is taken literally.
Use within <b class="emphasis-bold">" "</b> to escape <b class="emphasis-bold">"</b>, <b class="emphasis-bold">$</b>, and <b class="emphasis-bold"><literal>`</literal></b>.
Often used to escape itself, spaces, or newlines.
Always needed to escape a history character (usually <b class="emphasis-bold">!</b>).</p></dd>

</dl>


<a name="ln.ch05.div.9" /><div class="sect3">
<h3 class="sect3">8.3.3.1. Examples</h3>


<blockquote><pre class="code">

% <tt class="userinput"><b>echo 'Single quotes "protect" double quotes'</b></tt>
Single quotes "protect" double quotes

% <tt class="userinput"><b>echo "Well, isn't that "\""special?"\"</b></tt>
Well, isn't that "special"?

% <tt class="userinput"><b>echo "You have <literal>`</literal>ls|wc -l` files in `pwd`"</b></tt>
You have 43 files in /home/bob

% <tt class="userinput"><b>echo The value of \$x is $x</b></tt>
The value of $x is 100</pre></blockquote>
</div>
</div>








<?troff .Nd 10?><a name="ln.ch05.div.10" /><div class="sect2">
<h3 class="sect2">8.3.4. Command Forms</h3>


<p><a name="INDEX-1495" /></p>


<a name="ln.ch05.tbl.5" /><table cellpadding="4" border="1">




<tr>
<th>Command</th>
<th>Action</th>
</tr>






<tr>
<td><tt class="userinput"></tt><em class="replaceable">cmd</em> <b class="emphasis-bold">&amp;</b></td>
<td><p>Execute <em class="replaceable">cmd</em> in background.</p></td>
</tr>


<tr>
<td><tt class="userinput"></tt><em class="replaceable">cmd1</em><b class="emphasis-bold"> ;</b> <em class="replaceable">cmd2</em></td>
<td><p>Command sequence; execute multiple
<em class="replaceable">cmd</em>s on the same line.</p></td>
</tr>


<tr>
<td><tt class="userinput"><b>(</b></tt><em class="replaceable">cmd1</em><b class="emphasis-bold"> ;</b> <em class="replaceable">cmd2</em><tt class="userinput"><b>)</b></tt></td>
<td><p>Subshell; treat <em class="replaceable">cmd1</em> and <em class="replaceable">cmd2</em> as a command group.</p></td>
</tr>


<tr>
<td><tt class="userinput"></tt><em class="replaceable">cmd1</em><b class="emphasis-bold"> |</b> <em class="replaceable">cmd2</em></td>
<td><p>Pipe; use output from <em class="replaceable">cmd1</em> as input to <em class="replaceable">cmd2</em>.</p></td>
</tr>


<tr>
<td><tt class="userinput"></tt><em class="replaceable">cmd1</em> <literal>`</literal><em class="replaceable">cmd2</em>`</td>
<td><p>Command substitution; run <em class="replaceable">cmd2</em> first and use its output as arguments to <em class="replaceable">cmd1</em>.</p></td>
</tr>


<tr>
<td><tt class="userinput"></tt><em class="replaceable">cmd1</em> <b class="emphasis-bold">||</b> <em class="replaceable">cmd2</em></td>
<td><p>OR; execute either <em class="replaceable">cmd1</em> or (if <em class="replaceable">cmd1</em> fails) <em class="replaceable">cmd2</em>.</p></td>
</tr>


<tr>
<td><tt class="userinput"></tt><em class="replaceable">cmd1</em> <b class="emphasis-bold">&amp;&amp;</b> <em class="replaceable">cmd2</em></td>
<td><p>AND; execute <em class="replaceable">cmd1</em> and then (if <em class="replaceable">cmd1</em> succeeds) <em class="replaceable">cmd2</em>.</p></td>
</tr>



</table><a name="ln.ch05.div.11" /><div class="sect3">
<h3 class="sect3">8.3.4.1. Examples</h3>


<blockquote><pre class="code">% <tt class="userinput"><b>nroff file &gt; output &amp;</b></tt>               Format in the background
% <tt class="userinput"><b>cd; ls</b></tt>                              Execute sequentially
% <tt class="userinput"><b>(date; who; pwd) &gt; logfile</b></tt>          All output is redirected
% <tt class="userinput"><b>sort file | pr -3 | lp</b></tt>              Sort file, page output, then print
% <tt class="userinput"><b>vi <literal>`</literal>grep -l ifdef *.c`</b></tt>              Edit files found by grep
% <tt class="userinput"><b>egrep '(yes|no)' <literal>`</literal>cat list`</b></tt>         Specify a list of files to search
% <tt class="userinput"><b>grep XX file &amp;&amp; lp file</b></tt>             Print file if it contains the pattern
% <tt class="userinput"><b>grep XX file || echo XX not found</b></tt>   Echo an error message if XX not found</pre></blockquote>
</div>
</div>








<a name="ln.ch05.div.12" /><div class="sect2">
<h3 class="sect2">8.3.5. Redirection Forms</h3>


<a name="INDEX-1496" /><a name="ln.ch05.tbl.6" /><table cellpadding="4" border="1">









<tr>
<th><p>File Descriptor</p></th>
<th>Name</th>
<th><p>Common Abbreviation</p></th>
<th><p>Typical Default</p></th>
</tr>






<tr>
<td>0</td>
<td>Standard input</td>
<td>stdin</td>
<td>Keyboard</td>
</tr>


<tr>
<td>1</td>
<td>Standard output</td>
<td>stdout</td>
<td>Screen</td>
</tr>


<tr>
<td>2</td>
<td>Standard error</td>
<td>stderr</td>
<td>Screen</td>
</tr>



</table><p>The usual input source or output destination can
be changed with redirection commands listed in the following sections.</p>


<a name="ln.ch05.div.13" /><div class="sect3">
<h3 class="sect3">8.3.5.1. Simple redirection</h3>


<a name="ln.ch05.tbl.7" /><table cellpadding="4" border="1">




<tr>
<th>Command</th>
<th>Action</th>
</tr>






<tr>
<td>

<tt class="userinput"></tt><em class="replaceable">cmd</em> <b class="emphasis-bold">&gt;</b> <em class="replaceable">file</em></td>
<td>Send output of <em class="replaceable">cmd</em> to <em class="replaceable">file</em> (overwrite).</td>
</tr>



<tr>
<td>

<tt class="userinput"></tt><em class="replaceable">cmd</em> <b class="emphasis-bold">&gt;!</b> <em class="replaceable">file</em></td>
<td><p>Same as preceding, even if <b class="emphasis-bold">noclobber</b> is set.
</p></td>
</tr>


<tr>
<td>

<tt class="userinput"></tt><em class="replaceable">cmd</em> <b class="emphasis-bold">&gt;&gt;</b> <em class="replaceable">file</em></td>
<td>Send output of <em class="replaceable">cmd</em> to <em class="replaceable">file</em> (append).</td>
</tr>



<tr>
<td>

<tt class="userinput"></tt><em class="replaceable">cmd</em><b class="emphasis-bold">&gt;&gt;!</b> <em class="replaceable">file</em></td>
<td><p>Same as preceding, even if <b class="emphasis-bold">noclobber</b> is set.
</p></td>
</tr>


<tr>
<td>

<tt class="userinput"></tt><em class="replaceable">cmd</em> <b class="emphasis-bold">&lt;</b> <em class="replaceable">file</em></td>
<td>Take input for <em class="replaceable">cmd</em> from <em class="replaceable">file</em>.</td>
</tr>



<tr>
<td>

<tt class="userinput"></tt><em class="replaceable">cmd</em> <b class="emphasis-bold">&lt;&lt;</b> <em class="replaceable">text</em></td>
<td><p>Read standard input up to a line identical to <em class="replaceable">text</em>
(<em class="replaceable">text</em> can be stored in a shell variable).
Input usually is typed on the screen or in the shell program.
Commands that typically use this syntax
include <b class="emphasis-bold">cat</b>, <b class="emphasis-bold">echo</b>, <b class="emphasis-bold">ex</b>, and <b class="emphasis-bold">sed</b>.
If <em class="replaceable">text</em> is enclosed in quotes, standard input will
not undergo variable substitution, command substitution, etc.</p></td>
</tr>



</table>
</div>




<a name="ln.ch05.div.14" /><div class="sect3">
<h3 class="sect3">8.3.5.2. Multiple redirection</h3>


<a name="ln.ch05.tbl.8" /><table cellpadding="4" border="1">




<tr>
<th>Command</th>
<th>Action</th>
</tr>






<tr>
<td>

<tt class="userinput"></tt><em class="replaceable">cmd</em> <b class="emphasis-bold">&gt;&amp;</b> <em class="replaceable">file</em></td>
<td><p>Send both standard output and standard error to <em class="replaceable">file</em>.
</p></td>
</tr>


<tr>
<td>

<tt class="userinput"></tt><em class="replaceable">cmd</em><b class="emphasis-bold"> &gt;&amp;!</b> <em class="replaceable">file</em></td>
<td><p>Same as preceding, even if <b class="emphasis-bold">noclobber</b> is set.
</p></td>
</tr>


<tr>
<td>

<tt class="userinput"></tt><em class="replaceable">cmd</em> <b class="emphasis-bold">&gt;&gt;&amp;</b> <em class="replaceable">file</em></td>
<td><p>Append standard output and standard error to end of <em class="replaceable">file</em>.
</p></td>
</tr>


<tr>
<td>

<tt class="userinput"></tt><em class="replaceable">cmd</em> <b class="emphasis-bold">&gt;&gt;&amp;!</b> <em class="replaceable">file</em></td>
<td><p>Same as preceding, even if <b class="emphasis-bold">noclobber</b> is set.
</p></td>
</tr>


<tr>
<td>

<tt class="userinput"></tt><em class="replaceable">cmd1</em> <b class="emphasis-bold">|&amp;</b> <em class="replaceable">cmd2</em></td>
<td><p>Pipe standard error together with standard output.
</p></td>
</tr>


<tr>
<td>

<tt class="userinput"><b>(</b></tt><em class="replaceable">cmd</em><b class="emphasis-bold">&gt;</b> <em class="replaceable">f1</em><b class="emphasis-bold">) &gt;&amp;</b> <em class="replaceable">f2</em></td>
<td><p>Send standard output to file <em class="replaceable">f1</em> and standard error to file <em class="replaceable">f2</em>.
</p></td>
</tr>


<tr>
<td>

<tt class="userinput"></tt><em class="replaceable">cmd</em> <b class="emphasis-bold">| tee</b> <em class="replaceable">files</em></td>
<td><p>Send output of <em class="replaceable">cmd</em> to standard output (usually the screen)
and to <em class="replaceable">files</em>. (See the example in <a href="ch03_01.htm">Chapter 3, "Linux Commands"</a> under <b class="emphasis-bold">tee</b>.)</p></td>
</tr>



</table>
</div>




<a name="ln.ch05.div.15" /><div class="sect3">
<h3 class="sect3">8.3.5.3. Examples</h3>


<blockquote><pre class="code">% <tt class="userinput"><b>cat part1 &gt; book</b></tt>                               Copy part1 to book
% <tt class="userinput"><b>cat part2 part3 &gt;&gt; book</b></tt>                        Append parts 2 and 3 to same file as part1
% <tt class="userinput"><b>mail tim &lt; report</b></tt>                              Take input to message from report
% <tt class="userinput"><b>cc calc.c &gt;&amp; error_out</b></tt>                         Store all messages, including errors
% <tt class="userinput"><b>cc newcalc.c &gt;&amp;! error_out</b></tt>                     Overwrite old file
% <tt class="userinput"><b>grep Unix ch* |&amp; pr</b></tt>                            Pipe all messages, including errors
% <tt class="userinput"><b>(find / -print &gt; filelist) &gt;&amp; no_access</b></tt>        Separate error messages from list of files
% <tt class="userinput"><b>sed 's/^/XX /' &lt;&lt; "END_ARCHIVE"</b></tt>                Supply text right after command
<tt class="userinput"><b>This is often how a shell archive is "wrapped",</b></tt>
<tt class="userinput"><b>bundling text for distribution. You would normally</b></tt>
<tt class="userinput"><b>run sed from a shell program, not from the command line.</b></tt>
<tt class="userinput"><b>"END_ARCHIVE"</b></tt></pre></blockquote>


<p><a name="INDEX-1497" /></p>
</div>
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch08_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch08_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">8.2. Invoking the Shell</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">8.4. Variables</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>