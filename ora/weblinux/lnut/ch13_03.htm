<?label 13.3. Patterns and Procedures?><html><head><title>Patterns and Procedures (Linux in a Nutshell, 3rd Edition)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Ellen Siever, Stephen Spainhour, Stephen Figgins and Jessica P. Hekman" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="0596000251L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Linux in a Nutshell, 3rd Edition" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Linux in a Nutshell" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch13_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">Linux in a Nutshell, 3rd Edition</a></td><td width="172" valign="top" align="right"><a href="ch13_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">13.3. Patterns and Procedures</h2>


<p><b class="emphasis-bold">gawk</b> scripts consist of patterns and procedures:</p>


<blockquote><pre class="code"><em class="emphasis">pattern</em>  {<em class="emphasis">procedure</em>}</pre></blockquote><p>Both are optional. If <em class="emphasis">pattern</em> is missing, 
<b class="emphasis-bold">{</b><em class="emphasis">procedure</em><b class="emphasis-bold">}</b> is applied to all records. 
If

 <b class="emphasis-bold">{</b><em class="emphasis">procedure</em><b class="emphasis-bold">}</b> is missing, the matched record
is printed. By default, each line of input is a record, but you can
specify a different record separator through the <b class="emphasis-bold">RS</b> variable.</p>


<a name="ln.ch11.div.6" /><div class="sect2">
<h3 class="sect2">13.3.1. Patterns</h3>


<p><a name="INDEX-1898" />A pattern can be any of the following:</p>


<blockquote><pre class="code">/<em class="emphasis">regular expression</em>/
<em class="emphasis">relational expression</em>
<em class="emphasis">pattern-matching expression</em>
<em class="emphasis">pattern,pattern</em>
<b class="emphasis-bold">BEGIN</b>
<b class="emphasis-bold">END</b></pre></blockquote><p>Some rules regarding patterns include:</p>


<ul><li><p>Expressions can be composed of quoted strings, numbers, operators,
functions, defined variables, or any of the predefined variables 
described later under "gawk System Variables."</p></li><li><p>Regular expressions use the extended set of metacharacters and
are described in <a href="ch09_01.htm">Chapter 9, "Pattern Matching"</a>.</p></li><li><p>In addition,
<b class="emphasis-bold">^</b> and <b class="emphasis-bold">$</b> can be used to refer to the beginning and end of a 
field, respectively, rather than the beginning and end of a record.</p></li><li><p>Relational expressions use the relational operators listed under 
"Operators" later in this chapter. Comparisons can be either string or numeric. For example, <b class="emphasis-bold">$2 &gt; $1</b> selects lines for
which the second field is greater than the first.</p></li><li><p>Pattern-matching expressions use the operators <b class="emphasis-bold">~</b> (match)
and <b class="emphasis-bold">!</b><b class="emphasis-bold">~</b> (don't match). See "Operators" later in this chapter.</p></li><li><p>The <b class="emphasis-bold">BEGIN</b> pattern lets you specify procedures that take
place <em class="emphasis">before</em> the first input record is processed. (Generally, you
set global variables here.)</p></li><li><p>The <b class="emphasis-bold">END</b> pattern lets you specify procedures that
take place <em class="emphasis">after</em> the last input record is read.</p></li><li><p>If there are multiple <b class="emphasis-bold">BEGIN</b> or <b class="emphasis-bold">END</b> patterns,
their associated actions are taken in the order in
which they appear in the script.</p></li><li><p><em class="emphasis">pattern</em>,<em class="emphasis">pattern</em>
specifies a range of lines. This syntax cannot include
<b class="emphasis-bold">BEGIN</b> or
<b class="emphasis-bold">END</b> as a pattern.</p></li></ul><p>Except for <b class="emphasis-bold">BEGIN</b> and <b class="emphasis-bold">END</b>, patterns can be combined with the
Boolean operators <b class="emphasis-bold">||</b> (OR), <b class="emphasis-bold">&amp;&amp;</b> (AND), and <b class="emphasis-bold">!</b> (NOT).</p>


<p>In addition to other regular-expression operators, GNU <b class="emphasis-bold">awk</b>
supports POSIX character lists, which are useful for matching
non-ASCII characters in languages other than English. These lists are
recognized only within <b class="emphasis-bold">[ ]</b> ranges. A typical use would be
<b class="emphasis-bold">[[:lower:]]</b>, which in English 
is the same as <b class="emphasis-bold">[a-z]</b>.
See <a href="ch09_01.htm">Chapter 9, "Pattern Matching"</a> for a complete list of POSIX character lists.</p>
</div>








<a name="ln.ch11.div.7" /><div class="sect2">
<h3 class="sect2">13.3.2. Procedures</h3>


<p><a name="INDEX-1899" />Procedures consist of one or more commands, functions, or variable
assignments, separated by newlines or semicolons and contained within
curly braces. Commands fall into four groups:</p>


<ul><li><p>Variable or array assignments</p></li><li><p>Printing commands</p></li><li><p>Built-in functions</p></li><li><p>Control-flow commands</p></li></ul>
</div>








<a name="ln.ch11.div.8" /><div class="sect2">
<h3 class="sect2">13.3.3. Simple Pattern-Procedure Examples</h3>


<ol><li><p>Print first field of each line (no pattern specified):</p>


<blockquote><pre class="code"><tt class="userinput"><b>{ print $1 }</b></tt></pre></blockquote></li><li><p>Print all lines that contain "Linux":</p>


<blockquote><pre class="code"><tt class="userinput"><b>/Linux/</b></tt></pre></blockquote></li><li><p>Print first field of lines that contain "Linux":</p>


<blockquote><pre class="code"><tt class="userinput"><b>/Linux/{ print $1 }</b></tt></pre></blockquote></li><li><p>Print records containing more than two fields:</p>


<blockquote><pre class="code"><tt class="userinput"><b>NF &gt; 2</b></tt></pre></blockquote></li><li><p>Interpret each group of lines up to a blank line as a single input record:</p>


<blockquote><pre class="code"><tt class="userinput"><b>BEGIN { FS = "\n"; RS = "" }</b></tt></pre></blockquote></li><li><p>Print fields 2 and 3 in switched order but only on lines whose first
field matches the string "URGENT":</p>


<blockquote><pre class="code"><tt class="userinput"><b>$1 ~ /URGENT/ { print $3, $2 }</b></tt></pre></blockquote></li><li><p>Count and print the number of instances of "ERR" found:</p>


<blockquote><pre class="code"><tt class="userinput"><b>/ERR/ { ++x }; END { print x }</b></tt></pre></blockquote></li><li><p>Add numbers in second column and print total:</p>


<blockquote><pre class="code"><tt class="userinput"><b>{total += $2 }; END { print "column total is", total}</b></tt></pre></blockquote></li>
<?troff .Nd 10?><li><p>Print lines that contain fewer than 20 characters:</p>


<blockquote><pre class="code"><tt class="userinput"><b>length() &lt; 20</b></tt></pre></blockquote></li><li><p>Print each line that begins with "Name:" and that contains exactly
seven fields:</p>


<blockquote><pre class="code"><tt class="userinput"><b>NF == 7 &amp;&amp; /^Name:/</b></tt></pre></blockquote></li><li><p>Reverse the order of fields:</p>


<blockquote><pre class="code"><tt class="userinput"><b>{ for (i = NF; i &gt;= 1; i--) print $i }</b></tt></pre></blockquote></li></ol><p><a name="INDEX-1900" /><a name="INDEX-1901" /></p>
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch13_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch13_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">13.2. Command-Line Syntax</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">13.4. gawk System Variables</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>