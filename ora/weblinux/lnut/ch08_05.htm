<?label 8.5. Expressions?><html><head><title>Expressions (Linux in a Nutshell, 3rd Edition)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Ellen Siever, Stephen Spainhour, Stephen Figgins and Jessica P. Hekman" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="0596000251L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Linux in a Nutshell, 3rd Edition" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Linux in a Nutshell" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch08_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">Linux in a Nutshell, 3rd Edition</a></td><td width="172" valign="top" align="right"><a href="ch08_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">8.5. Expressions</h2>


<p>Expressions are used in <b class="emphasis-bold">@</b>,
<b class="emphasis-bold">if</b>, and <b class="emphasis-bold">while</b>
statements to perform arithmetic, string comparisons, file testing, and so on.
<b class="emphasis-bold">exit</b> and <b class="emphasis-bold">set</b> 
also specify expressions, as can the <b class="emphasis-bold">tcsh</b> built-in
command <b class="emphasis-bold">filetest</b>.
Expressions are formed by combining variables and constants with
operators that resemble those in the C programming language.
Operator precedence is the same as in C but can be remembered as
follows:</p>


<ol><li><p><b class="emphasis-bold">* / %</b></p></li><li><p><b class="emphasis-bold">+ -</b></p></li></ol><p>Group all other expressions inside parentheses.
Parentheses are required if the expression contains &lt;, &gt;, &amp;, or |.</p>


<a name="ln.ch05.div.27" /><div class="sect2">
<h3 class="sect2">8.5.1. Operators</h3>


<p><a name="INDEX-1566" />Operators can be one of the following types:</p>


<?troff .Nd 10?><a name="ln.ch05.div.28" /><div class="sect3">
<h3 class="sect3">8.5.1.1. Assignment operators</h3>



<a name="ln.ch05.tbl.13" /><table cellpadding="4" border="1">

<tr>
<th>Operator</th>
<th>Description</th>
</tr>






<tr>
<td>

<tt class="userinput"><b>=</b></tt></td>
<td>Assign value.</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>+=  -=</b></tt></td>
<td>Reassign after addition/subtraction.</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>*=  /=  %=</b></tt></td>
<td>Reassign after multiplication/division/remainder.</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>&amp;= ^= |=</b></tt></td>
<td>Reassign after bitwise AND/XOR/OR.</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>++</b></tt></td>
<td>Increment.</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>--</b></tt></td>
<td>Decrement.</td>
</tr>



</table>
</div>




<a name="ln.ch05.div.29" /><div class="sect3">
<h3 class="sect3">8.5.1.2. Arithmetic operators</h3>



<a name="ln.ch05.tbl.14" /><table cellpadding="4" border="1">




<tr>
<th>Operator</th>
<th>Description</th>
</tr>






<tr>
<td>

<tt class="userinput"><b>*  /  %</b></tt></td>
<td>Multiplication; integer division; modulus (remainder)</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>+  -</b></tt></td>
<td>Addition; subtraction</td>
</tr>



</table>

</div>




<a name="ln.ch05.div.30" /><div class="sect3">
<h3 class="sect3">8.5.1.3. Bitwise and logical operators</h3>


<a name="ln.ch05.tbl.15" /><table cellpadding="4" border="1">

<tr>
<th>Operator</th>
<th>Description</th>
</tr>






<tr>
<td>

<tt class="userinput"><b>~</b></tt></td>
<td>Binary inversion (one's complement).</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>!</b></tt></td>
<td>Logical negation.</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>&lt;&lt;  &gt;&gt;</b></tt></td>
<td>Bitwise left shift; bitwise right shift.</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>&amp;</b></tt></td>
<td>Bitwise AND.</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>^</b></tt></td>
<td>Bitwise exclusive OR.</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>|</b></tt></td>
<td>Bitwise OR.</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>&amp;&amp;</b></tt></td>
<td>Logical AND.</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>||</b></tt></td>
<td>Logical OR.</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>{</b></tt> <em class="replaceable">command</em> <tt class="userinput"><b>}</b></tt></td>
<td><p>Return 1 if command is successful, 0 otherwise.
Note that this is the opposite of <em class="replaceable">command</em>'s normal
return code. The <b class="emphasis-bold">$status</b> variable may be more practical.</p></td>
</tr>



</table>

</div>




<a name="ln.ch05.div.31" /><div class="sect3">
<h3 class="sect3">8.5.1.4. Comparison operators</h3>



<a name="ln.ch05.tbl.16" /><table cellpadding="4" border="1">




<tr>
<th>Operator</th>
<th>Description</th>
</tr>






<tr>
<td>

<tt class="userinput"><b>==  !=</b></tt></td>
<td>Equality; inequality</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>&lt;=  &gt;=</b></tt></td>
<td>Less than or equal to; greater than or equal to</td>
</tr>


<tr>
<td>

<tt class="userinput"><b>&lt;  &gt;</b></tt></td>
<td>Less than; greater than</td>
</tr>



</table>

</div>




<?troff .Nd 10?><a name="ln.ch05.div.32" /><div class="sect3">
<h3 class="sect3">8.5.1.5. File inquiry operators</h3>


<p>Command substitution and filename expansion are performed on
<em class="replaceable">file</em> before the test is performed.
<b class="emphasis-bold">tcsh</b> permits operators to be combined (e.g., 
<b class="emphasis-bold">-ef</b>).  The following is a list
of the valid file inquiry operators:
</p>


<a name="ln.ch05.tbl.17" /><table cellpadding="4" border="1">




<tr>
<th>Operator</th>
<th>Description</th>
</tr>






<tr>
<td>

<tt class="literal">-d</tt> <em class="replaceable">file</em></td>
<td>The file is a directory.</td>
</tr>


<tr>
<td>

<tt class="literal">-e</tt> <em class="replaceable">file</em></td>
<td>The file exists.</td>
</tr>


<tr>
<td>

<tt class="literal">-f</tt> <em class="replaceable">file</em></td>
<td>The file is a plain file.</td>
</tr>


<tr>
<td>

<tt class="literal">-o</tt> <em class="replaceable">file</em></td>
<td>The user owns the file.</td>
</tr>


<tr>
<td>

<tt class="literal">-r</tt> <em class="replaceable">file</em></td>
<td>The user has read permission.</td>
</tr>


<tr>
<td>

<tt class="literal">-w</tt> <em class="replaceable">file</em></td>
<td>The user has write permission.</td>
</tr>


<tr>
<td>

<tt class="literal">-x</tt> <em class="replaceable">file</em></td>
<td>The user has execute permission.</td>
</tr>


<tr>
<td>

<tt class="literal">-z</tt> <em class="replaceable">file</em></td>
<td>The file has 0 size.</td>
</tr>


<tr>
<td>

<tt class="literal">!</tt></td>
<td><p>Reverse the sense of any preceding inquiry.</p></td>
</tr>



</table>

<p>Some additional operators specific to <b class="emphasis-bold">tcsh</b> are:</p>



<a name="ln.ch05.tbl.17a" /><table cellpadding="4" border="1">




<tr>
<th>Operator</th>
<th>Description</th>
</tr>






<tr>
<td>

<tt class="literal">-b</tt> <em class="replaceable">file</em></td>
<td><p>The file is a block special file.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-c</tt> <em class="replaceable">file</em></td>
<td><p>The file is a character special file.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-g</tt> <em class="replaceable">file</em></td>
<td><p>The file's set-group-ID bit is set.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-k</tt> <em class="replaceable">file</em></td>
<td><p>The file's sticky bit is set.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-l</tt> <em class="replaceable">file</em></td>
<td><p>The file is a symbolic link.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-L</tt> <em class="replaceable">file</em></td>
<td><p>Apply any remaining operators to symbolic link, not the file it points to.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-p</tt> <em class="replaceable">file</em></td>
<td><p>The file is a named pipe (FIFO).</p></td>
</tr>


<tr>
<td>

<tt class="literal">-s</tt> <em class="replaceable">file</em></td>
<td><p>The file has nonzero size.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-S</tt> <em class="replaceable">file</em></td>
<td><p>The file is a socket special file.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-t</tt> <em class="replaceable">file</em></td>
<td><p><em class="emphasis">file</em> is a digit and is an open file descriptor for
a terminal device.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-u</tt> <em class="replaceable">file</em></td>
<td><p>The file's set-user-ID bit is set.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-X</tt> <em class="replaceable">file</em></td>
<td><p>The file is executable and is in the path or is a shell
built-in.</p></td>
</tr>



</table>

<p>Finally, <b class="emphasis-bold">tcsh</b> provides the following operators, which
return other kinds of information:</p>



<a name="ln.ch05.tbl.17b" /><table cellpadding="4" border="1">




<tr>
<th>Operator</th>
<th>Description</th>
</tr>






<tr>
<td>

<tt class="literal">-A[:]</tt> <em class="replaceable">file</em></td>
<td><p>Last time file was accessed, as the number of seconds since the Epoch. With a colon (:), the result is in timestamp format.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-C[:]</tt> <em class="replaceable">file</em></td>
<td><p>Last time inode was modified. With a colon (:), the result is in timestamp
format.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-D</tt> <em class="replaceable">file</em></td>
<td><p>Device number.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-F</tt> <em class="replaceable">file</em></td>
<td><p>Composite file identifier, in the form
<em class="emphasis">device</em>:<em class="emphasis">inode</em>.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-G[:]</tt> <em class="replaceable">file</em></td>
<td><p>Numeric group ID for the file. With a colon (:), the result is the group name
if known; otherwise, the numeric group ID.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-I</tt> <em class="replaceable">file</em></td>
<td><p>Inode number.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-L</tt> <em class="replaceable">file</em></td>
<td><p>The name of the file pointed to by symbolic link <em class="emphasis">file</em>.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-M[:]</tt> <em class="replaceable">file</em></td>
<td><p>Last time file was modified. With a colon (:), the result is in timestamp
format.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-N</tt> <em class="replaceable">file</em></td>
<td><p>Number of hard links.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-P[:]</tt> <em class="replaceable">file</em></td>
<td><p>Permissions in octal, without leading 0. With a colon (:), the result
includes a leading 0.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-P</tt><em class="replaceable">mode</em><tt class="literal">[:]</tt> <em class="replaceable">file</em></td>
<td><p>Equivalent to <tt class="literal">-P</tt> <em class="emphasis">file</em> ANDed to
<em class="emphasis">mode</em>. With a colon (:), the result includes a leading
0.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-U[:]</tt> <em class="replaceable">file</em></td>
<td><p>Numeric user ID of the file's owner. With a colon (:), the result is the 
username if known, otherwise the numeric user ID.</p></td>
</tr>


<tr>
<td>

<tt class="literal">-Z</tt> <em class="replaceable">file</em></td>
<td><p>The file's size, in bytes.</p></td>
</tr>



</table>

</div>
</div>








<a name="ln.ch05.div.33" /><div class="sect2">
<h3 class="sect2">8.5.2. Examples</h3>


<p>The following examples show <b class="emphasis-bold">@</b> commands and assume <tt class="literal">n</tt> = 4:
</p>


<a name="ln.ch05.tbl.18" /><table cellpadding="4" border="1">




<tr>
<th><b class="emphasis-bold">Expression</b></th>
<th><b class="emphasis-bold">Value of $x

</b></th>
</tr>






<tr>
<td>

<tt class="literal">@ x = ($n &gt; 10 || $n &lt; 5)</tt></td>
<td>

1</td>
</tr>


<tr>
<td>

<tt class="literal">@ x = ($n &gt;= 0 &amp;&amp; $n &lt; 3)</tt></td>
<td>

0</td>
</tr>


<tr>
<td>

<tt class="literal">@ x = ($n &lt;&lt; 2)</tt></td>
<td>

16</td>
</tr>


<tr>
<td>

<tt class="literal">@ x = ($n &gt;&gt; 2)</tt></td>
<td>

1</td>
</tr>


<tr>
<td>

<tt class="literal">@ x = $n % 2</tt></td>
<td>

0</td>
</tr>


<tr>
<td>

<tt class="literal">@ x = $n % 3</tt></td>
<td>

1</td>
</tr>



</table>

<p>The following examples show the first line of <b class="emphasis-bold">if</b> or <b class="emphasis-bold">while</b>
statements:
</p>


<a name="ln.ch05.tbl.19" /><table cellpadding="4" border="1">




<tr>
<th><b class="emphasis-bold">Expression</b></th>
<th><b class="emphasis-bold">Meaning</b></th>
</tr>







<tr>
<td>

<tt class="literal">while ($#argv != 0)</tt></td>
<td>

While there are arguments . . .</td>
</tr>


<tr>
<td>

<tt class="literal">if ($today[1] == &lt;"&gt;Fri&lt;"&gt;)</tt></td>
<td>

If the first word is "Fri". . .</td>
</tr>


<tr>
<td>

<tt class="literal">if (-f $argv[1])</tt></td>
<td><p>

If the first argument is a plain file. . .</p></td>
</tr>


<tr>
<td>

<tt class="literal">if (! -d $tmpdir)</tt></td>
<td>

If <tt class="literal">tmpdir</tt> is not a directory. . .</td>
</tr>



</table>

<p><a name="INDEX-1567" /></p>
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch08_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch08_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">8.4. Variables</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">8.6. Command History</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>