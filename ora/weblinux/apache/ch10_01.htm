<?label 10. Server-Side Includes?><html><head><title>Server-Side Includes (Apache: The Definitive Guide)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Ben Laurie and Peter Laurie" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565925289L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Apache: The Definitive Guide" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Apache: The Definitive Guide" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch09_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">Apache: The Definitive Guide</a></td><td width="172" valign="top" align="right"><a href="ch10_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />



<h1 class="chapter">Chapter 10. Server-Side Includes</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch10_01.htm">File Size</a><br />
<a href="ch10_02.htm">File Modification Time</a><br />
<a href="ch10_03.htm">Includes</a><br />
<a href="ch10_04.htm">Execute CGI</a><br />
<a href="ch10_05.htm">Echo</a><br />
<a href="ch10_06.htm">XBitHack</a><br />
<a href="ch10_07.htm">XSSI</a><br /></p></div>









<p>
<a name="INDEX-932" /> <a name="INDEX-933" /> <a name="INDEX-934" /> <a name="INDEX-935" />The object of this set of facilities is to
allow statements that trigger further actions to be put into served
documents. The same results could be achieved by CGI
scripts -- either shell scripts or specially written C
programs -- but server-side includes often do what is wanted with
a lot less effort. The range of possible actions is immense, so we
will just give basic illustrations of each command in a number of
text files in <em class="filename">... /htdocs</em>.</p>





<p>The Config file for this site (<em class="filename">... /site.ssi</em>)
is as follows:</p>





<blockquote><pre class="code">User webuser
Group webgroup
ServerName www.butterthlies.com
DocumentRoot /usr/www/site.ssi/htdocs
ScriptAlias /cgi-bin /usr/www/cgi-bin
<tt class="userinput"><b>AddHandler server-parsed shtml</b></tt>
<tt class="userinput"><b>Options +Includes</b></tt></pre></blockquote>





<p>The key lines are indicated in bold print.</p>





<p><em class="filename">shtml</em>
<a name="INDEX-936" /> is the
normal extension for HTML scripts with server-side includes in them,
and is found as the extension to the relevant files in <em class="filename">...
/htdocs</em>. We could just as well use
<em class="filename">brian</em> or <em class="filename">#dog_run</em> as long
as it appears the same there, in the file with the relevant command,
and in the configuration file. Using <em class="emphasis">html </em>can be
useful -- for instance, you can easily implement site-wide headers
and footers -- but it does mean that every HTML page gets parsed
by the SSI engine. On busy systems, this could reduce performance.</p>





<p>Bear in mind that HTML generated by a CGI script does not get put
through the SSI processor, so it's no good including the markup
listed in this chapter in a CGI script.</p>





<p><tt class="literal">Options</tt>
<tt class="literal">Includes</tt>
<a name="INDEX-937" /> <a name="INDEX-938" />
turns on processing of SSIs. As usual, look in the
<em class="filename">error_log</em> if things don't work. The error
messages passed to the client are necessarily uninformative since
they are probably being read three continents away, where nothing
useful can be done about them.</p>





<p>The trick is to insert special strings into our documents, which then
get picked up by Apache on their way through, tested against
reference strings using =, !=, &lt;, &lt;=, &gt;, and &gt;=; and then
replaced by dynamically written messages. As we will see, the strings
have a deliberately unusual form so they won't get confused
with more routine stuff. The syntax of a command is:</p>





<blockquote><pre class="code">&lt;!--#<em class="replaceable">element</em> <em class="replaceable">attribute</em>=<em class="replaceable">value</em> <em class="replaceable">attribute</em>=<em class="replaceable">value</em> ... --&gt;</pre></blockquote>





<p>The Apache manual tells us what the
<em class="replaceable">element</em>s are:</p>





<dl>
<dt><b><tt class="literal">config</tt></b></dt>
<dd><p>This <a name="INDEX-939" />command
controls various aspects of the parsing. The valid attributes are as
follows:</p>




<dl>

<dt><b><tt class="literal">errmsg</tt></b></dt>
<dd><p>The value is a message that is sent back to the client if an error
occurs during document parsing.</p></dd>





<dt><b><tt class="literal">sizefmt</tt></b></dt>
<dd><p>The value sets the format to be used when displaying the size of a
file. Valid values are <tt class="literal">bytes</tt> for a count in bytes,
or <tt class="literal">abbrev</tt> for a count in kilobytes or megabytes as
appropriate.</p></dd>





<dt><b><tt class="literal">timefmt</tt></b></dt>
<dd><p>The value is a string to be used by the <tt class="literal">strftime(
)</tt> library routine when printing dates.</p></dd>

</dl></dd>





<dt><b><tt class="literal">echo</tt></b></dt>
<dd><p>This <a name="INDEX-940" />
<a name="INDEX-941" />
<a name="INDEX-942" />command
prints one of the <tt class="literal">include</tt> variables, defined later
in this chapter. If the variable is unset, it is printed as
<tt class="literal">(none)</tt>. Any dates printed are subject to the
currently configured <tt class="literal">timefmt</tt>. The only attribute
is:</p>





<dl>
<dt><b><tt class="literal">var</tt></b></dt>
<dd><p>The value is the name of the variable to print.</p></dd>

</dl></dd>





<dt><b><tt class="literal">exec</tt></b></dt>
<dd><p>
<a name="INDEX-943" /> <a name="INDEX-944" /> <a name="INDEX-945" />The <tt class="literal">exec</tt> command
executes a given shell command or CGI script.
<tt class="literal">Options</tt> <tt class="literal">IncludesNOEXEC</tt> disables
this command completely -- a boon to the prudent webmaster. The
valid attribute is:</p>





<dl>
<dt><b><tt class="literal">cgi</tt>
<a name="INDEX-946" /></b></dt>
<dd><p>The value specifies a %-encoded URL relative path to the CGI script.
If the path does not begin with a slash, it is taken to be relative
to the current document. The document referenced by this path is
invoked as a CGI script, even if the server would not normally
recognize it as such. However, the directory containing the script
must be enabled for CGI scripts (with <tt class="literal">ScriptAlias</tt>
or the <tt class="literal">ExecCGI</tt> option). The protective wrapper
<em class="emphasis">suEXEC</em> will be applied if it is turned on. The
CGI script is given the <tt class="literal">PATH_INFO</tt> and query string
(<tt class="literal">QUERY_STRING</tt>) of the original request from the
client; these cannot be specified in the URL path. The
<tt class="literal">include</tt> variables will be available to the script
in addition to the standard CGI environment. If the script returns a
<tt class="literal">Location</tt> header instead of output, this is
translated into an HTML anchor. If <tt class="literal">Options</tt>
<tt class="literal">IncludesNOEXEC</tt> is set in the Config file, this
command is turned off. The<tt class="literal"> include</tt>
<tt class="literal">virtual </tt>element should be used in preference to
<tt class="literal">exec</tt> <tt class="literal">cgi</tt>.</p></dd>

</dl></dd>





<dt><b><tt class="literal">cmd</tt></b></dt>
<dd><p>
<a name="INDEX-947" />The server executes the given string
using <em class="emphasis">/bin/sh</em>. The <tt class="literal">include</tt>
variables are available to the command. If <tt class="literal">Options</tt>
<tt class="literal">IncludesNOEXEC</tt> is set in the Config file, this is
turned off.</p></dd>





<dt><b><tt class="literal">fsize</tt></b></dt>
<dd><p>This <a name="INDEX-948" />
<a name="INDEX-949" />
<a name="INDEX-950" />command
prints the size of the specified file, subject to the
<tt class="literal">sizefmt </tt>format specification. The attributes are
as follows:</p>





<dl>
<dt><b><tt class="literal">file</tt></b></dt>
<dd><p>The value is a path relative to the directory containing the current
document being parsed.</p></dd>





<dt><b> <tt class="literal">virtual</tt></b></dt>
<dd><p>The value is a %-encoded URL path relative to the current document
being parsed. If it does not begin with a slash, it is taken to be
relative to the current document.</p></dd>

</dl></dd>





<dt><b><tt class="literal">flastmod</tt> </b></dt>
<dd><p>This <a name="INDEX-951" />
<a name="INDEX-952" />command prints the last modification date
of the specified file, subject to the <tt class="literal">timefmt</tt>
format specification. The attributes are the same as for the
<tt class="literal">fsize</tt> command.</p></dd>





<dt><b><tt class="literal">include</tt> </b></dt>
<dd><p>
<a name="INDEX-953" />Includes
other Config files immediately at that point in parsing -- right
there and then, not later on. Any included file is subject to the
usual access control. If the directory containing the parsed file has
<tt class="literal">Options</tt> <tt class="literal">IncludesNOEXEC</tt> set and
including the document causes a program to be executed, it
isn't included: this prevents the execution of CGI scripts.
Otherwise, CGI scripts are invoked as normal using the complete URL
given in the command, including any query string.</p>





<p>An attribute defines the location of the document; the inclusion is
done for each attribute given to the <tt class="literal">include</tt>
command. The valid attributes are as follows.</p></dd>





<dt><b><tt class="literal">file</tt></b></dt>
<dd><p>The value is a path relative to the directory containing the current
document being parsed. It can't contain <tt class="literal">../</tt>,
nor can it be an absolute path. The <tt class="literal">virtual
</tt> attribute should always be used in preference to this one.</p></dd>





<dt><b><tt class="literal">virtual</tt></b></dt>
<dd><p>The value is a %-encoded URL relative to the current document being
parsed. The URL cannot contain a scheme or hostname, only a path and
an optional query string. If it does not begin with a slash, then it
is taken to be relative to the current document. A URL is constructed
from the attribute's value, and the server returns the same
output it would have if the client had requested that URL. Thus,
included files can be nested. A CGI script can still be run by this
method even if <tt class="literal">Options</tt>
<tt class="literal">IncludesNOEXEC</tt> is set in the Config file. The
reasoning is that clients can run the CGI anyway by using its URL as
a hot link or simply typing it into their browser, so no harm is done
by using this method (unlike <tt class="literal">cmd</tt> or
<tt class="literal">exec</tt>).</p></dd>

</dl>



































<div class="sect1"><a name="ch10-15585" />
<h2 class="sect1">10.1. File Size</h2>





<p>The <tt class="literal">fsize</tt>
<a name="INDEX-954" />
<a name="INDEX-955" />
<a name="INDEX-956" />
command allows you to report the size of a file inside a document.
The file <em class="filename">size.shtml</em> is as follows:</p>





<blockquote><pre class="code">&lt;!--#config errmsg="Bungled again!"--&gt;
&lt;!--#config sizefmt="bytes"--&gt;
The size of this file is &lt;!--#fsize file="size.shtml"--&gt; bytes.
The size of another_file is &lt;!--#fsize file="another_file"--&gt; bytes.</pre></blockquote>





<p>The first line provides an error message. The second line means that
the size of any files is reported in bytes printed as a number, for
instance, 89. Changing <tt class="literal">bytes</tt> to
<tt class="literal">abbrev</tt> gets the size in kilobytes, printed as
<tt class="literal">1k</tt>. The third line prints the size of
<em class="filename">size.shtml</em> itself; the fourth line prints the
size of <em class="filename">another_file</em>. You can't comment
out lines with the "<tt class="literal">#</tt> " character
since it just prints, and the following command is parsed straight
away. <tt class="literal">config</tt> commands must come above commands
that might want to use them.</p>





<p>You can replace the word <tt class="literal">file=</tt> in this script, and
in those which follow, with <tt class="literal">virtual=</tt>, which gives
a %-encoded URL path relative to the current document being parsed.
If it does not begin with a slash, it is taken to be relative to the
current document.</p>





<p>If you play with this stuff, you find that Apache is picky about the
syntax. For instance, trailing spaces cause an error:</p>





<blockquote><pre class="code">The size of this file is &lt;!--#fsize file="size.shtml   "--&gt; bytes.
The size of this file is Bungled again! bytes</pre></blockquote>





<p>If we had not used the <tt class="literal">errmsg</tt> command, we would
see the following:</p>





<blockquote><pre class="code">...[an error occurred while processing this directive]...</pre></blockquote>
</div>














































































































































































































<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch09_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch10_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">9.3. Setup</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">10.2. File Modification Time</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>