<?label 13.7. Apache-SSL's Directives?><html><head><title>Apache-SSL's Directives (Apache: The Definitive Guide)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Ben Laurie and Peter Laurie" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565925289L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Apache: The Definitive Guide" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Apache: The Definitive Guide" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch13_06.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">Apache: The Definitive Guide</a></td><td width="172" valign="top" align="right"><a href="ch13_08.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">13.7. Apache-SSL's Directives</h2>





<p>
<a name="INDEX-1177" /> <a name="INDEX-1178" /> <a name="INDEX-1179" />Apache-SSL's
directives follow, with a small section at the end of the chapter
concerning CGIs.</p>






<a name="ch13-13-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.1. SSLDisable</h3>





<blockquote><pre class="code"><a name="INDEX-1180" />SSLDisable
Server config, virtual host</pre></blockquote>





<p>Disable SSL. This directive is useful if you wish to run both secure
and nonsecure hosts on the same server. Conversely, SSL can be
enabled with <tt class="literal">SSLEnable</tt>.</p>
</div>
















<a name="ch13-14-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.2. SSLEnable</h3>





<blockquote><pre class="code"><a name="INDEX-1181" />SSLEnable
Server config, virtual host</pre></blockquote>





<p>Enable SSL. The default; but if you've used
<tt class="literal">SSLDisable</tt> in the main server, you can enable SSL
again for virtual hosts using this directive.</p>
</div>
















<a name="ch13-15-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.3. SSLRequireSSL</h3>





<blockquote><pre class="code"><a name="INDEX-1182" />SSLRequireSSL
Server config, .htaccess, virtual host, directory</pre></blockquote>





<p>Require SSL. This can be used in <tt class="literal">&lt;Directory&gt;</tt>
sections (and elsewhere) to protect against inadvertently disabling
SSL. If SSL is not in use when this directive applies, access will be
refused. This is a useful belt-and-suspenders measure for critical
information.</p>
</div>
















<a name="ch13-16-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.4. SSLCacheServerPath</h3>





<blockquote><pre class="code"><a name="INDEX-1183" />SSLCacheServerPath <em class="replaceable">filename</em>
Server config</pre></blockquote>





<p>This directive specifies the path to the global cache server,
<em class="filename">gcache</em>. It can be absolute or relative to the
server root.</p>
</div>
















<a name="ch13-17-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.5. SSLCacheServerRunDir</h3>





<blockquote><pre class="code"><a name="INDEX-1184" />SSLCacheServerRunDir <em class="replaceable">directory</em>
Server config</pre></blockquote>





<p>Sets the directory in which <em class="filename">gcache</em> runs, so that
it can produce core dumps during debugging.</p>
</div>
















<a name="ch13-18-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.6. SSLCacheServerPort</h3>





<blockquote><pre class="code"><a name="INDEX-1185" />SSLCacheServerPort <em class="replaceable">file</em>|<em class="replaceable">port</em>
Server config</pre></blockquote>





<p>The cache server can use either TCP/IP or Unix domain sockets. If the
<em class="replaceable">file</em> or <em class="replaceable">port</em>
argument is a number, then a TCP/IP port at that number is used;
otherwise, it is assumed to be the path to use for a Unix domain
socket.</p>
</div>
















<a name="ch13-19-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.7. SSLSessionCacheTimeout</h3>





<blockquote><pre class="code"><a name="INDEX-1186" />
<a name="INDEX-1187" />SSLSessionCacheTimeout <em class="replaceable">time_in_seconds</em>
Server config, virtual host</pre></blockquote>





<p>A session key is generated when a client connects to the server for
the first time. This directive sets the length of time in seconds
that the session key will be cached locally. Lower values are safer
(an attacker then has a limited time to crack the key before a new
one will be used) but also slower, because the key will be
regenerated at each timeout. If client certificates are being
requested by the server, they will also be required to be
re-presented at each timeout. For many purposes, timeouts measured in
hours are perfectly safe, for example:</p>





<blockquote><pre class="code">SSLSessionCacheTimeout 3600</pre></blockquote>
</div>
















<a name="ch13-20-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.8. SSLCACertificatePath</h3>





<blockquote><pre class="code"><a name="INDEX-1188" />SSLCACertificatePath <em class="replaceable">directory</em>
Server config, virtual host</pre></blockquote>





<p>This directive specifies the path to the directory where you keep the
certificates of the certification authorities whose client
certificates you are prepared to accept. They must be PEM encoded.</p>
</div>
















<a name="ch13-21-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.9. SSLCACertificateFile</h3>





<blockquote><pre class="code"><a name="INDEX-1189" />SSLCACertificateFile <em class="replaceable">filename</em>
Server config, virtual host</pre></blockquote>





<p>If you only accept client certificates from a single CA, then you can
use this directive instead of <tt class="literal">SSLCACertificatePath</tt>
to specify a single PEM-encoded (according to SSLeay) certificate
file.</p>
</div>
















<a name="ch13-22-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.10. SSLCertificateFile</h3>





<blockquote><pre class="code"><a name="INDEX-1190" />SSLCertificateFile <em class="replaceable">filename</em>
Config outside &lt;Directory&gt; or &lt;Location&gt; blocks</pre></blockquote>





<p>This is your PEM-encoded certificate. It is encoded with
distinguished encoding rules (DER), and is ASCII-armored so it will
go over the Web. If the certificate is encrypted, you are prompted
for a passphrase.</p>
</div>
















<a name="ch13-23-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.11. SSLCertificateKeyFile</h3>





<blockquote><pre class="code"><a name="INDEX-1191" />SSLCertificateKeyFile <em class="replaceable">filename</em>
Config outside &lt;Directory&gt; or &lt;Location&gt; blocks</pre></blockquote>





<p>This is the private key of your PEM-encoded certificate. If the key
is not combined with the certificate, use this directive to point at
the key file. If the filename starts with "/", it
specifies an absolute path; otherwise, it is relative to the default
certificate area, which is currently defined by SSLeay to be either
/<em class="filename">usr/local/ssl/private</em> or <em class="filename">&lt;wherever
you told ssl to install&gt;/private. </em>Examples:</p>





<blockquote><pre class="code">SSLCertificateKeyFile /usr/local/apache/certs/my.server.key.pem
SSLCertificateKeyFile certs/my.server.key.pem</pre></blockquote>
</div>
















<a name="ch13-24-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.12. SSLVerifyClient</h3>





<blockquote><pre class="code"><a name="INDEX-1192" />SSLVerifyClient <em class="replaceable">level</em>
Default: 0
Server config, virtual host</pre></blockquote>





<p>This directive defines what you require of clients:</p>





<dl>
<dt><b><tt class="literal">0</tt></b></dt>
<dd><p>No certificate required.</p></dd>





<dt><b><tt class="literal">1</tt></b></dt>
<dd><p>The client <em class="emphasis">may</em> present a valid certificate.</p></dd>





<dt><b><tt class="literal">2</tt></b></dt>
<dd><p>The client <em class="emphasis">must</em> present a valid certificate.</p></dd>





<dt><b><tt class="literal">3</tt></b></dt>
<dd><p>The client may present a valid certificate, but not necessarily from
a certification authority for which the server holds a certificate.</p></dd>

</dl>
</div>
















<a name="ch13-25-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.13. SSLVerifyDepth</h3>





<blockquote><pre class="code"><a name="INDEX-1193" />SSLVerifyDepth <em class="replaceable">depth</em>
Server config, virtual host</pre></blockquote>





<p>In real life, the certificate we are dealing with was issued by a CA,
who in turn relied on another CA for validation, and so on, back to a
root certificate. This directive specifies how far up or down the
chain we are prepared to go before giving up. What happens when we
give up is determined by the setting given to
<tt class="literal">SSLVerifyClient</tt>. Normally, you only trust
certificates signed directly by a CA you've authorized, so this
should be set to 1.</p>
</div>
















<a name="ch13-26-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.14. SSLFakeBasicAuth</h3>





<blockquote><pre class="code"><a name="INDEX-1194" />SSLFakeBasicAuth
Server config, virtual host</pre></blockquote>





<p>This directive makes Apache pretend that the user has been logged in
using basic authentication (see <a href="ch05_01.htm">Chapter 5, "Authentication"</a>), except
that instead of the username you get the one-line X509, a version of
the client's certificate. If you switch this on, along with
<tt class="literal">SSLVerifyClient</tt>, you should see the results in one
of the logs. The code adds a predefined password.</p>
</div>
















<a name="ch13-27-fm2xml" /><div class="sect2">
<h3 class="sect2">13.7.15. CustomLog</h3>





<blockquote><pre class="code"><a name="INDEX-1195" />
<a name="INDEX-1196" />CustomLog <em class="replaceable">nickname</em>
Server config, virtual host</pre></blockquote>





<p><tt class="literal">CustomLog</tt> is a standard Apache directive (see
<a href="ch11_01.htm">Chapter 11, "What's Going On?"</a> ) to which Apache-SSL adds some extra
categories that can be logged:</p>





<dl>
<dt><b><tt class="literal">{</tt><em class="replaceable">cipher</em><tt class="literal">}c</tt></b></dt>
<dd><p>The name of the cipher being used for this connection.</p></dd>





<dt><b><tt class="literal">{</tt><em class="replaceable">clientcert</em><tt class="literal">}c</tt></b></dt>
<dd><p>The one-line version of the certificate presented by the client.</p></dd>





<dt><b><tt class="literal">{</tt><em class="replaceable">errcode</em><tt class="literal">}c</tt></b></dt>
<dd><p>If the client certificate verification failed, this is the SSLeay
error code. In the case of success, a "-" will be logged.</p></dd>





<dt><b><tt class="literal">{</tt><em class="replaceable">errstr</em><tt class="literal">}c</tt></b></dt>
<dd><p>This is the SSLeay string corresponding to the error code.</p></dd>





<dt><b><tt class="literal">{</tt><em class="replaceable">version</em><tt class="literal">}c</tt></b></dt>
<dd><p>The version of SSL being used. If you are using SSLeay versions prior
to 0.9.0, then this is simply a number: 2 for SSL2 or 3 for SSL3. For
SSLeay version 0.9.0 and later, it is a string, currently one of
"SSL2," "SSL3," or "TLS1."</p></dd>

</dl>
</div>
















<a name="ch13-28-fm2xml" /><div class="sect2">
<a name="INDEX-1197" /><h3 class="sect2">13.7.16. 
SSLLogFile</h3>





<p>Obsolete -- do not use.<a name="INDEX-1198" /> <a name="INDEX-1199" /> <a name="INDEX-1200" /> <a name="INDEX-1201" /> <a name="INDEX-1202" /></p>
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch13_06.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch13_08.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">13.6. Secure Sockets Layer: How to Do It</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">13.8. Cipher Suites</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>