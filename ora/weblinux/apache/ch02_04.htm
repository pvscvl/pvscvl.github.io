<?label 2.4. Setting Up a Unix Server ?><html><head><title>Setting Up a Unix Server  (Apache: The Definitive Guide)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Ben Laurie and Peter Laurie" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565925289L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Apache: The Definitive Guide" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Apache: The Definitive Guide" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch02_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">Apache: The Definitive Guide</a></td><td width="172" valign="top" align="right"><a href="ch02_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">2.4. Setting Up a Unix Server </h2>








<p>
<a name="INDEX-143" /> <a name="INDEX-144" /> <a name="INDEX-145" />We can point <em class="emphasis">httpd
</em>at our site with the <tt class="literal">-d</tt> flag (notice
the full pathname to the <em class="filename">site.toddle </em>directory):</p>








<blockquote><pre class="code">% <b class="emphasis-bold">httpd -d /usr/www/site.toddle</b></pre></blockquote>








<p>Since you will be typing this a lot, it's sensible to copy it
into a script called <em class="emphasis">go</em>
<a name="INDEX-146" /> in
<em class="emphasis">/usr/local/bin</em> by typing:</p>








<blockquote><pre class="code">% <b class="emphasis-bold">cat &gt; /usr/local/bin/go</b>
<b class="emphasis-bold">httpd -d `pwd`</b>
<b class="emphasis-bold">^d</b></pre></blockquote>








<p><tt class="literal">^d</tt> is shorthand for CTRL-D, which ends the input
and gets your prompt back. This <em class="emphasis">go</em> will work on
every site.</p>








<p>Make <em class="filename">go</em> runnable and run it by typing the
following (note that you have to be in the directory
<em class="filename">.../site.toddle</em> when you run
<em class="filename">go</em>):</p>








<blockquote><pre class="code">% <b class="emphasis-bold">chmod +x /usr/local/bin/go</b>
% <b class="emphasis-bold">go</b></pre></blockquote>








<p>This launches Apache in the background. Check that it's running
by typing something like this (arguments to
<tt class="literal">ps</tt>  vary from Unix
to Unix):</p>








<blockquote><pre class="code">% <b class="emphasis-bold">ps -aux</b></pre></blockquote>








<p>
<a name="INDEX-147" />This Unix utility
lists all the processes running, among which you should find several
<em class="emphasis">httpd</em>s.<a href="#FOOTNOTE-18">[18]</a></p><blockquote>







<a name="FOOTNOTE-18" /><p>[18]On System V-based Unix
systems (as opposed to Berkeley-based), the command
<tt class="literal">ps</tt> <tt class="literal">-ef</tt> should have a similar
effect.</p>







</blockquote>








<p>
<a name="INDEX-148" />
<a name="INDEX-149" />Sooner or later, you
have finished testing and want to stop Apache. In order to do this,
you have to get the process identity (PID) using
<tt class="literal">ps</tt> <tt class="literal">-aux</tt> and execute the Unix
utility <a name="INDEX-150" />
<a name="INDEX-151" /><em class="emphasis">kill</em>:</p>








<blockquote><pre class="code">%<b class="emphasis-bold"> kill</b> <em class="replaceable">PID</em></pre></blockquote>








<p>Alternatively, since Apache writes its PID in the file <em class="filename">...
/logs/httpd.pid</em> (by default -- see the
<tt class="literal">PidFile</tt> directive), you can write yourself a
little script, as follows:</p>








<blockquote><pre class="code">kill `cat /usr/www/site.toddle/logs/httpd.pid`</pre></blockquote>








<p>You may prefer to put more generalized versions of these scripts
somewhere on your path. For example, the following scripts will start
and stop a server based in your current directory.
<em class="emphasis">go</em> looks like this:</p>








<blockquote><pre class="code">httpd -d `pwd`</pre></blockquote>








<p>and <em class="emphasis">stop</em>
<a name="INDEX-152" /> looks like this:</p>








<blockquote><pre class="code">pwd | read path
kill `cat $path/logs/httpd.pid`</pre></blockquote>








<p>Or, if you don't plan to mess with many different
configurations, use
<tt class="literal">.../src/support/apachect1</tt>
<a name="INDEX-153" /> to start and stop Apache in the default
directory. You might want to copy it into
<em class="emphasis">/usr/local/bin</em> to get it onto the path. It uses
the following flags:</p>








<blockquote><pre class="code">usage: ./apachectl
(start|stop|restart|fullstatus|status|graceful|configtest|help)</pre></blockquote>








<dl>
<dt><b><tt class="literal">start </tt>
<a name="INDEX-154" /></b></dt>
<dd><p>Start httpd.</p></dd>








<dt><b><tt class="literal">stop</tt>
<a name="INDEX-155" /></b></dt>
<dd><p>Stop httpd.</p></dd>








<dt><b><tt class="literal">restart</tt>
<a name="INDEX-156" /></b></dt>
<dd><p>Restart httpd if running by sending a SIGHUP or start if not running.</p></dd>








<dt><b><tt class="literal">fullstatus</tt>
<a name="INDEX-157" /></b></dt>
<dd><p>Dump a full status screen; requires lynx and
<em class="emphasis">mod_status</em> enabled.</p></dd>








<dt><b><tt class="literal">status</tt>
<a name="INDEX-158" /></b></dt>
<dd><p>Dump a short status screen; requires lynx and
<em class="emphasis">mod_status</em> enabled.</p></dd>








<dt><b><tt class="literal">graceful</tt>
<a name="INDEX-159" /></b></dt>
<dd><p>Do a graceful restart by sending a SIGUSR1 or start if not running.</p></dd>








<dt><b><tt class="literal">configtest</tt>
<a name="INDEX-160" /></b></dt>
<dd><p>Do a configuration syntax test.</p></dd>








<dt><b><tt class="literal">help</tt>
<a name="INDEX-161" /></b></dt>
<dd><p>This screen.</p></dd>

</dl>








<p>When we typed <tt class="literal">./go</tt>, nothing appeared to happen,
but when we looked in the <em class="filename">logs</em> subdirectory, we
found a file called <em class="filename">error_log</em> with the
entry:<a name="INDEX-162" /></p>








<blockquote><pre class="code">[&lt;date&gt;]:'mod_unique_id: <a name="INDEX-163" />unable to get hostbyname ("myname.my.domain")</pre></blockquote>








<p>This problem was, in our case, due to the odd way we were running
Apache and will only affect you if you are running on a host with no
DNS or on an operating system that has difficulty determining the
local hostname. The solution was to edit the file
<em class="emphasis">/etc/hosts</em> and add the line:</p>








<blockquote><pre class="code">10.0.0.2 myname.my.domain myname</pre></blockquote>








<p>where 10.0.0.2 is the IP number we were using for testing.</p>








<p>However, our troubles were not yet over. When we reran
<em class="emphasis">httpd</em>
we
received the following error message:</p>








<blockquote><pre class="code">[&lt;date&gt;] - <a name="INDEX-164" />couldn't determine user name from uid</pre></blockquote>








<p>
<a name="INDEX-165" />
<a name="INDEX-166" />This means more
than might at first appear. We had logged in as
<em class="emphasis">root</em>. Because of the security worries of letting
outsiders log in with superuser powers, Apache, having been started
with root permissions so that it can bind to port 80, has attempted
to change its user ID to <tt class="literal">-1</tt>. On many Unix systems,
this ID corresponds to the user <em class="emphasis">nobody </em>: a
harmless person. However, it seems that FreeBSD does not understand
this notion, hence the error message.<a href="#FOOTNOTE-19">[19]</a></p><blockquote>







<a name="FOOTNOTE-19" /><p>[19]In fact, this
problem was fixed for FreeBSD shortly before this book went to press,
but you may still encounter it on other operating systems.</p>







</blockquote>








<a name="ch02-13080" /><div class="sect2">
<h3 class="sect2">2.4.1. Webuser and Webgroup</h3>








<p>
<a name="INDEX-167" />
<a name="INDEX-168" />
<a name="INDEX-169" />
<a name="INDEX-170" />
<a name="INDEX-171" />The remedy
is to create a new person, called <em class="emphasis">webuser</em>,
belonging to <em class="emphasis">webgroup. </em>The names are
unimportant. The main thing is that this user should be in a group of
its own and should not actually be used by anyone for anything else.
On a FreeBSD system, you can run <em class="emphasis">adduser</em> to make
this new person:</p>








<blockquote><pre class="code">Enter username [a-z0-9]: <tt class="userinput"><b>webuser</b></tt>
Enter full name[]:<tt class="userinput"><b> webuser</b></tt>
Enter shell bash csh date no sh tcsh [csh]:<tt class="userinput"><b> no</b></tt>
Uid [<em class="replaceable">some number</em>]:
Login group webuser [webuser]: <tt class="userinput"><b>webgroup</b></tt>
Login group is ''webgroup'.q. Invite webuser into other
    groups: guest no [no]:
Enter password []: <tt class="userinput"><b>password</b></tt>
</pre></blockquote>








<p>You then get the report:</p>








<blockquote><pre class="code">Name:webuser
Password: <em class="replaceable">password</em>
Fullname: webuser
Uid: <em class="replaceable">some number</em>
Groups:webgroup
HOME:/home/webuser
shell/nonexistent
OK? (y/n) [y]:

send message to ''webuser' and: no route second_mail_address [no]:
Add anything to default message (y/n) [n]:
Send message (y/n) [y]: <tt class="userinput"><b>n</b></tt>
Add another user? (y/n) [y]:<tt class="userinput"><b>n</b></tt></pre></blockquote>








<p>The bits of the script after <tt class="literal">OK</tt> are really
irrelevant, but of course FreeBSD does not know that you are making a
nonexistent user. Having told the operating system about this user,
you now have to tell Apache. Edit the file
<em class="filename">httpd.conf</em>
<a name="INDEX-172" />
<a name="INDEX-173" /> to
include the following lines:</p>








<blockquote><pre class="code">User webuser
Group webgroup</pre></blockquote>








<p>The following are the interesting directives.</p>








<a name="ch02-2-fm2xml" /><div class="sect3">
<h3 class="sect3">2.4.1.1. User</h3>








<blockquote><pre class="code">User <em class="replaceable">unix-userid</em>
Default: User #-1
Server config, virtual host</pre></blockquote>








<p>The <tt class="literal">User</tt>
<a name="INDEX-174" /> directive sets the user ID under
which the server will answer requests. In order to use this
directive, the standalone server must be run initially as
<em class="emphasis">root</em>. <em class="replaceable">unix-userid</em> is
one of the following:</p>








<dl>
<dt><b><em class="replaceable">username</em></b></dt>
<dd><p>Refers to the given user by name</p></dd>








<dt><b><em class="replaceable">#usernumber</em></b></dt>
<dd><p>Refers to a user by his or her number</p></dd>

</dl>








<p>The user should have no privileges that allow him or her to access
files not intended to be visible to the outside world; similarly, the
user should not be able to execute code that is not meant for
<em class="emphasis">httpd</em> requests. It is recommended that you set
up a new user and group specifically for running the server. Some
administrators use user <em class="emphasis">nobody</em>, but this is not
always possible or desirable. For example, <em class="emphasis">mod_proxy
</em>'s cache, when enabled, must be accessible to this
user (see the <tt class="literal">CacheRoot </tt>directive in <a href="ch09_01.htm">Chapter 9, "Proxy Server"</a>).</p>








<a name="ch02-3-fm2xml" /><div class="sect4">
<h4 class="sect4">2.4.1.1.1. Notes</h4>








<p>If you start the server as a non-<em class="emphasis">root</em> user, it
will fail to change to the lesser-privileged user, and will instead
continue to run as that original user. If you start the server as
<em class="emphasis">root</em>, then it is normal for the parent process
to remain running as <em class="emphasis">root</em>.</p>
</div>








<a name="ch02-4-fm2xml" /><div class="sect4">
<h4 class="sect4">2.4.1.1.2. Security</h4>








<p>Don't set <tt class="literal">User</tt> (or <tt class="literal">Group</tt>)
to <em class="emphasis">root</em> unless you know exactly what you are
doing and what the dangers are.</p>
</div>
</div>















<a name="ch02-5-fm2xml" /><div class="sect3">
<a name="INDEX-175" /><h3 class="sect3">2.4.1.2. 
Group</h3>








<blockquote><pre class="code">Group <em class="replaceable">unix-group</em>
Default: Group #-1
Server config, virtual host</pre></blockquote>








<p>The <tt class="literal">Group</tt> directive sets the group under which the
server will answer requests. In order to use this directive, the
standalone server must be run initially as <em class="emphasis">root</em>.
<em class="replaceable">unix-group</em> is one of the following:</p>








<dl>
<dt><b><em class="replaceable">groupname</em></b></dt>
<dd><p>Refers to the given group by name</p></dd>








<dt><b><em class="replaceable">#groupnumber</em></b></dt>
<dd><p>Refers to a group by its number</p></dd>

</dl>








<p>It is recommended that you set up a new group specifically for
running the server. Some administrators use group
<em class="emphasis">nobody</em>, but this is not always possible or
desirable.</p>








<a name="ch02-6-fm2xml" /><div class="sect4">
<h4 class="sect4">2.4.1.2.1. Note</h4>








<p>If you start the server as a non-<em class="emphasis">root</em> user, it
will fail to change to the specified group, and will instead continue
to run as the group of the original user.</p>








<p>Now, when you run <em class="emphasis">httpd</em> and look for the PID,
you will find that one copy belongs to <em class="emphasis">root,</em> and
several others belong to <em class="emphasis">webuser.</em> Kill the
<em class="emphasis">root</em> copy and the others will vanish.</p>
</div>
</div>
</div>




























<a name="ch02-7-fm2xml" /><div class="sect2">
<h3 class="sect2">2.4.2. Running Apache Under Unix</h3>








<p>
<a name="INDEX-176" />
<a name="INDEX-177" />When you run Apache now, you may get
the following error message:</p>








<blockquote><pre class="code">httpd: cannot determine local hostname
Use ServerName to set it manually.</pre></blockquote>








<p>What Apache means is that you should put this line in the
<em class="filename">httpd.conf</em> file:</p>








<blockquote><pre class="code"><a name="INDEX-178" />ServerName <em class="replaceable">yourmachinename</em></pre></blockquote>








<p>Finally, before you can expect any action, you need to set up some
documents to serve. Apache's default document directory is
<em class="filename">... /httpd/htdocs </em> -- which you don't
want to use because you are at <em class="filename">/usr/www/site.toddle
</em> -- so you have to set it explicitly. Create
<em class="filename">... /site.toddle/htdocs</em>, and then in it create a
file called <em class="filename">1.txt</em> containing the immortal words
"hullo world." Then add this line to <em class="filename">httpd.conf
</em>:</p>








<blockquote><pre class="code">DocumentRoot /usr/www/site.toddle/htdocs</pre></blockquote>








<p>The complete Config file,<em class="emphasis">
.../site.toddle/conf/httpd.conf,</em> now looks like this:</p>








<blockquote><pre class="code">User webuser
Group webgroup
ServerName <em class="replaceable">yourmachinename</em>
DocumentRoot /usr/www/site.toddle/htdocs</pre></blockquote>








<p>When you fire up <em class="emphasis">httpd</em>, you should have a
working web server. To prove it, start up a browser to access your
new server, and point it at
<em class="emphasis">http://yourmachinename/</em>.

<a href="#FOOTNOTE-21">[21]</a></p><blockquote>







<a name="FOOTNOTE-21" /><p>[21]Note that if you
are on the same machine, you can use
<em class="emphasis">http://127.0.0.1/</em> or
<em class="emphasis">http://localhost/</em>, but this can be confusing
because virtual host resolution may cause the server to behave
differently than if you had used the interface's
"real" name.</p>







</blockquote>








s<a name="INDEX-179" />
<a name="INDEX-180" />
<a name="INDEX-181" />As we
know, <em class="emphasis">http</em> means use the HTTP protocol to get
documents, and "/ " on the end means go to the
<tt class="literal">DocumentRoot</tt> directory you set in
<em class="emphasis">httpd.conf</em>.</p>








<a name="ch02-8-fm2xml" /><div class="sect3">
<h3 class="sect3">2.4.2.1. DocumentRoot </h3>








<blockquote><pre class="code"><a name="INDEX-182" />DocumentRoot <em class="replaceable">directory-filename</em>
Default: /usr/local/apache/htdocs
Server config, virtual host</pre></blockquote>








<p>This directive sets the directory from which Apache will serve files.
Unless matched by a directive like <tt class="literal">Alias</tt>, the
server appends the path from the requested URL to the document root
to make the path to the document. For example:</p>








<blockquote><pre class="code">DocumentRoot /usr/web</pre></blockquote>








<p>An access to <em class="emphasis">http://www.my.host.com/index.html</em>
now refers to <em class="emphasis">/usr/web/index.html</em>.</p>








<p>There appears to be a bug in <em class="emphasis">mod_dir</em> that causes
problems when the directory specified in <tt class="literal">DocumentRoot
</tt>has a trailing slash (e.g., <tt class="literal">DocumentRoot</tt>
<tt class="literal">/usr/web/</tt>), so please avoid that. It is worth
bearing in mind that the deeper <tt class="literal">DocumentRoot</tt> goes,
the longer it takes Apache to check out the directories. For the sake
of performance, adopt the British Army's universal motto: KISS
(Keep It Simple, Stupid)!</p>








<p>Lynx is the text browser that comes with FreeBSD and other flavors of
Unix; if it is available, type:</p>








<blockquote><pre class="code">% <b class="emphasis-bold">lynx http://</b><em class="replaceable">yourmachinename</em><b class="emphasis-bold">/</b></pre></blockquote>








<p>You see:</p>








<blockquote><pre class="code">INDEX OF /
* Parent Directory
* 1.txt</pre></blockquote>








<p>If you move to <tt class="literal">1.txt</tt> with the down arrow, you see:</p>








<blockquote><pre class="code">hullo world</pre></blockquote>








<p>If you don't have Lynx (or Netscape, or some other web browser)
on your server, you can use <em class="emphasis">telnet</em> :<a href="#FOOTNOTE-22">[22]</a></p><blockquote>







<a name="FOOTNOTE-22" /><p>[22]<em class="emphasis">telnet</em> is not really suitable as a web
browser, though it can be a very useful debugging tool.</p>







</blockquote>








<blockquote><pre class="code">% <b class="emphasis-bold">telnet</b> <em class="replaceable">yourmachinename</em><b class="emphasis-bold">80</b></pre></blockquote>








<p>Then type:</p>








<blockquote><pre class="code"><b class="emphasis-bold">GET / HTTP/1.0 &lt;CR&gt;&lt;CR&gt;</b></pre></blockquote>








<p>You should see:</p>








<blockquote><pre class="code">HTTP/1.0 200 OK
Sat, 24 Aug 1996 23:49:02 GMT
Server: Apache/1.3
Connection: close
Content-Type: text/html

&lt;HEAD&gt;&lt;TITLE&gt;Index of /&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;
&lt;H1&gt;Index of &lt;/H1&gt;
&lt;UL&gt;&lt;LI&gt; &lt;A HREF="/"&gt; Parent Directory&lt;/A&gt;
&lt;LI&gt; &lt;A HREF="1.txt"&gt; 1.txt&lt;/A&gt;
&lt;/UL&gt;&lt;/BODY&gt;
Connection closed by foreign host.</pre></blockquote>








<p>The stuff between the "&lt; " and "&gt;" is
HTML, written by Apache, which, if viewed through a browser, produces
the formatted message shown by Lynx earlier, and by Netscape in the
next chapter.</p>
</div>
</div>




























<a name="ch02-9-fm2xml" /><div class="sect2">
<h3 class="sect2">2.4.3. Several Copies of Apache</h3>








<p>To get a display of all the processes running, run:</p>








<blockquote><pre class="code">% <b class="emphasis-bold">ps -aux</b></pre></blockquote>








<p>Among a lot of Unix stuff, you will see one copy of
<em class="emphasis">httpd</em> belonging to <em class="emphasis">root</em>,
and a number that belong to <em class="emphasis">webuser</em>. They are
similar copies, waiting to deal with incoming queries.</p>








<p>The <em class="emphasis">root</em> copy is still attached to port 80 -- thus
its children will be also -- but it is not listening. This is
because it is <em class="emphasis">root</em> and has too many powers. It is
necessary for this "master" copy to remain running as
<em class="emphasis">root</em> because only <em class="emphasis">root</em> can open ports below 1024. Its job is to monitor the scoreboard where the other copies
post their status: busy or waiting. If there are too few waiting
(default 5, set by the <tt class="literal">MinSpareServers</tt> directive
in <em class="emphasis">httpd.conf</em> ), the <em class="emphasis">root</em>
copy starts new ones; if there are too many waiting (default 10, set
by the <tt class="literal">MaxSpareServers</tt> directive), it kills some
off. If you note the PID (shown by <tt class="literal">ps</tt>
<tt class="literal">-ax</tt>, or <tt class="literal">ps</tt>
<tt class="literal">-aux</tt> for a fuller listing; also to be found in
<em class="filename">... /logs/httpd.pid</em>) of the <em class="emphasis">root</em> copy and <tt class="literal">kill</tt> it
with:<a name="INDEX-183" />
<a name="INDEX-184" /></p>








<blockquote><pre class="code">% <b class="emphasis-bold">kill</b> <em class="replaceable">PID</em></pre></blockquote>








<p>or use the <em class="emphasis">stop</em> script described in <a href="ch02_04.htm">Section 2.4, "Setting Up a Unix Server "</a><em class="emphasis">,"</em>  earlier in this
chapter, you will find that the other copies disappear as well.</p>
</div>




























<a name="ch02-22968" /><div class="sect2">
<h3 class="sect2">2.4.4. Unix Permissions</h3>








<p>
<a name="INDEX-185" /> <a name="INDEX-186" /> <a name="INDEX-187" />
<a name="INDEX-188" />If Apache is to work properly,
it's important to correctly set the file-access permissions. In
Unix systems, there are three kinds of permissions: <em class="emphasis">read,
write</em>
<a name="INDEX-189" /> <a name="INDEX-190" /> <a name="INDEX-191" />, and <em class="emphasis">execute</em>.
They attach to each object in three levels: <em class="emphasis">user,
group,</em> and <em class="emphasis">other</em> or "rest of
the world." If you have installed the demonstration sites, go
to <em class="filename">... /site.cgi/htdocs</em> and type:</p>








<blockquote><pre class="code">% <b class="emphasis-bold">ls -l</b></pre></blockquote>








<p>You see:</p>








<blockquote><pre class="code">-rw-rw-r-- 5 root bin 1575 Aug 15 07:45 form_summer.html</pre></blockquote>








<p>
<a name="INDEX-192" />
<a name="INDEX-193" />The
first "-" indicates that this is a regular file. It is
followed by three permission fields, each of three characters. They
mean, in this case:</p>








<dl>
<dt><b>User <em class="emphasis">(</em><tt class="literal">root</tt><em class="emphasis">)</em> </b></dt>
<dd><p>Read yes, write yes, execute no</p></dd>








<dt><b>Group <em class="emphasis">(</em><tt class="literal">bin</tt><em class="emphasis">)</em> </b></dt>
<dd><p>Read yes, write yes, execute no</p></dd>








<dt><b>Other </b></dt>
<dd><p>Read yes, write no, execute no</p></dd>

</dl>








<p>
<a name="INDEX-194" />When the permissions apply to a
directory, the "<tt class="literal">x</tt>" execute permission
means <em class="emphasis">scan</em>, the ability to see the contents and
move down a level.</p>








<p>The permission that interests us is <em class="emphasis">other</em>,
because the copy of Apache that tries to access this file belongs to
user <em class="emphasis">webuser</em> and group
<em class="emphasis">webgroup</em>. These were set up to have no
affinities with <em class="emphasis">root</em> and
<em class="emphasis">bin</em>, so that copy can gain access only under the
<em class="emphasis">other</em> permissions, and the only one set is
"read." Consequently, a Bad Guy who crawls under the
cloak of Apache cannot alter or delete our precious
<em class="filename">form_summer.html</em>; he can only read it.</p>








<p>We can now write a coherent doctrine on permissions. We have set
things up so that everything in our web site except the data
vulnerable to attack has owner <em class="emphasis">root</em> and group
<em class="emphasis">wheel</em>. We did this partly because it is a valid
approach, but also because it is the only portable one. The files on
our CD-ROM with owner <em class="emphasis">root</em> and group
<em class="emphasis">wheel</em> have owner and group numbers
"0" that translate into similar superuser access on every
machine.</p>








<p>Of course, this only makes sense if the webmaster has
<em class="emphasis">root</em> login permission, which we had. You may
have to adapt the whole scheme if you do not have
<em class="emphasis">root</em> login, and you should perhaps consult your
site administrator.</p>








<p>In general, on a web site, everything should be owned by a user who
is not <em class="emphasis">webuser</em> and a group that is not
<em class="emphasis">webgroup</em> (assuming you use these terms for
Apache configurations).</p>








<p>There are four kinds of files to which we want to give
<em class="emphasis">webuser</em> access: directories, data, programs, and
shell scripts. <em class="emphasis">webuser</em> must have scan
permissions on all the directories, starting at root down to wherever
the accessible files are. If Apache is to access a directory, that
directory and all in the path must have <tt class="literal">x</tt>
permission set for <em class="emphasis">other</em>. You do this by
entering:<a name="INDEX-195" /></p>








<blockquote><pre class="code">% <b class="emphasis-bold">chmod o+x</b> <em class="replaceable">each-directory-in-the-path</em></pre></blockquote>








<p>In order to produce a directory listing (if this is required by, say,
an index), the final directory must have read permission for
<em class="emphasis">other</em>. You do this by typing:</p>








<blockquote><pre class="code">% <b class="emphasis-bold">chmod o+r</b> <em class="replaceable">final-directory</em></pre></blockquote>








<p>It probably should not have write permission set for <em class="emphasis">other
</em>:</p>








<blockquote><pre class="code">% <b class="emphasis-bold">chmod o-w</b> <em class="replaceable">final-directory</em></pre></blockquote>








<p>In order to serve a file as data -- and this includes files like
<em class="filename">.htaccess</em> (see <a href="ch03_01.htm">Chapter 3, "Toward a Real Web Site"</a>) -- the file must have read permission for
<em class="emphasis">other</em> :</p>








<blockquote><pre class="code">% <b class="emphasis-bold">chmod o+r</b> <em class="replaceable">file</em></pre></blockquote>








<p>And, as before, deny write permission:</p>








<blockquote><pre class="code">% <b class="emphasis-bold">chmod o-w</b> <em class="replaceable">file</em></pre></blockquote>








<p>In order to run a program, the file must have execute permission set
for <em class="emphasis">other</em>:</p>








<blockquote><pre class="code">% <b class="emphasis-bold">chmod o+x</b> <em class="replaceable">program</em></pre></blockquote>








<p>In order to execute a shell script, the file must have read and
execute permission set for <em class="emphasis">other </em>:<a name="INDEX-196" /> <a name="INDEX-197" /> <a name="INDEX-198" /> <a name="INDEX-199" /></p>








<blockquote><pre class="code">% <b class="emphasis-bold">chmod o+rx</b> <em class="replaceable">script</em></pre></blockquote>
</div>




























<a name="ch02-10-fm2xml" /><div class="sect2">
<h3 class="sect2">2.4.5. A Local Network</h3>








<p>
<a name="INDEX-200" />
<a name="INDEX-201" />Emboldened by
the success of <em class="filename">site.toddle</em>, we can now set about
a more realistic setup, without as yet venturing out onto the unknown
waters of the Web. We need to get two things running: Apache under
some sort of Unix and a GUI browser. There are two main ways this can
be achieved:</p>








<ul><li><p>Run Apache and a browser (such as Mosaic or Netscape under X) on the
same machine. The "network" is then provided by Unix.</p></li><li><p>Run Apache on a Unix box and a browser on a Windows 95/Windows NT/Mac
OS machine, or vice versa, and link them with Ethernet (which is what
we did for this book using FreeBSD).</p></li></ul>
<p>We cannot hope to give detailed explanations for all possible
variants of these situations. We expect that many of our readers will
already be webmasters, familiar with these issues, who will want to
skip the next section. Those who are new to the Web may find it
useful to know what we did.</p>
</div>




























<a name="ch02-11-fm2xml" /><div class="sect2">
<h3 class="sect2">2.4.6. Our Experimental Micro Web</h3>








<p>First, we had to install a network card on the FreeBSD machine. As it
boots up, it tests all its components and prints a list on the
console, which includes the card and the name of the appropriate
driver. We used a 3Com card, and the following entries appeared:</p>








<blockquote><pre class="code">...
1 3C5x9 board(s) on ISA found at 0x300
ep0 at 0x300-0x30f irq 10 on isa
ep0: aui/bnc/utp[*BNC*] address 00:a0:24:4b:48:23 irq 10
...</pre></blockquote>








<p>This indicated pretty clearly that the driver was <em class="filename">ep0
,</em> and that it had installed properly. If you miss this at
bootup, FreeBSD lets you hit the Scroll Lock key and page up till you
see it, then hit Scroll Lock again to return to normal operation.</p>








<p>Once a card was working, we needed to configure its driver,
<em class="filename">ep0</em>. We did this with the following commands:</p>








<blockquote><pre class="code">ifconfig ep0 192.168.123.2
ifconfig ep0 192.168.123.3 alias netmask 0xFFFFFFFF
ifconfig ep0 192.168.124.1 alias</pre></blockquote>








<p>The <tt class="literal">alias</tt>
<a name="INDEX-202" /> command makes
<tt class="literal">ifconfig</tt> bind an additional IP address to the same
device. The 
<a name="INDEX-203" /><tt class="literal">netmask</tt> command is
needed to stop FreeBSD from printing an error message (for more on
netmasks, see O'Reilly's <em class="emphasis">TCP/IP Network
Administration</em>).</p>








<p>Note that the
<a name="INDEX-204" />
<a name="INDEX-205" />network
numbers used here are suited to our particular network configuration.
You'll need to talk to your network administrator to determine
suitable numbers for your configuration. Each time we start up the
FreeBSD machine to play with Apache, we have to run these commands.
The usual way to do this is to add them to
<em class="filename">/etc/rc.local</em> (or the equivalent
location -- it varies from machine to machine, but whatever it is
called, it is run whenever the system boots).</p>








<p>If you are following the FreeBSD installation or something like it,
you also need to install IP addresses and their hostnames (if we were
to be pedantic, we would call them <a name="INDEX-206" />
<a name="INDEX-207" />fully
qualified domain names, or FQDN) in the file <em class="filename">/etc/hosts
</em>
<a name="INDEX-208" /> <a name="INDEX-209" />:</p>








<blockquote><pre class="code">192.168.123.2 www.butterthlies.com
192.168.123.2 sales.butterthlies.com
192.168.123.3 sales-not-vh.butterthlies.com
192.168.124.1 www.faraway.com</pre></blockquote>








<p>Note that <em class="emphasis">www.butterthlies.com</em>
and <em class="emphasis">sales.butterthlies.com</em> both
have the same IP number. This is so we can demonstrate the new
<tt class="literal">NameVirtualHosts</tt> directive in the next chapter. We
will need <em class="emphasis">sales-not-vh.butterthlies.com</em> in
<em class="emphasis">site.twocopy.</em> Note also that this method of
setting up hostnames is normally only appropriate when DNS is not
available -- if you use this method, you'll have to do it on
every machine that needs to know the names.<a name="INDEX-210" /> <a name="INDEX-211" /> <a name="INDEX-212" /></p>
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch02_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch02_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">2.3. site.toddle</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">2.5. Setting Up a Win32 Server</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>
