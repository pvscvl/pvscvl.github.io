<?label 13.5. Legal Issues?><html><head><title>Legal Issues (Apache: The Definitive Guide)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Ben Laurie and Peter Laurie" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565925289L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Apache: The Definitive Guide" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Apache: The Definitive Guide" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch13_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">Apache: The Definitive Guide</a></td><td width="172" valign="top" align="right"><a href="ch13_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">13.5. Legal Issues</h2>





<p>
<a name="INDEX-1143" /> <a name="INDEX-1144" />We discussed the general principles of
computer security earlier. Here we will look at how secure
communication is built into Apache. But before we do that, we have to
look at the legal problems, which are somewhat trickier than the
technical ones. This is perhaps not surprising, when one thinks about
the social power that effective encryption gives the user.</p>





<p>Obviously, browser and server have to be thinking along the same
lines if they are going to collaborate on tricky enterprises like PK
encryption and decryption. In this case it is Netscape who calls the
tune, with their Secure Sockets Layer (SSL) protocol, which uses the
PK algorithm.<a href="#FOOTNOTE-64">[64]</a></p><blockquote>




<a name="FOOTNOTE-64" /><p>[64]There is a rival scheme called Secure
Hypertext Transfer Protocol (SHTTP) that is not widely used. If it is
ever adopted by the Internet Engineering Task Force (IETF), who
decide what is and isn't an Internet protocol, SSL will be
called Transport Layer Security (TLS).</p>




</blockquote>





<p>There are two areas of legal concern in making use of PK: patent
rights and national security.</p>





<a name="ch13-6-fm2xml" /><div class="sect2">
<h3 class="sect2">13.5.1. Patent Rights</h3>





<p>
<a name="INDEX-1145" />The patent position
is this:</p>






<p>The Massachusetts Institute of Technology and the Board of Trustrees of the Leland Stanford Junior University have granted Public Key Partners (PKP) exclusive sublicensing rights to the following patents issued in the United States, and all of their corresponding foreign patents: Cryptographic Apparatus and Method ("Diffie-Hellman") No. 4,200,770 Public Key Cryptographic Apparatus and Method ("Hellman-Merkle") No. 4.318,582 Cryptographic Communications System and Method ("RSA") No. 4.405,829 Exponential Cryptographic Apparatus and Method ("Hellman-Pohlig") No. 4,424,414. These patents are stated by PKP to cover all known methods of practicing the art of Public Key encryption, including the variations collectively known as El Gamal. Public Key Partners has provided written assurance to the Internet Society that parties will be able to obtain, under reasonable, nondiscriminatory terms, the right to use the technology covered by these patents.<a href="#FOOTNOTE-65">[65]</a></p><blockquote>




<a name="FOOTNOTE-65" /><p>[65]<em class="emphasis">SSL Protocol</em> Netscape Corporation.</p>




</blockquote>








<p>First, there is a divergence between the United States and the rest
of the world in the matter of patenting computer programs. The rest
of the world follows the old maxim that you cannot patent an idea or
a form of words, but you have to patent an actual device. A computer
program is not a device, so you cannot patent it. The United States,
on the other hand, adopts what looks like a convenient fiction to
everyone else and says that a computer running a particular program
is different from the same computer running another program because
the patterns of 0s and 1s in its memory and CPU registers are
different. A program is therefore a patentable device.</p>





<p>However, the <a name="INDEX-1146" />RSA algorithm was explained in print
before the patent was applied for. In most countries, that would be
an absolute bar to the granting of a patent, but the United States
has another difference in its patent law: patents are granted to the
first to invent. In the ordinary course of affairs, you invent
something before you describe it in print, so prior disclosure is not
as much of a problem in the United States as it is elsewhere, but the
RSA patent may yet be overturned.</p>





<p>For the moment, however, the patent seems to be good and normal, and
patent law applies to the RSA algorithm as it does to any other
patented device: you may not use a patented program for commercial
purposes in the United States without a license from the patentee.
This also applies to programs brought into the United States from
abroad that use the basic algorithms. So, the doughty Australian,
Eric Young, who wrote the Secure Sockets Layer libraries from basic
number theory, finds to his annoyance that his code is subject to
U.S. law and complains that in the United States people who use his
code have to pay a license fee to "people he and they have
never met."</p>





<p>But this is no different from any other patent. If, in the privacy of
your Australian kitchen, you make a copy of an eyebrow tweezer
patented in the United States and give it to someone who uses it
commercially in their hairdressing salon in California, the owner of
the patent can legally demand a fee, even though neither of you have
met him and the tweezers were made in patent-free Australia. This is
how patents work.</p>





<p>Patents have to be applied for and granted country by country. The
fact that a device is patented in the United States gives it no
automatic protection in Thailand. And, in fact, no other country in
the world recognizes software patents, so the commercial license fee
is only payable in the United States.</p>





<p>U.S. licenses for the public key algorithms used in Apache are to be
had from PKP on payment of a negotiable fee.</p>
</div>
















<a name="ch13-7-fm2xml" /><div class="sect2">
<h3 class="sect2">13.5.2. National Security</h3>





<p>
<a name="INDEX-1147" />
<a name="INDEX-1148" />The patent issue is relatively
straightforward; that of security is byzantine. The problem is that
unbreakable encryption is a matter of extreme national military
importance. It might conceivably be argued that Germany's
reliance on vulnerable encryption lost her World War II; it certainly
cost her enormous losses in lives and mat&eacute;riel.</p>





<p>As a result, <a name="INDEX-1149" />
<a name="INDEX-1150" />
<a name="INDEX-1151" />public-key encryption technology, which
is unbreakable provided the key is big enough, is regarded by certain
countries, including the United States, as a munition of war on a par
with the design of an H-bomb warhead, and it may not be exported
outside the United States or Canada (which is regarded as the same
defense zone).</p>





<p>In view of the fact that you can go to any good library, as Eric
<a name="INDEX-1152" />Young did, read
the algorithms, and write your own code, this is rather a silly
stance to take. But it is the stance that the U.S. government takes,
and they compound the problem<a href="#FOOTNOTE-66">[66]</a> by saying that PK encryption using short
keys (40 bits) is all right, but using longer keys is not.<a href="#FOOTNOTE-67">[67]</a> The difference is simply setting a variable
in the source code.</p><blockquote>




<a name="FOOTNOTE-66" /><p>[66]The U.S. Department of
Defense has gotten itself into a similar tangle over the Global
Positioning System (GPS). Originally designed as a military device to
give positions accurate to a meter or so, it is degraded for public
use so that the accuracy is something like 20 meters in order that
the United States' enemies should not profit by it. But during
the Gulf War, when many U.S. field units brought their own civilian
GPS sets to supplement the meager military supply, the degradation in
the civilian channels was switched <b class="emphasis-bold">off</b> so that all users, enemy as well as
friendly, had full military precision. Once the war was over, the
degradation was switched <b class="emphasis-bold">on</b>
again!</p>




</blockquote><blockquote>




<a name="FOOTNOTE-67" /><p>[67]Actually, it is more complex than this. The actual encryption
used is 128-bit symmetric encryption, using a random key that is
exchanged using PK encryption. For export, only 40 bits of the 128
bits are sent encrypted. The other 88 bits are in the clear. But
enough of the technical details -- the essence is that the
encryption is weak enough to be broken without spending too
much.</p>




</blockquote>





<p>One of the authors (BL) of this book has a T-shirt on which is
printed a PK algorithm. You would think that if he boards an
intercontinental aircraft in the United States wearing this shirt, he
commits a very serious federal offense. But it seems, to put an even
more bizarre twist to the story, that it is not illegal to
export<em class="filename"> listings</em> of encryption
programs.<a href="#FOOTNOTE-68">[68]</a>
Presumably, the enemies of freedom cannot read.</p><blockquote>




<a name="FOOTNOTE-68" /><p>[68]Actually, the T-shirt anticipates this and
includes a computer-readable version (in the form of a barcode),
especially to make the T-shirt unexportable. On the other side of the
coin, Bruce Schneier's excellent <em class="emphasis">Applied
Cryptography</em>, which includes source code for virtually
every crypto algorithm known to man, is freely exportable (at least,
as long as you take the floppy out first).</p>




</blockquote>





<p>As far as U.S. law is concerned, the world divides into three
geographical areas:</p>





<ul><li><p>The United States</p></li><li><p>Canada</p></li><li><p>The rest of the world</p></li></ul>
<p>In the United States, people can use full-strength PK algorithms but
must pay a license fee to PKP. And you can import and use illegal
encryption software from abroad, without fear of trouble from the
Defense Department; however, you should pay patent license fees to
PKP, so there is not much point.</p>





<p>In Canada, you can use the full-strength encryption exported from the
United States, and you don't have to pay a license fee because
Canada does not recognize patents on software.</p>





<p>In the rest of the world, you can use feeble encryption exported from
the United States or full-strength encryption brewed locally. If you
can't get it locally, there are plenty of people in Moscow and
other places who will give you the full-strength U.S. product.</p>





<p>Britain used to follow the U.S. ban on exports of munitions of war,
but now the following two instruments apply. (We think! The U.K.
government is no more interested in making it easy to figure out what
is going on than the U.S. government, it seems.)</p>





<ul><li><p><em class="filename">The Export of Goods (Control) Order</em>, which is
United Kingdom legislation</p></li><li><p><em class="filename">Dual-Use and Related Good (Export Control)
Regulations</em>, which are European Community law</p></li></ul>
<p>These laws are rather more lenient than U.S. law, and, in
particular,<em class="filename"> </em>Apache-SSL is probably exempt as an
over-the-counter product. Anyone who wants to get into this business
should seek legal advice, since the British government is no fonder
than any other of explaining in clear and simple terms what the law
actually means in practice. However, it also is very shy of making a
fool of itself in court, so the situation does not seem to be
draconian, though it is more worrying than it was. At the time of
this writing (summer 1998), the new Labor government had been in
power about a year. The manifesto that led to their election had made
anodyne noises about encryption, but as time went on, it appeared
that the American government was making strenuous efforts to get
Britain and the European Community to adhere to its unsatisfactory
policies. The situation may have been complicated by British prime
minister Blair's need to get President Clinton's active
help in reducing U.S. support to the IRA in order to try to resolve
the Irish war. In the process he may have been obliged to give
unpublished undertakings on other issues -- which may have
included encryption.</p>





<p>The proposal being touted comes from Royal Holloway College, which is
part of London University, and the European Commission Council DGIII,
and would establish a distributed, secure <a name="INDEX-1153" />key escrow system. It would be
illegal to use a key that was not held in escrow. There are at least
two problems with this policy:</p>





<ul><li><p>One corrupt official within the escrow system could throw every
"secure" site open to the underworld.</p></li><li><p>It would not bother criminals at all.</p></li></ul>
<p>It is rather as though a new kind of unbreakable door lock had been
invented. The government, afraid that behind these new doors,
citizens are going to do unspeakable things, orders that every owner
of the new lock has to deposit a copy of the key at the police
station. The criminals do not bother, and their friends the corrupt
policemen give them all the honest peoples' keys.</p>





<p>The difficulty with trying to criminalize the use of encrypted files
is that they cannot be positively identified. An encrypted message
may be hidden in an obvious nonsense file, but it may also be hidden
(by steganography) in unimportant bits in a picture or a piece of
music or something like that. Conversely, a nonsense file may be an
encrypted message, but it may also be a corrupt ordinary file or a
proprietary data file whose format is not published. There seems to
be no reliable way of distinguishing between the possibilities except
by producing a decode. And the only person who can do that is the
"criminal," who is not likely to put himself in jeopardy.</p>





<p>France, as always very practical in matters of national security,
bans PK encryption without a license from the government, and the
government does not issue licenses. Use of the technology in France,
let alone its export, is a crime. We would be interested to hear
reliable accounts of the position in other countries for inclusion in
later editions of this book.<a name="INDEX-1154" /> <a name="INDEX-1155" /></p>
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch13_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch13_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">13.4. Firewalls</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">13.6. Secure Sockets Layer: How to Do It</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>