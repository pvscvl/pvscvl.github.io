<?label 1.3. DBI in the Real World ?><html><head><title>DBI in the Real World  (Programming the Perl DBI)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Alligator Descartes and Tim Bunce" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565926994L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Programming the Perl DBI" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Programming the Perl DBI" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch01_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">Programming the Perl DBI</a></td><td width="172" valign="top" align="right"><a href="ch01_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">1.3. DBI in the Real World </h2>



<p>
<a name="INDEX-18" />DBI is being used in many companies
across the world today, including large-scale, mission-critical
environments such as NASA and Motorola. Consider the following
testimonials by avid DBI users from around the world:</p>

<blockquote>


<p>We developed and support a large scale telephone call logging and
analysis system for a major client of ours. The system collects ~1 GB
of call data per day from over 1,200,000 monitored phone numbers.
~424 GB has been processed so far (over 6,200,000,000 calls). Data is
processed and loaded into Oracle using DBI and DBD::Oracle. The
database holds rolling data for around 20 million calls. The system
generates over 44,000 PostScript very high quality reports per month
(~five pages with eleven color graphs and five tables) generated by
using Perl to manipulate FrameMaker templates. [Values correct as of
July 1999, and rising steadily.]</p>



<p>The whole system runs on three dual processor Sun SPARC Ultra 2
machines -- one for data acquisition and processing, one for
Oracle and the third does most of the report production (which is
also distributed across the other two machines). Almost the entire
system is implemented in Perl.</p>



<p>There is only one non-Perl program and that's only because it
existed already and isn't specific to this system. The other
non-Perl code is a few small libraries linked into Perl using the XS
interface.</p>



<p>A quote from a project summary by a senior manager: "Less than
a year later the service went live. This was subsequently celebrated
as one of the fastest projects of its size and complexity to go from
conception to launch."</p>



<p>Designed, developed, implemented, installed, and supported by the
Paul Ingram Group, who received a "Rising to the
Challenge" award for their part in the project. Without Perl,
the system could not have been developed fast enough to meet the
demanding go-live date. And without Perl, the system could not be so
easily maintained or so quickly extended to meet changing
requirements.
--<em>Tim Bunce, Paul Ingram Group</em></p>




<p>In 1997 I built a system for NASA's Langley Research Center in
Virginia that puts a searchable web front end on a database of about
100,000 NASA-owned equipment items. I used Apache, DBI, Informix,
WDB, and mod_perl on a Sparc 20. Ran like a charm. They liked it so
much they used it to give demos at meetings on reorganizing the wind
tunnels! Thing was, every time they showed it to people, I ended up
extending the system to add something new, like tracking equipment
that was in for repairs, or displaying GIFs of technical equipment so
when they lost the spec sheet, they could look it up online. When it
works, success feeds on itself.

--<em>Jeff Rowe</em></p>




<p>I'm working on a system implemented using Perl, DBI, Apache
(mod_perl), hosted using RedHat Linux 5.1 and using a lightweight SQL
RDBMS called MySQL. The system is for a major multinational holding
company, which owns approximately 50 other companies. They have
30,000 employees world-wide who needed a secure system for getting to
web-based resources. This first iteration of the Intranet is
specified to handle up to forty requests for web objects per second
(approximately 200 concurrent users), and runs on a single processor
Intel Pentium-Pro with 512 megs of RAM. We develop in Perl using
Object-Oriented techniques everywhere. Over the past couple years, we
have developed a large reusable library of Perl code. One of our most
useful modules builds an Object-Relational wrapper around DBI to
allow our application developers to talk to the database using O-O
methods to access or change properties of the record. We have saved
countless hours and dollars by building on Perl instead of a more
proprietary system.

--<em>Jesse Erlbam</em></p>




<p>Motorola Commercial Government and Industrial Systems is using Perl
with DBI and DBD-Oracle as part of web-based reporting for
significant portions of the manufacturing and distribution
organizations. The use of DBI/DBD-Oracle is part of a movement away
from Oracle Forms based reporting to a pure web-based reporting
platform. Several moderate-sized applications based on DBI are in
use, ranging from simple notification distribution applications,
dynamic routing of approvals, and significant business applications.
While you need a bit more "patience" to develop the
web-based applications, to develop user interfaces that look
"good", my experience has been that the time to implement
DBI-based applications is somewhat shorter than the alternatives. The
time to "repair" the DBI/DBD based programs also seems to
be shorter. The software quality of the DBI/DBD approach has been
better, but that may be due to differences in software development
methodology.


--<em>Garth Kennedy, Motorola</em></p>
</blockquote>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch01_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch01_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">1.2. Perl </td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">1.4. A Historical Interlude and Standing Stones </td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>
