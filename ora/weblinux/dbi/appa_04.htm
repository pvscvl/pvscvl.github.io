<?label A.4. Methods Common to All Handles ?><html><head><title>Methods Common to All Handles  (Programming the Perl DBI)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Alligator Descartes and Tim Bunce" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565926994L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Programming the Perl DBI" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Programming the Perl DBI" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="appa_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">Programming the Perl DBI</a></td><td width="172" valign="top" align="right"><a href="appa_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">A.4. Methods Common to All Handles </h2>



<p>The following methods can be used by all types of DBI handles:</p>




<a name="INDEX-1027" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>err </i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$rv = $h-&gt;err;</pre></td><td align="right" /></tr></table><p>Returns the <em class="emphasis">native</em> database engine error code
from the last driver method called. The code is typically an integer,
but you should not assume that.</p><p>The DBI resets
<tt class="literal">$h-&gt;err</tt>
<a name="INDEX-1027" />
to <tt class="literal">undef</tt> before most DBI method calls, so the
value has only a short lifespan. Also, most drivers share the same
error variables across all their handles, so calling a method on one
handle will typically reset the error on all the other handles that
are children of that driver.</p><p>If you need to test for individual errors <em class="emphasis">and</em>
have your program be portable to different database engines, then
you'll need to determine what the corresponding error codes are
for all those engines, and test for all of them.</p></div>

<a name="INDEX-1028" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>errstr </i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$str = $h-&gt;errstr;</pre></td><td align="right" /></tr></table><p>Returns the
<a name="INDEX-1028" />native
database engine error message from the last driver method called.
This has the same lifespan issues as the <tt class="literal">err</tt>
method described above.</p></div>

<a name="INDEX-1029" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>state </i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$str = $h-&gt;state;</pre></td><td align="right" /></tr></table><p>Returns <a name="INDEX-1029" />an
error code in the standard SQLSTATE five-character format. Note that
the specific success code <tt class="literal">00000</tt> is translated to
<tt class="literal">0</tt> (false). If the driver does not support SQLSTATE
(and most don't), then state will return
<tt class="literal">S1000</tt> (General Error) for all errors.</p></div>

<a name="INDEX-1030" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>trace </i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$h-&gt;trace($trace_level);
$h-&gt;trace($trace_level, $trace_filename);</pre></td><td align="right" /></tr></table><p>DBI <a name="INDEX-1030" />trace
information can be enabled for a specific handle (and any future
children of that handle) by setting the trace level using the
<tt class="literal">trace</tt> method.</p><p>Trace level 1 is best for a simple overview of what's
happening. Trace level 2 is a good choice for general-purpose
tracing. Levels 3 and above (up to 9) are best reserved for
investigating a specific problem, when you need to see
"inside" the driver and DBI. Set
<tt class="literal">$trace_level</tt> to <tt class="literal">0</tt> to disable
the trace.</p><p>The trace output is detailed and typically very useful. Much of the
trace output is formatted using the <tt class="literal">neat</tt> function,
so strings may be edited and truncated.</p><p>Initially, trace output is written to <tt class="literal">STDERR</tt>. If
<tt class="literal">$trace_filename</tt> is specified, then the file is
opened in append mode and <em class="emphasis">all</em> trace output
(including that from other handles) is redirected to that file.
Further calls to <tt class="literal">trace</tt> without a
<tt class="literal">$trace_filename</tt> do not alter where the trace
output is sent. If <tt class="literal">$trace_filename</tt> is undefined,
then trace output is sent to <tt class="literal">STDERR</tt> and the
previous trace file is closed.</p><p>See also the <tt class="literal">DBI-</tt>&gt;<tt class="literal">trace</tt>
method for information about the <tt class="literal">DBI_TRACE</tt>
environment variable.</p></div>

<a name="INDEX-1031" /><a name="INDEX-1032" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>trace_msg </i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$h-&gt;trace_msg($message_text);
$h-&gt;trace_msg($message_text, $min_level);</pre></td><td align="right" /></tr></table><p>Writes <tt class="literal">$message_text</tt>
<a name="INDEX-1031" />to the
trace file if <tt class="literal">trace</tt> is enabled for
<tt class="literal">$h</tt> or for the DBI as a whole. Can also be called
as <tt class="literal">DBI-</tt>
<a name="INDEX-1032" />&gt;<tt class="literal">trace_msg($msg)</tt>.
See <tt class="literal">trace</tt>.</p><p>If <tt class="literal">$min_level</tt> is defined, then the message is
output only if the trace level is equal to or greater than that
level. <tt class="literal">$min_level</tt> defaults to
<tt class="literal">1</tt>.</p></div>

<a name="INDEX-1033" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>func </i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$h-&gt;func(@func_arguments, $func_name);</pre></td><td align="right" /></tr></table><p>The
<tt class="literal">func</tt>
<a name="INDEX-1033" />
method can be used to call private non-standard and non-portable
methods implemented by the driver. Note that the function name is
given as the last argument.</p><p>This method is not directly related to calling stored procedures.
Calling stored procedures is currently not defined by the DBI. Some
drivers, such as <tt class="literal">DBD::Oracle</tt>, support it in
non-portable ways.</p><p>See driver documentation for more details.</p></div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="appa_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="appa_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">A.3. The DBI Class </td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">A.5. Attributes Common to All Handles </td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>