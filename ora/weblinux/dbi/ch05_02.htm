<?label 5.2. Executing Non-SELECT Statements ?><html><head><title>Executing Non-SELECT Statements  (Programming the Perl DBI)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Alligator Descartes and Tim Bunce" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565926994L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Programming the Perl DBI" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Programming the Perl DBI" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch05_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">Programming the Perl DBI</a></td><td width="172" valign="top" align="right"><a href="ch05_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">5.2. Executing Non-SELECT Statements </h2>



<p>We discussed in <a href="ch03_01.htm">Chapter 3, "SQL and Relational Databases "</a> the various data
manipulation techniques that you might wish to use on your data. So
far in this chapter, we have discussed the most commonly used data
manipulation operation, fetching. But what about
<a name="INDEX-595" />inserting,
<a name="INDEX-596" />deleting,
and
<a name="INDEX-597" />updating
data?</p>



<p>These operations are treated somewhat differently than querying, as
they do not use the notion of a cursor to iterate through a result
set. They simply affect rows of data stored within tables without
returning any rows to your programs. As such, the full
prepare-execute-fetch-deallocate cycle is not as appropriate for
these operations. The fetch stage simply doesn't apply.</p>



<p>Since you're usually going to invoke these statements only
once, it would be very tiresome to have to call <tt class="literal">prepare(
)</tt> to get a statement handle and then call <tt class="literal">execute(
)</tt> on that statement handle to actually invoke it, only to
immediately discard that statement handle.</p>



<p>Fortunately, the DBI defines a shortcut for carrying out these
operations -- the <tt class="literal">do(
)</tt>
<a name="INDEX-598" />
<a name="INDEX-599" />
method, invoked against a valid database handle. Using <tt class="literal">do(
)</tt> is extremely easy. For example, if you wished to delete
some rows of data from the <tt class="literal">megaliths</tt> table, the
following code is all that's required:</p>



<blockquote><pre class="code">### Assuming a valid database handle exists....
### Delete the rows for Stonehenge!
$rows = $dbh-&gt;do( "
            DELETE FROM megaliths
            WHERE name = 'Stonehenge'
        " );</pre></blockquote>



<p>To signify whether or not the SQL statement has been successful, a
value is returned from the call signifying either the number of rows
affected by the SQL statement, or <tt class="literal">undef</tt> if an
error occurred.</p>



<p>Some databases and some statements will not be able to return the
number of rows affected by some statements; <tt class="literal">-1</tt>
will be returned in these cases.</p>



<p>As a special case, a row count of zero is returned as the string
<tt class="literal">0E0</tt>, which is just a fancy mathematical way of
saying zero. Returning <tt class="literal">0E0</tt> instead of
<tt class="literal">0</tt> means that the <tt class="literal">do( )</tt> method
still returns a value that Perl interprets as
<tt class="literal">true</tt>, even when no rows have been
affected.<a href="#FOOTNOTE-49">[49]</a> The
<tt class="literal">do( )</tt> method returns a <tt class="literal">false</tt>
value only on an error.</p><blockquote>


<a name="FOOTNOTE-49" /><p>[49]Perl actually has special logic to allow
the string <tt class="literal">0</tt> <tt class="literal">but</tt>
<tt class="literal">true</tt> to be used for this kind of purpose. The DBI
doesn't use that because people are bound to write messages
like <tt class="literal">print</tt> <tt class="literal">Deleted</tt>
<tt class="literal">$rows</tt> <tt class="literal">rows\n</tt> and
<tt class="literal">Deleted</tt><span class="acronym"> </span><tt class="literal">0E0</tt>
<tt class="literal">rows</tt> reads slightly better than
<tt class="literal">Deleted</tt> <tt class="literal">0</tt>
<tt class="literal">but</tt> <tt class="literal">true</tt><span class="acronym">
</span><tt class="literal">rows</tt>.</p>


</blockquote>



<p>A good DBI method to remember is <tt class="literal">quote(
)</tt>
<a name="INDEX-600" />
<a name="INDEX-601" /> -- especially
when building SQL statements, and especially when inserting new data
into the database via <tt class="literal">do( )</tt>. This method correctly
quotes values as literal strings within your SQL statement before it
is issued to the database. We discussed this method in <a href="ch04_01.htm">Chapter 4, "Programming with the DBI "</a>.</p>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch05_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch05_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">5. Interacting with the Database </td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">5.3. Binding Parameters to Statements </td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>