<?label 3.2. Datatypes and NULL Values ?><html><head><title>Datatypes and NULL Values  (Programming the Perl DBI)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Alligator Descartes and Tim Bunce" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565926994L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Programming the Perl DBI" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Programming the Perl DBI" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch03_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">Programming the Perl DBI</a></td><td width="172" valign="top" align="right"><a href="ch03_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">3.2. Datatypes and NULL Values </h2>



<p>One <a name="INDEX-228" />of
the most important aspects of the structures defined within a
database, such as tables and views, is the
<em class="emphasis">datatype</em> of each of the columns. Perl is a
loosely typed language, whereas SQL is strongly typed. Thus, each
field or value is of a given datatype that determines how values and
fields are compared. For example, the <tt class="literal">mapref</tt> field
within the <tt class="literal">megaliths</tt> table would not be much use
if it could hold only dates!</p>



<p>Therefore, it is important to assign an appropriate datatype to each
column. This avoids any potential confusion as to how the values
stored within each column are to be interpreted, and also establishes
how these values can be compared in query condition clauses.</p>



<p>There are several common datatypes. The most widely used of these can
be grouped as follows:</p>



<dl>
<dt><b>Numeric datatypes </b></dt>
<dd><p>
<a name="INDEX-229" />The
grouping of numeric datatypes includes types such as integer and
floating point (or real) numbers. These types, depending on your
database, may include
<tt class="literal">FLOAT</tt>
<a name="INDEX-230" />,
<tt class="literal">REAL</tt>
<a name="INDEX-231" />,
<tt class="literal">INTEGER</tt>
<a name="INDEX-232" />, and
<tt class="literal">NUMBER</tt>
<a name="INDEX-233" />. Numeric datatypes are compared in the
obvious way; that is, the actual values are tested.</p></dd>



<dt><b>Character datatypes </b></dt>
<dd><p>
<a name="INDEX-234" />
<a name="INDEX-235" />Character
datatypes are used to store and manipulate textual data. Any
characters whatsoever -- digits or letters -- can be stored
within a character datatype.</p>



<p>However, if digits are stored within a character datatype, they will
be treated as being a string of characters as opposed to a number.
For example, they'll be sorted and ordered as strings and not
numbers, so "<tt class="literal">10</tt>" will be less than
"<tt class="literal">9</tt>".</p>



<p>Depending on your database system, there can be many different types
of character datatypes such as
<tt class="literal">CHAR</tt>
<a name="INDEX-236" />,
<tt class="literal">VARCHAR</tt>
<a name="INDEX-237" />,
<tt class="literal">VARCHAR2</tt>
<a name="INDEX-238" />, and so on. Most databases support at
least the most basic of these, <tt class="literal">CHAR</tt>.</p>



<p>When being compared, character datatypes usually apply lexical
ordering according to the character set being used by the database.</p></dd>



<dt><b>Date datatypes </b></dt>
<dd><p>
<a name="INDEX-239" />
<a name="INDEX-240" />Most database
systems implement at least one datatype that contains date
information, as opposed to a character datatype containing a string
representation of a date. This allows you to perform arbitrary
arithmetic on date values very easily. For example, you might wish to
select rows where the date field corresponds to a Monday.</p>



<p>When comparing dates, a later date is regarded as being greater than
an earlier date. datatypes for storing times and timestamps (date
plus time) are also common.</p></dd>



<dt><b>Binary object datatypes </b></dt>
<dd><p>
<a name="INDEX-241" /> <a name="INDEX-242" />Binary object datatypes are a
relatively recent addition to database systems and allow you to store
massive unstructured chunks of data -- typically images, video, or
audio clips -- within a database. The actual binary object
datatypes tend to differ between databases, but usually tend to be
called <em class="emphasis">LOBs</em> (large objects) if they do exist.
For example, the <a name="INDEX-243" />BLOB datatype stores binary data and
<a name="INDEX-244" />CLOB stores large quantities of ASCII
character data. Generally, LOB types cannot be compared to one
another.</p></dd>



<dt><b>The NULL value </b></dt>
<dd><p>
<a name="INDEX-245" />NULL is a
special kind of value that actually has no value. It can be contained
within columns and signifies that no value is contained within that
column for a given row. NULL values are used where the actual value
is either not known or not meaningful.</p>



<p>When a table is created, each column can declare to either allow or
disallow NULL values, regardless of the datatype of the column.</p>



<p>NULL values should not be confused with the numeric value of zero.
They are not the same thing. Zero means zero, whereas NULL means
there is no value at all.<a href="#FOOTNOTE-22">[22]</a></p><blockquote>


<a name="FOOTNOTE-22" /><p>[22]Though some databases do
treat empty strings as NULL values when inserting data.</p>


</blockquote>



<p>If you attempt to evaluate an expression containing a NULL value,
other than with various special NULL handling functions, it will
always evaluate to NULL. Comparing values to NULL should always use
<tt class="literal">IS</tt> <tt class="literal">NULL</tt> and
<tt class="literal">IS</tt> <tt class="literal">NOT</tt> <tt class="literal">NULL</tt>
instead.<a href="#FOOTNOTE-23">[23]</a> Be careful!</p><blockquote>


<a name="FOOTNOTE-23" /><p>[23]A few databases, such as mSQL, do use
<tt class="literal">= NULL</tt>.</p>


</blockquote>



<p>The NULL value plays a part in what are called
"<a name="INDEX-246" />three-valued logic" tables that are
used when evaluating condition clause truth tables, as discussed
later in this chapter. This allows SQL conditional expressions to
either be <em class="emphasis">true</em>, <em class="emphasis">false,</em> or
<a name="INDEX-247" /><em class="emphasis">NULL</em>.</p></dd>

</dl>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch03_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch03_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">3. SQL and Relational Databases </td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">3.3. Querying Data </td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>