<?label 4.13. File Ownership and Permissions?><html><head><title>File Ownership and Permissions (Running Linux)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Running Linux" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch04_12.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm" /></td><td width="172" valign="top" align="right"><a href="ch04_14.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">4.13. File Ownership and Permissions</h2>

<p><a name="INDEX-1121" />
<a name="INDEX-1122" />
<a name="INDEX-1123" />
<a name="INDEX-1124" />
<a name="INDEX-1125" />
<a name="INDEX-1126" />
<a name="INDEX-1127" />
<a name="INDEX-1128" />
Ownership and permissions are central to security.  It's important to
get them right, even when you're the only user, because odd things can
happen if you don't.  For the files that users create and use daily,
these things usually work without much thought (although it's
still useful to know the concepts).  For system administration,
matters are not so easy.  Assign the wrong ownership or permission,
and you might get into a frustrating bind like not being able to read
your mail.  In general, the message:</p>

<blockquote><pre class="code">Permission denied</pre></blockquote>

<p>means that someone has assigned an ownership or permission that
restricts access more than you want.</p>

<div class="sect2">
<h3 class="sect2">4.13.1. What Permissions Mean</h3>

<p>Permissions refer to the ways in which someone can use a file.  There
are three such permissions under Unix:</p>

<ul><li><p> 
 
<em class="emphasis">Read</em> permission means you can look at the file's contents.</p></li><li><p> 
 
<em class="emphasis">Write</em> permission means you can change or delete the file.</p></li><li><p> 
 
 
<em class="emphasis">Execute</em> permission means you can run the file as a program.</p></li></ul><p>When each file is created, the system assigns some default permissions
that work most of the time.  For instance, it gives you both read and
write permission, but most of the world has only read permission.  If
you have a reason to be paranoid, you can set things up so that other
people have no permissions at all.</p>

<p>Additionally, most utilities know how to assign permissions.  For
instance, when the compiler creates an executable program, it
automatically assigns executable permission.  When you check a file
out of the revision control system (RCS) without locking it, you get
only read permission (because
you're not expected to change the file), but if you lock the file, you
get read and write permission (you're expected to edit it and check it

back in).  We'll discuss RCS in the section
"<a href="ch14_02.htm">Section 14.2.7, "Revision Control Tools--RCS"</a>" in <a href="ch14_01.htm">Chapter 14, "Tools for
 Programmers"</a>.</p>

<p>There are times when defaults don't work, though.  For instance, if
you create a shell script or Perl program, you'll have to assign
executable permission yourself so that you can run it.  We'll show how
to do that later in this section, after we get through the basic
concepts.</p>

<p><a name="INDEX-1129" />
Permissions have different meanings for a directory:</p>

<ul><li><p> 
 
 
Read permission means you can list the contents of that directory.</p></li><li><p> 
 
Write permission means you can add or remove files in that directory.</p></li><li><p> 
 
Execute permission means you can list information about the
files in that directory.</p></li></ul><p>Don't worry about the difference between read and execute permission
for directories; basically, they go together.  Assign both, or
neither.</p>

<p>Note that, if you allow people to add files to a directory, you are also
letting them remove files.  The two privileges go together when you assign
write permission.  However, there is a way you can let users share a

directory and keep them from deleting each other's files.  See the
section "<a href="ch07_02.htm">Section 7.2.3, "Upgrading Other Software"</a>" in
<a href="ch07_01.htm">Chapter 7, "Upgrading Software and the Kernel"</a>.</p>

<p>There are more files on Unix systems than the plain files and
directories we've talked about so far.  These are special files
(devices), sockets, symbolic links, and so forth--each type
observing its own rules regarding permissions.  But you don't need to know the details on
each type.</p>
</div>




<div class="sect2">
<h3 class="sect2">4.13.2. Owners and Groups</h3>

<p> 
 
Now, who gets these permissions?  To allow people to work together,
Unix has three levels of permission: owner, group, and other.  The
"other" covers everybody who has access to the system and who isn't
the owner or a member of the group.</p>

<p> 
 
The idea behind having groups is to give a set of users, like a
team of programmers, access to a file.  For instance, a programmer
creating source code may reserve write permission to herself, but
allow members of her group to have read access through a group
permission.  As for "other," it might have no permission at all.
(You think your source code is <em class="emphasis">that</em> good?)</p>

<p><a name="INDEX-1130" />

Each file has an owner and a group.  The owner is generally the user
who created the file.  Each user also belongs to a default group, and
that group is assigned to every file the user creates.  You can create
many groups, though, and assign each user to multiple groups.  By
changing the group assigned to a file, you can give 

access to any collection of people you want.  We'll discuss groups
more when we get to the section "<a href="ch05_07.htm">Section 5.7.4, "The Group File"</a>" in <a href="ch05_01.htm">Chapter 5, "Essential System Management"</a>.</p>

<p>Now we have all the elements of our security system: three permissions
(read, write, execute) and three levels (user, group, other).  Let's
looks at some typical files and see what permissions are assigned.</p>

<p><a href="ch04_13.htm">Figure 4-2</a> shows a typical executable
program.  We generated this output by executing <tt class="command">ls</tt>
with the <span class="option">-l</span> option.</p>

<a name="x-100-3-ls-l-permission" /><div class="figure"><img src="figs/rl3_0402.gif" 
alt="Figure 4-2" /></div><h4 class="objtitle">Figure 4-2. 
Displaying ownership and permissions</h4><p>Two useful facts stand right out: the owner of the file is an author
of this book and your faithful guide, mdw, while the group is
lib (perhaps a group created for programmers working on
libraries).  But the key information about permissions is encrypted in
the set of letters on the left side of the display.</p>

<p>The first character is a hyphen, indicating a plain file.
The next three bits apply to the owner; as we would expect, mdw
has all three permissions.  The next three bits apply to members of
the group: they can read the file (not too useful for a binary file)
and execute it, but they can't write to it because the field that
should contain a <tt class="literal">w</tt> contains a hyphen instead.  And the last
three bits apply to "other"; they have the same permissions in this
case as the group.</p>

<p>As another exercise, here is a file checked out of RCS for editing:</p>

<blockquote><pre class="code">-rw-r--r--   2 mdw      lib           878 Aug  7 19:28 tools.tex</pre></blockquote>

<p>The only difference between this file and that shown in <a href="ch04_13.htm">Figure 4-2</a>
is that the <tt class="literal">x</tt> bits in this case have been replaced by hyphens.
No one needs to have execute permission because the file is not meant
to be executed; it's just text.</p>

<p>One more example--a typical directory:</p>

<blockquote><pre class="code">drwxr-xr-x   2 mdw      lib           512 Jul 17 18:23 perl</pre></blockquote>

<p>The left-most bit is now a <tt class="literal">d</tt>, to show that this is a directory.
The executable bits are back, because you want people to see the
contents of the directory.</p>

<p>Files can be in some obscure states that aren't covered here; see the
<tt class="command">ls</tt> manual page for gory details.  But now it's time to see
how you can change ownership and permissions.</p>
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch04_12.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch04_14.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">4.12. Manual Pages</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">4.14. Changing the Owner, Group,
 and Permissions</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>