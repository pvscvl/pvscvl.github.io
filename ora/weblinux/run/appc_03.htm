<?label C.3. Identifying Your Alpha System?><html><head><title>Identifying Your Alpha System (Running Linux)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Running Linux" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="appc_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm" /></td><td width="172" valign="top" align="right"><a href="appc_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">C.3. Identifying Your Alpha System</h2>

<p><a name="INDEX-83" />
There are many different Alpha systems, each requiring different
installation methods. Because different Linux kernels are compiled to meet these variations in CPU and system designs, you must identify your Alpha hardware to correctly choose boot
disks and kernel disks for various distributions.</p>

<p>Before you install an operating system, you must know the machine's graphics options and audio
components, system memory, CPU class, disk-drive interfaces and sizes,
existing operating systems/filesystems (if any), and attached
peripherals, especially any CD-ROM drive and floppy drives. Some Alpha
systems require firmware configuration changes and even actual
hardware changes to complete a Linux installation.</p>

<p>Which Linux distribution you choose to install may depend on the
hardware you have and any other operating systems that you run on
it. After you gather your hardware information, you can determine
which distribution best suits your needs.  You can always build
any source packages from other installations once you have a bootable
system.  Here are a few examples of hardware factors that dictate your
choice of distribution or method of installation:</p>

<ul><li><p>Some Alpha systems require setting jumpers to load Linux and
install it as a native, firmware-bootable operating system.</p></li><li><p>
If your system has no floppy disk drive, you may not be able to install the Linux distribution you want on your system, because of
firmware constraints in supporting filesystems and devices on systems
that do not have floppy disk devices. We recommend that you install or attach a floppy drive to your
system.  If your system's floppy drive simply "died," it's very
inexpensive to replace.<a href="#FOOTNOTE-3">[3]</a></p><blockquote>

<a name="FOOTNOTE-3" /><p>[3]Even the extra-thin 3.5 inch floppy used in the older Multia and
Alphabook 1 "systems" can be replaced with a standard laptop drive.  On
newer Alpha systems hardware, most hardware is interchangeable with
standard OEM PC hardware.</p>

</blockquote></li><li><p>If your Linux installation shares the computer with another
operating system (installed on different hard-disk partitions or
different hard disks), different versions of Linux offer different levels of filesystem and utility
compatibility with co-resident operating systems.  For example, if you want to run
Tru64 Unix (Digital Unix, or DU) on your system as well as the Debian
Linux Alpha distribution, their default disk filesystem, partitioning,
and labeling would conflict. Likewise, if you apply BSD-style disk
labeling from Linux, that partition will not be accepted as valid by
DU. If you want to set up Linux co-resident with another operating
system on an Alpha system, the safest way is to partition the disk
from within that operating system and define the partition for Linux to
be installed to.</p></li><li><p>The Linux <tt class="command">fdisk</tt> utility fails to label DOSFS
filesystems so that SRM and other firmware utilities will access
them. Therefore, as a general rule, format your MS-DOS diskettes for
configuring your system using MS-DOS or Windows NT (or buy preformatted MS-DOS
diskettes).</p></li><li><p>The first time you install Linux on older machines (especially
UDB/Multias), your installation may fail if your system's internal battery is not charged. Reports of motherboards shipped from a vendor with a dead
battery are common. Some systems have a rechargeable battery that
nevertheless will not recharge on a powered-up system if the battery
is discharged when the system is turned on.  For instance, the monitor will not work, and firmware changes that you need to complete a self-booting
installation will not be saved.</p></li></ul><p>Once you have gathered your hardware data and selected your Linux
distribution, choose your installation method.  Alpha systems vary more than typical PC systems (having been engineered
to be used as everything from basic display terminals to
supercomputers), so you should evaluate your hardware and choose the
booting method you will use with your Linux distribution.
Otherwise, you may find that you cannot
complete the installation as you expected, or that Linux will be difficult to boot without rebuilding the installation.</p>

<p><a name="INDEX-84" />
<a name="INDEX-85" />
<a name="INDEX-86" />
<a name="INDEX-87" />
Most Alpha installations use Milo, which is the easiest and most
reliable method for installing Linux.  The Milo utility is a
mini-kernel that shares some of the same low-level PALcode (the
language in which the firmware of an Alpha system is written) with the
Linux kernel. Milo passes its hardware configuration definitions to
Linux when it bootstraps the kernel, and Linux uses those definitions
to interface with the PALcode segment that is co-resident in system
memory with the Linux kernel. While there are alternatives to the Milo
miniloader, you cannot use the usual Intel Linux boot management utilities to prepare an Alpha system for Linux installation, because they
cannot provide the necessary firmware interface support.</p>

<p><a name="INDEX-88" />
If you add a CD-ROM drive to your system to install Linux,
check your hardware documentation and Linux package documentation to
determine that the CD-ROM will be recognized natively in the BIOS or
that your Milo loader will support that drive.  Standard SCSI CD-ROM
drives are supported by Milo using integral SCSI controllers and
several popular add-on controllers,<a href="#FOOTNOTE-4">[4]</a>
and an ATAPI(EIDE) CD-ROM is supported for some systems, especially
those with a built-in ATAPI controller. But if the CD-ROM drive is not
accessible as a native drive expected on a particular system, your system firmware or the Milo miniloader that
bootstraps the Linux kernel may not recognize it.</p><blockquote>

<a name="FOOTNOTE-4" /><p>[4]The current Red Hat distribution of Milo recognizes the NCR
810 family of SCSI controllers; Adaptec1740, 2940, and 3940 series
SCSI controllers; and QLOGIC ISP controllers. The Milo SHOW command
causes Milo to display a list of its supported devices.</p>

</blockquote>

<p><a name="INDEX-89" />
Although network installation of Linux (storing the files on one
machine and downloading them over the network to the machine where you
want Linux to run) should be possible, major distributions have had persistent problems supporting this
capability.  We are not going to describe the technique.  We assume
you are installing Linux on a stand-alone Alpha system.  You can
configure it for network use later.</p>

<blockquote><h4 class="objtitle">NOTE</h4>
<p>Configuring and setting booting behavior on some older Alpha systems
requires changing jumper settings on the motherboard or changing
system data stored in nonvolatile RAM, or both. You may need to
change jumper settings initially for installation and again afterward
to configure the system.</p>
</blockquote>

<p><a name="INDEX-90" />
<a name="INDEX-91" />
<a name="INDEX-92" />
In typical Linux CD-ROM installation, you generally proceed as follows:</p>

<ol><li><p>Collect system hardware information to select the correct
installation files and procedures.  Look at your system
hardware manuals or system administration manuals. Get bug reports and
review patches to the current software distribution that you will use to
install your package.  Collect current software installation
documentation if you believe the information provided by the vendor is
obsolete or incomplete.</p></li><li><p>Consider the size of your hard-disk drives and decide how they are (or
will be) partitioned for Linux. "<a href="ch03_01.htm">Section 3.1.2, "Drives and Partitions Under Linux"</a>" in <a href="ch03_01.htm">Chapter 3, "Installation
 and Initial
 Configuration"</a>, offers basic
considerations for allocating disk space and partitioning, although
you must adjust the numbers for Alpha. The installation utilities
that you choose will support one or another disk-partitioning method,
but cannot be used for all partitioning requirements.</p></li><li><p>Determine how you want Linux to boot when the installation is
complete.  This may affect your choice of installation method.</p></li><li><p>Choose your Linux installation method based on your hardware and its
firmware, your disk-partitioning requirements, and Linux's booting behavior. For almost all installations, we
think that Milo is the best firmware utility for loading Linux.</p></li><li><p>Create the correct data diskettes (Milo, kernel image, and ramdisk
image) diskettes for your system.</p></li><li><p>Configure your system hardware as needed to support the installation
of Linux.</p></li><li><p>If you use the usual Milo installation procedure, create the correct
Milo image diskette for your system.</p></li><li><p>Power up the system, access its console (older systems use ARC, while
newer ones use AlphaBIOS or SRM as described later), and load your
Linux loader (usually the LINLOAD.EXE program, which is then used to
load Milo). If you have Windows NT installed on your system, you can
use the NT OSloader to load Milo; otherwise you will use system
firmware to load a bootstrap loader that will then be used to prepare
the system to install Linux.</p></li><li><p>Load Milo, use Milo to boot the kernel, and run the CD-ROM installation
<?troff \p?>
program.</p></li><li><p>Perform any additional
disk partitioning and formatting for your system booting requirements.</p></li><li><p>Load additional Linux utilities, applications, compilers, and
programming languages or libraries.  Recompiling a current, stable
release of the Linux kernel tailored to your system requirements is
highly recommended.</p></li><li><p>When you are happy with your Linux installation, set it up to
autoboot or boot from a boot manager selection menu. For some
older systems, this may also require setting jumpers.  Most systems
require changes in the firmware console or installation of a bootstrap
program (probably a Milo version) in system nonvolatile RAM.</p></li></ol><p>An alternate procedure is required for those systems that Milo cannot
configure; these alternatives are dependent on your system
configuration and maintenance firmware.  Like other systems, each
Alpha contains at least one firmware program stored in system ROM or
flash ROM that provides a configuration-program execution
environment. Systems set up for Tru64 Unix or Open VMS have a
System Reference Maintenance console or SRM.  Systems set up for Windows NT
usually have the Alpha Reference Console (ARC) firmware.  Newer
systems may have an AlphaBIOS instead of ARC; SRM is usually
provided if the system was sold with DU.</p>

<blockquote><h4 class="objtitle">NOTE</h4>
<p>Firmware programs are small and efficient. Alpha system ROMs typically
include space to hold several of them, along with other essential
programs, such as debugging and diagnostic tools (which should not be
overwritten).</p>

<p><a name="INDEX-93" />
Once Linux is installed, many systems provide a flash-RAM management
utility (FMU) to allow you to "blow" a Milo image into system
nonvolatile RAM.  Other such utilities may come with your purchase of
a commercial OS release or a developer package. Some are distributed
on an EPROM chip that you install.  Because ARC and AlphaBIOS firmware
provide a graphical interface environment, they take more space, and
you will not find both of them on a standard system. AlphaBIOS is
a replacement for ARC that attempts to make OS
installation on Alpha systems more uniform and automatic--more like OS
installation on an Intel-architectured PC.</p>

<p>Booting Linux can be made as automatic as booting MS-DOS or Windows. We
do not recommend that you use an FMU until you are satisfied with your
tuned-up Linux installation.</p>
</blockquote>

<p>Because all systems that are configured to run Windows NT are provided with a floppy drive that Milo can use to install Linux,
the two main installation paths involve Milo (and ARC or
AlphaBIOS), SRM and Milo, or other loader utilities. We focus on Milo-based installation methods for consistent and predictable results and
offer an installation solution for any significant Alpha platform.  If
you do not like the specific solution that we describe,
you will learn about other installation options as you review your
resource materials.</p>

<a name="INDEX-94" /><a name="INDEX-95" /><a name="INDEX-96" /><div class="sect2">
<h3 class="sect2">C.3.1. Limitations of ARC Firmware</h3>

<p><a name="INDEX-97" />
<a name="INDEX-98" />
<a name="INDEX-99" />
Most older systems have ARC firmware to set
up hardware configurations, specify boot options, and perform other
system maintenance tasks.  This firmware is the usual starting point
for installing Linux. It has several limitations. It knows how to access files only in MS-DOS, HPFS, and
ISO9660 filesystems. When accessing files in MS-DOS or ISO9660, the system only recognizes 8.3 filenames.  ARC offers a simple
menu-driven console interface for managing your system hardware.</p>
</div>




<div class="sect2">
<h3 class="sect2">C.3.2. Limitations of AlphaBIOS Firmware</h3>

<p><a name="INDEX-100" />
Newer systems use AlphaBIOS firmware instead of ARC.  AlphaBIOS
firmware is still in active development.  If your system has
AlphaBIOS, install the latest AlphaBIOS firmware update
before installing Linux.  AlphaBIOS knows how to access files only in
MS-DOS and ISO9660 filesystems. When accessing files, the system only recognizes 8.3 filenames.  AlphaBIOS implements a
graphical interface for system configuration.</p>
</div>




<div class="sect2">
<h3 class="sect2">C.3.3. Limitations of the SRM Console Firmware</h3>

<p><a name="INDEX-101" />
The SRM console can load data from IDE/ATAPI, SCSI, or floppy
drives. It uses a system's native SCSI drive controller to access a
recognized SCSI device for booting. SRM can read a SCSI floppy drive.
SRM can access authentic MS-DOS-format filesystems (but not those created
by Linux <tt class="command">fdisk</tt>), BSD-labeled UFS filesystems (but
not BSD-style filesystems labeled by Linux), and ISO9660
filesystems. An SRM console is available firmware for any system that
does not provide or have ARC or AlphaBIOS.</p>

<p>The SRM console allows you to boot the system by transferring control
to the secondary bootstrap loader that it loads blindly. SRM knows
little about disk partitions or filesystems and treats disk devices as block devices.  It reads from the first 512-byte
sector of the storage device.  This sector should
contain a sector address and offset from which SRM can begin reading
the size of data block.  SRM goes to that location and
loads contiguous data into memory.  The data should be an image file of
the secondary loader that boots the system.</p>

<p>Alpha systems usually have two secondary waders: the "raw"
loader from the Linux kernel and the separate
<tt class="command">aboot</tt> utility. The <tt class="command">aboot</tt> utility
is more flexible than the raw loader if you must install Linux using
the SRM console.  However, you can use the SRM console
to load the Milo loader for a more consistent installation
procedure. Some machines do not currently have a MILO available
(DS20), so, in those cases, using SRM and a secondary boot loader is mandatory.</p>

<p>When you use SRM and <tt class="command">aboot</tt> to boot Linux, the
first partition of the disk should start at cylinder number 2. This
leaves room at the beginning of the disk to install
<tt class="command">aboot</tt>.  The third partition on the disk (partition
C) should be the entire size of the disk, from cylinder 1 to the
end. The SRM Howto provides more information for those who will
install using SRM and <tt class="command">aboot</tt> at <a href="../../../../../../www.alphalinux.org/faq/srm.html">http://www.alphalinux.org/faq/srm.html</a>.</p>

<a name="INDEX-102" /><a name="INDEX-103" />
</div>




<div class="sect2">
<h3 class="sect2">C.3.4. Limitations of Milo Miniloader</h3>

<p><a name="INDEX-104" />
The Milo miniloader does not know how to boot itself from disk before
booting Linux; it must be initially loaded either from system flash
memory or from disk using an operating system loader (OSloader)
developed for Alpha systems, such as Windows NT Alpha's boot manager.
Linux distributions provide <tt class="command">linload.exe</tt>.</p>

<p>When Milo is loaded from disk, it is bootstrap-loaded by ARC,
AlphaBIOS, or SRM console after you use
<tt class="command">linload.exe</tt>. <tt class="command">linload.exe</tt> knows
MS-DOS (FAT) filesystems, but does not recognize HPFS or VMS
filesystems.  Milo is apparently limited to MS-DOS,
ISO9660, and <em class="emphasis">ext2</em> filesystems when it has been loaded by
<tt class="command">linload.exe</tt>.</p>

<p>Milo will read <em class="emphasis">ext2</em> filesystems by default and
can load operating system images in ISO9660 or MS-DOS (FAT) formats using
a command-line option.  Milo should load compressed kernel image files
made using <em class="emphasis">gzip</em>, if given the full filename
(e.g., <em class="filename">vmlinux.gz</em>), but we have found that
at least some Milo distributions cannot process such files, at least
not when loaded from ISO9660 or MS-DOS filesystems.  For more information
go to <a href="../../../../../../www.alphalinux.org/faq/milo.html">http://www.alphalinux.org/faq/milo.html</a>.</p>
</div>




<a name="INDEX-105" />


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="appc_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="appc_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">C.2. The Linux Port</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">C.4. Collecting System Hardware Information</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>