<?label 11.4. X Applications?><html><head><title>X Applications (Running Linux)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Running Linux" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch11_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm" /></td><td width="172" valign="top" align="right"><a href="ch12_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">11.4. X Applications</h2>

<p><a name="INDEX-2360" />
<a name="INDEX-2361" />
There are thousands of programs available for X. They range from
basic utilities (such as <tt class="command">xterm</tt> and <tt class="command">xclock</tt>, already
discussed) to editors to programming aids to games to multimedia
applications. The most we can provide here is a tiny
slice of the software available for X. In this section, we'll present
those applications that all X users should know how to use. These
aren't necessarily the most exciting programs out there, but they
should certainly be part of your toolbox. Note that if you are using a
desktop environment such as KDE, described in the last section, it
may have tools of its own that do the same things as the ones
described here, but work better with the desktop. The general
techniques described here usually apply to the desktop tools as well.</p>

<p>
A more comprehensive explanation of X applications can be found in
<em class="emphasis">X Window System User's Guide</em>.</p>

<div class="sect2">
<h3 class="sect2">11.4.1. xterm: Your Home Base</h3>

<p><a name="INDEX-2362" />
Let's start our exploration of X applications with the workhorse that
you'll be spending most of your time with--<tt class="command">xterm</tt>.  This is simply a
window that contains a Unix shell.  It displays a prompt, accepts
commands, and scrolls like a terminal.</p>

<blockquote><h4 class="objtitle">NOTE</h4>
<p>If you use KDE, you can also use
		KDE's own terminal emulator <tt class="command">kvt</tt>, which
		provides more or less the same features as
		<tt class="command">xterm</tt>, but can be configured via
		a user-friendly GUI.</p>
</blockquote>

<p><a name="INDEX-2363" />
 Perhaps you are struck by the irony of buying a
high-resolution color monitor, installing several megabytes of
graphics software, and then being confronted by an emulation of an old
VT100 terminal.  But Linux is simply not a point-and-click operating system.
There are plenty of nice graphical applications, but a lot of the time
you'll want to manipulate text, and a command-line interface still
offers the most powerful tools for doing that.</p>

<p>So let's take look at an <tt class="command">xterm</tt> window.  <a href="ch11_04.htm">
Figure 11-6</a>
shows one where we've already entered a few commands.
By the way, if you've read the section "<a href="ch11_01.htm">Section 11.1, "Basics of X Customization"</a>" earlier in
this chapter, you may enjoy browsing some of the files in
<em class="filename">/usr/lib/X11/app-defaults</em>; they show the default behavior of
X applications when you don't specify your own preferences.</p>

<a name="x-100-3-xterm-start" /><div class="figure"><img src="figs/rl3_1106.gif" alt="Figure 11-6" /></div>
<h4 class="objtitle">Figure 11-6. xterm window</h4><a name="INDEX-2364" />
</div>




<div class="sect2">
<h3 class="sect2">11.4.2. Starting up xterm</h3>

<p>Maybe first we should explain how we created the <tt class="command">xterm</tt> window.
You can reproduce it through the command:</p>

<blockquote><pre class="code">eggplant$ <tt class="userinput"><b>xterm  -geometry 80x25-20-30  -fn 7x13bold  -sb  -name xterm-3</b></tt></pre></blockquote>

<p>where the options mean:</p>

<dl>
<dt><b><span class="option">-geometry 80x25-20-30</span></b></dt><dd><p>The window is 80 characters wide and 25 characters high, located 20
pixels from the right edge of the screen and 30 pixels from the bottom
edge.</p></dd>


<dt><b><span class="option">-fn 7x13bold</span></b></dt><dd><p>Text appears in a medium-sized bold font.  (A large, but limited, set of
fonts are available; we'll show you how to look at them later, in the
section "<a href="ch11_04.htm">Section 11.4.5, "Choosing Fonts"</a>.")</p></dd>


<dt><b><span class="option">-sb</span></b></dt><dd><p>A scrollbar is displayed.</p></dd>


<dt><b><span class="option">-name xterm-3</span></b></dt><dd><p>The string <tt class="literal">xterm-3</tt> appears in the titlebar at the top of the
window, and on the icon when you iconify the window.</p></dd>

</dl>

<p>But you don't want to go to the trouble of entering this long command
every time you start an <tt class="command">xterm</tt>.  What we did (as you can see in
the earlier section "<a href="ch11_01.htm">Section 11.1, "Basics of X Customization"</a>") was put the following
options in our <em class="filename">.Xdefaults</em> file:
<a name="INDEX-2365" /></p>

<blockquote><pre class="code"> ! Defaults for all xterm clients
  XTerm*scrollBar:        true

 ! Specific xterms
  xterm-3*Geometry:       80x25-20-30

  xterm-3*Font:           7x13bold</pre></blockquote>

<p>
and when we logged in, our <em class="filename">.xinitrc</em> file issued the command:
<a name="INDEX-2366" /></p>

<blockquote><pre class="code">xterm -name "xterm-3" &amp;</pre></blockquote>

<p>which created the window. As you saw in the section "The fvwm
Window Manager" earlier in this chapter, you can easily set up a menu, mouse button, function
key, and so on, to start the <tt class="command">xterm</tt>.</p>

<p>To close a window, type <tt class="literal">exit</tt> or press Ctrl-D.  If
this capability seems
dangerous to you (because you could lose your window by pressing Ctrl-D
accidentally), start up the <tt class="command">xterm</tt> with the <span class="option">-ls</span> option,
which stands for login shell.  Now you have to enter <tt class="command">logout</tt> to
close the window.
(The option has some other consequences, too.  In the <tt class="command">bash</tt>
shell, it causes your <em class="filename">~/.bash_profile</em> file to run.  In the
C shell, it causes your <em class="filename">~/.login</em> file to run.)</p>
</div>




<div class="sect2">
<h3 class="sect2">11.4.3. Cutting and Pasting Selections</h3>

<p><a name="INDEX-2367" />
<a name="INDEX-2368" />
<a name="INDEX-2369" />
Actually, <tt class="command">xterm</tt> offers a good deal more than a VT100 terminal.  One of
its features is a powerful cut-and-paste capability.</p>

<p>Take another look at <a href="ch11_04.htm">Figure 11-1</a>.  Let's say we
didn't really want the <em class="filename">app-defaults</em> directory; we wanted to
look at the fonts in <em class="filename">/usr/lib/X11/fonts</em> instead.
(This is actually not too interesting; it was an arbitrary choice.)</p>

<p>First, we'll choose the part of the <tt class="command">cd</tt> command that interests
us.  Put the mouse just to the left of the <tt class="literal">c</tt> in <tt class="literal">cd</tt>.
Press the left mouse button, and drag the mouse until it highlights the
slash following <tt class="literal">X11</tt>.  The result is shown in
<a href="ch11_04.htm">Figure 11-7</a>.</p>

<p>Did you include too many characters or too few?  That's all right;
just hold down the Shift key and press the left mouse button
anywhere in the highlighted area.  Now you can make the highlighted
area bigger or smaller.</p>

<a name="x-100-3-xterm-select" /><div class="figure"><img src="figs/rl3_1107.gif" alt="Figure 11-7" /></div>
<h4 class="objtitle">Figure 11-7. Selected text in xterm</h4><p>When the highlighted area covers just the right number of characters,
click the middle button.  <tt class="command">xterm</tt> pastes in what you've selected
on the next command line.  See the result in <a href="ch11_04.htm">Figure 11-8</a>.</p>

<a name="x-100-3-xterm-paste" /><div class="figure"><img src="figs/rl3_1108.gif" alt="Figure 11-8" /></div>
<h4 class="objtitle">Figure 11-8. xterm window after text is pasted</h4><p>Now you can type in the remainder of the directory name <em class="filename">fonts</em>
and press the Enter key to execute the command.</p>

<p>You can select anything you want in the window--output as well as
input.  To select whole words instead of characters, double-click the
left mouse button.  To select whole lines, triple-click it. You can
select multiple lines too.  Selecting multiple lines is not useful
when you're entering commands but is convenient if you're using
the <tt class="command">vi</tt> editor and want to cut and paste a lot of text
between windows.</p>

<p>Be careful: if a long line wraps around, you will end up with a newline
in the selection even though you didn't press the Enter key when you
entered the line.</p>
</div>




<div class="sect2">
<h3 class="sect2">11.4.4. Scrolling</h3>

<p><a name="INDEX-2370" />
Eventually, as you type along in your <tt class="command">xterm</tt>, previous commands
will scroll off the top of the window.  That's why we specified a
scrollbar when we started the <tt class="command">xterm</tt>.  Using it is pretty simple
(as it ought to be with any point-and-click tool), but there are a few
neat tricks.  By the way, the techniques you learn here should work in
most applications that offer scrollbars.  An X application is free to
act any way the programmer designed it to, but most developers use
the same conventions as <tt class="command">xterm</tt>.</p>

<p>First, let's get a lot of text into our window.  Issuing one of the
following commands should suffice:</p>

<blockquote><pre class="code">eggplant$ <tt class="userinput"><b>ls /bin</b></tt>
eggplant$ <tt class="userinput"><b>ls /usr/bin</b></tt>
eggplant$ <tt class="userinput"><b>cat ~/.*</b></tt></pre></blockquote>

<p>Of course, the output will go streaming by too fast for you to see it.  Now we can
go back and look at it.  If you examine the scrollbar area on the left
side of the window, you'll see a little dark area near the bottom.
Its size indicates how much of the output you can currently see, and
its position shows you where you are (at the end).</p>

<p>Place the mouse in the scrollbar area near the bottom, and press the
right mouse button.  This moves you one whole page upward; what used to
be at the top of the screen is now at the bottom.  If you click near
the top of the screen, you move back by just a couple lines.  If you
click near the middle, you move back half a window at a time.  Notice
that the scrollbar moves up as you click the button.</p>

<p>To go back down, click the left mouse button.  Again, clicking near the
top moves you just a couple lines, while clicking near the bottom moves
you a full window's length.</p>

<p>When you have a really big buffer of saved material, you may want to
go to the beginning or end really fast; that's what the middle mouse button
is good for.  Click anywhere in the scrollbar area, and you'll go to
that part of the buffer.  Therefore, click at the top to go to the
beginning, and at the bottom to go to the end.  Or click right on the
scrollbar itself, hold down the button, and drag the scrollbar where
you want to go.</p>

<p>If you're a keyboard kind of person, you don't need to use the mouse
to scroll.  You can also hold down the Shift key and press the Page Up
key to scroll backward, or the Page Down key to scroll forward.  By
the way, the

keys work the same in a virtual console (see the section
"<a href="ch04_03.htm">Section 4.3, "Virtual Consoles"</a>" in <a href="ch04_01.htm">Chapter 4, "Basic Unix
 Commands
 and Concepts"</a>).</p>

<?troff .Nd 10?><p>You'll find that <tt class="command">xterm</tt> does not save much output by default.
To increase the number of lines that are saved, use the
<span class="option">-sl</span> <em class="replaceable">number</em> option or put an entry like the following in
your <em class="filename">.Xdefaults</em> file:</p>

<blockquote><pre class="code">XTerm*saveLines:                400</pre></blockquote>
</div>




<a name="x-100-3-sec-choose-font" /><div class="sect2">
<h3 class="sect2">11.4.5. Choosing Fonts</h3>

<p><a name="INDEX-2371" />
Think your fonts are ugly or too small?  There are plenty of others to
choose from.  Virtually every X application lets you choose the
font used to display each kind of text (menus, and so on). You just have to
know what their names are and what they look like.</p>

<p><a name="INDEX-2372" />
A desktop, as described earlier in this chapter, gives you a simple and
intuitive way to choose a font. If you're not using a desktop, you can
at least view fonts using the <tt class="command">xfontsel</tt> and
<tt class="command">xfd</tt> utilities. But after you find a font you like,
you must copy it into <em class="filename">.Xdefaults</em> or do whatever
else you have to to configure an application.</p>

<p>Fonts on the X Window System have incredibly long names.  A typical
one is:</p>

<blockquote><pre class="code">-misc-fixed-bold-r-normal--13-100-100-100-c-70-iso8859-1</pre></blockquote>

<p>The hyphens divide the fonts into fields.  For now, what interests us
most is the field following the eleventh hyphen, where we see
<tt class="literal">c</tt> in
this example.</p>

<p><a name="INDEX-2373" />
<a name="INDEX-2374" />
For <tt class="command">xterm</tt> and many other applications, what you need is a
<em class="emphasis">monospaced font</em>.  That means a font where every character takes up
the same amount of space, as opposed to <em class="emphasis">proportional fonts</em>,
where an <tt class="literal">m</tt> is wider than an <tt class="literal">i</tt>. Proportional fonts are great
for displaying the output of a text processor like TeX, but they look
horrible when used in a program that's not designed to handle
the variety of spacing.  When the eleventh field of the font name is
<tt class="literal">c</tt> or <tt class="literal">m</tt>, it represents a monospaced font.</p>

<p>Other fields can also help you make a choice.  The third field tells
you whether the font is medium (which means normal weight) or bold.
The seventh field, which says 13 in this example, gives you the size (actually the height of the largest
character in pixels).</p>

<p>Now let's see whether our system has a font with the size and style we
want. Start the utility <tt class="command">xfontsel</tt> from a command
line in an <tt class="command">xterm</tt> window.  It loads all the fonts on
your system and displays a screen where you make your selection.  You can
also restrict the fonts to ones of particular interest, but the syntax
of the command is rather daunting because any field you don't specify
explicitly must be specified as an asterisk:</p>

<blockquote><pre class="code">eggplant$ <tt class="userinput"><b>xfontsel -pattern -*-*-bold-*-*-*-18-*-*-*-m-*-*</b></tt></pre></blockquote>

<p>A typical <tt class="command">xfontsel</tt> display looks like <a href="ch11_04.htm">Figure 11-9</a>.</p>

<a name="x-100-3-xfontsel" /><div class="figure"><img src="figs/rl3_1109.gif" alt="Figure 11-9" />
</div><h4 class="objtitle">Figure 11-9. xfontsel to show fonts</h4><p>Each of the strings such as <tt class="literal">wght</tt> and
<tt class="literal">slant</tt> represents a part of the font name. The font
name in our earlier example has a weight of <tt class="literal">bold</tt> and a
slant of <tt class="literal">r</tt> which stands for roman. The
eleventh field is <tt class="literal">spc</tt>, but we want to be
<tt class="literal">c</tt> or m. So, put your mouse on the
<tt class="literal">spc</tt> field, press the left mouse button to display a
menu, and select either <tt class="literal">c</tt> or <tt class="literal">m</tt> from the
menu. You can then try other fields (to select a size, choose from the
ptSz menu) and view a font matching your
specification.</p>

<p><a name="INDEX-2375" />
An older way of checking available fonts is to use the <tt class="command">xlsfonts</tt>
command.  Just as <tt class="command">ls</tt> lists files, <tt class="command">xlsfonts</tt> lists
fonts.  But if you enter the command without arguments, the volume of
output will overwhelm you.  It's better to figure out what types of
fonts you need and just look at those.</p>

<p>In <tt class="command">xlsfonts</tt>, you specify a font through
the <span class="option">-fn</span> option and use an asterisk to match an arbitrary set
of characters.  If we want to match the third and eleventh fields
exactly, and don't care what the other fields are, we enter:</p>

<blockquote><pre class="code">eggplant$ <tt class="userinput"><b>xlsfonts -fn -*-*-bold-*-*-*-*-*-*-*-m-*-*</b></tt></pre></blockquote>

<p>This tells <tt class="command">xlsfonts</tt> that the first and second
fields can be anything.  But the third must be bold.  The eleventh is
also specified; it's an <tt class="literal">m</tt>.  What we'll see is a
list of monospaced bold fonts.  If none exist, we'll get the message:
<tt class="literal">g</tt>:</p>

<blockquote><pre class="code">xlsfonts: pattern "-*-*-bold-*-*-*-*-*-*-*-m-*-*" unmatched</pre></blockquote>

<p>Now replace the <tt class="literal">m</tt> with a <tt class="literal">c</tt> and look for the rest of the
monospaced fonts.</p>

<p><a name="INDEX-2376" />
Actually, you don't have to use such complicated names.  In our
examples earlier in the chapter, we specified the short name <tt class="literal">7x13bold</tt>.
That kind of name is called an <em class="emphasis">alias</em>; it represents another
name of the longer type.  To see a short list of monospaced fonts
using these aliases, enter:</p>

<blockquote><pre class="code">eggplant$ <tt class="userinput"><b>xlsfonts *x*</b></tt></pre></blockquote>

<?troff .Nd 10?><p>We've gone through a fair amount of trouble already, and all we have
is a list of names.  What do fonts actually look like?  The
<tt class="command">xfontsel</tt> shows you the letters and digits from a font.
<a name="INDEX-2377" />
If you want to see every character in the font, use the <tt class="command">xfd</tt>
command, which stands for "X font display."  It displays a grid with
one rectangle for each character:</p>

<blockquote><pre class="code">eggplant$ <tt class="userinput"><b>xfd -fn -misc-fixed-bold-r-normal--13-100-100-100-c-70-iso8859-1</b></tt></pre></blockquote>

<p>When you find a font you like, cast it in concrete by putting it in
your <em class="filename">.Xdefaults</em> file:</p>

<blockquote><pre class="code">XTerm*Font:           7x13bold</pre></blockquote>
</div>




<div class="sect2">
<h3 class="sect2">11.4.6. Clocks</h3>

<p><a name="INDEX-2378" />
<a name="INDEX-2379" />
How can your screen be complete if it is unadorned by a little
clock that tells you how much time you are wasting on customizing the
screen's appearance?  You can have a clock just the way you want it,
square or round, analog or digital, big or small.  You can even make
it chime.</p>

<p><a name="INDEX-2380" />
The <em class="filename">.xinit</em> file shown earlier in this chapter contains a line
that starts <tt class="command">oclock</tt>:</p>

<blockquote><pre class="code">oclock -geometry 70x70+5+5 &amp;</pre></blockquote>

<p><a name="INDEX-2381" />
Refer to <a href="ch11_01.htm">Figure 11-1</a> to see what this clock looks like.
You may prefer the square outline of the <tt class="command">xclock</tt> program:</p>

<blockquote><pre class="code">xclock -geometry 150x150+5+5 &amp;</pre></blockquote>

<p>Or perhaps a tiny digital clock at the bottom of your screen:</p>

<blockquote><pre class="code">xclock -digital -geometry +10-10</pre></blockquote>

<p><tt class="command">oclock</tt> allows you to scatter more colors about,
while <tt class="command">xclock</tt> gives you more control over other aspects of the
clock; see the manual pages for more information.  To get a beep every
half hour, invoke <tt class="command">xclock</tt> with the <span class="option">-chime</span> option.</p>
</div>




<a name="x-100-3-sec-tools-x-emacs" /><div class="sect2">
<h3 class="sect2">11.4.7. Emacs</h3>

<p><a name="INDEX-2382" />
<a name="INDEX-2383" />
The X features in Emacs are getting spiffier and spiffier.  They
include pull-down menus, different typefaces for
different parts of your window, and a complete integration of
cut-and-paste functions with the X environment.</p>

<blockquote><h4 class="objtitle">NOTE</h4>
<p>Most distributions nowadays also carry XEmacs, a
		  version of Emacs that integrates even better into the X
		  Window System and has a much nicer and more user-friendly
		  appearance. You might want to try it out. Most of the
		  concepts here apply to XEmacs, too.</p>
</blockquote>

<p><a name="INDEX-2384" />
Let's start by defining some nice colors for different parts of the
Emacs window.  Try this command:</p>

<blockquote><pre class="code">eggplant$ <tt class="userinput"><b>emacs  -bg ivory  -fg slateblue  -ms orangered  -cr brown</b></tt></pre></blockquote>

<p>You are setting the background color, foreground color, mouse color,
and cursor color respectively.  The cursor is the little rectangle
that appears in the window, representing what's called "point" in
Emacs--the place where you type in text.  We'll return to colors
soon.</p>

<p><a name="INDEX-2385" />
<a name="INDEX-2386" />
When you start Emacs, the menu bar on top and the scrollbar on the
right side of the window stand out.  See <a href="ch11_04.htm">Figure 11-10</a>.</p>

<a name="x-100-3-emacs-start" /><div class="figure"><img src="figs/rl3_1110.gif" alt="Figure 11-10" /></div>
<h4 class="objtitle">Figure 11-10. Emacs window</h4><p>The scrollbar works just like the <tt class="command">xterm</tt> scrollbar.  The menu
bar offers a lot of common functions.  Some editing modes, like C and
TeX, have their own pull-down menus.  The menus are not documented,
so you will just have to experiment and try to figure out which
Emacs functions they correspond to.</p>

<p>When you want to use a function that doesn't have a simple key
sequence--or you've forgotten the sequence--the menus come in
handy. For instance, if you rarely use a regular expression
search (a quite powerful feature, well worth studying), the
easiest way to invoke it is to pull down the Edit menu and
choose Regexp Search.</p>

<p><a name="INDEX-2387" />
Another useful menu item is Choose Next Paste on the Edit
menu.  This offers something you can't get any other way: a list of
all the pieces of text you've cut recently.  In other words, it shows
you the kill ring.  You can choose the text you want to paste in next,
and the next time you press <tt class="literal">C-y</tt>,
it's put into your buffer.</p>

<p>If you get tired of the scrollbar and the menu, put the following <span class="acronym">LISP</span>
code in your <em class="filename">.emacs</em> file to make them go away:</p>

<blockquote><pre class="code">(if (getenv "DISPLAY")
    (progn (menu-bar-mode -1)
           (scroll-bar-mode -1))
   )</pre></blockquote>

<p><a name="INDEX-2388" />
<a name="INDEX-2389" />
<a name="INDEX-2390" />
The mouse is the next X feature with interesting possibilities.  You
can cut and paste text much the same way as in <tt class="command">xterm</tt>.  And you
can do this between windows; if you see some output in an
<tt class="command">xterm</tt> you'd like to put in a file, you can copy it from
the <tt class="command">xterm</tt> and paste it into your Emacs buffer.  Moreover, any
text you cut the normal way (such as through <tt class="literal">C-w</tt>)
goes into the same selection as text you cut with the mouse.  So you
can cut a few words from your Emacs buffer and paste them into an
<tt class="command">xterm</tt>.</p>

<p>The right mouse button works a little unusually.  If you select
text with the left mouse button, you can click once on the right mouse
button to copy it.  A second click on the right mouse button removes it.  To paste it back, press
the middle mouse button.  The text goes just before the character the
mouse is currently on. <a name="INDEX-2391" />
Make a mistake?  That's all right; the undo command reverses it just
as for any other Emacs function.  (Choose Undo from the Edit menu or just press the <tt class="literal">C-_</tt> key.)</p>

<p>If you really love mouse work, you can define the buttons to execute
any functions you want, just as with keys.  Try putting the following
command in your <em class="filename">.emacs</em> file.  When you hold down the Shift key
and press the left mouse button, a buffer for composing a mail message
appears:</p>

<blockquote><pre class="code">(define-key global-map [S-mouse-1] 'mail)</pre></blockquote>

<p>We don't recommend you redefine the existing mouse functions, but
the Shift, Control, and Meta keys offer plenty of unused
possibilities.  Combine <tt class="literal">S-</tt>, <tt class="literal">C-</tt>, and <tt class="literal">M-</tt> any way you
want in your definitions:</p>

<blockquote><pre class="code">(define-key global-map [S-C-mouse-1] 'mail)</pre></blockquote>

<p><a name="INDEX-2392" />
Now let's play around a bit with windows.  Emacs has had windows of
its own for decades, of course, long before the X Window System
existed.  So an Emacs window is not the same as an X window.  What X
considers a window, Emacs calls a <em class="emphasis">frame</em>.</p>

<p>How would you like to edit in two frames at once?  Press
<tt class="literal">C-x 5 2</tt>, and another frame appears.  The new frame is
simply another view onto the same editing session.  You can edit
different buffers in the two frames, but anything you do in one frame
is reflected to the corresponding buffer in the other.  When you exit
Emacs by pressing <tt class="literal">C-x</tt> <tt class="literal">C-c</tt>, both
frames disappear; if you want to close just one frame, press
<tt class="literal">C-x 5 0</tt>.</p>

<p><a name="INDEX-2393" /> 
To end our exploration of Emacs on the X
Window System, we'll look at the exciting things you can do with
colors.  You can change these during an Emacs session, which makes it
easy to play around with different possibilities.  Press
<tt class="literal">M-x</tt>, then type
<tt class="literal">set-background-color</tt> and press the Enter key.  At
the prompt, type <tt class="literal">ivory</tt> or whatever other color you've
chosen.  (Remember, Emacs uses the convention <tt class="literal">M-x</tt>
where we use Meta-x or Alt-x in
the rest of the book.)</p>

<p><a name="INDEX-2394" />
<a name="INDEX-2395" />
Be careful to make the foreground and background different enough so
that you can see the text!  In addition to
<tt class="literal">set-background-color</tt>, Emacs offers
<tt class="literal">set-foreground-color</tt>, <tt class="literal">set-cursor-color</tt>, and
<tt class="literal">set-mouse-color</tt>.</p>

<p>These settings may seem idle play, but now they show their true colors
when you let Emacs highlight different parts of your buffer in
different ways.  For instance, when you are programming in C or
<span class="acronym">LISP</span>,
you can display strings, comments, function names, and keywords in
different colors.</p>

<p><a name="INDEX-2396" />
To set up color coding, you have to set <tt class="literal">font-lock</tt> mode.  The
easiest way to do this is in your <em class="filename">.emacs</em> start-up file; add
lines like the following:</p>

<blockquote><pre class="code">(require 'font-lock)
(setq global-font-lock-mode t)
(setq font-lock-maximum-decoration t)</pre></blockquote>

<p>These rather complicated commands tell each major mode to set the font
lock whenever you open a buffer in that mode.  So whenever you edit a
file ending with the suffix <em class="filename">.c</em>, for instance, you automatically
set the font lock.</p>

<p><a name="INDEX-2397" />
Next, you want to play with the font faces, which are the different kinds of
text defined by Emacs.  Press <tt class="literal">M-x</tt> and enter the
command <tt class="literal">list-faces-display</tt>.  You'll see a list like the
following:</p>

<blockquote><pre class="code">               bold abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ
        bold-italic abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ
            default abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ
          highlight abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ
             italic abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ
           modeline abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ
             region abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ
secondary-selection abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ
          underline abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ</pre></blockquote>

<p>You can now set the background and foreground of each face
interactively.  Here is an example:</p>

<ol><li><p>
Enter <tt class="literal">M-x set-face-background.</tt></p></li><li><p>
Type <tt class="literal">modeline</tt> at the first prompt.</p></li><li><p>
Type <tt class="literal">lemonchiffon</tt> at the second prompt.</p></li></ol>
<?troff .Nd 10?><p>You see the results immediately.
Then set the foreground:</p>

<ol><li><p>
Enter <tt class="literal">M-x set-face-foreground.</tt></p></li><li><p>
Type <tt class="literal">modeline</tt> at the first prompt.</p></li><li><p>
Type <tt class="literal">green</tt> at the second prompt.</p></li></ol><p>No, that probably doesn't offer enough contrast for you to read the
words.  So do it again and use the color <tt class="literal">maroon</tt>.  That looks
better.</p>

<p>Find a buffer with C or <span class="acronym">LISP</span> code in it and try setting each of the
other faces.  Faces are assigned rather arbitrarily to elements of the
code.  As you add colors, new dimensions will be revealed in your
code.  For instance, in C or C++ mode:</p>

<ul><li><p>
Comments and preprocessor keywords appear in <em class="emphasis">italic</em>.</p></li><li><p>
Strings and include filenames appear in 
<u class="emphasis-underline">underline</u>.</p></li><li><p>
Function names and defined variables appear in <em class="emphasis"><b class="emphasis-bold">bold-italic</b></em>.</p></li></ul><p>It probably looks best to reserve the bolder colors for short, rarely
seen pieces of text.</p>

<p>When you find a set of colors you like, hard-wire them into your
<em class="filename">.emacs</em> file by using the <span class="acronym">LISP</span> functions that correspond to the
commands you've been experimenting with.  Here's a sample set:</p>

<blockquote><pre class="code">(set-background-color "ivory")
(set-foreground-color "slateblue")
(set-cursor-color "brown")
(set-mouse-color "orangered")
(set-face-foreground 'bold "black")
(set-face-background 'bold "lightpink")
(set-face-foreground 'bold-italic "red")
(set-face-background 'bold-italic "wheat")
(set-face-foreground 'italic "darkolivegreen")
(set-face-background 'modeline "lemonchiffon")
(set-face-foreground 'modeline "maroon")
(set-face-foreground 'underline "violet")</pre></blockquote>

<p>You can also set colors in your <em class="filename">.Xdefaults</em> file, but that takes
a little more effort, so we won't bother to explain it here.</p>

<a name="INDEX-2398" /><a name="INDEX-2399" />
</div>




<div class="sect2">
<h3 class="sect2">11.4.8. Ghostview: Displaying PostScript</h3>

<p><a name="INDEX-2400" />
<a name="INDEX-2401" />
Adobe PostScript, as a standard in its own right, has become one of
the most popular formats for exchanging documents in the computer
world.  Many academics distribute papers in PostScript format.  The
Linux Documentation Project offers its manuals in PostScript form,
among others.  This format is useful for people who lack the time to format
LaTeX input, or who have immense network bandwidth for transferring
files.  When you create documents of your own using <tt class="command">groff</tt> or
TeX, you'll want to view them on a screen before you use
up precious paper resources by printing them.</p>

<p>Ghostview, a <span class="acronym">GNU</span> application, offers a pleasant environment for
viewing PostScript on the X Window System.  It's very simple; invoke
it with the name of the file to be displayed, for instance:</p>

<blockquote><pre class="code">eggplant$ <tt class="userinput"><b>ghostview article.ps</b></tt></pre></blockquote>

<p><a name="INDEX-2402" />
The Ghostview window is huge; it can easily take up most of your
screen.  The first page of the document is displayed with a vertical
scrollbar on the right and a horizontal one on the bottom.  Menu
options appear on the left side of the window, and page numbers just
to their right.</p>

<p>Like most X applications, Ghostview offers both menu options and keys
(accelerators) for common functions.  Thus, to view the next page, you
can pull down the Page menu and choose the Next option.
Or you can just press the space bar.</p>

<p>To go back to the previous page, choose Previous
from the Page menu.  To go to any page you want, press the middle mouse button on
its number in the number column.  To exit, choose Quit from the
File menu or just press <tt class="literal">q</tt>.</p>

<p><a name="INDEX-2403" />
Documents from different countries often use different page sizes.
The Ghostview default is the standard U.S. letter size
(this can be overridden by comments in the PostScript file).
You can specify a different size on the command line:</p>

<blockquote><pre class="code">eggplant$ <tt class="userinput"><b>ghostview -a3 article.ps</b></tt></pre></blockquote>

<p>or in your <em class="filename">.Xdefaults</em> file:</p>

<blockquote><pre class="code">Ghostview*pageMedia:            A3</pre></blockquote>

<p>Finally, you can also choose a different size at runtime from the
Media menu.</p>

<p><a name="INDEX-2404" />
Ghostview lets you enlarge or reduce the size of the page, a
useful feature for checking the details of your formatting work.  (But
be warned that fonts on the screen are different from the fonts on a
printer, and therefore the exact layout of characters in
Ghostview will not be the same as that in the hard copy.)  To
zoom in on a small part of the page, press any mouse button on
it.  (The right mouse button enlarges the most; the left mouse button
the least.)</p>

<p>You can also change the default size for displaying the whole document
by using the Magstep menu.  The higher the number you choose,
the more the document is enlarged.  Negative numbers reduce the size
of the document.</p>

<p><a name="INDEX-2405" />
To print a page, choose Print from the
File menu or
press <tt class="literal">p</tt> anywhere in the window.  You are prompted to make sure
that you've chosen the right printer; you can erase what is shown
there and enter a different name.  The name shown comes from your
environment.  So, if your printer is named <b class="emphasis-bold">doorway</b>, you should
have issued a shell command in your startup file like:</p>

<blockquote><pre class="code">export PRINTER=doorway</pre></blockquote>

<p>You can also print several pages.  Select individual ones by clicking
on their numbers with the middle mouse button.  Or select the first page
with the left mouse button, and the last page with the right mouse
button; the whole range of pages will be printed when you press <tt class="literal">p</tt>.</p>

<blockquote><h4 class="objtitle">NOTE</h4>
<p>KDE comes with its own version
		  of Ghostview, called <tt class="command">kghostview</tt>, which is
<a name="INDEX-2406" />
<a name="INDEX-2407" />
		  really just Ghostview with a more user-friendly interface
		  and a nicer appearance. You can run
		  <tt class="command">kghostview</tt> even if you do not plan to run
		  the rest of KDE.</p>

<p>Another option would be to use <tt class="command">gv</tt>,
		which has become quite popular lately.</p>
</blockquote>
</div>




<a name="x-100-3-sec-tools-x-xman" /><div class="sect2">
<h3 class="sect2">11.4.9. xman: A Point-and-Click Interface to Manual Pages</h3>

<p><a name="INDEX-2408" />
<a name="INDEX-2409" />
<a name="INDEX-2410" />
Manual pages, read through the <tt class="command">man</tt> command, are the ultimate
authority on a Unix system.  Other books can describe a significant
percentage of any given command's functions--and often describe
them in a more readable fashion--but only the manual page has all the

details.  See the section "<a href="ch04_12.htm">Section 4.12, "Manual Pages"</a>" in
<a href="ch04_01.htm">Chapter 4, "Basic Unix
 Commands
 and Concepts"</a> for basic information.</p>

<p>Now there's a simple X interface to manual pages: the <tt class="command">xman</tt> command.
As befits a tool that displays documents, it contains a pretty good
description of itself.  In order to see this documentation clearly,
start up the program with a large page size:</p>

<blockquote><pre class="code">eggplant$ <tt class="userinput"><b>xman -pagesize 650x600</b></tt></pre></blockquote>

<p>What you see first is a tiny box with three buttons.  Click on the
Manual Page button to bring up the main screen, where you'll do
most of your work.</p>

<p>Now you see the <tt class="command">xman</tt> documentation.  You'll have plenty of time
to read this; for now, just pull down the Options menu and
choose Search, or press Ctrl-S.  (You can also display the
options menu by holding down the Control key and pressing the
left mouse button.)  In the box that pops up, type in a command
or function you'd like to read about, then press the Enter key.
The contents of the main window are replaced by the corresponding
manual page.</p>

<p>If you don't know what to look for, try pulling down the Sections
menu or pressing the Control key along with the middle
button.  Choose a section from the menu that appears.  You'll see a
long list of manual pages.  Click the left button on one of them,
and the document will be displayed.</p>

<p>
<a name="INDEX-2411" />
Another time-honored way to look for information is through the
<tt class="command">apropos</tt> command (discussed already in the section
"<a href="ch04_12.htm">Section 4.12, "Manual Pages"</a>" in
<a href="ch04_01.htm">Chapter 4, "Basic Unix
 Commands
 and Concepts"</a>).  Press Ctrl-S
again, type in a word about a
subject you're interested in, and press the Apropos button.  If
any manual pages match that word, their names will be displayed along
with short descriptions.  Unfortunately, you can't call up their
manual pages by clicking on them; that little convenience was left out
of <tt class="command">xman</tt>.  You have to press Ctrl-S and type in the page that
looks interesting.</p>

<p>Within a manual page, scrolling is easy.  Use the space bar or <tt class="literal">f</tt> to
move down a page, <tt class="literal">b</tt> to move up.  You can also use the scrollbar,
just as in <tt class="command">xterm</tt>.</p>

<p>Now you can read the documentation!  Press the Help button on the small
window that appeared when you started <tt class="command">xterm</tt>.  To exit the
program, press Ctrl-Q or the Quit button, or choose Quit
from the Options menu.</p>

<p>If you think that <tt class="command">xman</tt> is still too
		bare-bones and not much of an improvement over the
		command-line <tt class="command">man</tt> command, you can try one
		of its more advanced companions. For example,
<a name="INDEX-2412" />
		<tt class="command">tkman</tt> has a much nicer user interface and
		features advanced navigation possibilities. The KDE
<a name="INDEX-2413" />
<a name="INDEX-2414" />
		help system,
		<tt class="command">kdehelp</tt>, can display manual and info pages
		in addition to its own HTML pages and thus unifies the three
		major documentation formats on Linux.</p>

<a name="INDEX-2415" /><a name="INDEX-2416" />
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch11_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch12_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">11.3. The K Desktop Environment</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">12. Windows
 Compatibility
 and Samba</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>