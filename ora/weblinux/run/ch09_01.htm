<?label 9. Editors, Text Tools,
 Graphics,
 and Printing?><html><head><title>Editors, Text Tools,
 Graphics,
 and Printing (Running Linux)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Running Linux" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch08_06.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm" /></td><td width="172" valign="top" align="right"><a href="ch09_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h1 class="chapter">Chapter 9. Editors, Text Tools,
 Graphics,
 and Printing</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch09_01.htm">Editing Files Using vi</a><br />
<a href="ch09_02.htm">The Emacs Editor</a><br />
<a href="ch09_03.htm">Text and Document Processing</a><br />
<a href="ch09_04.htm">Graphics</a><br />
<a href="ch09_05.htm">Printing</a><br /></p></div>

<a name="INDEX-1982" /><a name="INDEX-1983" /><p>In the next few chapters, we'll introduce a number of popular
applications for Linux.  We'll start here with text editing, which
underlies nearly every activity on the system.  (You need an editor to
create a file of more than trivial size, whether it is a program to be
compiled, a configuration file for your system, or a mail message to
send to a friend.)  On a related topic, we'll show you some text
formatters that can make attractive documents and utilities that
manage printing.</p>

<div class="sect1"><a name="x-100-3-sec-tools-vi" />
<h2 class="sect1">9.1. Editing Files Using vi</h2>

<p><a name="INDEX-1984" />
In this section, we're going to cover the use of the
<tt class="command">vi</tt> (pronounced "vee-eye") text editor.
<tt class="command">vi</tt> 
was the first real screen-based editor
for Unix systems. It is also simple, small, and sleek.
If you're a system administrator, learning <tt class="command">vi</tt> can be 
invaluable; in many cases, larger editors, such as Emacs, won't
be available in emergency situations (for instance, when booting
Linux from a maintenance disk).</p>

<p><tt class="command">vi</tt> is based on the same principles as many other
Unix applications: that each program should provide
a small, specific function and be able to interact with other
programs. For example, <tt class="command">vi</tt> doesn't include its own
spellchecker, or paragraph filler, but those features are provided by
other programs that are easy to fire off from within
<tt class="command">vi</tt>. Therefore, <tt class="command">vi</tt> itself is a
bit limited, but is able to interact with other applications to
provide virtually any functionality you might want.</p>

<p>At first, <tt class="command">vi</tt> may appear to be somewhat complex and
unwieldy. However, its single-letter commands are fast and powerful
once you've learned them. In the next section, we're going to describe
Emacs, a more flexible editor (really an integrated work
environment) with an easier learning curve. Do keep
in mind that knowing <tt class="command">vi</tt> may be essential to you if
<a name="INDEX-1985" />
you are in a situation where Emacs is not available, so we encourage
you to learn the basics, as odd as they may seem. It should also be
added that there are now a number of <tt class="command">vi</tt> clones
available that are much more comfortable to use than the original
<a name="INDEX-1986" />
<a name="INDEX-1987" />
<tt class="command">vi</tt>. These include <tt class="command">vim</tt> (<tt class="command">vi</tt>
 improved) and <tt class="command">nvi</tt> (new <tt class="command">vi</tt>). Chances are that your
distribution has things set up so that when starting
<tt class="command">vi</tt>, you actually start one of those. We'll stick to 
the basics here, though so that you can use the information presented
here no matter which version of <tt class="command">vi</tt> you
use. You can find coverage of the newer versions in the book <em class="emphasis">Learning the vi Editor</em>
by Linda Lamb and Arnold Robbins.</p>

<div class="sect2">
<h3 class="sect2">9.1.1. Starting vi</h3>

<p>Let's fire up <tt class="command">vi</tt> and edit a file. 
The syntax for <tt class="command">vi</tt> is:
<?troff-ps_indent0?>
<blockquote><pre class="code">vi <em class="replaceable">filename</em></pre></blockquote>


For example:

<blockquote><pre class="code">eggplant$ <tt class="userinput"><b>vi test</b></tt></pre></blockquote>


will edit the file <em class="filename">test</em>.
Your screen should look like this:
<a name="INDEX-1988" />
<a name="INDEX-1989" />

<blockquote><pre class="code"><u class="emphasis-underline"> </u>
~
~
~
~
~
"test" [New file]</pre></blockquote></p>

<p>The column of <tt class="literal">~</tt> characters indicates that
you are at the end of the file.</p>
</div>




<div class="sect2">
<h3 class="sect2">9.1.2. Inserting Text and Moving Around</h3>

<p><a name="INDEX-1990" />
<a name="INDEX-1991" />
While using <tt class="command">vi</tt>, at any one time you are in one of 
three modes of operation. These modes are known as <em class="emphasis">command mode</em>, 
<em class="emphasis">edit mode</em>, and <em class="emphasis">ex mode</em>.</p>

<p><a name="INDEX-1992" />
<a name="INDEX-1993" />
After starting <tt class="command">vi</tt>, you are in command mode. This mode allows
you to use a number of (usually single-letter) commands to modify text,
as we'll see soon. Text is actually inserted and modified within edit mode.
To begin inserting text, press <tt class="literal">i</tt> (which will 
place you into edit mode) and begin typing:  

<blockquote><pre class="code">Now is the time for all good men to come to the aid of the party<u class="emphasis-underline">.</u> 
<?troff \c?>

~
~
~
~
~</pre></blockquote></p>

<p>While inserting text, you may type as many lines as you wish (pressing
the Enter key after each, of course), and you may correct mistakes
using the Backspace key. To end edit mode and return to command mode, 
press the Esc key).</p>

<p>While in command mode, you can use the arrow keys to move around the
file. Alternatively, you may use <tt class="literal">h</tt>,
<tt class="literal">j</tt>, <tt class="literal">k</tt>, and <tt class="literal">l</tt>,
which move the cursor left, down, up, and right, respectively.</p>

<p>There are several ways to insert text other than using the
<tt class="literal">i</tt> command. The <tt class="literal">a</tt> command (for
"append") inserts text <em class="emphasis">after</em> the
current cursor position.  For example, use the left arrow key to move
the cursor between the words <tt class="literal">good</tt> and <tt class="literal">men</tt>:

<blockquote><pre class="code">Now is the time for all good<u class="emphasis-underline"> </u>men to come to the aid of the party. 
<?troff \c?>

~
~
~
~
~</pre></blockquote></p>

<p>Press <tt class="literal">a</tt>, type <tt class="literal">wo</tt>, and then press
Esc to return to command mode:
<blockquote><pre class="code">Now is the time for all good w<u class="emphasis-underline">o</u>men to come to the aid of the party. 
<?troff \c?>

~
~
~
~
~</pre></blockquote></p>

<p>To open a line below the current one and begin inserting text, use
the <tt class="literal">o</tt> command. Press <tt class="literal">o</tt> and type another line or two:
<blockquote><pre class="code">Now is the time for all good women to come to the aid of the party. 
Afterwards, we'll go out for pizza and beer<u class="emphasis-underline">.</u>
<?troff \c?>

~
~
~
~</pre></blockquote></p>

<p>Remember that at any time you're either in command mode (where
commands such as <tt class="literal">i</tt>, <tt class="literal">a</tt>, or <tt class="literal">o</tt> are valid) or in
edit mode (where you're inserting text, followed by Esc to 
return to command mode). If you're not sure which mode you're in,
press Esc.  This takes you out of edit mode, if you are in it, and
does nothing except beep if you're already in command mode.</p>
</div>




<div class="sect2">
<h3 class="sect2">9.1.3. Deleting Text and Undoing Changes</h3>

<p><a name="INDEX-1994" />
From command mode, the <tt class="literal">x</tt> command deletes the character under the
cursor. If you press <tt class="literal">x</tt> five times, you end up with
the following:
<blockquote><pre class="code">Now is the time for all good women to come to the aid of the party. 
Afterwards, we'll go out for pizza and<u class="emphasis-underline"> </u> 
<?troff \c?>

~ 
~ 
~ 
~</pre></blockquote></p>

<p>Now press <tt class="literal">a</tt> and insert some text, followed by Esc:
<blockquote><pre class="code">Now is the time for all good women to come to the aid of the party. 
Afterwards, we'll go out for pizza and Diet Coke<u class="emphasis-underline">.</u> 
<?troff \c?>

~ 
~ 
~ 
~</pre></blockquote></p>

<p>You can delete entire lines using the command <tt class="command">dd</tt> (that is, 
press <tt class="literal">d</tt> twice in a row). If your cursor is on the second line,
<tt class="command">dd</tt> will produce the following:
<blockquote><pre class="code"><u class="emphasis-underline">N</u>ow is the time for all good women to come to the aid of the party. 
~ 
~ 
~ 
~ 
~</pre></blockquote></p>

<p><a name="INDEX-1995" />
Text that is deleted may be reinserted using the <tt class="command">p</tt> command (for
"put"). Pressing <tt class="literal">p</tt> now will return the deleted line to the buffer
after the current line. Using <tt class="literal">P</tt> (uppercase) instead will insert the text
before the current line.
By default, <tt class="command">p</tt> and <tt class="command">P</tt> insert text from the "undo buffer"; you can 
also yank and replace text from other buffers, as we'll see later.</p>

<p>The <tt class="literal">u</tt> command undoes the latest change (in this case, pressing <tt class="literal">u</tt>
after <tt class="literal">dd</tt> is equivalent to <tt class="literal">p</tt>). If you inserted a
large amount of text using the <tt class="command">i</tt> command, pressing <tt class="literal">u</tt> immediately
after returning to command mode would undo it.</p>

<p>To delete the word beneath the cursor, use the <tt class="literal">dw</tt> command.
Place the cursor on the word <tt class="literal">Diet</tt> and type <tt class="literal">dw</tt>:
<blockquote><pre class="code">Now is the time for all good women to come to the aid of the party. 
Afterwards, we'll go out for pizza and <u class="emphasis-underline">C</u>oke. 
<?troff \c?>

~ 
~ 
~ 
~</pre></blockquote></p>
</div>




<div class="sect2">
<h3 class="sect2">9.1.4. Changing Text</h3>

<p><a name="INDEX-1996" />
You can replace text using the <tt class="literal">R</tt> command, which overwrites the
text beginning at the cursor. Place the
cursor on the first letter in <tt class="literal">pizza</tt>, press <tt class="literal">R</tt>, and type:
<blockquote><pre class="code">Now is the time for all good women to come to the aid of the party. 
Afterwards, we'll go out for burgers and fries<u class="emphasis-underline">.</u> 
<?troff \c?>

~ 
~ 
~ 
~</pre></blockquote></p>

<p>The <tt class="literal">r</tt> command replaces the single character under the cursor.
<tt class="literal">r</tt> does not place you in insert mode per se, so there is no reason
to use Esc to return to command mode.</p>

<p>The <tt class="literal">~</tt> command changes the case of the letter under the
cursor from upper to lowercase, and vice versa. If you 
place the cursor on the <tt class="literal">o</tt> in <tt class="literal">Now</tt>
in the previous example, and repeatedly press
<tt class="literal">~</tt>, you end up with the following:
<blockquote><pre class="code">NOW IS THE TIME FOR ALL GOOD WOMEN TO COME TO THE AID OF THE PARTY<u class="emphasis-underline">.</u> 
<?troff \c?>

Afterwards, we'll go out for burgers and fries. 
~ 
~ 
~ 
~</pre></blockquote>

Another useful command for changing words is the <tt class="literal">cw</tt> 
command, which lets you simply type in the new word and--after
pressing Ecs--removes anything that might be left
over from the original word.</p>
</div>




<div class="sect2">
<h3 class="sect2">9.1.5. Moving Commands</h3>

<p><a name="INDEX-1997" />
You already know how to use the arrow keys to move around the document.
In addition, the <tt class="literal">w</tt> command moves the cursor to the beginning of the 
next word; <tt class="literal">b</tt> moves it to the beginning of the current word. 
The <tt class="literal">0</tt> (that's a zero) command moves the cursor to the beginning of
the current line, and the <tt class="literal">$</tt> command moves it to the end of the line.</p>

<p>When editing large files, you'll want to move forward or backward through
the file a screen at a time. Pressing Ctrl-F moves the cursor
one screen. forward, and Ctrl-B moves it a screen backward.</p>

<p>In order to move the cursor to the end of the file, type <tt class="literal">G</tt>. You can
also move to an arbitrary line: the command
<tt class="literal">10G</tt> would move the cursor to line 10 in the file. To move to the
beginning of the file, use <tt class="literal">1G</tt>.</p>

<p> 
Typing <tt class="literal">/</tt> followed by a pattern and the Enter key causes you to
jump to the first occurrence
of that pattern in the text following the cursor.
For example, placing the cursor on the first line of text in our example,
and typing <tt class="literal">/burg</tt> moves the cursor to the beginning of the word
"burgers." Using <tt class="literal">?</tt> instead of <tt class="literal">/</tt> searches backward through
the file.</p>

<p>The pattern following a <tt class="literal">/</tt> or <tt class="literal">?</tt> command is actually a 
<em class="emphasis">regular expression</em>. Regular expressions are a powerful way to 
specify patterns for search and replace operations and are used by 

many Unix utilites. (The manual page for <tt class="command">ed</tt> describes regular expressions 
in some detail.) Using regular expressions, you could, for example, 
search for the next uppercase letter, using the command:
<blockquote><pre class="code">/[A-Z]</pre></blockquote>

Therefore, if the pattern you're searching for is not 
a static string, regular expressions can be used to specify just
what you want.</p>

<p>You can couple moving commands with other commands, such as deletion.
For example, the command <tt class="literal">d$</tt> will delete everything from the
cursor to the end of the line; <tt class="literal">dG</tt> will delete everything from the
cursor to the end of the file.</p>
</div>




<div class="sect2">
<h3 class="sect2">9.1.6. Saving Files and Quitting vi</h3>

<p><a name="INDEX-1998" />
<a name="INDEX-1999" />
<a name="INDEX-2000" />
Most of the commands dealing with files within <tt class="command">vi</tt> are
invoked from ex mode. You enter ex mode when you
press the <tt class="literal">:</tt> key from command mode. This places the cursor on
the last line of the display, allowing you to enter various
extended
<?troff -p?> commands.</p>

<p>For example, to write the file being edited, use the command
<tt class="literal">:w</tt>. Typing <tt class="literal">:</tt> causes you to enter <tt class="command">ex</tt> mode, and
typing <tt class="literal">w</tt> followed by the Enter key completes the command.
The command <tt class="literal">:wq</tt> writes the file and exits <tt class="command">vi</tt>.
(The command <tt class="literal">ZZ</tt>--from command mode, without the "<tt class="literal">:</tt>"--is
equivalent to <tt class="literal">:wq</tt>.</p>

<p>To quit <tt class="command">vi</tt> without saving changes to the file, use the
command <tt class="literal">:q!</tt>. Using <tt class="literal">:q</tt> alone will quit <tt class="command">vi</tt>, but only
if modifications to the file have been saved. The <tt class="literal">!</tt> in 
<tt class="literal">:q!</tt> means to quit <tt class="command">vi</tt>--and that you really mean it.</p>
</div>




<div class="sect2">
<h3 class="sect2">9.1.7. Editing Another File</h3>

<p>To edit another file, use the <tt class="literal">:e</tt> command. For example, 
to stop editing <em class="filename">test</em>, and edit the file <em class="filename">foo</em> instead, use
the command shown at the bottom of the following box:
<blockquote><pre class="code">NOW IS THE TIME FOR ALL GOOD WOMEN TO COME TO THE AID OF THE PARTY. 
Afterwards, we'll go out for burgers and fries. 
~ 
~ 
~ 
~ 
:e foo<u class="emphasis-underline"> </u>
<?troff \c?>

</pre></blockquote></p>

<p>If you use <tt class="literal">:e</tt> without writing the file first,
you'll get the error message:
<blockquote><pre class="code"><span class="emphasis-reverse">No write since last change (:edit! overrides)</span></pre></blockquote>


At this point, you can use <tt class="literal">:w</tt> to save the
original file, and then use <tt class="literal">:e</tt>, or you can use the command
<tt class="literal">:e!</tt> <tt class="literal">foo</tt>, which tells
<tt class="command">vi</tt> to edit the
new file without saving changes to the original.</p>
</div>




<div class="sect2">
<h3 class="sect2">9.1.8. Including Other Files</h3>

<p><a name="INDEX-2001" />
If you use the <tt class="literal">:r</tt> command, you can include the contents of another
file in the <tt class="command">vi</tt> buffer. For example, the command:
<blockquote><pre class="code">:r foo.txt</pre></blockquote>

inserts the contents of the file <em class="filename">foo.txt</em>
after the current line.</p>
</div>




<div class="sect2">
<h3 class="sect2">9.1.9. Running Shell Commands</h3>

<p><a name="INDEX-2002" />
<a name="INDEX-2003" />
The <tt class="literal">:!</tt> command allows you to enter the name of a command, 
which is executed within <tt class="command">vi</tt>. For example, the command:
<blockquote><pre class="code">:! ls -F</pre></blockquote>

executes the <tt class="command">ls</tt> command and displays the results on your screen.</p>

<p>The <tt class="literal">:r !</tt> command is similar to <tt class="literal">:!</tt>, but
includes the standard output of the command in the buffer. The command:
<blockquote><pre class="code">:r! ls -F</pre></blockquote>

produces the following:
<blockquote><pre class="code">NOW IS THE TIME FOR ALL GOOD WOMEN TO COME TO THE AID OF THE PARTY. 
Afterwards, we'll go out for burgers and fries. 
letters/ 
misc/ 
papers<u class="emphasis-underline">/</u> 
<?troff \c?>

~</pre></blockquote></p>

<p>If you need to execute a series of shell commands,
it's often easier to use the suspend key (usually Ctrl-Z),
provided you're using a shell that supports job control, such as
<tt class="command">tcsh</tt> or <tt class="command">bash</tt>.</p>
</div>




<div class="sect2">
<h3 class="sect2">9.1.10. Global Searching and Replacing</h3>

<p><a name="INDEX-2004" />
<a name="INDEX-2005" />
There are many more features of <tt class="command">vi</tt> than are documented here; most
of these features are simply implemented through combinations of the
simple features we've seen. Here are one or two other 
tidbits most <tt class="command">vi</tt> users find useful.</p>

<p>The command:
<blockquote><pre class="code">:[<em class="replaceable">x</em>,<em class="replaceable">y</em>]s/<em class="replaceable">pattern</em>/<em class="replaceable">replacement</em>/<em class="replaceable">flags</em></pre></blockquote>

searches for <em class="replaceable">pattern</em> between lines <em class="replaceable">x</em> and <em class="replaceable">y</em> 
in the buffer, and replaces instances of <em class="replaceable">pattern</em> with the
<em class="replaceable">replacement</em> text. <em class="replaceable">pattern</em> is a regular expression;
<em class="replaceable">replacement</em> is literal text but can contain several special
characters to refer to elements in the original <em class="replaceable">pattern</em>.
The following command
replaces the first occurrence of <tt class="literal">weeble</tt> with <tt class="literal">wobble</tt> on lines
1 through 10 inclusive:
<blockquote><pre class="code">:1,10s/weeble/wobble</pre></blockquote></p>

<p>Instead of giving line-number specification, you can use the <tt class="literal">%</tt>
symbol to refer to the entire file. Other special symbols can be used
in place of <em class="replaceable">x</em> and <em class="replaceable">y</em>. <tt class="literal">$</tt> refers to the 
last line of the file. Leave <em class="replaceable">x</em> or
<em class="replaceable">y</em> blank to refer to the current line.</p>

<p><a name="INDEX-2006" />
Among the <em class="replaceable">flags</em> you can use are <tt class="literal">g</tt> to replace all
instances of <em class="replaceable">pattern</em> on each line, and <tt class="literal">c</tt> to ask for 
confirmation for each replacement. In most instances, you will want to use
the <tt class="literal">g</tt> flag, unless you want to replace only the first occurrence of 
<em class="replaceable">pattern</em> on each line.</p>

<p><a name="INDEX-2007" />
You can also use <em class="emphasis">marks</em> to refer to lines. Marks are
just single-letter names that are given to cursor locations within the 
document. Moving the cursor to a location in the file and typing <tt class="literal">ma</tt>
will set the mark <tt class="literal">a</tt> at that point. (Marks may be named any of the 
letters a-z or A-Z.) You can move the cursor 
directly to the mark <tt class="literal">a</tt> with the command <tt class="literal">`a</tt> 
(with a backquote). Using a regular single quote (as in <tt class="literal">'a</tt>) will 
move the cursor to the beginning of the line that the mark <tt class="literal">a</tt> is on.</p>

<?troff .Nd 10?><p>Marks allow you to "remember" cursor locations that
denote a region of text. For example, if you want to search and
replace 
a block of text, you can move the cursor to the
beginning of the text, set a mark,
move the cursor to the end of the text, and use the command:
<blockquote><pre class="code">:`a,.s/weeble/wobble</pre></blockquote>

where <tt class="literal">`a</tt> refers to the line containing mark <tt class="literal">a</tt>, 
and <tt class="literal">.</tt> refers to the current line.</p>
</div>




<div class="sect2">
<h3 class="sect2">9.1.11. Moving Text, and Using Registers</h3>

<p><a name="INDEX-2008" />
<a name="INDEX-2009" />
One way to copy and move text is to delete it (using the <tt class="literal">d</tt>
or <tt class="literal">dd</tt> commands) and then replace it with the <tt class="literal">P</tt> command, as
described earlier. For example, if you want to delete the 10 lines,
starting with the line that contains the
cursor, and paste them somewhere else, just use the command <tt class="literal">10dd</tt>
(to delete 10 lines), move the cursor to the new location for the text,
and type <tt class="literal">p</tt>. You can copy text in this way as well: typing <tt class="literal">10dd</tt>
followed by <tt class="literal">P</tt> (at the same cursor location) deletes the text
and immediately replaces it. You can then paste the text elsewhere by
moving the cursor and using <tt class="literal">p</tt> multiple times.</p>

<p>Similar to <tt class="literal">dd</tt> is the <tt class="literal">yy</tt> command, which
"yanks" text without deleting it. You use <tt class="literal">p</tt> to 
paste the yanked text as with <tt class="literal">dd</tt>. 
The deletion and yank commands can be used on more general regions than
lines. Recall that the <tt class="literal">d</tt> command deletes text through a move command;
for example, <tt class="literal">d$</tt> deletes text from the cursor to the end of
the line. Similarly, <tt class="literal">y$</tt> yanks text from the cursor to the end
of the line.</p>

<p>Let's say you want to yank (or delete) a region of text. This can
be done with marks as well. Move the cursor to the beginning of the 
text to be yanked and set a mark, as in <tt class="literal">ma</tt>. Move the cursor to
the end of the text to be yanked and use the command <tt class="literal">y`a</tt>.
This yanks text from the cursor position to the mark <tt class="literal">a</tt>. (Remember
that the command <tt class="literal">`a</tt> moves the cursor to the mark <tt class="literal">a</tt>.) 
Using <tt class="literal">d</tt> instead of <tt class="literal">y</tt> deletes the text from the cursor
to the mark.</p>

<p>The most convenient way to cut, copy, and paste portions of text within <tt class="command">vi</tt>
is to use registers. A register is just a named temporary storage space for
text you wish to copy between locations, cut and paste within the
document, and so forth.</p>

<p>Registers are given single letter names; any of the characters <tt class="literal">a</tt>-<tt class="literal">z</tt> 
or <tt class="literal">A</tt>-<tt class="literal">Z</tt> are valid. The <tt class="literal">"</tt> command (a quotation
mark) specifies a register; it is followed by the name of the register,
as in <tt class="literal">"a</tt> for register <tt class="literal">a</tt>. The
lower-case letters and their upper-case counterparts refer to the same 
registers: using the lower-case letter overwrites the previous
contents of the register and using the upper-case letter appends to it.</p>

<p>For instance, if we move the cursor to the first line in our example:
<blockquote><pre class="code"><u class="emphasis-underline">N</u>OW IS THE TIME FOR ALL GOOD WOMEN TO COME TO THE AID OF THE PARTY. 
Afterwards, we'll go out for burgers and fries. 
~ 
~ 
~ 
~</pre></blockquote></p>

<p>and use the command <tt class="literal">"ayy</tt>, the current line is yanked into
the register <tt class="literal">a</tt>. We can then move the cursor to the
second line, and use the command <tt class="literal">"ap</tt> to paste the text from
register <tt class="literal">a</tt> after the current line:
<blockquote><pre class="code">NOW IS THE TIME FOR ALL GOOD WOMEN TO COME TO THE AID OF THE PARTY. 
Afterwards, we'll go out for burgers and fries. 
<u class="emphasis-underline">N</u>OW IS THE TIME FOR ALL GOOD WOMEN TO COME TO THE AID OF THE PARTY. 
~ 
~ 
~</pre></blockquote></p>

<p>Similarly, the command <tt class="literal">"ay`a</tt> yanks text from
the cursor to mark <tt class="literal">a</tt> into register <tt class="literal">a</tt>. Note that there is no
correspondence between mark and register names!</p>

<p>Using registers allows you copy text between files. Just copy the text
to a register, use the <tt class="literal">:e</tt> command to edit a new
file and paste the text from the register.</p>
</div>




<a name="x-100-3-tools-vi-extending" /><div class="sect2">
<h3 class="sect2">9.1.12. Extending vi</h3>

<p><a name="INDEX-2010" />
<tt class="command">vi</tt> is extensible in many ways. Most of the commands we've
introduced can be generalized to arbitrary regions of text. As we've already
seen, commands such as <tt class="literal">d</tt> and <tt class="literal">y</tt> operate on the text from the
cursor to a move operation, such as <tt class="literal">$</tt> or <tt class="literal">G</tt>. (<tt class="literal">dG</tt> deletes
text from the cursor to the end of the file.) Many other commands
operate on text through a move command in the same way. Using marks you
can operate on any region of text.</p>

<p>As we mentioned before, <tt class="command">vi</tt> is just a text editor; it doesn't have
facilities for spellchecking text, compiling programs, and other such
features. However, <tt class="command">vi</tt>
executes other programs, which you can use to extend the editor. The
command:
<blockquote><pre class="code">:<em class="replaceable">x</em>,<em class="replaceable">y</em>!<em class="replaceable">command</em></pre></blockquote>

executes the named <em class="replaceable">command</em> with the text on lines
<em class="replaceable">x</em> through <em class="replaceable">y</em> as standard input, and replaces the lines
with the standard output of the command. As with the <tt class="literal">s</tt> 
(search and replace) command, other specifications such as
<tt class="literal">%</tt> and <tt class="literal">$</tt> can be used for the line numbers.</p>

<p>For example, let's say you want to prepend a quote character 
(<tt class="literal">&gt;</tt>) to all of the lines in a region of text. One way to
do this is to write a short shell or Perl script 

(see <a href="ch13_01.htm">Chapter 13, "Programming
 Languages"</a>) that reads lines of input and outputs
those same lines with the quote character prepended. (Or use a 
<tt class="command">sed</tt> command; there are many alternatives.) You can then send
lines of text through this filter, which replaces
them with the quoted text within <tt class="command">vi</tt>. If the script is called
<em class="filename">quote</em> just use a command such as
<blockquote><pre class="code">:`a,.!quote</pre></blockquote>

which quotes the region of text between the cursor location and the
mark <tt class="literal">a</tt>.</p>

<p>Be familiar with the various ex commands that are available. 
The <tt class="literal">:set</tt> command allows you to set various options; for example,
<tt class="literal">:set ai</tt> turns on auto indentation of
text. (<tt class="literal">:set noai</tt> turns it off.)</p>

<p>You can specify <tt class="command">ex</tt> commands (such as <tt class="literal">:set</tt>) to execute 
when starting up <tt class="command">vi</tt> in the file <em class="filename">.exrc</em> in your home directory.
(The name of this file can be changed with the <tt class="literal">EXINIT</tt> environment
variable.) For example, your <em class="filename">.exrc</em> file might contain:
<blockquote><pre class="code">set ai</pre></blockquote>

to turn on autoindentation. You don't need the <tt class="literal">:</tt> before
ex commands in this file.</p>

<p><a name="INDEX-2011" />

There are a number of good tutorials and references for <tt class="command">vi</tt> available--both online as well as in print. <em class="emphasis">Learning the vi Editor</em>
is a good place to look for 
more information. If you have Internet access, the comp.editors archives for
<tt class="command">vi</tt> contain a number of reference and tutorial documents,
as well as interesting <tt class="command">vi</tt> hacks.
ftp://alf.uib.no: /pub/vi is the archive home
site; it is mirrored at cs.uwp.edu and
elsewhere.
<a name="INDEX-2012" /></p>
</div>
</div>






































<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch08_06.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch09_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">8.6. What to Do in an Emergency</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">9.2. The Emacs Editor</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>