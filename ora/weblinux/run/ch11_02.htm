<?label 11.2. The fvwm Window Manager?><html><head><title>The fvwm Window Manager (Running Linux)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Running Linux" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch11_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm" /></td><td width="172" valign="top" align="right"><a href="ch11_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">11.2. The fvwm Window Manager</h2>

<p><a name="INDEX-2288" />
<a name="INDEX-2289" />
Your choice of window manager determines, to a large extent, the look
and feel of your X environment. Many window managers also provide
menus, which allow you to start other X applications using the mouse, and
a virtual desktop, which increases your overall desktop space considerably.</p>

<p><a name="INDEX-2290" />
<tt class="command">fvwm</tt> is a virtual desktop window manager used by many Linux users.
It is based partially on the code for <tt class="command">twm</tt>, a classic window manager
included with the MIT X11 distribution. However, <tt class="command">fvwm</tt> has been trimmed
<a name="INDEX-2291" />
down and requires about half the memory used by <tt class="command">twm</tt>--welcome news
for Linux systems with 8 MB or less of physical <span class="acronym">RAM</span>. <tt class="command">fvwm</tt>
provides many features not available in other window managers, and for this
reason (as well as the fact it was developed specifically for Linux),
we are covering it here.</p>

<p>Unlike <tt class="command">twm</tt> and some other window managers, <tt class="command">fvwm</tt> undergoes
constant development. This means that some of the features described here
may not be present in the same form in newer versions of the software.
Refer to the manual page for <tt class="command">fvwm</tt> to verify that
the features presented here are available. We will cover Version 2 of
<tt class="command">fvwm</tt> here.</p>

<p>Among the features offered by <tt class="command">fvwm</tt> are:</p>

<ul><li><p> A simple virtual desktop, which provides a <em class="emphasis">pager</em> (an overall
birds-eye view of the desktop) and automatic desktop scrolling when the
pointer reaches the screen boundary.</p></li><li><p> A keyboard equivalent for almost every mouse-based feature; this is
helpful when using X on laptops without a mouse or trackball, or for
people with RSI or other physical problems making use of the mouse difficult.</p></li><li><p> Support for color icons using the <span class="acronym">XPM</span> libraries.</p></li><li><p> A programming interface for extensions, allowing you to add new
features to <tt class="command">fvwm</tt>. One extension included in the <tt class="command">fvwm</tt>
distribution is a button box that stays put on your root window. You can
bind commands to each button, allowing you to point and click to start
applications.</p></li><li><p>Fully configurable desktop menus, which appear when you press the mouse
buttons.</p></li><li><p> A Motif-like 3D look and feel for window frames.
In fact, <tt class="command">fvwm</tt> includes options to make it
compatible with the Motif window manager (<tt class="command">mwm</tt>).</p></li></ul><p />

<p><a name="INDEX-2292" />
Among the most powerful <tt class="command">fvwm</tt> features is the <em class="emphasis">virtual desktop</em>,
which allows you to place windows on an area much larger than
the actual size of the visible display. Using the mouse, you can switch
(page) between areas of the virtual desktop. For example, when you move
the mouse pointer to the right edge of the display, the desktop will
shift a screen to the left, bringing new windows into view.
This way you can place windows across an area larger than your screen,
viewing only a portion of the virtual desktop at one time.</p>

<p>A sample desktop using <tt class="command">fvwm</tt> was shown in
<a href="ch11_01.htm">Figure 11-1</a> 
in the section "<a href="ch11_01.htm">Section 11.1.1, "xinit"</a>."
Each window is given a
decorative frame, provided by <tt class="command">fvwm</tt>, with
configurable titlebar buttons. Later in this section, we'll describe how to
customize these to your liking.</p>

<p><a name="INDEX-2293" />
The pager, in the top-right corner
of the display, gives a bird's-eye view of the entire virtual
desktop. The pager can also move windows around the virtual
desktop and select the portion of the desktop currently in view.</p>

<a name="x-100-3-tools-x-fvwm-configuring" /><div class="sect2">
<h3 class="sect2">11.2.1. Configuring fvwm</h3>

<p><a name="INDEX-2294" />
<a name="INDEX-2295" />
In order to customize <tt class="command">fvwm</tt>, you'll need to create a
configuration file, <em class="filename">.fvwm2rc</em>, in your home
directory. In this section, we're going to present a number of
features of <tt class="command">fvwm</tt> and describe how to enable them
from <em class="filename">.fvwm2rc</em>.</p>

<p>We must warn you that the syntax of some of the options
has changed between different versions of <tt class="command">fvwm</tt>;
check them against the manual page if you have problems. You may
wish to use the system default <em class="filename">.fvwm2rc</em> file
(usually found in
<em class="filename">/usr/lib/X11/fvwm2/system.fvwmrc</em>) as a starting point.</p>

<p><a name="INDEX-2296" />
<a name="INDEX-2297" />

The most basic <tt class="command">fvwm</tt> customizations deal with colors and fonts
used for window frames and menus. For example, you might include
the following in your <em class="filename">.fvwm2rc</em>:
<blockquote><pre class="code"># Set up colors
Style "*"               Color White/Midnightblue
HilightColor            White Red
WindowFont              -adobe-helvetica-bold-r-normal-*-*-120-*</pre></blockquote></p>

<p><a name="INDEX-2298" />
Some commands depend on which window has the <em class="emphasis">focus</em>, which means
that it is receiving input.  (Normally you just click with the mouse in a
window to make it the one in focus.)
Unfocused windows, menus, and the pager use the color that has been
set with <tt class="literal">Style "*" Color</tt>, while the
window with the focus uses the color that was set with <tt class="literal">HilightColor</tt>.
The foreground color is generally used for text
(in the window title, and so forth) and the background is used for the
window frame itself.
Be artistic! <tt class="literal">WindowFont</tt> names the font used by
window titlebars.
Note that none of these options sets the colors used
inside windows, because these are controlled by
the application (client).  The options apply only to window frames and
menus, because those are managed by <tt class="command">fvwm</tt>.</p>

<p>To get a list of all the colors defined on your system, enter the command:




<blockquote><pre class="code">eggplant$ <tt class="userinput"><b>showrgb | more</b></tt></pre></blockquote></p>

<p>

Most <tt class="command">fvwm</tt> users also make use of the virtual desktop.
In order to configure it, you should include
lines such as the following in <em class="filename">.fvwm2rc</em>:
<blockquote><pre class="code"># Configure virtual desktop
DeskTopSize   3x3
AddToFunc     InitFunction "I" Module FvwmPager 0 0
Style         "FvwmPager" Sticky, NoTitle, WindowListSkip
*FvwmPagerGeometry -10 -10
EdgeScroll    100 100</pre></blockquote>

<a name="INDEX-2299" />
We want the size of the desktop (<tt class="literal">DeskTopSize</tt>) to be
three screens wide by three screens
<a name="INDEX-2300" />
high. The line starting with <tt class="literal">AddToFunc</tt> says that
when starting <tt class="command">fvwm</tt>, the pager should be started,
<a name="INDEX-2301" />
too. The <tt class="literal">Style</tt> line determines that the pager is to
be shown in each virtual desktop (<tt class="literal">Sticky</tt>), that it
should not have a window titlebar (<tt class="literal">NoTitle</tt>), and
that it should not be shown in the window list
(<tt class="literal">WindowListSkip</tt>). In addition, we place the pager
in the bottom right corner of the screen. The pager window provides a
view onto the full virtual desktop; clicking with the mouse in the
pager window makes the corresponding part of the desktop visible on
the screen. In Version 1 of fvwm, the pager was a
fixed part of the window manager, but Version 2 makes the pager a
module of its own. That's also why the pager is no longer configured via
<tt class="command">fvwm</tt> options like <tt class="literal">Pager</tt> as in
earlier versions, but via the settings for the module
<tt class="literal">FvwmPager</tt>. A module is an add-on to the window
manager that cannot run standalone. Frequently used modules, like the pager,
are shipped with <tt class="command">fvwm2</tt>.</p>

<p><a name="INDEX-2302" />
<tt class="literal">EdgeScroll</tt> specifies the percentage by which the
desktop should scroll when the pointer reaches the edge of the
screen. Using <tt class="literal">EdgeScroll 100 100</tt> causes the desktop
to shift by an entire screen when we move the mouse cursor to the
edge; this gives the appearance of switching from one screen to an
entirely different one.  This way you can place windows across the
entire virtual desktop and wander around the desktop using only the
mouse.</p>

<p>
The <tt class="literal">Style</tt> command sets a whole slew of attributes
for windows on your screen.  For instance, to specify that the
<tt class="command">xbiff</tt> always stays on top of other windows on the
display, use the command:</p>

<blockquote><pre class="code">Style "XBiff" StaysOnTop</pre></blockquote>

<p>Now, no other window is allowed to obscure <tt class="command">xbiff</tt>. Besides
<tt class="literal">StaysOnTop</tt>, other popular options to <tt class="literal">Style</tt> include:</p>

<dl>
<dt><b><tt class="literal">NoTitle</tt></b></dt><dd><p>Prevents a window from having a decorative title
on the top with its name.  This option is often used for small windows
like <tt class="command">xclock</tt> and <tt class="command">xbiff</tt>, especially if you don't
expect to move or resize them.</p></dd>


<dt><b><tt class="literal">NoBorder</tt></b></dt><dd><p>Prevents a window from having a border.</p></dd>


<dt><b><tt class="literal">Sticky</tt></b></dt><dd><p>Makes a window stay in the same place on the
screen when you shift the virtual desktop.</p></dd>


<dt><b><tt class="literal">BoundaryWidth</tt></b></dt><dd><p>Sets the width in pixels of frames
placed around windows by <tt class="command">fvwm</tt>. The default used by
<tt class="command">fvwm</tt> is six pixels, which is quite wide.</p></dd>

</dl>

<p>Arguments to <tt class="literal">Style</tt> may be window titles or application-class
names.  Older versions of <tt class="command">fvwm</tt> don't have the <tt class="literal">Style</tt>
command.  Instead, they offer a variety of commands named <tt class="literal">StaysOnTop</tt>, <tt class="literal">NoTitle</tt>, and so on. You use them like this:</p>

<blockquote><pre class="code">StaysOnTop XBiff</pre></blockquote>

<p>There are various <em class="filename">.fvwm2rc</em> commands dealing with icons.
As with other window managers, <tt class="command">fvwm</tt> allows you to iconify a window;
this replaces the window with a small icon containing the name of the
window and possibly a picture depicting the type of window.
<tt class="command">fvwm</tt> supports both <em class="emphasis">bitmaps</em> and color 
<em class="emphasis">pixmaps</em> for icons.
A bitmap allows only one bit for each pixel it displays and therefore
is limited to one background and one foreground color (although you
can get a mixture or gray by alternating pixels, a process called
dithering). A pixmap, on the other hand, has several bits per pixel
and can therefore support a large number of colors:
<blockquote><pre class="code">IconFont    -adobe-helvetica-medium-r-*-*-*-120-*
IconPath    /usr/include/X11/bitmaps/:/usr/include/X11/xfm/bitmaps
PixmapPath  /usr/include/X11/pixmaps/:/usr/include/X11/xfm/pixmaps

Style IconBox     700 0 1080 50
Style "*" Icon unknown.xpm
Style "XTerm" Icon xterm.xpm
Style "Emacs" Icon emacs.xpm</pre></blockquote>

<a name="INDEX-2303" />
<a name="INDEX-2304" />
<a name="INDEX-2305" />
<tt class="literal">IconFont</tt> specifies the font to use for icons. <tt class="literal">IconPath</tt>
and <tt class="literal">PixmapPath</tt> specify colon-separated pathnames where icon images
can be found; if you keep images in several directories, separate
their pathnames with colons. <tt class="literal">IconPath</tt> specifies locations for
bitmaps (<span class="acronym">XBM</span>), and
<tt class="literal">PixmapPath</tt> specifies locations for color pixmaps
(<span class="acronym">XPM</span>).</p>

<p>

<tt class="literal">Style IconBox</tt> defines a region of the screen where icons should be placed.
You can specify more than one <tt class="literal">IconBox</tt>: up to four, if you wish.
In this case,
icons should be placed in an invisible box defined by the top-left
corner at location (700,0) and bottom-right corner at (1080,50).</p>

<p>Following <tt class="literal">Style IconBox</tt> are several <tt class="literal">Style</tt> commands that bind
icon images to windows. In this case, we want all <tt class="literal">XTerm</tt> windows to
use <em class="filename">xterm.xpm</em>, and Emacs to use <em class="filename">emacs.xpm</em>. The name
of the icon file can either be a full pathname, or a pathname
relative to either <tt class="literal">IconPath</tt> or <tt class="literal">PixmapPath</tt>.
The command:</p>

<blockquote><pre class="code">Style "*" Icon unknown.xpm</pre></blockquote>

<p>sets the default icon to <em class="filename">unknown.xpm</em>.</p>

<p>If your <tt class="command">fvwm</tt> does not support the <tt class="literal">Style</tt> command, use
commands such as:</p>

<blockquote><pre class="code">Icon "" unknown.xpm
Icon "XTerm" xterm.xpm
Icon "Emacs" emacs.xpm</pre></blockquote>

<a name="INDEX-2306" /><a name="INDEX-2307" />
</div>




<div class="sect2">
<h3 class="sect2">11.2.2. More Customizations</h3>

<p><a name="INDEX-2308" />
<a name="INDEX-2309" />
Most <tt class="command">fvwm</tt> users include at least the previous options in the
<em class="filename">.fvwm2rc</em> file. However, <tt class="command">fvwm</tt> also provides the ability to
configure the desktop menus, functions executed by the
window titlebar buttons, and so on. Here, we'll introduce several
of those features.</p>

<p><a name="INDEX-2310" />
First, let's configure <tt class="command">fvwm</tt> pop-up menus, which appear when
pressing the mouse buttons on the root window. You can use these menus
to execute commands, manipulate windows, and so on. Note that some
distributions, like Debian and SuSE, can automatically update your window
manager menus with the installed packages on the system:
<blockquote><pre class="code">AddToMenu xclients "Xclients" Title
+ "Netscape"	Exec netscape
+ "xterm"		Exec xterm
+ "emacs"		Exec emacs -w
+ ""			Nop
+ "eggplant"    Exec xterm -e rlogin eggplant &amp;
+ "papaya"      Exec xterm -e rlogin papaya &amp;
+ ""			Nop
+ "screensaver" Exec xscreensaver-command -activate &amp;
+ "xcalc"       Exec xcalc &amp;
+ "xman"        Exec xman &amp;
+ "xlock"       Exec xlock -mode rotor &amp;
EndPopup</pre></blockquote>

<a name="INDEX-2311" />
The menu is defined with the command
<tt class="literal">AddToMenu</tt>. There is no command for terminating a
menu definition; the menu entries do not even have to be on subsequent
lines. Each menu gets a name with which it can be referenced later (in
this case <tt class="literal">xclients</tt>).</p>

<p><a name="INDEX-2312" />
The format of the menu is relatively self-explanatory. The title is
already set in the <tt class="literal">AddToMenu</tt> line;
<tt class="literal">Nop</tt> causes a separator
line to appear in the menu. The <tt class="literal">Exec</tt> function causes
a command to be executed when the menu item is chosen; the arguments
to <tt class="literal">Exec</tt> determine which command is executed. The
leftmost argument of each command line is the name of the item as it
appears in the menu (such as "Netscape"); the
remaining arguments specify the command to be executed.</p>

<p>We define a second menu, <tt class="command">fvwm</tt>, which uses the <tt class="command">fvwm</tt>
window-manipulation functions:
<blockquote><pre class="code">AddToMenu fvwm "Window Ops" Title
+ "Move Window"		Move
+ "Resize Window" 	Resize
+ "Raise Window" 	Raise
+ "Lower Window" 	Lower
+ "Iconify Window" 	Iconify
+ "Stick Window" 	Stick
+ ""				Nop
+ "Xclients"  		Popup Xclients
+ ""				Nop
+ "Destroy Window"  Destroy
+ "Delete Window"   Delete
+ ""                Nop
+ "Load Xdefaults"  Exec xrdb -load $HOME/.Xdefaults
+ "Restart Fvwm"    Restart fvwm2
+ "Start twm"       Restart twm
+ "Quit Fvwm"
EndPopup</pre></blockquote>

Each of the built-in functions <tt class="literal">Move</tt>,
<tt class="literal">Resize</tt>, <tt class="literal">Lower</tt>, and
so on are described in the <tt class="command">fvwm2</tt> manual page.  One function of note is
<tt class="literal">Popup</tt>, which allows a previously defined pop-up menu to be used as a
submenu of the current menu. Here, we include the <tt class="literal">xclients</tt> menu
defined as a submenu.</p>

<p>Also included here are commands for restarting <tt class="command">fvwm</tt> or starting
another window manager (<tt class="command">twm</tt>) in place of <tt class="command">fvwm</tt>.</p>

<p><a name="INDEX-2313" />
<tt class="command">fvwm</tt> also allows you to modify the function of the mouse buttons
in various contexts. The <tt class="literal">Mouse</tt> command is used for this, and takes
the form:
<a name="INDEX-2314" />
<blockquote><pre class="code">Mouse <em class="replaceable">button</em> <em class="replaceable">context</em> <em class="replaceable">modifiers</em> <em class="replaceable">function</em></pre></blockquote>

<em class="replaceable">button</em> is 1, 2, 3, or 0 (where 0 means "any button").
<em class="replaceable">context</em> specifies the region in which the mouse binding takes
effect; <em class="replaceable">context</em> may be:</p>

<ul><li><p> <tt class="literal">R</tt> for the root window</p></li><li><p> <tt class="literal">W</tt> for an application window</p></li><li><p> <tt class="literal">S</tt> for a window frame</p></li><li><p> <tt class="literal">F</tt> for a window frame corner</p></li><li><p> <tt class="literal">T</tt> for a window titlebar</p></li><li><p> <tt class="literal">I</tt> for an icon window</p></li><li><p> A digit from 0-9, specifying a particular titlebar button (described
later)</p></li><li><p> <tt class="literal">A</tt> for any context (except titlebar buttons)</p></li><li><p> Any combination of these</p></li></ul><p>
For example, a <em class="replaceable">context</em> of <tt class="literal">TSIF</tt> specifies window titlebars, frames,
and frame corners, as well as icon windows.</p>

<p>Using a digit from 0 through 9 in <em class="replaceable">context</em> binds the function
to a window titlebar button. By default, there are two such buttons--one on
the left edge of the titlebar, and one on the right. Binding mouse
functions to other buttons causes them to be visible. Left titlebar buttons
are given odd numbers (1, 3, 5, 7, and 9), and right titlebar buttons are
given even numbers (2, 4, 6, 8, 0). <a href="ch11_02.htm">Figure 11-2</a> shows
a window with all buttons visible, with their corresponding numbers.
Unless you bind mouse functions to each button, most of them will be
invisible.</p>

<a name="x-100-3-fig-fvwm-tbuttons" /><div class="figure">
<img src="figs/rl3_1102.gif" alt="Figure 11-2" /></div>
<h4 class="objtitle">Figure 11-2. Buttons on fvwm titlebar</h4><p><em class="replaceable">modifiers</em> specifies various key combinations to be used in
conjunction with a mouse-button click. Valid <em class="replaceable">modifiers</em> are
<tt class="literal">C</tt> for control, <tt class="literal">M</tt> for meta, <tt class="literal">S</tt> for shift, <tt class="literal">N</tt> for none,
or <tt class="literal">A</tt> for any of the above. For example,
setting <em class="replaceable">modifiers</em> to <tt class="literal">C</tt>
means that the Control key must be pressed while the mouse button is clicked.</p>

<p>Here are some examples of mouse bindings:
<blockquote><pre class="code"># Button        Context Modifi  Function
Mouse 1         R       N       PopUp "Fvwm"
Mouse 2         R       N       PopUp "Xclients"
Mouse 3         R       N       WindowList</pre></blockquote>

These lines bind each mouse button to one of the pop-up menus <tt class="command">fvwm</tt>
or <tt class="literal">xclients</tt>, defined previously, or the <tt class="literal">WindowList</tt> command, which
is a pop-up menu containing entries for each window on the display:
<blockquote><pre class="code"># Window titlebar buttons
Mouse 1         1       N       Popup "Fvwm"
Mouse 1         3       N       Iconify
Mouse 1         4       N       Destroy
Mouse 1         2       N       Resize</pre></blockquote>

Here we bind titlebar buttons 1, 3, 4, and 2 (two buttons on each
side of the titlebar) to various functions. The left-most titlebar button
pops up the <tt class="command">fvwm</tt> menu, the second-left button iconifies the
window, and so on. The <tt class="command">fvwm2</tt> manual page lists all the available
functions, such as <tt class="literal">Resize</tt>, <tt class="literal">Move</tt>, and <tt class="literal">RaiseLower</tt>.</p>

<p><a name="INDEX-2315" />
<a name="INDEX-2316" />
You can also specify key bindings with the
<tt class="literal">Key</tt> command. They are similar in syntax to mouse bindings:
<blockquote><pre class="code">Key <em class="replaceable">key</em> <em class="replaceable">context</em> <em class="replaceable">modifiers</em> <em class="replaceable">function</em></pre></blockquote>

with <em class="replaceable">context</em> and <em class="replaceable">modifiers</em> having the meanings given
earlier. Here are some examples:
<blockquote><pre class="code">Key Up          A       C       Scroll +0   -100
Key Down        A       C       Scroll +0   +100
Key Left        A       C       Scroll -100 0
Key Right       A       C       Scroll +100 +0</pre></blockquote>

These bindings cause Ctrl-<em class="replaceable">arrowkey</em> to scroll the desktop
by a full page in the given direction. You can bind any key to an
<tt class="command">fvwm</tt> function in this way; for instance, the function keys are
named F1, F2, and so on.</p>

<p>Read the <tt class="command">fvwm2</tt> manual page. As new versions are released, the
syntax of the configuration file changes slightly, and new features
are added periodically.</p>

<a name="INDEX-2317" /><a name="INDEX-2318" /><a name="INDEX-2319" />
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch11_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch11_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">11. Customizing Your X Environment</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">11.3. The K Desktop Environment</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>