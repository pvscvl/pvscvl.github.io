<?label 5.2. Booting the System?><html><head><title>Booting the System (Running Linux)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Running Linux" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch05_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm" /></td><td width="172" valign="top" align="right"><a href="ch05_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">5.2. Booting the System</h2>

<p><a name="INDEX-1209" />
<a name="INDEX-1210" />
There are several ways of booting Linux on your system. The most
common methods involve booting from the hard drive or using a boot
floppy. In many cases, the installation procedure will have configured
one or both of these for you; in any case, it's important to
understand how to configure booting for yourself.</p>

<a name="x-100-3-sysadm-boot-floppy" /><div class="sect2">
<h3 class="sect2">5.2.1. Using a Boot Floppy</h3>

<p><a name="INDEX-1211" />
Traditionally, a Linux boot floppy simply contains a kernel image,
which is loaded into memory when the floppy is booted on the
system.<a href="#FOOTNOTE-22">[22]</a>

The kernel image is usually compressed, using the same algorithm as
the <tt class="command">gzip</tt> compression program (more on this in the
section
"<a href="ch07_04.htm">Section 7.4.2, "Building the Kernel"</a>" in

<a href="ch07_01.htm">Chapter 7, "Upgrading Software and the Kernel"</a> ). Compression allows the kernel,
which may be a megabyte or more in size, to require only a few hundred
kilobytes of disk space. Part of the kernel code is not compressed:
this part contains the routines necessary to uncompress the kernel
from the disk image and load it into memory. Therefore, the kernel
actually "bootstraps" itself at boot time by uncompressing
into memory.</p><blockquote>

<a name="FOOTNOTE-22" /><p>[22]A Linux boot floppy may instead contain a <span class="acronym">LILO</span> boot
record, which causes the system to boot a kernel from the hard
drive. We'll discuss this in the next section, when we talk about
<span class="acronym">LILO</span>.</p>

</blockquote>

<p>A number of parameters are stored in the kernel image. Among these
parameters is the name of the device to use as the root filesystem
once the kernel boots. Another parameter is the text mode to use for
the system console. All of these parameters may be modified using the
<tt class="command">rdev</tt> command, which we'll discuss later in the
section.</p>

<p><a name="INDEX-1212" />
<a name="INDEX-1213" />
<a name="INDEX-1214" />
After the kernel has started, it attempts to mount a filesystem on the
root device hard-coded in the kernel image itself. This will serve as
the root filesystem--that is, the filesystem on
<em class="filename">/</em>. The section "<a href="ch06_01.htm">Section 6.1, "Managing Filesystems"</a>" in

<a href="ch06_01.htm">Chapter 6, "Managing
 Filesystems, Swap,
 and Devices"</a> discusses filesystems in more
detail; all that you need to know for now is that the kernel image
must contain the name of your root filesystem device. If the kernel
can't mount a filesystem on this device, it gives up, issuing a kernel
"panic" message.
<a name="INDEX-1215" />
(Essentially, a <em class="emphasis">kernel
panic</em> is a fatal error signaled by the kernel itself. A
panic will occur whenever the kernel is terminally confused and can't
continue with execution. For example, if there is a bug in the kernel
itself, a panic might occur when it attempts to access memory that
doesn't exist. We'll talk about kernel panics more in the section
"<a href="ch08_06.htm">Section 8.6, "What to Do in an Emergency"</a>" in
<a href="ch08_01.htm">Chapter 8, "Other
 Administrative
 Tasks"</a>.)</p>

<p>
The root device stored in the kernel image is that of your root
filesystem on the hard drive. This means that once the kernel boots,
it mounts a hard-drive partition as the root filesystem, and all
control transfers to the hard drive. Once the kernel is loaded into
memory, it stays there--the boot floppy need not be accessed
again (until you reboot the system, of course).</p>

<p>
Many Linux distributions create a boot floppy for you in this way when
installing the system. Using a boot floppy is an easy way to boot Linux
if you don't want to bother booting from the hard drive. (For example,
OS/2's or Windows NT's boot managers are somewhat difficult to configure
for booting Linux. We'll talk about this in the next section.) Once the
kernel has booted from the floppy, you are free to use the floppy drive
for other purposes.</p>

<p><a name="INDEX-1216" />
<a name="INDEX-1217" />
<a name="INDEX-1218" />
Given a kernel image, you can create your own boot floppy. On many
Linux systems, the kernel itself is stored in the file
<em class="filename">/boot/vmlinuz</em>.<a href="#FOOTNOTE-23">[23]</a>
This is not a universal convention, however; other Linux systems store
the kernel in <em class="filename">/vmlinuz</em> or
<em class="filename">/vmlinux</em>, others in a file such as
<em class="filename">/Image</em>. (If you have multiple kernel images, you
can use <span class="acronym">LILO</span> to select which one to boot. See the
next section.) Note that newly installed Linux systems may not have a
kernel image on the hard drive if a boot floppy was created for
you. In any case, you can build your own kernel. It's usually a good
idea to do this anyway; you can "customize" the kernel to
only include those drivers for your particular hardware.

See the
section "<a href="ch07_04.htm">Section 7.4.2, "Building the Kernel"</a>"
in <a href="ch07_01.htm">Chapter 7, "Upgrading Software and the Kernel"</a> for details.</p><blockquote>

<a name="FOOTNOTE-23" /><p>[23]Why the silly filename? On many
Unix systems, the kernel is stored in a file named
<em class="filename">/vmunix</em> where <em class="filename">vm</em> stands for
"virtual memory." Naturally, Linux has to be different
and names its kernel images <em class="filename">vmlinux</em>, and places
them in the directory <em class="filename">/boot</em> to get them out of
the root directory. The name <em class="filename">vmlinuz</em> was adopted
to differentiate compressed kernel images from uncompressed images.
Actually, the name and location of the kernel don't matter a bit, as
long as you have either a boot floppy containing a kernel or
<span class="acronym">LILO</span> knows how to find the kernel image.</p>

</blockquote>

<p><a name="INDEX-1219" />
All right. Let's say that you have a kernel image in the file
<em class="filename">/boot/vmlinuz</em>. To create a boot floppy, the first
step is to use <tt class="command">rdev</tt> to set the root device to that
of your Linux root filesystem.

(If you built the kernel yourself, this should be already set
to the correct value, but it can't hurt to check with <tt class="command">rdev</tt>.)
We discussed how to create the root device in the sections

"<a href="ch03_01.htm">Section 3.1.2, "Drives and Partitions Under Linux"</a>" and
"<a href="ch03_01.htm">Section 3.1.3, "Creating Linux Partitions"</a>" in <a href="ch03_01.htm">Chapter 3, "Installation
 and Initial
 Configuration"</a>.</p>

<p>As root, use <tt class="command">rdev -h</tt> to print a usage message. As you will
see, there are many supported options, allowing you to specify the
root device (our task here), the swap device, ramdisk size, and so on.
For the most part, you needn't concern yourself with these options now.</p>

<p>If we use the command <tt class="command">rdev /boot/vmlinuz</tt>, the root device encoded
in the kernel found in <em class="filename">/boot/vmlinuz</em> will be printed:
<blockquote><pre class="code">courgette:/# <tt class="userinput"><b>rdev /boot/vmlinuz</b></tt>
Root device /dev/hda1</pre></blockquote>


If this is incorrect, and the Linux root filesystem is actually on
<em class="filename">/dev/hda3</em>, we should use the following command:
<blockquote><pre class="code">courgette:/# <tt class="userinput"><b>rdev /boot/vmlinuz /dev/hda3</b></tt>
courgette:/#</pre></blockquote>

<tt class="command">rdev</tt> is the strong, silent type; nothing is printed when you set
the root device, so run <tt class="command">rdev /boot/vmlinuz</tt> again to check that
it is set correctly.</p>

<?troff .nr fn*text-num 0 1?>
<?troff .nr fn*note-num 0 1?><p>Now you're ready to create the boot floppy. For best results, use a
brand-new, formatted floppy. You can format the floppy under <span class="acronym">MS-DOS</span>
or using <tt class="command">fdformat</tt> under Linux;<a href="#FOOTNOTE-24">[24]</a> this will lay down the sector

and track information so that the system can auto-detect the size of
the floppy. (See the section
"<a href="ch06_01.htm">Section 6.1, "Managing Filesystems"</a>" in
<a href="ch06_01.htm">Chapter 6, "Managing
 Filesystems, Swap,
 and Devices"</a>
for more on using floppies.)</p><blockquote>

<a name="FOOTNOTE-24" /><p>[24]The
Debian distribution doesn't have an <tt class="command">fdformat</tt>
command; use the aptly named <tt class="command">superformat</tt>
instead.</p>

</blockquote>

<p><a name="INDEX-1220" />
To create the boot floppy, use <tt class="command">dd</tt> to copy the
kernel image to it, as in:
<blockquote><pre class="code">courgette:/# <tt class="userinput"><b>dd if=/boot/vmlinuz of=/dev/fd0 bs=8192</b></tt></pre></blockquote>

<a name="INDEX-1221" />
If you're interested in <tt class="command">dd</tt>, the manual page will be illustrative;
in brief, this copies the input file (<span class="option">if</span> option) named
<em class="filename">/boot/vmlinuz</em> to the output file (<span class="option">of</span> option) named
<em class="filename">/dev/fd0</em> (the first floppy device), using
a block size (<span class="option">bs</span>) of 8192 bytes. Of course, the plebian <tt class="command">cp</tt>
can be used as well, but we Unix sysadmins love to use cryptic commands
to complete relatively simple tasks. That's what separates us from mortal
users.</p>

<p>Your boot floppy should now be ready to go. You can shut down the system
(see the section "<a href="ch05_05.htm">Section 5.5, "Shutting Down the System"</a>" later in this
chapter) and boot with the floppy,
and if all goes well, your Linux system should boot as it usually does. It
might be a good idea to make an extra boot floppy as a spare, and in the
section "<a href="ch08_06.htm">Section 8.6, "What to Do in an Emergency"</a>" in

<a href="ch08_01.htm">Chapter 8, "Other
 Administrative
 Tasks"</a>,
we describe methods by which boot
floppies can be used to recover from disaster.
<a name="INDEX-1222" /></p>
</div>




<a name="x-100-3-sec-sysadm-booting-lilo" /><div class="sect2">
<h3 class="sect2">5.2.2. Using LILO</h3>

<p><a name="INDEX-1223" />
<a name="INDEX-1224" />

<span class="acronym">LILO</span> is a general-purpose boot manager that can
boot whatever operating systems you have installed on your machine,
including Linux. There are dozens of ways to configure
<span class="acronym">LILO</span>. Here, we're going to discuss the two most
common methods: installing <span class="acronym">LILO</span> on the master boot
record of your hard drive and installing <span class="acronym">LILO</span> as a
secondary boot loader for Linux only.</p>

<p><span class="acronym">LILO</span> is the most common way to boot Linux from the
hard drive. (By the expression "boot from the hard
drive," we mean that the kernel itself is stored on the hard
drive and no boot floppy is required, but remember that even when you
use a boot floppy, control is transferred to the hard drive once the
kernel is loaded into memory.)  If <span class="acronym">LILO</span> is
installed on your drive's master boot record, or
<span class="acronym">MBR</span>, it is the first code to run when the hard
drive is booted. <span class="acronym">LILO</span> can then boot other operating
systems--such as Linux or <span class="acronym">MS-DOS</span>--and
allow you to select between them at boot time.</p>

<p><a name="INDEX-1225" />
<a name="INDEX-1226" />

However, both OS/2 and Windows NT have boot managers of their own that
occupy the <span class="acronym">MBR</span>. If you are using one of these
systems, in order to boot Linux from the hard drive, you may have to
install <span class="acronym">LILO</span> as the "secondary" boot
loader for Linux only. In this case, <span class="acronym">LILO</span> is
installed on the boot record for just your Linux root partition, and
the boot manager software (for OS/2 or Windows NT) takes care of executing
<span class="acronym">LILO</span> from there when you wish to boot Linux.</p>

<p>As we'll see, however, both the OS/2 and Windows NT boot managers are somewhat
uncooperative when it comes to booting <span class="acronym">LILO</span>. This
is a poor design decision, and if you must absolutely use one of these
boot managers, it might be easier to boot Linux from floppy
instead. Read on.</p>

<p><a name="INDEX-1227" />
<a name="INDEX-1228" />

Use of <span class="acronym">LILO</span> with Windows 95/98, on the other hand, is
quite simple. You simply configure <span class="acronym">LILO</span> to boot
Windows 95/98 as you would configure it to boot <span class="acronym">MS-DOS</span>
(see the next section). However, if you install Windows 95/98 after installing
<span class="acronym">LILO</span>, you need to reinstall <span class="acronym">LILO</span>
(as the Windows 95/98 installation procedure overwrites the
<span class="acronym">MBR</span> of your primary hard drive). Just be sure you
have a Linux boot floppy on hand so you can boot Linux and rerun
<span class="acronym">LILO</span>.</p>

<p>Before proceeding you should note that a number of Linux distributions
are capable of configuring and installing <span class="acronym">LILO</span> when you first install the
Linux software. However, it's often best to configure
<span class="acronym">LILO</span> yourself, just to ensure that everything is
done correctly.</p>

<a name="x-100-3-sec-sysadm-booting-conf" /><div class="sect3">
<h3 class="sect3">5.2.2.1. The /etc/lilo.conf file</h3>

<p><a name="INDEX-1229" />
<a name="INDEX-1230" />
<a name="INDEX-1231" />
<a name="INDEX-1232" />
<a name="INDEX-1233" />
The first step in configuring <span class="acronym">LILO</span> is to set up the
<span class="acronym">LILO</span> configuration file, which is often stored in
<em class="filename">/etc/lilo.conf</em>. (On other systems, the file may be
found in <em class="filename">/boot/lilo.conf</em> or
<em class="filename">/etc/lilo/config.</em>)</p>

<p>We are going to walk through a sample <em class="filename">lilo.conf</em>
file. You can use this file as a base for your own
<em class="filename">lilo.conf</em> and edit it for your own system.</p>

<p>
The first section of this file sets up some basic parameters:

<blockquote><pre class="code">boot = /dev/hda
compact
install = /boot/boot.b
map = /boot/map</pre></blockquote>


The <tt class="literal">boot</tt> line sets the name of the device where
<span class="acronym">LILO</span> should install itself in the boot record. In
this case, we want to install <span class="acronym">LILO</span> in the master
boot record of <em class="filename">/dev/hda</em>, the first non-SCSI hard
drive. If you're booting from a SCSI hard drive, use a device name
such as <em class="filename">/dev/sda</em> instead. If you give a partition
device name (such as <em class="filename">/dev/hda2</em>), instead of a
drive device, <span class="acronym">LILO</span> will be installed as a secondary
boot loader on the named partition. (Debian users should always do this.) We'll talk about this in more
detail later.</p>

<p><a name="INDEX-1234" />
The <tt class="literal">compact</tt> line tells <span class="acronym">LILO</span> to perform some optimization; always
use this unless you are seriously hacking on your
<span class="acronym">LILO</span> configuration.<a href="#FOOTNOTE-25">[25]</a>
Likewise, always use the <tt class="literal">install</tt> and <tt class="literal">map</tt> lines as shown.
<tt class="literal">install</tt> names the file containing the boot sector to use on the <span class="acronym">MBR</span>,
and <tt class="literal">map</tt> specifies the "map file" that <span class="acronym">LILO</span> creates when installed.
These files should be in the directory <em class="filename">/boot</em>, although on other
systems they may be found in 
<?troff .ne 10?>
<em class="filename">/etc/lilo</em>. <em class="filename">/boot/map</em> won't be
created until you install <span class="acronym">LILO</span> for the first time.
<a name="INDEX-1235" />
<a name="INDEX-1236" /></p><blockquote>

<a name="FOOTNOTE-25" /><p>[25]In some
cases, you will need the <tt class="literal">linear</tt> option, which should
not be used together with <tt class="literal">compact</tt>. See the
<span class="acronym">LILO</span> documentation for more information.</p>

</blockquote>

<p>Now, for each operating system you wish <span class="acronym">LILO</span> to boot, add a
stanza to <em class="filename">/etc/lilo.conf</em>. For example, a Linux stanza
might look like this:

<blockquote><pre class="code"># Stanza for Linux with root partition on /dev/hda2.
   image = /boot/vmlinuz   # Location of kernel
   label = linux           # Name of OS (for the LILO boot menu)
   root = /dev/hda2        # Location of root partition
   vga = ask               # Ask for VGA text mode at boot time</pre></blockquote>

The <tt class="literal">image</tt> line specifies the name of the kernel image.
Subfields include <tt class="literal">label</tt>, which gives this stanza a name
to use with the <span class="acronym">LILO</span> boot menu (more on this later); <tt class="literal">root</tt>,
which specifies the Linux root partition; and <tt class="literal">vga</tt>, which
specifies the <span class="acronym">VGA</span> text mode to use for the system console.</p>

<p><a name="INDEX-1237" />
<a name="INDEX-1238" />
Valid modes for <tt class="literal">vga</tt> are <tt class="literal">normal</tt> (for standard 80x25 display),
<tt class="literal">extended</tt> (for extended text mode, usually 132x44 or 132x60),
<tt class="literal">ask</tt> (to be prompted for a mode at boot time), or an integer
(such as 1, 2, or 3). The integer corresponds to the number of the
mode you select when using <tt class="literal">ask</tt>. The exact text modes
available depend on your video card; use <tt class="literal">vga = ask</tt> to get a list.</p>

<p><a name="INDEX-1239" />
If you have multiple Linux kernels you wish to boot--for example,
if you're doing some kernel debugging--you can add an <tt class="literal">image</tt>
stanza for each one. The only required subfield of the <tt class="literal">image</tt>
stanza is <tt class="literal">label</tt>. If you don't specify root or <tt class="literal">vga</tt>, the
defaults coded into the kernel image itself using <tt class="command">rdev</tt>
will be used. If you do specify root or <tt class="literal">vga</tt>, these override the
values you may have set using <tt class="command">rdev</tt>. Therefore, if you are booting
Linux using <span class="acronym">LILO</span>, there's no need to use <tt class="command">rdev</tt>; the <span class="acronym">LILO</span> configuration
file sets these boot parameters for you.</p>

<p><a name="INDEX-1240" />
<a name="INDEX-1241" />
<a name="INDEX-1242" />
A stanza for booting <span class="acronym">MS-DOS</span> or Windows 95/98 would
look like the following:
<blockquote><pre class="code"># Stanza for MSDOS/Win 95/Win 98 partition on /dev/hda1.
   other = /dev/hda1    # Location of partition
   table = /dev/hda     # Location of partition table for /dev/hda2
   label = msdos        # Name of OS (for boot menu)</pre></blockquote>

<a name="INDEX-1243" />
You would use an identical stanza to boot OS/2 from <span class="acronym">LILO</span> (using
a different <tt class="literal">label</tt> line, of course).</p>

<p>If you wish to boot an <span class="acronym">MS-DOS</span> or Windows 95/98
partition located on the
second drive, you should add the line:
<blockquote><pre class="code">   loader = /boot/any_d.b</pre></blockquote>

to the <span class="acronym">MS-DOS</span> <tt class="literal">other</tt> stanza. For OS/2 partitions on the
second drive, add the line:
<blockquote><pre class="code">   loader = /boot/os2_d.b</pre></blockquote></p>

<p>There are many more options available for <span class="acronym">LILO</span> configuration. The <span class="acronym">LILO</span>
distribution itself (found on most Linux <span class="acronym">FTP</span> sites and distributions)
includes an extensive manual describing them all. The previous examples should suffice
for most systems, however.</p>

<p>
Once you have your <em class="filename">/etc/lilo.conf</em> ready, you can
run the command:
<a name="INDEX-1244" />
<blockquote><pre class="code">/sbin/lilo</pre></blockquote>

as root. This should display
information such as the following:
<blockquote><pre class="code">courgette:/# <tt class="userinput"><b>/sbin/lilo</b></tt>
Added linux
Added msdos
courgette:/#</pre></blockquote>

Using the <span class="option">-v</span> option with <tt class="command">lilo</tt> prints more diagnostic
information should something go wrong; also, using the <span class="option">-C</span> option allows you to specify a configuration file other than
<em class="filename">/etc/lilo.conf</em>.</p>

<p>

Once this is done, you're ready to shut down your system (again, see
the section "<a href="ch05_05.htm">Section 5.5, "Shutting Down the System"</a>"
later in this chapter
for details), reboot, and try it out.  The first operating system
stanza listed in <em class="filename">/etc/lilo.conf</em> will be booted by
default. To select one of the other kernels or operating systems
listed in <em class="filename">/etc/lilo.conf</em>, hold down the Shift or
Control key or simply press the Scroll Lock key while the system
boots. This should present you with a <span class="acronym">LILO</span> boot prompt:
<blockquote><pre class="code">boot:</pre></blockquote>

Here, you can press Tab to get a list of available boot options:
<blockquote><pre class="code">boot: <em class="replaceable">tab-key</em>
linux msdos</pre></blockquote>

These are the names given with <tt class="literal">label</tt> lines in <em class="filename">/etc/lilo.conf</em>.
Enter the appropriate label, and that operating system will boot. In this
case, entering <tt class="literal">msdos</tt> causes <span class="acronym">MS-DOS</span> to boot from <em class="filename">/dev/hda1</em>,
as we specified in the <em class="filename">lilo.conf</em> file.</p>

<a name="INDEX-1245" /><a name="INDEX-1246" /><a name="INDEX-1247" />
</div>


<a name="x-100-3-sec-sysadm-booting-secondary" /><div class="sect3">
<h3 class="sect3">5.2.2.2. Using LILO as a secondary boot loader</h3>

<p><a name="INDEX-1248" />
<a name="INDEX-1249" />
<a name="INDEX-1250" />
<a name="INDEX-1251" />

If you're using the OS/2 or Windows NT boot manager, installing the Debian
distribution of Linux, or don't want
<span class="acronym">LILO</span> to inhabit the master boot record of your
drive, you can configure <span class="acronym">LILO</span> as a secondary boot
loader, which will live on the boot record of just your Linux root
partition.</p>

<p>To do this, simply change the <tt class="literal">boot = &#133;</tt> line of
<em class="filename">/etc /&thinsp;lilo.conf</em> to the name of the Linux root
partition. For example:
<blockquote><pre class="code">boot = /dev/hda2</pre></blockquote>

will install <span class="acronym">LILO</span> on the boot record of <em class="filename">/dev/hda2</em>, to boot Linux
only. Note that this works only for primary partitions on the
hard drive (not extended or logical partitions). This restriction
applies to the Debian distribution, however, where the MBR can boot an
operating system from a boot sector in an extended (but not logical)
partition. In order to boot Linux in this way, the Linux root partition should be
marked as "active" in the partition table. This can be done using
<tt class="command">fdisk</tt> under Linux or <span class="acronym">MS-DOS</span>. When booting the system, the
BIOS will read the boot record of the first "active"
partition to start Linux.</p>

<p>If you are using OS/2's or Windows NT's boot manager, you should install
<span class="acronym">LILO</span> in this way, and then tell the boot manager to boot
another operating system from that partition on your hard drive.
The method for doing this depends on the boot manager in question;
see your documentation for details.</p>

<p>
<img src="figs/bomb.gif">&nbsp;&nbsp;<a name="INDEX-1252" />
<span class="acronym">LILO</span> is known to work with OS/2's Boot Manager, but getting things to
work well is not always easy. The problem is that OS/2 Boot Manager
won't even recognize your partitions created with Linux <tt class="command">fdisk</tt>.

The way around this problem is to use OS/2's <tt class="command">fdisk</tt> to
give the Linux partitions (created using Linux <tt class="command">fdisk</tt>) a
name. Another workaround is to create the Linux partitions using
OS/2's <tt class="command">fdisk</tt> and format them (say, as an <span class="acronym">MS-DOS</span> <span class="acronym">FAT</span> partition)
first. Now OS/2 will recognize the partitions, and you can use the Linux
<tt class="command">fdisk</tt> command to set the types of the partitions to <tt class="literal">Linux native</tt>
and <tt class="literal">Linux swap</tt>, as described in the section

"<a href="ch03_01.htm">Section 3.1.3, "Creating Linux Partitions"</a>" in <a href="ch03_01.htm">Chapter 3, "Installation
 and Initial
 Configuration"</a>.
You can then install Linux on these partitions and install <span class="acronym">LILO</span> on the
boot record of your Linux root partition. Hopefully, all will be
well.</p>

<p>
Why are we telling you this now? Because OS/2's Boot Manager is broken
with respect to booting operating systems it doesn't know about.
Instead of using OS/2 Boot Manager, you can install <span class="acronym">LILO</span> on the <span class="acronym">MBR</span> of
your drive and have it boot OS/2, using an <tt class="literal">other</tt> stanza
in the <em class="filename">/etc/lilo.conf</em> file as you would with <span class="acronym">MS-DOS</span>. Another option
is to simply boot Linux from floppy--or, even better, not to use
OS/2 at all. But let's not get carried away.</p>
</div>


<a name="x-100-3-sysadm-boot-options" /><div class="sect3">
<h3 class="sect3">5.2.2.3. Specifying boot time options</h3>

<p><a name="INDEX-1253" />
When you first installed Linux, more than likely you booted either from a
floppy or a <span class="acronym">CD-ROM</span>, which
gave you the now-familiar <span class="acronym">LILO</span> boot prompt. At this
prompt you can enter several boot time options, such as:
<a name="INDEX-1254" />
<a name="INDEX-1255" />

<blockquote><pre class="code">hd=<em class="replaceable">cylinders</em>,<em class="replaceable">heads</em>,<em class="replaceable">sectors</em></pre></blockquote>


to specify the hard-drive geometry. Each time you boot Linux, it may
be necessary to specify these parameters in order for your hardware
to be detected correctly, as described in the section "<a href="ch03_01.htm">Section 3.1.1, "Booting Linux"</a>" in <a href="ch03_01.htm">Chapter 3, "Installation
 and Initial
 Configuration"</a>. If you are using <span class="acronym">LILO</span> to boot Linux from the hard
drive, you can specify these parameters in
<em class="filename">/etc/lilo.conf</em> instead of entering them at the
boot prompt each time. To the Linux stanza of the
<em class="filename">lilo.conf</em> file, just add a line such as:
<a name="INDEX-1256" />

<blockquote><pre class="code">    append = "hd=683,16,38"</pre></blockquote>

<?troff .ne 10?>
This causes the system to behave as though
<tt class="literal">hd=683,16,38</tt> were entered at the
<span class="acronym">LILO</span> boot prompt. If you wish to specify multiple
boot options, you can do so with a single <tt class="literal">append</tt>
line, as in:
<blockquote><pre class="code">    append = "hd=683,16,38 hd=64,32,202"</pre></blockquote>

In this case, we specify the geometry for the first and second hard drives,
respectively.</p>

<p><a name="INDEX-1257" />
Note that you need to use such boot options only if the kernel doesn't
detect your hardware at boot time. You should already know if this
is necessary, based on your experiences with installing Linux; in general,
you should have to use an <tt class="literal">append</tt> line in <em class="filename">lilo.conf</em>
only if you had to specify these boot options when first booting the
Linux installation media.</p>

<p>There are a number of other boot-time options available. Most of them
deal with hardware detection, which has already been discussed in
<a href="ch03_01.htm">Chapter 3, "Installation
 and Initial
 Configuration"</a>. However, the following additional options
may also be useful to you:</p>

<dl>
<dt><b><tt class="literal">single</tt></b></dt><dd><p><a name="INDEX-1258" />
<a name="INDEX-1259" />
<a name="INDEX-1260" />

Boot the system in single-user mode; skip all of the system
configuration and start a root shell on the console. See the section
"<a href="ch08_06.htm">Section 8.6, "What to Do in an Emergency"</a>" in <a href="ch08_01.htm">Chapter 8, "Other
 Administrative
 Tasks"</a> for hints on using this.</p></dd>


<dt><b><tt class="literal">root=</tt><em class="replaceable">partition</em></b></dt><dd><p><a name="INDEX-1261" />
Mounts the named <em class="replaceable">partition</em> as the Linux root filesystem. This overrides any value given in <em class="filename">/etc/lilo.conf</em>.</p></dd>


<dt><b><tt class="literal">ro</tt></b></dt><dd><p><a name="INDEX-1262" />
<a name="INDEX-1263" />
<a name="INDEX-1264" />
<a name="INDEX-1265" />
<a name="INDEX-1266" />

Mounts the root filesystem as read-only. This is usually done in order
to run <tt class="command">fsck</tt>; see the section
"<a href="ch06_01.htm">Section 6.1.5, "Checking and Repairing Filesystems"</a>" in <a href="ch06_01.htm">Chapter 6, "Managing
 Filesystems, Swap,
 and Devices"</a>.</p></dd>


<dt><b><tt class="literal">ramdisk=</tt><em class="replaceable">size</em></b></dt><dd><p><a name="INDEX-1267" />
<a name="INDEX-1268" />
Specifies a size, in bytes, for the ramdisk device. This overrides
any value in <em class="filename">/etc/lilo.conf</em>. Most users need not worry about
using the ramdisk; it's useful primarily for installation.</p></dd>


<dt><b><tt class="literal">vga=</tt><em class="replaceable">mode</em></b></dt><dd><p><a name="INDEX-1269" />
<a name="INDEX-1270" />
Sets the <span class="acronym">VGA</span> display mode. This overrides any value in
<em class="filename">/etc/lilo.conf</em>. Valid modes are
<tt class="literal">normal</tt>, <tt class="literal">extended</tt>,
<tt class="literal">ask</tt>, or an integer. This option is equivalent to the
<tt class="literal">vga = </tt> values used in
<em class="filename">lilo.conf</em>; see the section
"<a href="ch05_02.htm">Section 5.2.2.1, "The /etc/lilo.conf file"</a>" earlier
in this chapter.</p></dd>


<dt><b><tt class="literal">mem=</tt><em class="replaceable">size</em></b></dt><dd><p>  <a name="INDEX-1271" />
  <a name="INDEX-1272" />
				  Tells the kernel how much RAM you have. If you
				  have 64 MB or less, the kernel can get this
				  information from the <span class="acronym">BIOS</span>, but if
				  you use an older kernel and you have more, you will
				  have to tell the kernel the
				  exact amount, or it will only use the first
				  64 MB. For example, if you have 128 MB, specify
				  <tt class="literal">mem=128m</tt>. Fortunately, this is no
				  longer necessary with newer kernels.</p></dd>

</dl>

<p />

<p>Any of these options can be entered by hand at the
<span class="acronym">LILO</span> boot prompt or specified with the
<tt class="literal">append</tt> option in
<em class="filename">/etc/lilo.conf</em>.</p>

<p><a name="INDEX-1273" />
<span class="acronym">LILO</span> includes complete documentation that describes
all of the configuration options available. On many Linux systems this
documentation can be found in <em class="filename">/usr/src/lilo</em>; on
Debian systems, it is in <em class="filename">/usr/doc/lilo/Manual.txt.gz</em>. If
you can't seem to find anything, grab the <span class="acronym">LILO</span>
distribution from one of the Linux archive sites, or ask your Linux
vendor to provide the sources and documentation for
<span class="acronym">LILO</span>. This documentation includes a manual that
describes all the concepts of booting and using
<span class="acronym">LILO</span> in detail, as well as a
<em class="filename">README</em> file that contains excerpts from this
manual, formatted as plain text.</p>

<a name="INDEX-1274" />
</div>


<div class="sect3">
<h3 class="sect3">5.2.2.4. Removing LILO</h3>

<p><a name="INDEX-1275" />
<a name="INDEX-1276" />
<a name="INDEX-1277" />
<a name="INDEX-1278" />
If you have <span class="acronym">LILO</span> installed on your
<span class="acronym">MBR</span>, the easiest way to remove it is to use
<span class="acronym">MS-DOS FDISK</span>. The command:

<blockquote><pre class="code">FDISK /MBR</pre></blockquote>


runs <span class="acronym">FDISK</span> and overwrites the
<span class="acronym">MBR</span> with a valid <span class="acronym">MS-DOS</span> boot
record.</p>

<p>

<span class="acronym">LILO</span> saves backup copies of your original boot
record in the files <em class="filename">/boot/boot.0300</em> (for
<span class="acronym">IDE</span> drives) and
<em class="filename">/boot/boot.0800</em> (for <span class="acronym">SCSI</span>
drives). These files contain the <span class="acronym">MBR</span> of the drive
before <span class="acronym">LILO</span> was installed. You can use the
<tt class="command">dd</tt> command to replace the boot record on the drive
with this backup copy. For example:

<blockquote><pre class="code">dd if=/boot/boot.0300 of=/dev/hda bs=446 count=1</pre></blockquote>


copies the first 446 bytes of the file
<em class="filename">/boot/boot.0300</em> to
<em class="filename">/dev/hda</em>. Even though the files are 512 bytes in
size, only the first 446 bytes should be copied back to the MBR.</p>

<p>
<img src="figs/bomb.gif">&nbsp;&nbsp;
Be very careful when using this command!  This is one of those
cases where blindly executing commands you find in a book can cause
real trouble if you're not sure what you're doing. Only use this
method as a last resort and only if you're certain that the files
<em class="filename">/boot/boot.0300</em> or
<em class="filename">/boot/boot.0800</em> contain the boot record you
want. Many distributions of Linux come installed with bogus versions
of these two files; you might need to delete them before you install
LILO.</p>

<p>The <span class="acronym">LILO</span> documentation contains further hints for removing <span class="acronym">LILO</span> and
debugging your <span class="acronym">LILO</span> configuration.
<a name="INDEX-1279" />
<a name="INDEX-1280" />
<a name="INDEX-1281" />
<a name="INDEX-1282" /></p>
</div>
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch05_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch05_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">5. Essential System Management</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">5.3. System Startup and Initialization</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>