<?label F.3. Installation Differences from Intel?><html><head><title>Installation Differences from Intel (Running Linux)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="Running Linux" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="appf_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm" /></td><td width="172" valign="top" align="right"><a href="appf_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">F.3. Installation Differences from Intel</h2>

<p><a name="INDEX-275" />
<a name="INDEX-276" />
Most of the installation procedures for Linux/SPARC systems are
identical to those of Intel-based Linux systems.  The differences that
do exist are just a side effect of different hardware, different
booting procedures, and other similar divergences.</p>

<div class="sect2">
<h3 class="sect2">F.3.1. Graphics and X</h3>

<p><a name="INDEX-277" />
<a name="INDEX-278" />
Graphics cards are different on each system, and Linux/SPARC systems use different X servers. All SBUS-based and several onboard
SPARC graphics cards use the Xsun series of servers.  They are
named:</p>

<table border="1">

<tr>
<th>Server</th>
<th>Purpose</th>
</tr>




<tr>
<td rowspan="0">XsunMono</td>
<td rowspan="0">For monochrome graphics cards only</td>
</tr>

<tr>
<td rowspan="0">Xsun</td>
<td rowspan="0">For 8-bit color and monochrome displays</td>
</tr>

<tr>
<td rowspan="0">Xsun24</td>
<td rowspan="0">For 24-bit color graphics cards only, including Creator/Creator3d</td>
</tr>


</table><p>Unlike Xfree86 on Intel, these X servers do not use a server
configuration file for several reasons.  First, the mouse
and keyboard types are known on SPARC systems.  Second, the graphics
card and resolution can be completely autodetected and configured, so
no specification of these parameters is needed in a configuration file.</p>

<p>The PCI systems start to bring in some exception cases for graphics
cards. Several of the desktop systems (such as Ultra 5 and Ultra 10)
have an ATI Mach-64 derived graphics card on the motherboard.  Also ATI
Mach64 PCI expansion boards are available as well.  These graphics
cards do use the Xfree86 servers and thus have a configuration file
to set up.</p>

<p>For these ATI cards, you set up the XF86Config file just as you
would for ATI cards on an Intel system.  There are a few sticking
points to be aware of:</p>

<ul><li><p>Several PCI UltraSPARC systems provide the option of using either a
traditional Sun-type [45] keyboard and mouse or a PC-style keyboard
with a PS/2 mouse. If you're using the Sun keyboard, the keyboard
configuration should look something like this:
<?troff-ps_indent0?>
<blockquote><pre class="code">XkbKeycodes     "sun(type5)"
XkbTypes        "default"
XkbCompat       "default"
XkbSymbols      "sun/us(sun5)"
XkbGeometry     "sun"
XkbRules        "xfree86"
XkbModel        "sun"
XkbLayout       "sun/us"</pre></blockquote>

whereas for the PC-style keyboard you want something like this:
<blockquote><pre class="code">XkbRules    "xfree86"
XkbModel    "pc101"
XkbLayout   "us"</pre></blockquote>

The X configuration tools, such as <em class="filename">xf86config</em> and <em class="filename">XConfigurator</em>,
should be able to get the options right all by themselves. But if
they don't, this description helps you.</p></li><li><p> Monitor timing configuration can be a pain with Sun
monitors.  They are really Sony monitors with Sun's brand name on the
case. There is no definitive tabulation of what Sony model is
"underneath the hood" of the various Sun monitors.  All is not lost--use the following rules of thumb and you will get a
<?troff \p?> working X
configuration when using tools like <tt class="command">XConfigurator</tt>
or <tt class="command">xf86config</tt>.</p>

<p>Simply take your monitor size (17-inch, 19-inch, and so on) and choose the
most common Sony monitor of the same size.</p>

<p>If you attach a standard off-the-shelf SVGA monitor to your PCI
graphics card, you can simply select it from the X configuration tool
monitor listing.</p>

<p>Multihead X configurations are supported currently, but with some
limitations.  Mach64 ATI cards cannot be multiheaded. The rest of the ATI cards can
be multiheaded within the same card type. (That is to say, two cards
that both work with the Xsun server can be multiheaded, whereas an Xsun24
and an XsunMono cannot.) The restrictions in this paragraph will
disappear in a future release of the X server.</p></li></ul><a name="INDEX-279" /><a name="INDEX-280" />
</div>




<div class="sect2">
<h3 class="sect2">F.3.2. The SILO Boot Loader</h3>

<p><a name="INDEX-281" />
<a name="INDEX-282" />
<a name="INDEX-283" />
SPARC stations also differ from Intel-based systems in the boot loader.  SPARC systems use a
bootloader named SILO (for SPARC Improved LOader).</p>

<p>From the user's perspective, SILO behaves just like Intel's LILO.  The
main noticeable difference is that you don't need to run a special
<tt class="command">/sbin/silo</tt> program each time a new kernel image is
added to the <em class="filename">config</em> file (which is
<em class="filename">/etc/silo.conf</em> ) as you need to do with Intel.
Also, SILO is capable of loading any kernel image found on your <em class="filename">ext2</em>,
UFS, or ISO9660 filesystems by name.</p>

<p>The reason SILO is able to do this is OBP (Open Boot Prom, the
firmware used on SPARC systems).  It provides a way for the
bootloader code to read blocks off of boot devices, such as disks. With the kernel filename and device name you tell it to use, SILO
simply reads your <em class="filename">ext2</em> partition and loads it.  (Note: in another
light this creates a slight limitation. See the section that follows on
bootable devices and consoles.)</p>

<p>It is possible to use SILO to dual boot both Linux and some other
SPARC OS. Some helpful hints on how to do this can be found at
<a href="../../../../../../www.sun.com/software/linux/dual_boot.html">http://www.sun.com/software/linux/dual_boot.html</a>.</p>
</div>




<div class="sect2">
<h3 class="sect2">F.3.3. Partitioning Disks</h3>

<p><a name="INDEX-284" />
We now tackle the peculiarities of disk partitioning on Linux/SPARC
systems.  You can treat this process just like you would on an Intel
system with the following exceptions:</p>

<ul><li><p> Disk slice c is special: it must exist, and it must
encompass the entire disk.  Most disk partitioning programs, such as
<em class="filename">fdisk</em> and Disk Druid, automatically take care of this for you on
SPARC systems.</p>

<p>The reason for disk slice c being this way is that OBP uses this slice to
determine the span of blocks on your disk and the location of the boot
block for loading SILO from disk.</p></li><li><p>If you are creating a partition for something other than an <em class="filename">ext2</em> or
UFS filesystem, the partition must not start on the first block.  The reason is
that other uses, such as swap partitions and RAID slices, will end up
overwriting the disk label and making your disk unusable.</p>

<p>This is an issue only for Linux/SPARC on 2.0.x-based kernels. Sun has added facilities such that new RAID and swap partitions created under
2.2.x kernel-based distributions will take care of this issue
transparently for you.</p>

<p>The easiest way to deal with skipping the first block on 2.0.x-based
distributions is to just start the partition at cylinder 1 instead of
0.</p></li></ul>
</div>




<a name="INDEX-285" /><a name="INDEX-286" />


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="appf_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="appf_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">F.2. System Libraries</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">F.4. Installation from a Serial Console</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>