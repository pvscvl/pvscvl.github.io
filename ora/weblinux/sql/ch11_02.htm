<?label 11.2. Dynamic Connectivity?><html><head><title>Dynamic Connectivity (MySQL &amp; mSQL)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Randy Jay Yarger, George Reese and Tim King" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565924347L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="MySQL &amp; mSQL" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="MySQL and mSQL" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch11_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">MySQL &amp; mSQL</a></td><td width="172" valign="top" align="right"><a href="ch12_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<a name="INDEX-714" /><h2 class="sect1">11.2. Dynamic Connectivity</h2>





<p>The API we have discussed so far in the chapter is really all you
need for the simple, but most common database access of every day
select, insert, update, and delete calls. Some more complex
applications, however, may require that you not know
everything -- or perhaps anything -- about the database to
which you are connecting and the statements you are sending to it.
While both APIs support <a name="INDEX-715" />database-level meta-data -- runtime
information about the database to which you are connected -- only
the MySQL API provides full support for dynamically generated SQL
calls, including <a name="INDEX-716" />result set meta-data.</p>





<a name="ch11-3-fm2xml" /><div class="sect2">
<a name="INDEX-717" /><a name="INDEX-718" /><h3 class="sect2">11.2.1. MySQL Statement Handlers
</h3>





<p>As we noted earlier, MySQL has two query processing tools. The simple
form returns a result set in the form of a list of lists. The more
complex form returns a statement handler.</p>





<p>A statement handler represents the results of a MySQL query handled
via the <tt class="literal">query()</tt> method (as opposed to using the
<tt class="literal">do()</tt> method). <a href="ch11_02.htm">Example 11-1</a> shows
how you can use the statement handler to generate runtime information
about a query or update.</p>





<a name="ch11-40221" /><div class="example">
<h4 class="objtitle">Example 11-1. Dynamic Database Access Using a MySQL Statement Handler </h4>





<blockquote><pre class="code">[7:20pm] athens&gt; <b class="emphasis-bold">python</b>
Python 1.5.1 (#1, Jun 13 1998, 22:38:15)  [GCC 2.7.2] on sunos5
Copyright 1991-1995 Stichting Mathematisch Centrum, Amsterdam
&gt;&gt;&gt; import MySQL;
&gt;&gt;&gt; db = MySQL.connect();
&gt;&gt;&gt; db.selectdb('db_test');
&gt;&gt;&gt; result = db.query("INSERT INTO test(test_id,test_val) VALUES(4, 'Bing!')");
&gt;&gt;&gt; print result.affectedrows();
1
&gt;&gt;&gt; result = db.query("SELECT * FROM test");
&gt;&gt;&gt; print result.numrows();
3
&gt;&gt;&gt; print result.fields();
[['test_id', 'test', 'long', 11, 'notnull'], ['test_val', 'test', 'string', 100, '']]
&gt;&gt;&gt; print result.fetchrows(-1);
[[1, 'This is a test.'], [2, 'This is a test.'], [4, 'Bing!']]
&gt;&gt;&gt;</pre></blockquote>
</div>





<p>With the statement handler, you now have access to the number of rows
affected by an update, insert, or delete in addition to a set of data
about result sets from queries. In <a href="ch11_02.htm">Example 11-1</a>, we
accessed the number of rows retrieved by a query and detailed
information about the columns represented in the result set.</p>





<p>Of the new methods introduced in <a href="ch11_02.htm">Example 11-1</a>,
only<a name="INDEX-719" />
<tt class="literal">fetchrows()</tt> is not self-evident. This method
fetches the next series of rows matching the number passed to it. In
other words, if you call <tt class="literal">result.fetchrows(2)</tt>, a
list of the next two rows will be returned. This method will return a
list of all rows -- as in the example above -- if you pass it a
number less than 0. Combining this method with a call to
<tt class="literal">seek()</tt> enables you to move around a result set.
The <tt class="literal">seek()</tt>
<a name="INDEX-720" /> method accepts an integer parameter
specifying which row you wish to work on where
represents the first row.</p>
</div>
















<a name="ch11-4-fm2xml" /><div class="sect2">
<a name="INDEX-721" /><h3 class="sect2">11.2.2. Database Meta-data</h3>





<p>Though only the MySQL API supports dynamic result set management (at
least at the time of publishing of this book), both APIs support
database meta-data through a nearly identical set of methods.
Database meta-data is basically information about a database
connection. <a href="ch11_02.htm">Example 11-1</a> shows a Python session that
interrogates MySQL and mSQL connections about themselves.</p>





<a name="ch11-25794" /><div class="example">
<h4 class="objtitle">Example 11-1. Data</h4>




<blockquote><pre class="code">[7:56pm] athens&gt; <b class="emphasis-bold">python</b>
Python 1.5.1 (#1, Jun 13 1998, 22:38:15)  [GCC 2.7.2] on sunos5
Copyright 1991-1995 Stichting Mathematisch Centrum, Amsterdam
&gt;&gt;&gt; import mSQL, MySQL;
&gt;&gt;&gt; msql = mSQL.connect();
&gt;&gt;&gt; mysql = MySQL.connect();
&gt;&gt;&gt; print msql.listdbs();
['db_test', 'db_web']
&gt;&gt;&gt; print mysql.listdbs();
[['db_test'], ['mysql'], ['test']]
&gt;&gt;&gt; msql.selectdb('db_test');
&gt;&gt;&gt; mysql.selectdb('db_test');
&gt;&gt;&gt; print msql.listtables();
['test', 'hosts']
&gt;&gt;&gt; print mysql.listtables();
[['test']]
&gt;&gt;&gt; print msql.serverinfo;
2.0.1
&gt;&gt;&gt; print mysql.serverinfo();
3.21.17a-beta-log
&gt;&gt;&gt; print mysql.clientinfo();
MySQL-Python-1.1
&gt;&gt;&gt; print msql.hostname;
None
&gt;&gt;&gt; print mysql.hostinfo();
Localhost via UNIX socket
&gt;&gt;&gt; print mysql.stat();
Uptime: 4868410  Running threads: 1  Questions: 174  Reloads: 4  Open tables: 4
&gt;&gt;&gt; print mysql.listprocesses();
None
&gt;&gt;&gt;</pre></blockquote>
</div>





<p>In this example, we have a litany of method calls that provide
extended information about database connections. In a couple of
instances, mSQL provides this information via immutable attributes
rather than methods. The MySQL API, on the other hand, provides a lot
more information than does the mSQL one. See the reference section,
<a href="part3.htm">Part III, "Reference"</a>, for a full description of each of
these methods and attributes.<a name="INDEX-722" /></p>
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch11_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch12_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">11. Python</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">12. PHP and Other Support for Database-driven HTML</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>