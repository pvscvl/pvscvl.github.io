<?label 21.4. 
Mysql.pm API?><html><head><title>
Mysql.pm API (MySQL &amp; mSQL)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Randy Jay Yarger, George Reese and Tim King" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565924347L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="MySQL &amp; mSQL" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="MySQL and mSQL" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch21_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">MySQL &amp; mSQL</a></td><td width="172" valign="top" align="right"><a href="ch22_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<a name="INDEX-2018" /><h2 class="sect1">21.4. 
Mysql.pm API</h2>





<p>The Mysql.pm API is identical to the Msql API (with
"Msql" replaced with "Mysql" in all places)
except for the following differences.</p>







<a name="INDEX-2019" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::connect</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$db = Mysql-&gt;connect($host, $database, $user, $password);</pre></td><td align="right" /></tr></table>In addition to the three connect methods that are identical to
<tt class="literal">Msql::connect</tt><b class="function">,</b> 
<tt class="literal">Mysql::connect</tt> provides a fourth method that
requires an additional password argument. The first argument is the
hostname or IP address of the MySQL server. If
<tt class="literal">undef</tt> is passed as this argument, the module
connects to the Unix-style socket on the localhost. The second
argument is the name of the initial database to select. This can
always be changed later with
<tt class="literal">Mysql::selectdb</tt><b class="function">.</b>  You may also
supply <tt class="literal">undef</tt> as the second argument to select no
initial database. The third argument is the username of the user
connecting to the database. To successfully connect, the username
must exist in the MySQL access tables. The final argument is the
password of the user.</p>
<h4 class="refsect1">Example</h4>





<blockquote><pre class="code">use Mysql;

$db = Mysql-&gt;connect(undef,'mydata','webuser','super_secret_squirrel');
# The database handle is now connected to the local MySQL server using the
# database 'mydata'. The user name 'webuser' was used to connect who had
# the password 'super_secret_squirrel'.</pre></blockquote>





</div>

<a name="INDEX-2020" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::errno</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$error_number = $db-&gt;errno;</pre></td><td align="right" /></tr></table><tt class="literal">Mysql::errno</tt> returns the error number of the last
error. This error number corresponds to the error message returned
from <tt class="literal">Msql::errmsg</tt>.</p>
<h4 class="refsect1">Example</h4>





<blockquote><pre class="code">use Mysql;
my $db = Mysql-&gt;connect(undef,'mydata','webuser','super_secret_squirrel');

# There is a parse error in this query...
my $output = $db-&gt;query('SELECT * from mydata');

if (not $output) {
				print "Error " . $output-&gt;errno . ": " . $output-&gt;errmsg . "\n";
}</pre></blockquote>





</div>

<a name="INDEX-2021" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::FIELD_TYPE_*</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>In addition to the Mysql::TYPE_* datatype
functions that are identical to the Msql::TYPE_*
functions, <em class="filename">Mysql.pm</em> provides these
extra datatype functions:
</pre></td><td align="right" /></tr></table><blockquote class="simplelist">

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_BLOB</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_CHAR</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_DECIMAL</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_DATE</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_DATETIME</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_DOUBLE</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_FLOAT</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_INT24</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_LONGLONG</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_LONG_BLOB</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_LONG</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_MEDIUM_BLOB</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_NULL</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_SHORT</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_STRING</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_TIME</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_TIMESTAMP</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_TINY_BLOB</tt></p>

<p><tt class="literal">&amp;Mysql::FIELD_TYPE_VAR_STRING</tt></p>

</blockquote>
<h4 class="refsect1">Example</h4>





<blockquote><pre class="code">use Mysql;
my $db = Mysql-&gt;connect(undef,'mydata');
my $output = $db-&gt;query("SELECT name, data from myothertable");

if ($output-&gt;type-&gt;[0] = &amp;Mysql::FIELD_TYPE_STRING) {
				print "Name is a STRING.\n";
}</pre></blockquote>





</div>

<a name="INDEX-2022" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::Statement::affectedrows</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$number_of_affected_rows  = $statement_handle-&gt;affectedrows;</pre></td><td align="right" /></tr></table><tt class="literal">Msql::Statement::affectedrows</tt> returns the number
of rows that were affected by the query. This function is useful
since Mysql.pm returns a statement handle even on
non-<tt class="literal">SELECT</tt> statements.</p>
<h4 class="refsect1">Example</h4>





<blockquote><pre class="code">use Mysql;
my $db = Mysql-&gt;connect(undef,'mydata');

my $output = $db-&gt;query("UPDATE mytable set name='bob' where name='joe'");
print $output-&gt;affectedrows . " rows were updated.\n";</pre></blockquote>





</div>

<a name="INDEX-2023" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::Statement::info</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$info  = $sth-&gt;info;</pre></td><td align="right" /></tr></table><tt class="literal">Mysql::Statement::info</tt> returns extra results from
certain queries that do not have specialized functions in
<em class="filename">Mysql.pm</em>, such as <tt class="literal">ALTER TABLE</tt>
and <tt class="literal">LOAD DATA INFILE</tt>. For example, when using
<tt class="literal">LOAD DATA INFILE</tt>,
<tt class="literal">Mysql::Statement::info</tt> returns the number of
records inserted, the number deleted, the number skipped and the
number of unparsable entries.</p>
<h4 class="refsect1">Example</h4>





<blockquote><pre class="code">use Mysql;
$db = Mysql-&gt;connect(undef,'mydata');

my $output = $db-&gt;query("LOAD DATA INFILE 'mydata.dat' INTO TABLE mytable");

my $info = $output-&gt;info($output);
print "LOAD DATA result: $info\n";</pre></blockquote>





</div>

<a name="INDEX-2024" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::Statement::insertid</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$new_id  = $statement_handle-&gt;insertid;</pre></td><td align="right" /></tr></table><tt class="literal">Mysql::Statement::insertid</tt> returns the current
value of the <tt class="literal">auto_increment</tt> field (if there is
one) in the table. If there is no <tt class="literal">auto_increment</tt>
field in the table, the function returns an undefined value
<tt class="literal">undef</tt>.</p>
<h4 class="refsect1">Example</h4>





<blockquote><pre class="code">use Mysql;
my $db = Mysql-&gt;connect(undef,'mydata');

my $output = $db-&gt;query(
   "INSERT into mytable (id, name, date) VALUES ('','bob','today')";

my $new_id = $output-&gt;insertid;
print "Bob was entered with an ID number of $new_id.\n";</pre></blockquote>





</div>

<a name="INDEX-2025" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::Statement::isblob</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@blobs  = $statement_handle-&gt;isblob;</pre></td><td align="right" /></tr></table><tt class="literal">Mysql::Statement::isblob</tt> returns a list of boolean
values indicating if the fields contained in the statement handle are
of a <tt class="literal">BLOB</tt> type. If called in a scalar context, the
function returns a reference to an array.</p>
<h4 class="refsect1">Example</h4>





<blockquote><pre class="code">use Mysql;
$db = Mysql-&gt;connect(undef,'mydata');

my $output = $db-&gt;query('SELECT name, data from myothertable');

if ($output-&gt;isblob-&gt;[0]) {
				print "Name is a BLOB.\n";
} else {
				print "Name is not a BLOB.\n";
}</pre></blockquote>





</div>

<a name="INDEX-2026" /><a name="INDEX-2027" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::query</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table>Unlike <em class="emphasis">Msql.pm</em>, <em class="emphasis">Mysql.pm</em>
returns a statement handle even with <tt class="literal">non-SELECT</tt>
queries, such as <tt class="literal">INSERT</tt>,
<tt class="literal">UPDATE</tt>, and <tt class="literal">DELETE</tt>.</p>
<h4 class="refsect1">Example</h4>





<blockquote><pre class="code">use Mysql;
my $db = Mysql-&gt;connect(undef,'mydata');

my $output = $db-&gt;query("UPDATE mytable set name='joe' where name='bob'");
# $output is a statement handle.<a name="INDEX-2027" /></pre></blockquote>





</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch21_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch22_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">21.3. 
Msql.pm API</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">22. JDBC Reference</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>