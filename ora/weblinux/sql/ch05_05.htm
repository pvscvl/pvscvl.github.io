<?label 5.5. Database Administration?><html><head><title>Database Administration (MySQL &amp; mSQL)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Randy Jay Yarger, George Reese and Tim King" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565924347L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="MySQL &amp; mSQL" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="MySQL and mSQL" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch05_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">MySQL &amp; mSQL</a></td><td width="172" valign="top" align="right"><a href="ch05_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<a name="INDEX-326" /><h2 class="sect1">5.5. Database Administration</h2>





<p>
<a name="INDEX-327" />
<a name="INDEX-328" />Now
that your server is running 24 hours a day, 7 days a week, your next
task is to get it to serve your database needs. mSQL provides a set
of utilities that support easy server administration.</p>





<a name="ch05-4-fm2xml" /><div class="sect2">
<h3 class="sect2">5.5.1. The msqladmin Utility</h3>





<p>
<a name="INDEX-329" />The <em class="emphasis">msqladmin</em>
utility is your primary database administration tool. It supports
creating, deleting, copying, renaming, and examining your mSQL
databases. If you look back to our discussion of what a database is
in <a href="ch01_01.htm">Chapter 1, "Introduction to Relational Databases"</a>, you will remember that mSQL itself
is not a database. Your databases are the collection of files under
each directory in the <em class="emphasis">msqldb</em> directory. mSQL is
the database engine. One engine can serve many databases
simultaneously. The msqladmin utility lets you administer the
databases under a particular server.</p>





<a name="ch05-5-fm2xml" /><div class="sect3">
<a name="INDEX-330" /><a name="INDEX-331" /><h3 class="sect3">5.5.1.1. 
Database creation</h3>





<p>The first thing you want to do with your new mSQL installation is
create a database that serves some purpose for you. The syntax of
creating a database is:</p>





<blockquote><pre class="code">msqladmin create <em class="replaceable">DATABASENAME</em></pre></blockquote>





<p>In this syntax, <em class="replaceable">DATABASENAME</em> is the name
of the new database you wish to create. This command will create a
new, blank database with the name you specify. As we mentioned
earlier, a database in mSQL is simply a directory under the
<em class="emphasis">msqldb</em> directory in the mSQL installation. mSQL
places all the data associated with your new database in files
underneath this directory. For example, if you create a database
called "mydata" using a default mSQL installation, the
directory <em class="emphasis">/usr/local/Hughes/msqldb/mydata</em> will
appear.</p>
</div>









<a name="ch05-6-fm2xml" /><div class="sect3">
<a name="INDEX-332" /><a name="INDEX-333" /><h3 class="sect3">5.5.1.2. 
Database destruction</h3>





<p>During the process of developing a new database application, you will
likely want to create several databases to support the development
process. For example, it is common in database application
development to have separate databases for development, testing, and
production. When development is complete, it is time to get rid of
the development and testing databases. The
<em class="emphasis">msqladmin</em> utility provides the
"drop" option to let you delete a database:</p>





<blockquote><pre class="code">msqladmin drop <em class="replaceable">DATABASENAME</em></pre></blockquote>





<p>As with the <em class="emphasis">msqladmin create</em> command,
<em class="replaceable">DATABASENAME</em> is the name of the database
you wish to destroy. mSQL will not let you accidentally drop the
database. After issuing this command, it will warn you that dropping
a database is potentially a very bad thing to do and ask you to
confirm the drop. You can examine the <em class="emphasis">msqldb</em>
directory after dropping the database to verify that the directory
that once served as that database no longer exists.</p>
</div>









<a name="ch05-7-fm2xml" /><div class="sect3">
<a name="INDEX-334" /><a name="INDEX-335" /><h3 class="sect3">5.5.1.3. 

Database renaming and copying</h3>





<p>A convenient new feature of mSQL 2 is the ability to copy and rename
databases. Under mSQL 1, you could drop to the file system and do a
manual rename or copy of the database directory using the renaming
and copying tools of your operating system. If you go that route,
however, you also have to remember to restart the mSQL server and
make sure you have not messed up any permissions. With mSQL 2,
however, a rename is as simple as:</p>





<blockquote><pre class="code">msqladmin move <em class="replaceable">OLDNAME</em> <em class="replaceable">NEWNAME</em></pre></blockquote>





<p>For example, if you had created a database with the misspelled name
"midata" and you wanted to rename it to the proper
spelling, you would issue the command:</p>





<blockquote><pre class="code">msqladmin move <em class="replaceable">midata</em> <em class="replaceable">mydata</em></pre></blockquote>





<p>Copying is just as simple:</p>





<blockquote><pre class="code">msqladmin copy <em class="replaceable">mydata</em> <em class="replaceable">mynewdata</em></pre></blockquote>
</div>









<a name="ch05-8-fm2xml" /><div class="sect3">
<a name="INDEX-336" /><h3 class="sect3">5.5.1.4. 
Server status</h3>





<p>If you have been playing with MySQL, you will notice that the
monitoring of server status is one area in which mSQL is decidedly
lacking. The msqladmin utility is your interface into monitoring your
servers. The <em class="emphasis">msqladmin
stats</em>
<a name="INDEX-337" /> command under mSQL 2 will produce the
following output:<a name="INDEX-338" /></p>





<blockquote><pre class="code">Server Statistics
-----------------

Mini SQL Version 2.0.4.1 - Forge Alpha Build #9
Copyright (c) 1993-94 David J. Hughes
Copyright (c) 1995-98 Hughes Technologies Pty Ltd.
All rights reserved.

Config file      : c:\usr\local\hughes\msql.conf
Max connections  : 61
Cur connections  : 1
Running as user  : UID 500

Connection table :
  Sock  Username    Hostname    Database    Connect   Idle   Queries
 +-----+----------+---------- +------------+---------+------+--------+
 |   5 | randy    | Unix sock | No DB      |  0H  0M |    0 |      1 |
 |  13 | bob      | client.com| mydata     |  0H  5M |    2 |      4 |
 +-----+----------+------ ----+------------+---------+------+--------+</pre></blockquote>





<p>This output likely needs a little explanation:</p>





<dl>
<dt><b>
<a name="INDEX-339" />Max connections</b></dt>
<dd><p>The maximum number of simultaneous connections that the server can
handle.</p></dd>





<dt><b>
<a name="INDEX-340" />Cur connections</b></dt>
<dd><p>The current number of connections to the database server.</p></dd>





<dt><b>
<a name="INDEX-341" />Sock</b></dt>
<dd><p>The Internet socket number used by mSQL to identify each connection.</p></dd>





<dt><b>
<a name="INDEX-342" />Username</b></dt>
<dd><p>The username of the person connected to the server.</p></dd>





<dt><b>
<a name="INDEX-343" />Hostname</b></dt>
<dd><p>The hostname of the machine connected to the server. "Unix
sock" is shown if the client is connecting from the local host
via a Unix socket.</p></dd>





<dt><b>
<a name="INDEX-344" />Database</b></dt>
<dd><p>The name of the database to which the user is currently connected.
"No DB" means that the client has not chosen a database.</p></dd>





<dt><b>
<a name="INDEX-345" />Connect</b></dt>
<dd><p>The total time the client has been connected to the server in hours
and minutes.</p></dd>





<dt><b>Idle</b></dt>
<dd><p>The amount of time in minutes since the client's last query.</p></dd>





<dt><b>
<a name="INDEX-346" />Queries</b></dt>
<dd><p>The total number of queries the client has sent using this connection.</p></dd>

</dl>





<p>In addition to the <em class="emphasis">msqladmin stats</em> command, you
can monitor other, more static, server information via the
<em class="emphasis">msqladmin version</em>
<a name="INDEX-347" /> command. Your output might
look something like this:</p>





<blockquote><pre class="code">Version Details :-

    msqladmin version       2.0.4.1 - Forge Alpha Build #9
    mSQL server version     2.0.4.1 - Forge Alpha Build #9
    mSQL protocol version   23
    mSQL connection         127.0.0.1 via TCP/IP
    Target platform         CYGWIN32_NT-4.0-i586

Configuration Details :-

    Default config file     c:\usr\local\hughes/msql.conf
    TCP socket              1114
    Unix socket             c:\usr\local\Hughes\msql2.sock
    mSQL user               msql
    Admin user              root
    Install directory       c:\usr\local\Hughes
    PID file location       c:\usr\local\Hughes\msql2d.pid
    Memory Sync Timer       30
    Hostname Lookup         False</pre></blockquote>





<p>Each of the values in the output of <em class="emphasis">msqladmin
version</em> can be set via the mSQL 2 configuration file.</p>





<p>If <a name="INDEX-348" />mSQL has
been compiled with debugging enabled, mSQL will place information
about the running server process into the debug file chosen at
compile time. mSQL provides no other logging facilities.</p>
</div>









<a name="ch05-9-fm2xml" /><div class="sect3">
<a name="INDEX-349" /><h3 class="sect3">5.5.1.5. 
Server shutdown</h3>





<p>You saw an example of how to shutdown mSQL earlier in the chapter in
the example Unix startup/shutdown script. The command is:</p>





<blockquote><pre class="code">msqladmin shutdown</pre></blockquote>





<p>This command will perform a clean shutdown of the mSQL server.</p>
</div>









<a name="ch05-10-fm2xml" /><div class="sect3">
<a name="INDEX-350" /><a name="INDEX-351" /><h3 class="sect3">5.5.1.6. 

Reloading server changes</h3>





<p>If you make any changes to the mSQL ACL, you will need to tell the
server to reload those changes. The command to do this is:</p>





<blockquote><pre class="code">msqladmin reload</pre></blockquote>





<p>We will cover the mSQL ACL later in the chapter.</p>
</div>









<a name="ch05-11-fm2xml" /><div class="sect3">
<h3 class="sect3">5.5.1.7. Command line options for msqladmin</h3>





<p>In all of the examples we have given so far,
<em class="emphasis">msqladmin</em> has been used to manage the mSQL
server on the local host with the default configuration file. You can
use this tool to manage servers on other machines or that use
different configuration files. The full syntax for the
<em class="emphasis">msqladmin</em> utility is:</p>





<blockquote><pre class="code">msqladmin [-h host] [-f conf] [-q] COMMAND</pre></blockquote>





<p>The options have the following meanings:</p>





<dl>
<dt><b>-h</b></dt>
<dd><p>The host of the server you wish to manage.</p></dd>





<dt><b>-f</b></dt> 
<dd><p>The configuration file for the server you wish to manage. You will
only likely ever use this option if you are running multiple mSQL
instances as described earlier in the chapter.</p></dd>





<dt><b>-q</b></dt>
<dd><p>Run in quiet mode. The <em class="emphasis">msqladmin</em> utility will
not ask you for verification of commands. This option is useful if
you are running the utility from a script.<a name="INDEX-352" />
<a name="INDEX-353" /></p></dd>

</dl>
</div>
</div>
















<a name="ch05-12-fm2xml" /><div class="sect2">
<a name="INDEX-354" /><a name="INDEX-355" /><h3 class="sect2">5.5.2. Backups
</h3>





<p>Good backups are a vital part of any administration scheme. Database
corruption can happen and, if severe enough, can cripple all
applications that depend on the database. As the saying goes, data is
only as good as the most recent backup.</p>





<p>There are a couple of backup methods available when using mSQL. Like
most of mSQL, they do not provide all of the bells and whistles but
they do get the job done. The <em class="emphasis">msqldump</em> command
is the most commonly used method for backing up mSQL databases. This
command produces a full standard SQL dump of an entire database. You
must issue a separate msqldump command for each database on the
system. For example:</p>





<blockquote><pre class="code">msqldump <em class="replaceable">database1</em> &gt; <em class="replaceable">/usr/backups/database1.sql.daily</em>
msqldump <em class="replaceable">database2</em> &gt; <em class="replaceable">/usr/backups/database2.sql.daily</em>
msqldump <em class="replaceable">database3</em> &gt; <em class="replaceable">/usr/backups/database3.sql.daily</em></pre></blockquote>





<p>This example creates a dump of three different databases into the
same directory.</p>





<p>You use the file extension <em class="emphasis">daily</em> to indicate
that the backup files are replaced every day. How often you backup
your data will depend on the importance of the data and the amount
and type of backup storage you have available. Because only full
dumps are available from mSQL, the size of the backups can grow large
on systems that contain a great deal of data. If you have enough
space, a good backup plan is to keep separate daily backups for each
day of the week -- or for two weeks or even a month. At the end of
the cycle, the tapes are reused as needed -- or the files are
overwritten if backing up to hard disk. This way there is always one
week of data available. If backing up to hard disk, you can possibly
condense the individual daily backups into a single daily backup that
is overwritten each day. In this case, you should also keep a
separate weekly backup in order to recover accidentally deleted data
that cannot be found on the most recent backup. Because of the lack
of redundancy, this plan should only be used if you have a limited
amount of backup space available.</p>





<p>The other method of backing up mSQL databases involves taking
advantage of the simple nature of the mSQL data files. Unlike some
database packages, mSQL keeps its data in regular files stored in the
native operating system's file system. Thus is it possibly to
act on these files as if they were any other type of file. Therefore
a complete backup of an mSQL system can be obtained by shutting down
the mSQL server and then creating a tar archive of the mSQL data
directory. You must shut down the server first or the archive data
files could be incomplete or corrupt.</p>





<p>Restoring data from mSQL data backups is as simple as creating the
backups. Dumps created with
<em class="emphasis">msqldump</em>
<a name="INDEX-356" /> are in standard SQL that can be fed to
the <em class="emphasis">msql</em> monitor. These dumps contain the
instructions to create the tables as well as the data, so you should
either remove the existing table, if it exists, or remove the
<tt class="literal">CREATE TABLE</tt>
<a name="INDEX-357" /> statement from the backup file. If
you are restoring only specific rows of data, you can simply copy
them out of the backup file and feed them into the
<em class="emphasis">msql</em> monitor.</p>





<p>When restoring data from a tar archive of the mSQL data directory, it
is only possible to do a full restore to the backed up state. You
cannot restore only parts of the data, and any data that has been
added to the database since the backup will be lost. To perform this
restore, simply shutdown the mSQL server then enter the backup file
into the mSQL data directory. When you restart the server, it will be
in exactly the state it was in when the backup was
performed -- except that any new databases added will still be
there, untouched.</p>





<p>Which method you choose to use depends on your needs. Creating a
binary archive is simple and complete and allows for a very fast
recovery time. However, it is not possible to do a partial recovery
and any data you have added since the backup will be lost. The SQL
dump method on the other hand can be slow, but it allows for partial
recovery, albeit with a little work. In addition, the SQL dump method
can be performed at any time, while a binary archive required the
server to be shut down, which can be a deciding factor in a busy
installation.</p>





<p>One final concern to consider is portability. Unlike a binary backup,
a SQL dump consists entirely of plain ASCII SQL commands. With little
modification -- mainly weeding out any of the mSQL specific
SQL -- a mSQL SQL dump can be imported into any standards
compliant SQL server. This is a very handy way to transport your data
if you ever need to switch SQL servers.</p>
</div>
















<a name="ch05-13-fm2xml" /><div class="sect2">
<a name="INDEX-358" /><a name="INDEX-359" /><h3 class="sect2">5.5.3. Security
</h3>





<p>
<a name="INDEX-360" />
<a name="INDEX-361" />Depending
on your point of view, the mSQL security scheme is either one of its
advantages or one of its disadvantages. On the one hand, mSQL's
security is easier to manage than any other server-based relational
database engine available. It accomplishes this ease of maintenance
through simplicity. Unfortunately, this simplicity is insufficient
for even moderately complex database applications.</p>





<p>mSQL manages security through a file called
<em class="emphasis">msql.acl</em> stored in the mSQL installation
directory. The .acl extension refers to "Access Control
List," a very flexible form of authorization that has been in
use on several operating systems and applications for some time. The
format of the msql.acl file looks like this:</p>





<blockquote><pre class="code">database=mydata
read=*
write=*
host=*
access=local,remote

database=mynewdata
read=*
wriite=admin,root
host=*
access=local</pre></blockquote>





<p>Each database has a stanza of options. The <em class="emphasis">read</em>
and <em class="emphasis">write</em> lines indicate which users you want to
give read (<tt class="literal">SELECT</tt>) or write
(<tt class="literal">INSERT</tt>,<tt class="literal">UPDATE</tt>,<tt class="literal">DELETE</tt>)
access to the database. The <em class="emphasis">host</em> line specifies
which hosts can connect remotely to the database. If the
<em class="emphasis">access</em> line contains "local," local
Unix socket connections are allowed. Similarly, if the
<em class="emphasis">access</em> line contains "remote,"
remote TCP connections are allowed.</p>





<p>The ACL file allows a "*" wildcard entry in the
<em class="emphasis">read</em>, <em class="emphasis">write</em>, and
<em class="emphasis">host</em> fields. You could therefore have the
following ACL:<a name="INDEX-362" />
<a name="INDEX-363" />
<a name="INDEX-364" /></p>





<blockquote><pre class="code">database=mynewdata
read=*
write=msql*
host=*.client.com,*isp.com
access=local,remote</pre></blockquote>





<p>Under this ACL, anyone from any host at client.com or anyone from any
host at any domain ending in isp.com -- for example, wisp.com and
lisp.com -- can connect to the database. These users can read from
the database, but only user names beginning with "msql"
can modify the database.</p>





<p>By default, everything is excluded. Thus, if you leave out a
<em class="emphasis">write</em> entry, nobody can modify the database.
Specific users and hosts may be excluded by prefixing their entries
with a "-". Consider the following:</p>





<blockquote><pre class="code">database=moredata
read=-bob,*
write=jane
host=-junk.isp.com,*.isp.com
access=local,remote</pre></blockquote>





<p>This ACL enables all machines from the isp.com domain to connect,
except for junk.isp.com. In addition, everyone except
"bob" can read from the database. Only "jane"
can write to the database. Because rejection is mSQL's default,
having specific rejection entries like "bob," is
meaningless unless the line also contains a wildcard entry.</p>





<p>mSQL acts on the first match it encounters. If, for example, the
wildcard in the <em class="emphasis">read</em> entry came before
"-bob," the wildcard would have matched "bob"
and "bob" would have read access.</p>





<p>The <em class="emphasis">msqladmin reload</em> command, as noted earlier
in the chapter, reloads an ACL after you have made any changes. If
you fail to issue the <em class="emphasis">msqladmin reload</em> command,
your changes will not be seen until the server shuts down and starts
back <a name="INDEX-365" />
<a name="INDEX-366" />up.<a name="INDEX-367" />
<a name="INDEX-368" /></p>
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch05_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch05_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">5.4. Running mSQL</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">5.6. mSQL Utilities</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>