<?label 9.2. HTML Forms?><html><head><title>HTML Forms (MySQL &amp; mSQL)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Randy Jay Yarger, George Reese and Tim King" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565924347L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="MySQL &amp; mSQL" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="MySQL and mSQL" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch09_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">MySQL &amp; mSQL</a></td><td width="172" valign="top" align="right"><a href="ch09_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<a name="INDEX-609" /><h2 class="sect1">9.2. HTML Forms</h2>





<p>Before we examine the specifics of CGI, it is useful to review the
most common method by which end users are presented with an interface
to CGI programs: HTML forms. Forms are a part of the HTML markup
language that enable fields of different types to be presented to the
end user. Then data entered into the fields can be sent back to the
web server. The fields can be lines or boxes of text or buttons which
can be pushed or checked by the user. The following is an example of
an HTML page that contains a form:</p>





<blockquote><pre class="code">&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;My Forms Page&lt;/title&gt;&lt;/head&gt;
&lt;BODY&gt;
&lt;p&gt;This is a page with a form.
&lt;p&gt;&lt;FORM ACTION="mycgi.cgi" METHOD=POST&gt;
Enter your name: &lt;INPUT NAME="firstname" SIZE=40&gt;&lt;br&gt;
&lt;INPUT TYPE=SUBMIT VALUE="Submit Form"&gt;
&lt;/form&gt;
&lt;/body&gt;&lt;/html&gt;</pre></blockquote>





<p>This form creates a line 40 characters long into which the user can
enter a first name. Underneath the input line is a button which, when
clicked, will submit the form information to the server. The
forms-related tags that are supported by HTML 3.2 -- currently the
most widespread standard -- are listed below. Incidentally, names
of tags and attributes are case-insensitive. We adhere to the
convention of using uppercase for opening tags and lowercase for
closing tags, but that's just one way of doing
it.<a name="INDEX-610" /></p>





<dl>
<dt><b><tt class="literal">&lt;FORM&gt;</tt></b></dt>
<dd><p>This tag indicates the beginning of a form. At the end of the form
the closing <tt class="literal">&lt;/Form&gt;</tt> is required. Within the
<tt class="literal">&lt;FORM&gt;</tt> tag, three attributes are possible:
<tt class="literal">ACTION</tt> gives the URL or relative path name of the
CGI program to which the data will be sent; <tt class="literal">METHOD</tt>
gives the HTTP method by which the form will be sent (this can be
<tt class="literal">GET</tt> or <tt class="literal">POST</tt>, we will almost
always use <tt class="literal">POST</tt>); <tt class="literal">ENCTYPE</tt> gives
the method used to encode the data (this should only be used if you
really know what you are doing).</p></dd>





<dt><b>
<a name="INDEX-611" /><tt class="literal">&lt;INPUT&gt;</tt></b></dt>
<dd><p>This is the most flexible way to allow users to enter data. There are
actually nine different styles of <tt class="literal">&lt;INPUT&gt;</tt>
tag. The style is given by the <tt class="literal">TYPE</tt> attribute. In
the example above, two <tt class="literal">&lt;INPUT&gt;</tt> tags are
used, one with <tt class="literal">TYPE=SUBMIT</tt> and one with the
default type of <tt class="literal">TEXT</tt>. The nine types are as
follows:</p>




<dl>
<dt><b><tt class="literal">TEXT</tt></b></dt>
<dd><p>A single line box in which the user may enter text.</p></dd>





<dt><b><tt class="literal">PASSWORD</tt></b></dt>
<dd><p>The same as <tt class="literal">TEXT</tt> except that the entered text is
not displayed on the screen.</p></dd>





<dt><b><tt class="literal">CHECKBOX</tt></b></dt>
<dd><p>A checkbox which the user can check or uncheck.</p></dd>





<dt><b><tt class="literal">RADIO</tt></b></dt>
<dd><p>A radio button which must be paired with at least one other radio
button. The user can choose only one.</p></dd>





<dt><b><tt class="literal">SUBMIT</tt></b></dt>
<dd><p>A button that submits the form to the web server when clicked.</p></dd>





<dt><b><tt class="literal">RESET</tt></b></dt>
<dd><p>A button that resets the form to its default values when clicked.</p></dd>





<dt><b><tt class="literal">FILE</tt></b></dt>
<dd><p>Like text, except that it expects the name of a file which it will upload to the server.</p></dd>





<dt><b><tt class="literal">HIDDEN</tt></b></dt>
<dd><p>An invisible field in which you can store data.</p></dd>





<dt><b><tt class="literal">IMAGE</tt></b></dt>
<dd><p>Like a submit button, except that you can specify an image to display on the button.</p></dd>

</dl>




<p>Besides <tt class="literal">TYPE</tt>, <tt class="literal">&lt;INPUT&gt;</tt>
tags usually have a <tt class="literal">NAME</tt> attribute which
associates the data entered in that field with a name; both the name
and the data are passed to the server in <tt class="literal">key=value</tt>
style. In the preceding example, the name of the text input field was
<tt class="literal">firstname</tt>. A <tt class="literal">VALUE</tt> attribute
can be used to give <tt class="literal">TEXT</tt>,
<tt class="literal">PASSWORD</tt>, <tt class="literal">FILE</tt> and
<tt class="literal">HIDDEN</tt> types a preset value. When used with
<tt class="literal">SUBMIT</tt> or <tt class="literal">RESET</tt> it displays the
text in the clickable box. <tt class="literal">RADIO</tt> and
<tt class="literal">CHECKBOX</tt> types can be prechecked by using the
<tt class="literal">CHECKED</tt>The <tt class="literal">SIZE</tt> attribute is
used to provide a line length for <tt class="literal">TEXT</tt>,
<tt class="literal">PASSWORD</tt>, and <tt class="literal">FILE</tt> types.
Likewise, <tt class="literal">MAXLENGTH</tt> can be used to provide a limit
for the amount of text entered. The <tt class="literal">SRC</tt> attribute
gives the URL of the image to use for the <tt class="literal">IMAGE</tt>
type. Finally, the <tt class="literal">ALIGN</tt> attribute tells where to
align the image for the <tt class="literal">IMAGE</tt> type; it can be
<tt class="literal">TOP</tt>, <tt class="literal">MIDDLE</tt>,
<tt class="literal">BOTTOM</tt> (the default), <tt class="literal">LEFT</tt>, or
<tt class="literal">RIGHT</tt>.</p></dd>







<dt><b><tt class="literal">&lt;SELECT&gt;</tt></b></dt>
<dd><p>This tag provides a menu of choices from which the user can choose.
The appearance can be either a drop-down menu from which the user can
choose one item or a list from which the user can use one or more
items. Each item appears in an <tt class="literal">&lt;OPTION&gt;</tt> tag.
A closing <tt class="literal">&lt;/select&gt;</tt> tag is required.</p>





<p>As with the
<tt class="literal">&lt;INPUT&gt;</tt> tag,
<tt class="literal">&lt;SELECT&gt;</tt> has a <tt class="literal">NAME</tt>
attribute that gives a name to the entered data. A
<tt class="literal">SIZE</tt> attribute is also available which determines
how many options will be shown at once on the screen. If
<tt class="literal">SIZE</tt> is missing, the list will be in a drop-down
menu style. The <tt class="literal">MULTIPLE</tt> attribute, if present,
indicates that more than one option can be chosen. The
<tt class="literal">&lt;OPTION&gt;</tt> tag has two possible attributes.
The <tt class="literal">VALUE</tt> attribute sets the value of the data to
be returned. If no <tt class="literal">VALUE</tt> is present, the text
after the <tt class="literal">&lt;OPTION&gt;</tt> tag to the end of the
line will be used instead. If the <tt class="literal">SELECTED</tt>
attribute is in an <tt class="literal">&lt;OPTION&gt;</tt> tag, that option
will be preselected.</p></dd>





<dt><b><tt class="literal">&lt;TEXTAREA&gt;</tt></b></dt>
<dd><p>This last form-related tag enables users to enter blocks of text that
will be sent to the web server. A <tt class="literal">&lt;TEXTAREA&gt;</tt>
tag presents the user with a blank box in which they can enter any
number of lines of text to be sent back to the web server. A
<tt class="literal">&lt;/Textarea&gt;</tt> closing tag is required and any
text between the <tt class="literal">&lt;TEXTAREA&gt;</tt> and
<tt class="literal">&lt;/Textarea&gt;</tt> will be used as the default text
for the box -- similar to the <tt class="literal">VALUE </tt>attribute
for the <tt class="literal">&lt;INPUT&gt;</tt> tag. The three attributes
for <tt class="literal">&lt;TEXTAREA&gt;</tt> are all required.
<tt class="literal">NAME</tt> gives a name to the data, just as with the
other form-related tags. <tt class="literal">ROWS</tt> and
<tt class="literal">COLS</tt> specify the number of rows and columns to
make the text box on the screen, although the user will be able to
enter data beyond those limits.</p></dd>

</dl>





<p><a href="ch09_02.htm">Example 9-1</a> showcases all of the different form
elements.</p>





<a name="ch09-89949" /><div class="example">
<h4 class="objtitle">Example 9-1. An HTML Form that Shows the Different Form Elements </h4>




<blockquote><pre class="code">&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;My Second Forms Page&lt;/title&gt;&lt;BODY&gt;
&lt;p&gt;This is a survey. Please enter the following information about yourself:

&lt;!-- Now let's begin the form. We are using the 'POST' method and sending the
information to a CGI program called 'survey.cgi' --&gt;
&lt;FORM METHOD=POST ACTION="survey.cgi"&gt;

&lt;p&gt;Name: &lt;INPUT SIZE=40 NAME='name'&gt;&lt;br&gt;
&lt;!-- This is an &lt;INPUT&gt; tag of the (default) 'TEXT' style. It is 40 characters
long, and the data will have the name 'name' --&gt;

Social Security Number: &lt;INPUT TYPE=PASSWORD NAME='ssn' SIZE=20&gt;&lt;br&gt;
&lt;!-- This is an &lt;INPUT&gt; tag of the 'PASSWORD' style, used here so that someone looking over the user's shoulder won't see the SSN of the user. The data is saved with the name 'ssn' and the field is 20 characters long on the screen. --&gt;

Are you or have you ever been associated with the Communist party?
	&lt;INPUT TYPE=CHECKBOX NAME='commie' VALUE='yes'&gt;&lt;br&gt;
&lt;!-- This is an &lt;INPUT&gt; tag of the 'CHECKBOX' style, using the name 'commie' for the data. If the form is submitted with the box checked, the value 'yes' will be associated with the name 'commie' --&gt;

Sex: &lt;INPUT TYPE=RADIO NAME='sex' VALUE='male'&gt; Male
	&lt;INPUT TYPE=RADIO NAME='sex' VALUE='female'&gt; Female
	&lt;INPUT TYPE=RADIO NAME='sex' VALUE='neither' CHECKED&gt; Neither&lt;br&gt;
&lt;!-- These are three &lt;INPUT&gt; tags of the 'RADIO' style, using the name 'sex' for the data. Only one of the three can be chosen, and since one of them is prechecked, a value will be sent regardless of whether or not the user clicks on any of them. The value sent to the server is in the 'VALUE' attribute and need not have any relation to the text that comes after the tag. --&gt;

&lt;INPUT TYPE=HIDDEN NAME="form_number" VALUE="33a"&gt;
&lt;!-- This is a little extra information that we would like to send to the CGI, but which the user need not worry about, so we place it inside of an &lt;INPUT&gt; tag of the 'HIDDEN' type --&gt;

Please enter the path of your favorite game: &lt;INPUT TYPE=FILE NAME='game' SIZE=40&gt;&lt;br&gt;
&lt;!-- If the user enters a valid path here, the file will be uploaded to the web server with the name 'game', when the user submits the form. Most web browsers will ask to confirm the transfer, however, so this example is not as insidious as it looks. --&gt;

What are your favorite color(s)?&lt;br&gt;
&lt;SELECT NAME="color" MULTIPLE SIZE=5&gt;
&lt;OPTION&gt;Red
&lt;OPTION&gt;Green
&lt;OPTION&gt;Yellow
&lt;OPTION&gt;Orange
&lt;OPTION VALUE="Blue"&gt;A nice light sky azure
&lt;/select&gt;&lt;br&gt;
&lt;!-- This is a &lt;SELECT&gt;&lt;/select&gt; pair with several &lt;OPTION&gt;s. The name given to the data is 'color', and multiple selections are allowed with all 5 being displayed on the screen at once. The last option uses a 'VALUE' attribute to provide a shortened form of the text. --&gt;

Describe the sociopolitical context of &lt;I&gt;War and Peace&lt;/I&gt; in 50 words or less. Be thorough.&lt;br&gt;
&lt;TEXTAREA NAME='essay' COLS=70 ROWS=10&gt;&lt;/textarea&gt;&lt;br&gt;
&lt;!-- This is a &lt;TEXTAREA&gt;&lt;/textarea&gt; pair which provides a space for the entry of an essay. The data is given the name  'essay'. The text block is 70 characters wide and 10 rows deep. The space between the &lt;TEXTAREA&gt; and &lt;/textarea&gt; tags could have been used to give an example essay. --&gt;

&lt;INPUT TYPE=SUBMIT VALUE="Enter Info"&gt; &lt;INPUT TYPE=RESET&gt;
&lt;!-- These are two &lt;INPUT&gt; tags of type 'SUBMIT' and 'RESET', respectively. The 'SUBMIT' button has the custom label 'Enter Info' while the 'RESET' button has the default value (determined by the browser). Clicking the 'SUBMIT' button will send the data to the web server. Clicking the 'RESET' button will restore the form to its original state, erasing any of the user's data.  --&gt;

&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</pre></blockquote>
</div>





<p>The only input type not used in this example was the
<tt class="literal">IMAGE</tt> style of the
<tt class="literal">&lt;INPUT&gt;</tt> tag. We could have used it on the
page as an alternate way of submitting the form. However, the
<tt class="literal">IMAGE</tt> style is rarely compatible with text-based
and hearing-impaired accessible browsers so it may be wise to avoid
it unless your site is unavoidably tied to a heavily graphical style.</p>





<p>Now that the basics of HTML forms have been covered, the next step is
to enter the world of CGI itself.<a name="INDEX-612" /></p>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch09_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch09_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">9. CGI Programming</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">9.3. The CGI Specification</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>