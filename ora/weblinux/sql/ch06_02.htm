<?label 6.2. Creating and Dropping Tables?><html><head><title>Creating and Dropping Tables (MySQL &amp; mSQL)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Randy Jay Yarger, George Reese and Tim King" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565924347L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="MySQL &amp; mSQL" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="MySQL and mSQL" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch06_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">MySQL &amp; mSQL</a></td><td width="172" valign="top" align="right"><a href="ch06_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">6.2. Creating and Dropping Tables</h2>





<p>With MySQL or mSQL successfully installed, you should now be ready to
create your first table. The <em class="emphasis">table</em>, a structured
container of data, is the basic concept in a relational database.
Before you can begin adding data to a table, you must define the
table's structure. Consider the following layout:</p>





<blockquote><pre class="code">+---------------------------------+
|             people              |
+-------------+-------------------+
| name        | char(10) not null |
| address     | text(100)         |
| id          | int               |
+-------------+-------------------+</pre></blockquote>





<p>Not only does the table contain the names of the columns, but it also
contains the types of each field as well as any additional
information the fields may have. A field's datatype specified
what kind of data the field can hold. SQL datatypes are similar to
datatypes in other programming languages. The full SQL standard
allows for a large range of datatypes. MySQL implements most of them,
while mSQL contains only a few of the most useful types.</p>





<p>The general syntax for table creation is:</p>





<blockquote><pre class="code">CREATE TABLE <em class="replaceable">table_name</em> (<em class="replaceable">column_name1</em> <em class="replaceable">type</em> <em class="replaceable">[modifiers]</em>
                      <em class="replaceable">[</em>, <em class="replaceable">column_name2</em> <em class="replaceable">type</em> <em class="replaceable">[modifiers]]</em>
)</pre></blockquote>





<a name="ch06-4-fm2xml" /><blockquote><h4 class="objtitle">NOTE</h4>

<p>What constitutes a valid identifier -- a name for a table or
column -- varies from DBMS to DBMS. mSQL provides close to the
bare minimum support for names. It accepts any sequence of
International Standards Organization (<a name="INDEX-470" />ISO) 8859-1 (Latin 1) letters,
numbers, or `_' up to 20 characters as a valid
identifier. An identifier must begin with a letter. Good database
design only encounters problems with the ISO 8859-1 restriction. In
other words, for good portable SQL, you do not want to have names
that start with anything other than a valid letter. MySQL lets you go
further. It allows up to 64 characters in an identifier, supports the
character `$' in identifiers, and lets identifiers start
with a valid number. More important, however, MySQL considers any
valid letter for your local character set to be a valid letter for
identifiers.</p>
</blockquote>





<p>A <em class="emphasis">column</em> is the individual unit of data within a
table. A table may have any number of columns, but large tables may
be inefficient. This is where good database design, discussed in
<a href="ch02_01.htm">Chapter 2, "Database Design"</a>, becomes an important skill. By creating
properly normalized tables, you can "join" tables to
perform a single search from data housed in more than one table. We
discuss the mechanics of a join later in the chapter.</p>





<p>Like most things in life, destruction is much easier than creation.
The command to drop a table from the database
is:<a name="INDEX-471" />
<a name="INDEX-472" /></p>





<blockquote><pre class="code">DROP TABLE <em class="replaceable">table_name</em></pre></blockquote>





<p>This command will completely remove all traces of that table from the
database. MySQL will remove all data within the destroyed table from
existence. If you have no backups of the table, you absolutely cannot
recover from this action. The moral of this story is to always keep
backups and be very careful about dropping tables. You will thank
yourself for it some day.</p>





<p>With MySQL, you can specify more than one table to delete by
separating the table names with commas. For example, <tt class="literal">DROP
TABLE </tt><em class="replaceable">people</em><tt class="literal">,
</tt><em class="replaceable">animals</em><tt class="literal">,
</tt><em class="replaceable">plants</em> would delete the three
named tables. You can also use the <tt class="literal">IF EXISTS</tt>
modifier under MySQL to avoid an error should the table not exist
when you try to drop it. This modifier is useful for huge scripts
designed to create a database and all its tables. Before the create,
you do a <tt class="literal">DROP TABLE
</tt><em class="replaceable">table_name</em><tt class="literal"> IF
EXISTS</tt>.</p>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch06_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch06_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">6. SQL According to MySQL and mSQL</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">6.3. SQL Datatypes</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>