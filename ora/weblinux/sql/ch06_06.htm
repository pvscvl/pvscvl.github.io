<?label 6.6. Managing Data?><html><head><title>Managing Data (MySQL &amp; mSQL)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Randy Jay Yarger, George Reese and Tim King" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565924347L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="MySQL &amp; mSQL" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="MySQL and mSQL" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch06_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">MySQL &amp; mSQL</a></td><td width="172" valign="top" align="right"><a href="ch06_07.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />


<h2 class="sect1">6.6. Managing Data</h2>





<p>The first thing you do with a newly created table is add data to it.
With the data in place, you may want to make changes and eventually
remove it.<a name="INDEX-519" />
<a name="INDEX-520" />
<a name="INDEX-521" /></p>





<a name="ch06-16-fm2xml" /><div class="sect2">
<h3 class="sect2">6.6.1. Inserts</h3>





<p>Adding data to a table is one of the more straightforward concepts in
SQL. You have already seen several examples of it in this book. Both
MySQL and mSQL support the standard SQL <tt class="literal">INSERT</tt>
syntax:</p>





<blockquote><pre class="code">INSERT INTO <em class="replaceable">table_name</em> (<em class="replaceable">column1</em>, <em class="replaceable">column2</em>, <em class="replaceable">...</em>, <em class="replaceable">columnN</em>)
VALUES (<em class="replaceable">value1</em>, <em class="replaceable">value2</em>, <em class="replaceable">...</em>, <em class="replaceable">valueN</em>)</pre></blockquote>





<p>When inserting data into numeric fields, you can insert the value as
is; for all other fields, you must wrap them in single quotes. For
example, to insert a row of data into a table of addresses, you might
issue the following command:</p>





<blockquote><pre class="code">INSERT INTO <em class="replaceable">addresses</em> (<em class="replaceable">name</em>, <em class="replaceable">address</em>, <em class="replaceable">city</em>, <em class="replaceable">state</em>, <em class="replaceable">phone</em>, <em class="replaceable">age</em>)
VALUES('<em class="replaceable">Irving Forbush</em>', '<em class="replaceable">123 Mockingbird Lane</em>', '<em class="replaceable">Corbin</em>', '<em class="replaceable">KY</em>',
       '<em class="replaceable">(800) 555-1234</em>', <em class="replaceable">26</em>)</pre></blockquote>





<p>In addition, the <a name="INDEX-522" />
<a name="INDEX-523" />escape
character -- `\' by default -- enables you to
escape single quotes and other literal instances of the escape
character:</p>





<blockquote><pre class="code"># Insert info for the directory Stacie's Directory which
# is in c:\Personal\Stacie
INSERT INTO <em class="replaceable">files</em> (<em class="replaceable">description</em>, <em class="replaceable">location</em>) 
VALUES ('<em class="replaceable">Stacie\</em>'<em class="replaceable">s Directory</em>', '<em class="replaceable">C:\\Personal\\Stacie</em>')</pre></blockquote>





<p>MySQL allows you to leave out the column names as long as you specify
a value for every single column in the table in the exact same order
they were specified in the table's <tt class="literal">CREATE</tt>
call. If you want to use the default values for a column, however,
you must specify the names of the columns for which you intend to
insert nondefault data. If you do not have a default value set up for
a column and that column is <tt class="literal">NOT NULL</tt>, you must
include that column in the <tt class="literal">INSERT</tt> statement with a
non-<tt class="literal">NULL</tt> value. If the earlier files table had
contained a column called <tt class="literal">size</tt>, then the default
value would be used. Under mSQL, the default value is always
<tt class="literal">NULL</tt>. MySQL allows you to specify a custom default
value in the table's <tt class="literal">CREATE</tt>.</p>





<p>Newer versions of MySQL support a nonstandard
<tt class="literal">INSERT</tt> call for inserting multiple rows at once:</p>





<blockquote><pre class="code">INSERT INTO <em class="replaceable">foods</em> VALUES (<em class="replaceable">NULL</em>, '<em class="replaceable">Oranges</em>', <em class="replaceable">133</em>, <em class="replaceable">0</em>, <em class="replaceable">2</em>, <em class="replaceable">39</em>),
                         (<em class="replaceable">NULL</em>, '<em class="replaceable">Bananas</em>', <em class="replaceable">122</em>, <em class="replaceable">0</em>, <em class="replaceable">4</em>, <em class="replaceable">29</em>),
                         (<em class="replaceable">NULL</em>, '<em class="replaceable">Liver</em>', <em class="replaceable">232</em>, <em class="replaceable">3</em>, <em class="replaceable">15</em>, <em class="replaceable">10</em>)</pre></blockquote>





<a name="ch06-17-fm2xml" />
<blockquote><h4 class="objtitle">NOTE</h4>

<p>While these nonstandard syntaxes supported by MySQL are useful for
quick system administration tasks, you should not use them when
writing database applications unless you really need the speed
benefit they offer. As a general rule, you should stick as close to
the <a name="INDEX-524" />ANSI
SQL2<a name="INDEX-525" />
standard as MySQL and mSQL will let you. By doing so, you are making
certain that you can move to some other database at some point in the
future. Being flexible is especially critical for people with
mid-range database needs because such users generally hope one day to
become people with high-end database needs.</p>
</blockquote>





<p>MySQL supports the SQL2 syntax for inserting the values of a
<tt class="literal">SELECT</tt> call into a table:</p>





<blockquote><pre class="code">INSERT INTO <em class="replaceable">foods</em> (<em class="replaceable">name</em>, <em class="replaceable">fat</em>)
SELECT <em class="replaceable">food_name</em>, <em class="replaceable">fat_grams</em> FROM <em class="replaceable">recipes</em></pre></blockquote>





<p>You should note that the number of columns in the
<tt class="literal">INSERT</tt> matches the number of columns in the
<tt class="literal">SELECT</tt>. In addition, the datatypes for the
<tt class="literal">INSERT</tt> columns must match the datatypes for the
corresponding <tt class="literal">SELECT</tt> columns. Finally, the
<tt class="literal">SELECT</tt> clause in an <tt class="literal">INSERT</tt>
statement cannot contain an <tt class="literal">ORDER BY</tt> modifier and
cannot be selected from the same table where the
<tt class="literal">INSERT</tt> is occurring.</p>
</div>
















<a name="ch06-18-fm2xml" /><div class="sect2">
<a name="INDEX-526" /><h3 class="sect2">6.6.2. Updates</h3>





<p>The insertion of new rows into a database is just the start of
database use. Unless your database is read-only, you will probably
also need to make periodic changes to the data. The standard SQL
modification statement looks like this:</p>





<blockquote><pre class="code">UPDATE <em class="replaceable">table_name</em>
SET <em class="replaceable">column1</em>=<em class="replaceable">value1</em>, <em class="replaceable">column2</em>=<em class="replaceable">value2</em>, <em class="replaceable">...</em>, <em class="replaceable">columnN</em>=<em class="replaceable">valueN</em>
[WHERE <em class="replaceable">clause</em>]</pre></blockquote>





<p>Under mSQL, the value you assign to a column must be a literal of the
column's datatype. MySQL, in contrast, enables you to calculate
the assigned value. You can even calculate the value based on a value
in another column:</p>





<blockquote><pre class="code">UPDATE <em class="replaceable">years</em>
SET <em class="replaceable">end_year</em> = <em class="replaceable">begin_year+5</em></pre></blockquote>





<p>This command sets the value in the <tt class="literal">end_year</tt> column
equal to the value in the <tt class="literal">begin_year</tt> column plus 5
for each row in that table.</p>
</div>
















<a name="ch06-19-fm2xml" /><div class="sect2">
<h3 class="sect2">6.6.3. The WHERE Clause</h3>





<p>You probably noted something earlier called the
<tt class="literal">WHERE</tt>
<a name="INDEX-527" /> clause. In SQL, a
<tt class="literal">WHERE</tt> clause enables you to pick out specific rows
in a table by specifying a value that must be matched by the column
in question. For example:</p>





<blockquote><pre class="code">UPDATE <em class="replaceable">bands</em>
SET <em class="replaceable">lead_singer </em>=<em class="replaceable"> </em>'<em class="replaceable">Ian Anderson</em>'
WHERE <em class="replaceable">band_name</em> = '<em class="replaceable">Jethro Tull</em>'</pre></blockquote>





<p>This <tt class="literal">UPDATE</tt> specifies that you should only change
the <tt class="literal">lead_singer</tt> column for the row where
<tt class="literal">band_name</tt> is identical to "Jethro
Tull." If the column in question is not a unique index, that
<tt class="literal">WHERE</tt> clause may match multiple rows. Many SQL
commands employ <tt class="literal">WHERE</tt> clauses to help pick out the
rows on which you wish to operate. Because the columns in the
<tt class="literal">WHERE</tt> clause are columns on which you are
searching, you should generally have indices created around whatever
combinations you commonly use.</p>
</div>
















<a name="ch06-20-fm2xml" /><div class="sect2">
<h3 class="sect2">6.6.4. Deletes</h3>





<p>Deleting <a name="INDEX-528" />
<a name="INDEX-529" />data
is a very straightforward operation. You simply specify the table
from which you want to delete followed by a <tt class="literal">WHERE</tt>
clause that identifies the rows you want to delete:</p>





<blockquote><pre class="code">DELETE FROM <em class="replaceable">table_name</em> [WHERE <em class="replaceable">clause</em>]</pre></blockquote>





<p>As with other commands that accept a <tt class="literal">WHERE</tt> clause,
the <tt class="literal">WHERE</tt> clause is optional. In the event you
leave out the <tt class="literal">WHERE</tt> clause, you will delete all of
the records in the table! Of all destructive commands in SQL, this is
the easiest one to issue mistakenly.</p>
</div>


<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch06_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch06_07.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">6.5. Sequences and Auto-Incrementing</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">6.7. Queries</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>
