<?label 18. PHP and Lite Reference?><html><head><title>PHP and Lite Reference (MySQL &amp; mSQL)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Randy Jay Yarger, George Reese and Tim King" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565924347L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="MySQL &amp; mSQL" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="MySQL and mSQL" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch17_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">MySQL &amp; mSQL</a></td><td width="172" valign="top" align="right"><a href="ch18_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />



<h1 class="chapter">Chapter 18. PHP and Lite Reference</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch18_01.htm">PHP
</a><br />
<a href="ch18_02.htm">Lite</a><br /></p></div>





<div class="sect1"><a name="ch18-32643" />
<a name="INDEX-1270" /><a name="INDEX-1271" /><h2 class="sect1">18.1. PHP
</h2>





<p>
<a name="INDEX-1272" />The following is the
quick reference guide to PHP. This list is complete as of PHP 3. The
functions that work with MySQL and mSQL are covered, but those
specific to other database servers -- such as Ababas D, dbm,
Oracle, and PostgreSQL -- are omitted.</p>





<a name="INDEX-1273" /><a name="INDEX-1274" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
abs</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$pos_num = abs($number);
</pre></td><td align="right" /></tr></table><p>Returns the absolute value of <tt class="literal">number</tt>.</p></div>

<a name="INDEX-1275" /><a name="INDEX-1276" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
addslashes</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$escaped_string = addslashes($string);</pre></td><td align="right" /></tr></table><p>Returns a copy of <tt class="literal">string</tt> with any
<tt class="literal">$</tt> <tt class="literal">\</tt> or ' characters escaped.</p></div>

<a name="INDEX-1277" /><a name="INDEX-1278" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
asort</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$sorted_array = asort($array);
</pre></td><td align="right" /></tr></table><p>Returns a sorted copy of the associative array
<tt class="literal">array</tt>. <tt class="literal">asort</tt> works only on
associative arrays. Use <tt class="literal">sort</tt> to sort regular
arrays. If the first member of the array is a number the returned
array will be sorted numerically, otherwise the returned array will
be sorted alphabetically.</p></div>

<a name="INDEX-1279" /><a name="INDEX-1280" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
bindec</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$decimal = bindec($binary);
</pre></td><td align="right" /></tr></table><p>Returns the decimal equivalent of <tt class="literal">binary</tt>.</p></div>

<a name="INDEX-1281" /><a name="INDEX-1282" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
ceil</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$higher_integer = ceil($number);
</pre></td><td align="right" /></tr></table><p>Rounds <tt class="literal">number</tt> to the next highest integer and
returns that as a floating point value.</p></div>

<a name="INDEX-1283" /><a name="INDEX-1284" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
chdir</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>chdir($directory);
</pre></td><td align="right" /></tr></table><p>Changes the current working directory to <tt class="literal">directory</tt>.</p></div>

<a name="INDEX-1285" /><a name="INDEX-1286" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
chgrp</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
chgrp($file,$group);
</pre></td><td align="right" /></tr></table><p>Changes the file <tt class="literal">file</tt> to belong to the group
<tt class="literal">group</tt>.</p></div>

<a name="INDEX-1287" /><a name="INDEX-1288" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
chimed</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
chimed($file,$permissions);
</pre></td><td align="right" /></tr></table><p>Changes the file to have the permissions
<tt class="literal">permissions</tt>. The permissions argument must be
given as an octal value.</p></div>

<a name="INDEX-1289" /><a name="INDEX-1290" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
chown</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
chown($file, $owner);
</pre></td><td align="right" /></tr></table><p>Changes the file to belong to the owner <tt class="literal">owner</tt>.
This function takes effect only if the PHP binary is running as root,
which is not generally recommended.</p></div>

<a name="INDEX-1291" /><a name="INDEX-1292" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
chop</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$stripped_string = chop($string);
</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">string</tt> with all trailing new lines,
spaces, and tabs removed.</p></div>

<a name="INDEX-1293" /><a name="INDEX-1294" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
chr</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$character = chr($number);
</pre></td><td align="right" /></tr></table><p>Returns the character that corresponds to the ASCII value of
<tt class="literal">number</tt>. Hexadecimal and octal numbers are denoted
with the usual 0xff and 077 respectively. All other numbers are
considered decimal.</p></div>

<a name="INDEX-1295" /><a name="INDEX-1296" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
clearstack</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
clearstack();
</pre></td><td align="right" /></tr></table><p>Empties the current stack. This function is a kludge designed to
circumvent a limitation in the design of PHP. If you have a
user-defined function that contains a large loop, you may run into
stack space problems. If this happens, call this function inside the
loop. The drawback of doing this is that your function cannot be
called within another function. The output of your function has to be
saved to a variable which then can be used as you wish.</p></div>

<a name="INDEX-1297" /><a name="INDEX-1298" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
clearstatcache</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
clearstatcache();
</pre></td><td align="right" /></tr></table><p>Empties the cache used for any functions that access information
about files. Because accessing file information can take a relatively
long time, this information is stored in a cache by PHP. If you want
to be sure you are getting the most current (i.e., noncached)
information about a file, call this function before retrieving the
information.</p></div>

<a name="INDEX-1299" /><a name="INDEX-1300" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
closedir</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
closedir($directory);
</pre></td><td align="right" /></tr></table><p>Closes a directory opened with <tt class="literal">opendir</tt>.</p></div>

<a name="INDEX-1301" /><a name="INDEX-1302" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
closelog</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
closelog();
</pre></td><td align="right" /></tr></table><p>Stops all logging done via <tt class="literal">syslog</tt>.</p></div>

<a name="INDEX-1303" /><a name="INDEX-1304" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
cos</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = cos($number);
</pre></td><td align="right" /></tr></table><p>Returns the cosine of <tt class="literal">number</tt>.</p></div>

<a name="INDEX-1305" /><a name="INDEX-1306" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
count</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$number = count($array);</pre></td><td align="right" /></tr></table><p>Returns the number of elements in <tt class="literal">array</tt>. If
<tt class="literal">array</tt> is a nonarray variable, the function returns
1 (because a variable looks like an array with only one element). If
<tt class="literal">array</tt> is not defined,
is returned.</p></div>

<a name="INDEX-1307" /><a name="INDEX-1308" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
crypt</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$encrypted_string = crypt($string);
$encrypted_string = crypt($string, $salt);</pre></td><td align="right" /></tr></table><p>Returns an encrypted version of <tt class="literal">string</tt>. The
encryption is the standard Unix DES encryption as used in Unix
passwords and the like. An optional two-character salt can be
provided.</p></div>

<a name="INDEX-1309" /><a name="INDEX-1310" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
date</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$formatted_date = date($format,$time);
</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">time</tt> (a standard Unix time as given by the
Time function) formatted with <tt class="literal">format</tt>. The returned
value is the same as <tt class="literal">format</tt> except that the
following characters are replaced with the appropriate value:</p><dl>
<dt><b><tt class="literal">A</tt></b></dt>
<dd><p>AM/PM</p></dd>





<dt><b><tt class="literal">a</tt></b></dt>
<dd><p>am/pm</p></dd>





<dt><b><tt class="literal">D</tt></b></dt>
<dd><p>Day (eg., Sun)</p></dd>





<dt><b><tt class="literal">d</tt></b></dt>
<dd><p>Day (eg., 13)</p></dd>





<dt><b><tt class="literal">F</tt></b></dt>
<dd><p>Month (eg., February)</p></dd>





<dt><b><tt class="literal">H</tt></b></dt>
<dd><p>Hours in 24 hour format (eg., 17)</p></dd>





<dt><b><tt class="literal">h</tt></b></dt>
<dd><p>Hours in 12 hour format (eg., 5)</p></dd>





<dt><b><tt class="literal">i</tt></b></dt>
<dd><p>Minutes (eg., 30)</p></dd>





<dt><b><tt class="literal">l</tt></b></dt>
<dd><p>Day (eg., Sunday)</p></dd>





<dt><b><tt class="literal">M</tt></b></dt>
<dd><p>Month (eg., Feb)</p></dd>





<dt><b><tt class="literal">m</tt></b></dt>
<dd><p>Month (eg., 02)</p></dd>





<dt><b><tt class="literal">s</tt></b></dt>
<dd><p>Seconds (eg., 27)</p></dd>





<dt><b><tt class="literal">Y</tt></b></dt>
<dd><p>Year (eg., 1998)</p></dd>





<dt><b><tt class="literal">y</tt></b></dt>
<dd><p>Year (eg., 98)</p></dd>





<dt><b><tt class="literal">U</tt></b></dt>
<dd><p>Seconds since epoch (eg., 803537321)</p></dd>





<dt><b><tt class="literal">z</tt></b></dt>
<dd><p>Day of the year (eg., 154)</p></dd>

</dl></div>

<a name="INDEX-1311" /><a name="INDEX-1312" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
dblist</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$db_info = dblist();</pre></td><td align="right" /></tr></table><p>Returns a list of the databases supported by PHP.</p></div>

<a name="INDEX-1313" /><a name="INDEX-1314" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
decbin</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$binary = decbin($decimal);</pre></td><td align="right" /></tr></table><p>Returns the binary equivalent of <tt class="literal">decimal</tt>.</p></div>

<a name="INDEX-1315" /><a name="INDEX-1316" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
dexhex</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$hex = dechex($decimal);</pre></td><td align="right" /></tr></table><p>Returns the hexadecimal equivalent of <tt class="literal">decimal</tt>.</p></div>

<a name="INDEX-1317" /><a name="INDEX-1318" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
decoct</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$octal = decoct($decimal);</pre></td><td align="right" /></tr></table><p>Returns the octal equivalent of <tt class="literal">decimal</tt>.</p></div>

<a name="INDEX-1319" /><a name="INDEX-1320" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
doubleval</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$double = doubleval($variable);</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">variable</tt> as a floating point number.</p></div>

<a name="INDEX-1321" /><a name="INDEX-1322" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
echo</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
echo [format_string] expression [, expression ...]</pre></td><td align="right" /></tr></table><p>This is not a true function but rather PHP's built-in version
of the C <tt class="literal">printf</tt> function. In its simplest form,
<tt class="literal">echo</tt> simply prints out
<tt class="literal">expression</tt>. Up to 5 expressions can be given, each
of which are printed out in turn. In addition, a format string can be
provided. The format string is in the same style as C or Perl's
<tt class="literal">printf</tt> function.</p></div>

<a name="INDEX-1323" /><a name="INDEX-1324" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
end</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
end($array);</pre></td><td align="right" /></tr></table><p>Sets the internal pointer of <tt class="literal">array</tt> to the end of
the array.</p></div>

<a name="INDEX-1325" /><a name="INDEX-1326" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
ereg</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = ereg($expression, $string);</pre></td><td align="right" /></tr></table><p>$result = ereg($expression, $string, $match_array);</p><p>Returns a true value if <tt class="literal">string</tt> matches the regular
expression <tt class="literal">expression</tt>. If an array is provided as
the third argument, the values matched in the string are placed in
the array.</p></div>

<a name="INDEX-1327" /><a name="INDEX-1328" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
eregi</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = eregi($expression, $string);
$result = eregi($expression, $string, $match_array);</pre></td><td align="right" /></tr></table><p>Identical to <b class="function">ereg</b>  except that case is ignored
for the purposes of matching.</p></div>

<a name="INDEX-1329" /><a name="INDEX-1330" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
ereg_replace</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
ereg_replace($expression, $replacement_string, $string);</pre></td><td align="right" /></tr></table><p>Replaces all parts of <tt class="literal">string</tt> that match
<tt class="literal">expression</tt> with
<tt class="literal">replacement_string</tt>.</p></div>

<a name="INDEX-1331" /><a name="INDEX-1332" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
eregi_replace</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
eregi_replace($expression, $replacement_string, $string);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">ereg_replace</tt> except that case is
ignored for the purposes of matching.</p></div>

<a name="INDEX-1333" /><a name="INDEX-1334" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
escapeshellcmd</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$safe_string = escapeshellcmd($string);</pre></td><td align="right" /></tr></table><p>Returns a copy of <tt class="literal">string</tt> with its characters
escaped so that it is safe for use with <em class="emphasis">exec</em> or
<em class="emphasis">system</em>.</p></div>

<a name="INDEX-1335" /><a name="INDEX-1336" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
eval</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
eval($string);</pre></td><td align="right" /></tr></table><p>Evaluates the contents of <tt class="literal">string</tt> as if it were a
PHP script. Variable substitution is done on the string so if you
want to use a variable in the "miniscript" you should
escape it.</p></div>

<a name="INDEX-1337" /><a name="INDEX-1338" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
exec</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$last_line = exec($command);</pre>
<pre>$last_line = exec($command, $output_array);</pre>
<pre>$last_line = exec($command, $output_array, $return_code);</pre>
</td><td align="right" /></tr></table><p>$last_line = exec($command, $output_array);</p><p>Executes <tt class="literal">command</tt> as a Unix command in a subshell.
Only the last line of the command output is returned. If an array is
provided as the second argument, all of the lines of output from the
command are placed in the array. If a third argument is present, the
return code from the command is placed in that variable.</p></div>

<a name="INDEX-1339" /><a name="INDEX-1340" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
exit</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
exit();</pre></td><td align="right" /></tr></table><p>Ends all parsing of the HTML file.</p></div>

<a name="INDEX-1341" /><a name="INDEX-1342" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
exp</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = exp($number);</pre></td><td align="right" /></tr></table><p>Returns the number <em class="emphasis">e</em> raised to the
<tt class="literal">number</tt> power.</p></div>

<a name="INDEX-1343" /><a name="INDEX-1344" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
fclose</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
fclose($fd);</pre></td><td align="right" /></tr></table><p>Closes a file opened by <tt class="literal">fopen</tt>.</p></div>

<a name="INDEX-1345" /><a name="INDEX-1346" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
feof</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = feof($fd);</pre></td><td align="right" /></tr></table><p>Returns true if the file descriptor <tt class="literal">fd</tt> is at the
end of the file.</p></div>

<a name="INDEX-1347" /><a name="INDEX-1348" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
fgets</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$line = fgets($fd, $max_bytes);</pre></td><td align="right" /></tr></table><p>Returns the next line (up to <tt class="literal">max_bytes</tt> in length)
from the file referred to by <tt class="literal">fd.</tt></p></div>

<a name="INDEX-1349" /><a name="INDEX-1350" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
fgetss</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$line = fgetss($fd, $max_bytes);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">fgets</tt> except that it attempts to
strip all HTML and PHP tags from the input.</p></div>

<a name="INDEX-1351" /><a name="INDEX-1352" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
file</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$array = file($filename);</pre></td><td align="right" /></tr></table><p>Returns an array containing every line in the file
<tt class="literal">filename</tt>.</p></div>

<a name="INDEX-1353" /><a name="INDEX-1354" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
fileatime</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$time = fileatime($filename);</pre></td><td align="right" /></tr></table><p>Returns (in standard Unix time format) the last time
<tt class="literal">filename</tt> was accessed. If this information cannot
be obtained for whatever reason, the function returns -1.</p></div>

<a name="INDEX-1355" /><a name="INDEX-1356" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
filectime</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$time = filectime($filename);</pre></td><td align="right" /></tr></table><p>Returns (in standard Unix time format) the last time
<tt class="literal">filename</tt>'s status was changed. If this
information cannot be obtained for whatever reason, the function
returns -1.</p></div>

<a name="INDEX-1357" /><a name="INDEX-1358" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
filegroup</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$group_id = filegroup($filename);</pre></td><td align="right" /></tr></table><p>Returns the group ID of filename's group. If this information
cannot be obtained for whatever reason, the function returns -1.</p></div>

<a name="INDEX-1359" /><a name="INDEX-1360" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
fileinode</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$inode = fileinode($filename);</pre></td><td align="right" /></tr></table><p>Returns the inode of <tt class="literal">filename</tt>. If this information
cannot be obtained for whatever reason, the function returns -1.</p></div>

<a name="INDEX-1361" /><a name="INDEX-1362" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
filemtime</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$time = filemtime($filename);</pre></td><td align="right" /></tr></table><p>Returns (in standard Unix time format) the last time
<tt class="literal">filename</tt> was modified. If this information cannot
be obtained for whatever reason, the function returns -1.</p></div>

<a name="INDEX-1363" /><a name="INDEX-1364" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
fileowner</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$owner = fileowner($filename);</pre></td><td align="right" /></tr></table><p>Returns the ID of the owner of the file. If this information cannot
be obtained for whatever reason, the function returns -1.</p></div>

<a name="INDEX-1365" /><a name="INDEX-1366" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
fileperms</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$permissions = fileperms($filename);</pre></td><td align="right" /></tr></table><p>Returns the permissions of <tt class="literal">filename</tt>. If this
information cannot be obtained for whatever reason, the function
returns -1.</p></div>

<a name="INDEX-1367" /><a name="INDEX-1368" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
filesize</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$size = filesize($filename);</pre></td><td align="right" /></tr></table><p>Returns the size of <tt class="literal">filename</tt> in bytes. If this
information cannot be obtained for whatever reason, the function
returns -1.</p></div>

<a name="INDEX-1369" /><a name="INDEX-1370" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
filetype</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$type = filetype($filename);</pre></td><td align="right" /></tr></table><p>Returns one of the following, indicating the type of
<tt class="literal">filename</tt>: <tt class="literal">dir</tt>,
<tt class="literal">file</tt>, <tt class="literal">fifo</tt>,
<tt class="literal">char</tt>, <tt class="literal">block</tt>, or
<tt class="literal">link</tt>.</p></div>

<a name="INDEX-1371" /><a name="INDEX-1372" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
floor</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$lower_integer = floor($number);</pre></td><td align="right" /></tr></table><p>Rounds <tt class="literal">number</tt> to the next lowest integer and
returns that as a floating point value.</p></div>

<a name="INDEX-1373" /><a name="INDEX-1374" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
flush</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
flush();</pre></td><td align="right" /></tr></table><p>Flushes the buffer on the standard output so that the end user
immediately sees all of the output so far.</p></div>

<a name="INDEX-1375" /><a name="INDEX-1376" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
fopen</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$fd = fopen($filename, $mode);</pre></td><td align="right" /></tr></table><p>Opens the file filename in the mode mode and returns a file
descripter associated with the open file. As with the C function
<tt class="literal">fopen</tt>, the mode is one of "r",
"r+", "w", "w+", "a",
"a+". The function returns -1 if the file could not be
opened.</p></div>

<a name="INDEX-1377" /><a name="INDEX-1378" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
fputs</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
fputs($fd, $string);</pre></td><td align="right" /></tr></table><p>Writes <tt class="literal">string</tt> to the file associated with
<tt class="literal">fd</tt>, followed by a newline.</p></div>

<a name="INDEX-1379" /><a name="INDEX-1380" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
fpassthru</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
fpassthru($fd);</pre></td><td align="right" /></tr></table><p>Directly prints all of the remaining data in the file associated with
<tt class="literal">fd</tt>.</p></div>

<a name="INDEX-1381" /><a name="INDEX-1382" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
fseek</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
fseek($fd, $position);</pre></td><td align="right" /></tr></table><p>Positions the file associated with <tt class="literal">fd</tt> to
<tt class="literal">position</tt> bytes from the beginning of the file.</p></div>

<a name="INDEX-1383" /><a name="INDEX-1384" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
fsockopen</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$fd = fsockopen($hostname,$port);</pre></td><td align="right" /></tr></table><p>Opens a connection with <tt class="literal">hostname</tt> on port
<tt class="literal">port</tt> and returns a file descriptor associated with
the open connection. If the port number is 0, the hostname will be
considered the filename of a Unix-style socket file on the local
host. In the case of an error, the function returns the following: -3
if the socket could not be created, -4 if the hostname could not be
resolved, -5 if the connection was refused or timed out, -6 if the
fdopen() call failed, or -7 if the setvbuf() call failed.</p></div>

<a name="INDEX-1385" /><a name="INDEX-1386" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
ftell</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$position = ftell($fd);</pre></td><td align="right" /></tr></table><p>Returns the position of the pointer in the file associated with
<tt class="literal">fd</tt>. This value can be used as an argument to
<tt class="literal">fseek</tt>.</p></div>

<a name="INDEX-1387" /><a name="INDEX-1388" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getaccdir</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$directory = getaccdir();</pre></td><td align="right" /></tr></table><p>Returns the directory where the PHP configuration files are held.</p></div>

<a name="INDEX-1389" /><a name="INDEX-1390" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getenv</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$value = getenv($variable);</pre></td><td align="right" /></tr></table><p>Returns the value of the environment variable
<tt class="literal">variable</tt>.</p></div>

<a name="INDEX-1391" /><a name="INDEX-1392" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
gethostbyname</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$address = gethostbyname($hostname);</pre></td><td align="right" /></tr></table><p>Returns the IP address of <tt class="literal">hostname</tt>.</p></div>

<a name="INDEX-1393" /><a name="INDEX-1394" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
gethostbyaddr</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$hostname = gethostbyaddr($address);</pre></td><td align="right" /></tr></table><p>Returns the hostname of the machine with the IP address
<tt class="literal">address</tt>.</p></div>

<a name="INDEX-1395" /><a name="INDEX-1396" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getimagesize</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$file_info_array = getimagesize($filename);</pre></td><td align="right" /></tr></table><p>Returns an array of information about the image in the file
<tt class="literal">filename</tt>. The first element of the array is the
width of the image, the second is the height, and the third is the
type of the image. GIF, JPG, and PNG images are currently recognized.
The fourth element is a string of the format "width=xxx
height=yyy" which can be used directly in an HTML
<tt class="literal">&lt;IMG&gt;</tt> tag.</p></div>

<a name="INDEX-1397" /><a name="INDEX-1398" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getlastaccess</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$time = getlastaccess();</pre></td><td align="right" /></tr></table><p>Returns (in standard Unix time format) the date and time the page was
last accessed. This function works only if PHP was compiled with
access logging enabled.</p></div>

<a name="INDEX-1399" /><a name="INDEX-1400" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getlastbrowser</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$browser = getlastbrowser();</pre></td><td align="right" /></tr></table><p>Returns the identification string of the last browser to access the
page. This function works only if PHP was compiled with access
logging enabled.</p></div>

<a name="INDEX-1401" /><a name="INDEX-1402" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getlastemail</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$email = getlastemail();</pre></td><td align="right" /></tr></table><p>Returns the e-mail address of the last person to access the page.
This function works only if PHP was compiled with access logging
enabled.</p></div>

<a name="INDEX-1403" /><a name="INDEX-1404" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getlasthost</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$host = getlasthost();</pre></td><td align="right" /></tr></table><p>Returns the hostname of the last machine to access the page. This
function works only if PHP was compiled with access logging enabled.</p></div>

<a name="INDEX-1405" /><a name="INDEX-1406" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getlastmod</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$time = getlastmod();</pre></td><td align="right" /></tr></table><p>Returns the time (in standard Unix time format) that the page was
last modified. This function works only if PHP was compiled with
access logging enabled.</p></div>

<a name="INDEX-1407" /><a name="INDEX-1408" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getlastref</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$url = getlastref();</pre></td><td align="right" /></tr></table><p>Returns the URL of the referring page of the last visitor to the
page. This function works only if PHP was compiled with access
logging enabled.</p></div>

<a name="INDEX-1409" /><a name="INDEX-1410" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getlogdir</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$directory = getlogdir();</pre></td><td align="right" /></tr></table><p>Returns the directory that contains the PHP log files.</p></div>

<a name="INDEX-1411" /><a name="INDEX-1412" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getmyinode</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$inode = getmyinode();</pre></td><td align="right" /></tr></table><p>Returns the inode of the HTML file that contains the current PHP
script.</p></div>

<a name="INDEX-1413" /><a name="INDEX-1414" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getmypid</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$pid = getmypid();</pre></td><td align="right" /></tr></table><p>Returns the process ID number of the current PHP process.</p></div>

<a name="INDEX-1415" /><a name="INDEX-1416" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getmyuid</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$id = getmyuid();</pre></td><td align="right" /></tr></table><p>Returns the user ID of the owner of the HTML file that contains the
current PHP script.</p></div>

<a name="INDEX-1417" /><a name="INDEX-1418" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getrandmax</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$number = getrandmax();</pre></td><td align="right" /></tr></table><p>Returns the largest possible number that will be returned by
<tt class="literal">rand</tt>.</p></div>

<a name="INDEX-1419" /><a name="INDEX-1420" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
getstartlogging</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$time = getstartlogging();</pre></td><td align="right" /></tr></table><p>Returns the time (in standard Unix format) that logging began on the
HTML file containing the current PHP script.</p></div>

<a name="INDEX-1421" /><a name="INDEX-1422" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
gettoday</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$hits = gettoday();</pre></td><td align="right" /></tr></table><p>Returns the number of hits the page has received since midnight at
the beginning of the current day.</p></div>

<a name="INDEX-1423" /><a name="INDEX-1424" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
gettotal</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$hits = gettotal();</pre></td><td align="right" /></tr></table><p>Returns the total number of hits the page has received since logging
was started on the page.</p></div>

<a name="INDEX-1425" /><a name="INDEX-1426" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr>
<td align="left"><font size="+1"><b>
<i>gettype</i></b></font></td><td align="right"><i /></td></tr></table>
<hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515">
<tr><td align="left" /><td align="right" /></tr></table><pre>$type = gettype($variable);</pre><p>Returns one of "integer," "double," or
"string," indicating the type of
<tt class="literal">variable</tt>.</p></div>

<a name="INDEX-1427" /><a name="INDEX-1428" />
<div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left">
<font size="+1"><b><i>
gmdate</i></b></font></td>
<td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" />
<table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$formatted_date = gmdate($format, $time);</pre></td><td align="right" /></tr></table><p>Identical to Date except that it uses Greenwich Mean time to
calculate the values instead of the local time.</p></div>

<a name="INDEX-1429" /><a name="INDEX-1430" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
header</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
header($header_string);</pre></td><td align="right" /></tr></table><p>Outputs <tt class="literal">header_string</tt> as the HTTP header of the
document. This function must be used before any HTML in the file and
before any PHP commands which generate output.</p></div>

<a name="INDEX-1431" /><a name="INDEX-1432" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
hexdec</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$decimal = hexdec($hex);</pre></td><td align="right" /></tr></table><p>Returns the decimal equivalent of <tt class="literal">hex</tt>.</p></div>

<a name="INDEX-1433" /><a name="INDEX-1434" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
htmlspecialchars</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$html_string = htmlspecialchars($string);</pre></td><td align="right" /></tr></table><p>Returns string, replacing any special characters (including &lt;,
&gt;, &amp;, " and all ASCII characters from 160 to 255) with
their HTML entity codes.</p></div>

<a name="INDEX-1435" /><a name="INDEX-1436" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagearc</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagearc($image, $cx, $cy, $width, $height, $start, $end, $color);</pre></td><td align="right" /></tr></table><p>Draws a partial ellipse in <tt class="literal">image</tt> with the color
<tt class="literal">color.</tt> The ellipse has the center
(<tt class="literal">cx</tt>, <tt class="literal">cy</tt>) width
<tt class="literal">width</tt>, height <tt class="literal">height</tt>, begins at
<tt class="literal">start</tt> degrees, and ends at <tt class="literal">end</tt>
degrees.</p></div>

<a name="INDEX-1437" /><a name="INDEX-1438" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagechar</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagechar($image, $size, $x, $y, $character, $color);</pre></td><td align="right" /></tr></table><p>Draws <tt class="literal">character</tt> in image with the color
<tt class="literal">color</tt> with the font size <tt class="literal">size</tt>.
The top left of <tt class="literal">character</tt> is at the point
(<tt class="literal">x</tt>, <tt class="literal">y</tt>).</p></div>

<a name="INDEX-1439" /><a name="INDEX-1440" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagecharup</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagecharup($image, $size, $x, $y, $character, $color);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">imagechar</tt> except that the character
is drawn vertically with the bottom left at (<tt class="literal">x</tt>,
<tt class="literal">y</tt>).</p></div>

<a name="INDEX-1441" /><a name="INDEX-1442" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagecolorallocate</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$color = imagecolorallocate($image, $red, $green, $blue);</pre></td><td align="right" /></tr></table><p>Returns a color for use with the image <tt class="literal">image</tt> using
the RGB components specified.</p></div>

<a name="INDEX-1443" /><a name="INDEX-1444" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagecolortransparent</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagecolortransparent($image, $color);</pre></td><td align="right" /></tr></table><p>Sets <tt class="literal">color</tt> as the transparent color for
<tt class="literal">image</tt>.</p></div>

<a name="INDEX-1445" /><a name="INDEX-1446" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagecopyresized</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagecopyresized($dest_image, $src_image, $dest_x, $dest_y, $src_x, $src_y,
   $dest_width, $dest_heigth, $src_width, $src_heigth);</pre></td><td align="right" /></tr></table><p>Copies a rectangular portion from <tt class="literal">src_image</tt> and
pastes it into <tt class="literal">dest_image</tt>, resizing if necessary.
The arguments <tt class="literal">dest_x</tt> and <tt class="literal">dest_y</tt>
are the coordinates of the top left of the rectangle for the
destination image, and <tt class="literal">dest_height</tt> and
<tt class="literal">dest_width</tt> are the height and width. The arguments
<tt class="literal">src_x, src_y, src_width,</tt> and
<tt class="literal">src_heigth</tt> are the corresponding values for the
source image.</p></div>

<a name="INDEX-1447" /><a name="INDEX-1448" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagecreate</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$image = imagecreate($width, $height);</pre></td><td align="right" /></tr></table><p>Returns an image indentifier representing a new image with the
specified height and width.</p></div>

<a name="INDEX-1449" /><a name="INDEX-1450" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagecreatefromgif</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$image = imagecreatefromgif($filename);</pre></td><td align="right" /></tr></table><p>Returns an image indentifier representing the image contained in the
file <tt class="literal">filename</tt>.</p></div>

<a name="INDEX-1451" /><a name="INDEX-1452" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagedestroy</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagedestroy($image);</pre></td><td align="right" /></tr></table><p>Frees any resources occupied by <tt class="literal">image</tt>.</p></div>

<a name="INDEX-1453" /><a name="INDEX-1454" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagefill</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagefill($image, $x, $y, $color);</pre></td><td align="right" /></tr></table><p>Flood fills <tt class="literal">image</tt> with the color
<tt class="literal">color</tt> starting at the point (<tt class="literal">x</tt>,
<tt class="literal">y</tt>).</p></div>

<a name="INDEX-1455" /><a name="INDEX-1456" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagefilledpolygon</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagefilledpolygon($image, $points_array, $num_points, $color);</pre></td><td align="right" /></tr></table><p>Creates a polygon in <tt class="literal">image</tt> filled with the color
<tt class="literal">color</tt>. The second argument is an array of the
points of the polygon. The first two elements of the array are the x
and y values of the first point. The next two elements are the value
of the next point, and so on. The third argument is the number of
points in the polygon.</p></div>

<a name="INDEX-1457" /><a name="INDEX-1458" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagefilledrectangle</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagefilledrectangle($image, $x1, $y1, $x2, $y2, $color);</pre></td><td align="right" /></tr></table><p>Creates a rectangle in <tt class="literal">image</tt> filled with the color
<em class="replaceable">color</em>. The arguments <tt class="literal">x1</tt>
and <tt class="literal">y1</tt> form the top left point of the rectangle
and <tt class="literal">x2</tt> and <tt class="literal">y2</tt> form the bottom
right.</p></div>

<a name="INDEX-1459" /><a name="INDEX-1460" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagefilltoborder</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagefilltoborder($image, $x, $y, $border, $color);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">imagefill</tt> except that the fill stops
where the color <tt class="literal">border</tt> is encountered.</p></div>

<a name="INDEX-1461" /><a name="INDEX-1462" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagegif</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagegif($image);</pre></td><td align="right" /></tr></table><p>imagegif($image, $filename);</p><p>Outputs the contents of <tt class="literal">image</tt> as a GIF image. If a
second argument is present the GIF is written to that filename,
otherwise the output is sent straight to the browser.</p></div>

<a name="INDEX-1463" /><a name="INDEX-1464" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imageinterlace</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imageinterlace($image, $interlace);</pre></td><td align="right" /></tr></table><p>Toggles the interlace bit of <tt class="literal">image</tt> to the value of
<tt class="literal">interlace</tt>, which should be 1 (for on) or
(for off).</p></div>

<a name="INDEX-1465" /><a name="INDEX-1466" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imageline</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imageline($image, $x1, $y1, $x2, $y2, $color);</pre></td><td align="right" /></tr></table><p>Creates a line in <tt class="literal">image</tt> of color
<tt class="literal">color</tt> from the point (<tt class="literal">x1</tt>,
<tt class="literal">y2</tt>) to (<tt class="literal">x2</tt>,
<tt class="literal">y2</tt>).</p></div>

<a name="INDEX-1467" /><a name="INDEX-1468" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagepolygon</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagepolygon($image, $points, $numpoints, $color);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">imagefilledpolygon</tt> except that the
polygon is not filled.</p></div>

<a name="INDEX-1469" /><a name="INDEX-1470" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagerectangle</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagerectangle($image, $x1, $y1, $x2, $y2, $color);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">imagefilledrectangle</tt> except that the
rectangle is not filled.</p></div>

<a name="INDEX-1471" /><a name="INDEX-1472" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagesetpixel</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagesetpixel($image, $x, $y, $color);</pre></td><td align="right" /></tr></table><p>Draws a single point on <tt class="literal">image</tt> at
(<tt class="literal">x</tt>, <tt class="literal">y</tt>) of color
<tt class="literal">color</tt>.</p></div>

<a name="INDEX-1473" /><a name="INDEX-1474" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagestring</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagestring($image, $size, $x, $y, $string, $color);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">imagechar</tt> except that it outputs the
entire string <tt class="literal">string</tt>.</p></div>

<a name="INDEX-1475" /><a name="INDEX-1476" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagestringup</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
imagestringup($image, $size, $x, $y, $string, $color);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">imagecharup</tt> except that it outputs
the entire string <tt class="literal">string</tt>.</p></div>

<a name="INDEX-1477" /><a name="INDEX-1478" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagesx</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$x_size = imagesx($image);</pre></td><td align="right" /></tr></table><p>Returns the width of <tt class="literal">image</tt> in pixels.</p></div>

<a name="INDEX-1479" /><a name="INDEX-1480" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
imagesy</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$y_size = imagesy($image);</pre></td><td align="right" /></tr></table><p>Returns the height of <tt class="literal">image</tt> in pixels.</p></div>

<a name="INDEX-1481" /><a name="INDEX-1482" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
include</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
include($filename);</pre></td><td align="right" /></tr></table><p>Includes the file <tt class="literal">filename</tt> in the current page.
Full PHP parsing is done on the included file. PHP searches each of
the directories in the environment variable
<tt class="literal">PHP_INCLUDE_PATH</tt> for <tt class="literal">filename</tt>.</p></div>

<a name="INDEX-1483" /><a name="INDEX-1484" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
initsyslog</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
initsyslog();</pre></td><td align="right" /></tr></table><p>Prepares the system for <tt class="literal">syslog</tt> logging. After
calling this function you can use <tt class="literal">syslog</tt> to
generate log entries.</p></div>

<a name="INDEX-1485" /><a name="INDEX-1486" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
intval</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$integer = intval($variable);</pre></td><td align="right" /></tr></table><p>Returns the contents of <tt class="literal">variable</tt> as an integer.</p></div>

<a name="INDEX-1487" /><a name="INDEX-1488" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
isset</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$defined = isset($variable);</pre></td><td align="right" /></tr></table><p>Returns 1 if <tt class="literal">variable</tt> is defined, 0 otherwise.</p></div>

<a name="INDEX-1489" /><a name="INDEX-1490" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
key</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$key = key($array);</pre></td><td align="right" /></tr></table><p>Returns the key of the next element in <tt class="literal">array</tt>. For
an associative array, it returns the name of the key. For a regular
array it returns the number of the element.</p></div>

<a name="INDEX-1491" /><a name="INDEX-1492" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
link</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
link($target, $filename);</pre></td><td align="right" /></tr></table><p>Creates a hard link from <tt class="literal">filename</tt> to
<tt class="literal">target</tt>.</p></div>

<a name="INDEX-1493" /><a name="INDEX-1494" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
linkinfo</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$info = linkinfo($filename);</pre></td><td align="right" /></tr></table><p>Returns a true value if the link <tt class="literal">filename</tt> exists
(but not necessarily the file to which the link points). The function
returns -1 in case of an error.</p></div>

<a name="INDEX-1495" /><a name="INDEX-1496" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
log</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = log($number);</pre></td><td align="right" /></tr></table><p>Returns the natural logarithm of <tt class="literal">number</tt>.</p></div>

<a name="INDEX-1497" /><a name="INDEX-1498" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
log10</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = log10($number);</pre></td><td align="right" /></tr></table><p>Returns the base 10 logarithm of <tt class="literal">number</tt>.</p></div>

<a name="INDEX-1499" /><a name="INDEX-1500" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
logas</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
logas($filename);</pre></td><td align="right" /></tr></table><p>Logs the hit on the current page as a hit on
<tt class="literal">filename</tt> instead of the filename of the page.</p></div>

<a name="INDEX-1501" /><a name="INDEX-1502" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mail</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
mail($to, $subject, $message);</pre></td><td align="right" /></tr></table><p>mail($to, $subject, $message, $headers);</p><p>Sends an e-mail message to <tt class="literal">to</tt> with the subject
<tt class="literal">subject</tt> and <tt class="literal">message</tt> as the
body, If a forth argument is provided it is appended to the headers
of the message.</p></div>

<a name="INDEX-1503" /><a name="INDEX-1504" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
max</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$maximum = max($array);</pre></td><td align="right" /></tr></table><p>Returns the largest value in <tt class="literal">array</tt>. If
<tt class="literal">array</tt> contains strings, it returns the element
that is last alphabetically.</p></div>

<a name="INDEX-1505" /><a name="INDEX-1506" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
md5</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$hash = md5($string);</pre></td><td align="right" /></tr></table><p>Returns the MD5 hash of <tt class="literal">string</tt>.</p></div>

<a name="INDEX-1507" /><a name="INDEX-1508" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
microtime</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$ms = microtime();</pre></td><td align="right" /></tr></table><p>Returns a string that contains the fractional part of the current
second (expressed as a decimal) followed by the standard Unix time.</p></div>

<a name="INDEX-1509" /><a name="INDEX-1510" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
min</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$minimum = min($array);</pre></td><td align="right" /></tr></table><p>Returns the minimum value in <tt class="literal">array</tt>. If array
contains strings, it returns the element that is first
alphabetically.</p></div>

<a name="INDEX-1511" /><a name="INDEX-1512" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mkdir</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
mkdir($directory, $mode);</pre></td><td align="right" /></tr></table><p>Creates the directory <tt class="literal">directory</tt> with the given
mode. The mode must be an octal value.</p></div>

<a name="INDEX-1513" /><a name="INDEX-1514" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mktime</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$time = mktime($hour,$minute,$second,$month,$day,$year);</pre></td><td align="right" /></tr></table><p>Returns a time in standard Unix time format based on the parameters
given. If there are less than six parameters, the rightmost
parameters are assumed to be the current value (e.g., if four
parameters are given, the current day and year are used).</p></div>

<a name="INDEX-1515" /><a name="INDEX-1516" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1517" /><a name="INDEX-1518" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = msql($database, $query);
$result = mysql($database, $query);</pre></td><td align="right" /></tr></table><p>Sends the query <tt class="literal">query</tt> to the mSQL/MySQL database
<tt class="literal">database</tt>. For a non-<tt class="literal">SELECT</tt>
statement the function returns
for mSQL 1.x and MySQL and the number of affected rows for mSQL 2.x.
For a <tt class="literal">SELECT</tt> statement the function returns a
result identifier to be used with other <tt class="literal">msql_*</tt>
functions. In the case of an error the function returns -1.</p></div>

<a name="INDEX-1519" /><a name="INDEX-1520" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_affected_rows</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$num_rows = mysql_affected_rows();</pre></td><td align="right" /></tr></table><p>Returns the number of rows affected by the last
<tt class="literal">INSERT</tt>, <tt class="literal">UPDATE</tt>, or
<tt class="literal">DELETE</tt> statement.</p></div>

<a name="INDEX-1521" /><a name="INDEX-1522" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_close</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1523" /><a name="INDEX-1524" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_close</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
msql_close(); 
mysql_close();</pre></td><td align="right" /></tr></table><p>Closes the connection to the mSQL/MySQL database server.</p></div>

<a name="INDEX-1525" /><a name="INDEX-1526" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_connect</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1527" /><a name="INDEX-1528" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_connect</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
msql_connect($hostname);
mysql_connect($hostname);
mysql_connect($hostname, $username);
mysql_connect($hostname, $username, $password);</pre></td><td align="right" /></tr></table><p>Creates a connection with the mSQL/MySQL database server at
<tt class="literal">hostname</tt>. A connection to the server on the local
host is made with m(y)sql_connect("localhost"). If no
connection exists at the time of the first call to
<tt class="literal">m(y)sql</tt>, a connection is automatically made to the
localhost. With MySQL an optional username or username/password
combination may be given. If PHP is being run in its enhanced
security mode (called <tt class="literal">SAFE MODE</tt>), the username
must be either the owner of the HTML document or the owner of the web
server process.</p></div>

<a name="INDEX-1529" /><a name="INDEX-1530" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_createdb</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1531" /><a name="INDEX-1532" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_createdb</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
msql_createdb($database);
mysql_createdb($database);</pre></td><td align="right" /></tr></table><p>Creates the given database.</p></div>

<a name="INDEX-1533" /><a name="INDEX-1534" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_dbname</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1535" /><a name="INDEX-1536" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_dbname</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$db = msql_dbname($result, $i);
$db = mysql_dbname($result, $i);</pre></td><td align="right" /></tr></table><p>Returns the name of the database stored in the <tt class="literal">i</tt>th
field of the result returned by a call to
<tt class="literal">m(y)sql_listdbs</tt>.</p></div>

<a name="INDEX-1537" /><a name="INDEX-1538" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_dropdb</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1539" /><a name="INDEX-1540" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_dropdb</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
msql_dropdb($database);
mysql_dropdb($database);</pre></td><td align="right" /></tr></table><p>Removes <tt class="literal">database</tt> and all tables within it.</p></div>

<a name="INDEX-1541" /><a name="INDEX-1542" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_fieldflags</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1543" /><a name="INDEX-1544" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_fieldflags</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$flags = msql_fieldflags($result, $i);
$flags = mysql_fieldflags($result, $i);</pre></td><td align="right" /></tr></table><p>Returns the flags belonging to the <tt class="literal">i</tt>th field of
<tt class="literal">result</tt>. The returned value can be one of
"primary key", "not null", "not null
primary key" or "".</p></div>

<a name="INDEX-1545" /><a name="INDEX-1546" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_fieldlen</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1547" /><a name="INDEX-1548" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_fieldlen</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$length = msql_fieldlen($result, $i);
$length = mysql_fieldlen($result, $i);</pre></td><td align="right" /></tr></table><p>Returns the length of the ith field of <tt class="literal">result</tt>.</p></div>

<a name="INDEX-1549" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_fieldname</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1550" /><a name="INDEX-1551" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_fieldname</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$name = msql_fieldname($result, $i);
$name = mysql_fieldname($result, $i);</pre></td><td align="right" /></tr></table><p>Returns the column name of the <tt class="literal">i</tt>th field of
<tt class="literal">result</tt>.</p></div>

<a name="INDEX-1552" /><a name="INDEX-1553" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_fieldtype</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1554" /><a name="INDEX-1555" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_fieldtype</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$type = msql_fieldtype($result, $i);
$type = mysql_fieldtype($result, $i);</pre></td><td align="right" /></tr></table><p>Returns the type of the <tt class="literal">i</tt>th of
<tt class="literal">result</tt> (i.e. "char",
"real", etc.).</p></div>

<a name="INDEX-1556" /><a name="INDEX-1557" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_freeresult</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1558" /><a name="INDEX-1559" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_freeresult</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
msql_freeresult($result);
mysql_freeresult($result);</pre></td><td align="right" /></tr></table><p>Frees the memory associated with a mSQL/MySQL result. All memory is
automatically freed at the end of the script, so use this function
only if your script is taking up too much memory.</p></div>

<a name="INDEX-1560" /><a name="INDEX-1561" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_insert_id</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$id_num = mysql_insert_id();</pre></td><td align="right" /></tr></table><p>Returns the ID number used for the last INSERT statement that
contained an auto_increment field.</p></div>

<a name="INDEX-1562" /><a name="INDEX-1563" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_listdbs</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1564" /><a name="INDEX-1565" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_listdbs</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = msql_listdbs();
$result = mysql_listdbs();</pre></td><td align="right" /></tr></table><p>Returns a result pointer containing the names of all of the databases
available on the mSQL/MySQL server. The
<tt class="literal">m(y)sql_dbname</tt> function can retrieve values from
the pointer.</p></div>

<a name="INDEX-1566" /><a name="INDEX-1567" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_listfields</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1568" /><a name="INDEX-1569" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_listfields</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = msql_listfields($database, $table);
$result = mysqllistfields($database, $table);</pre></td><td align="right" /></tr></table><p>Returns a result pointer to information about the fields of the table
<tt class="literal">table</tt> within <tt class="literal">database</tt>. The
functions <tt class="literal">m(y)sql_fieldflags</tt>,
<tt class="literal">m(y)sql_fieldlen</tt>,
<tt class="literal">m(y)sql_fieldname</tt>, and
<tt class="literal">m(y)sql_fieldtype</tt> can retrieve data from the
pointer.</p></div>

<a name="INDEX-1570" /><a name="INDEX-1571" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_listtables</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1572" /><a name="INDEX-1573" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_listtables</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = msql_listtables($database);
$result = mysql_listtables($database);</pre></td><td align="right" /></tr></table><p>Returns a result pointer containing the names of all of the tables
within <tt class="literal">database</tt>. The
<tt class="literal">m(y)sql_tablename</tt> function can retrieves values
from the pointer.</p></div>

<a name="INDEX-1574" /><a name="INDEX-1575" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_numfields</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1576" /><a name="INDEX-1577" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_numfields</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$num_fields = msql_numfields($result);
$num_fields = mysql_numfields($result);</pre></td><td align="right" /></tr></table><p>Returns the number of fields within <tt class="literal">result</tt>.</p></div>

<a name="INDEX-1578" /><a name="INDEX-1579" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_numrows</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1580" /><a name="INDEX-1581" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_numrows</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$num_rows = msql_numrows($result);
$num_rows = mysql_numrows($result);_</pre></td><td align="right" /></tr></table><p>Returns the number of rows within <tt class="literal">result</tt>.</p></div>

<a name="INDEX-1582" /><a name="INDEX-1583" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_regcase</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$new_string = msql_regcase($string);</pre></td><td align="right" /></tr></table><p>Returns a copy of <tt class="literal">string</tt> which has been
transformed into a regular expression that will perform a
case-insensitive match in a mSQL statement.</p></div>

<a name="INDEX-1584" /><a name="INDEX-1585" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_result</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1586" /><a name="INDEX-1587" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_result</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result_string = msql_result($result, $i, $field);
$result_string = mysql_result($result, $I, $field);</pre></td><td align="right" /></tr></table><p>Returns an entry from the field <tt class="literal">field</tt> in the
<tt class="literal">i</tt>th row of <tt class="literal">result</tt>. The argument
<tt class="literal">field</tt> is the name of the field column and can be
specified as <tt class="literal">table.field</tt> for results that involved
joined tables. Any MySQL internal functions which can affect SELECT
results can be included in the <tt class="literal">field</tt> argument, for
instance, <tt class="literal">mysql_result $result,
$i,"length($field)")</tt>.</p></div>

<a name="INDEX-1588" /><a name="INDEX-1589" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
msql_tablename</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1590" /><a name="INDEX-1591" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
mysql_tablename</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$name = msql_tablename($result, $i);
$name = mysql_tablename($result, $i);</pre></td><td align="right" /></tr></table><p>Returns the name of the table stored in the <tt class="literal">i</tt>th
field of the result returned by a call to<tt class="literal">
m(y)sql_listtables</tt>.</p></div>

<a name="INDEX-1592" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>next</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table><p>
<a name="INDEX-1592" />next($array);</p><p>Moves the pointer of <tt class="literal">array</tt> to the next element and
returns that element.</p></div>

<a name="INDEX-1593" /><a name="INDEX-1594" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
octdec</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$decimal = octdec($octal);</pre></td><td align="right" /></tr></table><p>Returns the decimal equivalent of <tt class="literal">octal</tt>.</p></div>

<a name="INDEX-1595" /><a name="INDEX-1596" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
opendir</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
opendir($directory);</pre></td><td align="right" /></tr></table><p>Opens a directory for use with the <tt class="literal">readdir</tt>
function. You should close the directory with
<tt class="literal">closedir</tt> when you are finished with it.</p></div>

<a name="INDEX-1597" /><a name="INDEX-1598" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
openlog</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
openlog($ident, $options, $facility);</pre></td><td align="right" /></tr></table><p>Opens the system log for writing. This function should be called
after <tt class="literal">initlog</tt> and before the first
<tt class="literal">syslog</tt> call. The arguments are the same as the
Unix <tt class="literal">openlog</tt> system call. The value of ident is
prepended to each log message and is usually the name of the program.
The value of options can be any of the following:
<tt class="literal">LOG_CONS</tt> (log to the console if there is an error
with the standard procedure), <tt class="literal">LOG_NDELAY</tt> (open the
log connection immediately instead of at the time of the first log
message), <tt class="literal">LOG_PERROR</tt> (log to stderr as well),
<tt class="literal">LOG_PID</tt> (include the process PID with each log
message). Options can be combined with bitwise OR (e.g.
(<tt class="literal">LOG_DELAY</tt>|<tt class="literal">LOG_PERROR</tt>|<tt class="literal">LOG_PID</tt>)).
Facility is one of the system-defined log levels (e.g.
<tt class="literal">LOG_SYSLOG</tt>, <tt class="literal">LOG_USER</tt>,
<tt class="literal">LOG_KERN</tt>, etc.).</p></div>

<a name="INDEX-1599" /><a name="INDEX-1600" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
ord</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$number = ord($character);</pre></td><td align="right" /></tr></table><p>Returns the ASCII value of <tt class="literal">character</tt>.</p></div>

<a name="INDEX-1601" /><a name="INDEX-1602" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
parse_str</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
parse_str($string);</pre></td><td align="right" /></tr></table><p>Parses a URL encoded string of the format
<tt class="literal">"variable1=value1&amp;variable2=value2" </tt>and
initializes variables with the appropriate values. The PHP program
automatically performs this function with incoming form data at the
beginning of every script.</p></div>

<div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>passthru</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
passthru($command);
passthru($command, $return_value);</pre></td><td align="right" /></tr></table><p>Executes the external command <tt class="literal">command</tt> and sends
all of the output directory to the browser. If a second argument is
present, the return value of the command is placed there.</p></div>

<a name="INDEX-1603" /><a name="INDEX-1604" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
pclose</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
pclose($fd);</pre></td><td align="right" /></tr></table><p>Closes a pipe opened with <tt class="literal">popen</tt>.</p></div>

<a name="INDEX-1605" /><a name="INDEX-1606" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
phpinfo</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
phpinfo();</pre></td><td align="right" /></tr></table><p>Prints an informational page that's useful when debugging the
PHP setup. This is the same page that is printed if you add
"?info" to any PHP URL, or if you access the PHP binary
directly (i.e., <a href="../../../../../../www.myserver.com/cgi-bin/php">http://www.myserver.com/cgi-bin/php</a>).</p></div>

<a name="INDEX-1607" /><a name="INDEX-1608" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
phpversion</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$version = phpversion();</pre></td><td align="right" /></tr></table><p>Returns the version of PHP that is currently running.</p></div>

<a name="INDEX-1609" /><a name="INDEX-1610" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
popen</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$fd = popen($command, $mode);</pre></td><td align="right" /></tr></table><p>Runs the external command <tt class="literal">command</tt> and either sends
data to the command (if <tt class="literal">mode</tt> is "w")
or reads data from the command (if <tt class="literal">mode</tt> is
"r"). You must close any file descriptors opened in this
manner with <tt class="literal">pclose</tt>.</p></div>

<a name="INDEX-1611" /><a name="INDEX-1612" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
pos</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$position = pos($array['element']);</pre></td><td align="right" /></tr></table><p>Returns the numerical position of
<tt class="literal">array[</tt>'<tt class="literal">element</tt>'<tt class="literal">]</tt>
within the associative array <tt class="literal">array</tt>.</p></div>

<a name="INDEX-1613" /><a name="INDEX-1614" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
pow</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = pow($x, $y);</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">x</tt> raised to the power <tt class="literal">y</tt>.</p></div>

<a name="INDEX-1615" /><a name="INDEX-1616" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
prev</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$element = prev($array);</pre></td><td align="right" /></tr></table><p>Moves the internal pointer of <tt class="literal">array</tt> to the
previous element and returns that element.</p></div>

<a name="INDEX-1617" /><a name="INDEX-1618" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
putenv</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
putenv($string);</pre></td><td align="right" /></tr></table><p>Puts <tt class="literal">string</tt> into the local environment. Note that
the environment is destroyed at the end of the script, so this
function is really useful only when external programs are called
within the script.</p></div>

<a name="INDEX-1619" /><a name="INDEX-1620" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
quotemeta</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$quoted_string = quotemeta($string);</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">string</tt> with all special characters escaped
so that it is safe to use within a regular expression.</p></div>

<a name="INDEX-1621" /><a name="INDEX-1622" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
rand</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$number = rand();</pre></td><td align="right" /></tr></table><p>Returns a random number between
and the system-defined number <tt class="literal">RANDMAX</tt>. You should
seed the random number generator with <tt class="literal">srand</tt> once
and only once at the beginning of your script.</p></div>

<a name="INDEX-1623" /><a name="INDEX-1624" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
readdir</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$file = readdir();</pre></td><td align="right" /></tr></table><p>Returns the next directory entry in the current open directory and
advances the directory pointer. Repeated calls to this function will
return the next directory entry until there are no more left.</p></div>

<a name="INDEX-1625" /><a name="INDEX-1626" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
readfile</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$filesize = readfile($filename);</pre></td><td align="right" /></tr></table><p>Outputs the contents of <tt class="literal">filename</tt> directly to the
browser and returns the size of the file. This function is safe to
use on binary files such as images.</p></div>

<a name="INDEX-1627" /><a name="INDEX-1628" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
readlink</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$filename = readline($link);</pre></td><td align="right" /></tr></table><p>Returns the path of the real file referenced by
<tt class="literal">link</tt>. In case of error the function returns -1.</p></div>

<a name="INDEX-1629" /><a name="INDEX-1630" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
reg_match</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = reg_match($expression, $string);
$result = reg_match($expression, $string, $array);</pre></td><td align="right" /></tr></table><p>Identical to <b class="function">ereg</b> . This function is included
only for backwards compatibility with older versions of PHP.</p></div>

<a name="INDEX-1631" /><a name="INDEX-1632" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
reg_replace</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
reg_replace($expression, $replacement, $string);</pre></td><td align="right" /></tr></table><p>Identical to <b class="function">ereg_replace</b> . This function is
included only for backwards compatibility with older versions of PHP.</p></div>

<a name="INDEX-1633" /><a name="INDEX-1634" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
reg_search</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$partial_string = reg_search($expression, $string);
$partial_string = reg_search($expression, $string, $array);</pre></td><td align="right" /></tr></table><p>Identical to <b class="function">ereg</b>  except that the portion of
<tt class="literal">string</tt> after the first match is returned. If there
is no match, the function returns an empty string. This function is
included only for backwards compatibility with older versions of PHP.</p></div>

<a name="INDEX-1635" /><a name="INDEX-1636" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
rename</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
rename($oldfile, $newfile);
Renames oldfile to anewfile.</pre></td><td align="right" /></tr></table></div>

<a name="INDEX-1637" /><a name="INDEX-1638" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
reset</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
reset($array);</pre></td><td align="right" /></tr></table><p>Moves the internal pointer of <tt class="literal">array</tt> to the first
element and returns that element.</p></div>

<a name="INDEX-1639" /><a name="INDEX-1640" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
return</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
return($value);</pre></td><td align="right" /></tr></table><p>Exits the current user-defined function and returns
<tt class="literal">value</tt>.</p></div>

<a name="INDEX-1641" /><a name="INDEX-1642" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
rewind</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
rewind($fd);</pre></td><td align="right" /></tr></table><p>Moves the file pointer for <tt class="literal">fd</tt> to the beginning of
the file.</p></div>

<a name="INDEX-1643" /><a name="INDEX-1644" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
rewinddir</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
rewinddir();</pre></td><td align="right" /></tr></table><p>Moves the current directory pointer to the beginning of the directory.</p></div>

<a name="INDEX-1645" /><a name="INDEX-1646" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
rmdir</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
rmdir($directory);</pre></td><td align="right" /></tr></table><p>Deletes <tt class="literal">directory</tt> if it is empty.</p></div>

<a name="INDEX-1647" /><a name="INDEX-1648" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
rsort</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$sorted_array = rsort($array)</pre></td><td align="right" /></tr></table><p>Returns a sorted copy of the nonassociative array
<tt class="literal">array</tt> in descending order. If the first member of
the array is a number, the returned array will be sorted numerically,
otherwise the returned array will be sorted alphabetically.</p></div>

<a name="INDEX-1649" /><a name="INDEX-1650" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
setcookie</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
setcookie($name);</pre></td><td align="right" /></tr></table><p>setcookie($name, $value, $expire, $path, $domain, $secure);</p><p>Sends a cookie with the given attributes to the browser. If only
<tt class="literal">name</tt> is present, that cookie with that name is
deleted from the browser. Any argument may be left out or replaced
with <tt class="literal">"" </tt>(or
in the case of <tt class="literal">expire</tt> and
<tt class="literal">secure</tt>) to be skipped.</p></div>

<a name="INDEX-1651" /><a name="INDEX-1652" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
seterrorreporting</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
seterrorreporting($value);</pre></td><td align="right" /></tr></table><p>If <tt class="literal">value</tt> is 0, all errors will be disabled,
otherwise errors are reported as normal.</p></div>

<a name="INDEX-1653" /><a name="INDEX-1654" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
setlogging</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
setlogging($value);</pre></td><td align="right" /></tr></table><p>If <tt class="literal">value</tt> is nonzero, access logging for the
current page will be enabled, otherwise it will be disabled.</p></div>

<a name="INDEX-1655" /><a name="INDEX-1656" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
setshowinfo</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
setshowinfo($value);</pre></td><td align="right" /></tr></table><p>If <tt class="literal">value</tt> is nonzero, an informational footer will
be printed at the bottom of the page.</p></div>

<a name="INDEX-1657" /><a name="INDEX-1658" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
settype</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
settype($variable, $type);</pre></td><td align="right" /></tr></table><p>Sets the type of <tt class="literal">variable</tt> to
<tt class="literal">type</tt>, which can be <tt class="literal">integer</tt>,
<tt class="literal">double</tt>, or <tt class="literal">string</tt>.</p></div>

<a name="INDEX-1659" /><a name="INDEX-1660" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
shl</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$value = shl($number, $b);</pre></td><td align="right" /></tr></table><p>Returns the value of <tt class="literal">number</tt> shifted
<tt class="literal">b</tt> bits to the left.</p></div>

<a name="INDEX-1661" /><a name="INDEX-1662" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
shr</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$value = shr($number, $b);</pre></td><td align="right" /></tr></table><p>Returns the value of <tt class="literal">number</tt> shifted
<tt class="literal">b</tt> bits to the right.</p></div>

<a name="INDEX-1663" /><a name="INDEX-1664" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
sin</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$value = sin($number);</pre></td><td align="right" /></tr></table><p>Returns the sine of <tt class="literal">number</tt> (in radians).</p></div>

<a name="INDEX-1665" /><a name="INDEX-1666" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
sleep</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
sleep($seconds);</pre></td><td align="right" /></tr></table><p>Stops the processing of the page for <tt class="literal">seconds</tt>
seconds.</p></div>

<a name="INDEX-1667" /><a name="INDEX-1668" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
sort</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$sorted_array = sort($array)</pre></td><td align="right" /></tr></table><p>Returns a sorted copy of the nonassociative array
<tt class="literal">array</tt> in ascending order. If the first member of
the array is a number, the returned array will be sorted numerically,
otherwise the returned array will be sorted alphabetically.</p></div>

<a name="INDEX-1669" /><a name="INDEX-1670" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
soundex</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$soundex_key = soundex($string);</pre></td><td align="right" /></tr></table><p>Returns the soundex key of <tt class="literal">string</tt>.</p></div>

<a name="INDEX-1671" /><a name="INDEX-1672" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
sprintf</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$string = sprintf($format, $arg, [$arg, $arg, ...]);</pre></td><td align="right" /></tr></table><p>Returns format with each C <tt class="literal">printf-</tt>style variable
indicator replaced with the appropriate <tt class="literal">arg</tt>. Up to
5 arguments can be provided.</p></div>

<a name="INDEX-1673" /><a name="INDEX-1674" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
sqrt</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$value = sqrt($number);</pre></td><td align="right" /></tr></table><p>Returns the square root of <tt class="literal">number</tt>.</p></div>

<a name="INDEX-1675" /><a name="INDEX-1676" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
srand</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
srand($integer);</pre></td><td align="right" /></tr></table><p>Seeds the random number generator with the value
<tt class="literal">integer</tt>. This function should be called once and
only once at the beginning of any script where you use the
<tt class="literal">rand</tt> function.</p></div>

<a name="INDEX-1677" /><a name="INDEX-1678" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
strchr</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table></div>

<a name="INDEX-1679" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
strstr</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table><p>$substring = strchr($string, $value);</p><p>$substring = strstr($string, $value);</p><p>Returns the portion of <tt class="literal">string</tt> that occurs starting
after the first instance of <tt class="literal">value</tt>. The
<tt class="literal">strchr</tt> and <tt class="literal">strstr</tt> functions are
identical and are both included for the purposes of completeness.</p></div>

<a name="INDEX-1680" /><a name="INDEX-1681" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
strtr</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
strtr($string, $set1, $set2);</pre></td><td align="right" /></tr></table><p>Translates all characters in <tt class="literal">string</tt> that are in
<tt class="literal">set1</tt> to the corresponding character in
<tt class="literal">set2</tt>. If <tt class="literal">set1</tt> is longer than
<tt class="literal">set2</tt>, the last character in
<tt class="literal">set2</tt> is used for the extra characters in
<tt class="literal">set1</tt>. If <tt class="literal">set2</tt> is longer than
<tt class="literal">set1</tt>, the extra characters in
<tt class="literal">set2</tt> are ignored.</p></div>

<a name="INDEX-1682" /><a name="INDEX-1683" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
stripslashes</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$plain_string = stripslashes($escaped_string);</pre></td><td align="right" /></tr></table><p>Removes all escape characters from <tt class="literal">escaped_string</tt>.</p></div>

<a name="INDEX-1684" /><a name="INDEX-1685" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
strlen</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$length = strlen($string);</pre></td><td align="right" /></tr></table><p>Returns the length of <tt class="literal">string</tt>.</p></div>

<a name="INDEX-1686" /><a name="INDEX-1687" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
strrchr</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$substring = strrchr($string, $character);</pre></td><td align="right" /></tr></table><p>Searches string backwards for character. The function returns the
portion of <tt class="literal">string</tt> from the first occurrence of
<tt class="literal">character</tt> it finds to the end of the string. An
empty string is returned if <tt class="literal">character</tt> is not
found.</p></div>

<a name="INDEX-1688" /><a name="INDEX-1689" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
strtok</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$substring = strtok($string, $characters);</pre></td><td align="right" /></tr></table><p>$substring = strtok($characters);</p><p>Splits <tt class="literal">string</tt> up into substrings using any of the
characters in <tt class="literal">characters</tt> as delimiters. After the
first call to <tt class="literal">strtok</tt>, omit the string argument in
subsequent calls to return each successive substring until the end of
<tt class="literal">string</tt> is reached.</p></div>

<a name="INDEX-1690" /><a name="INDEX-1691" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
strtolower</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$lc_string = strtolower($string);</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">string</tt> with all characters converted to
lower case.</p></div>

<a name="INDEX-1692" /><a name="INDEX-1693" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
strtoupper</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$uc_string = strtoupper($string);</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">string</tt> with all characters converted to
upper case.</p></div>

<a name="INDEX-1694" /><a name="INDEX-1695" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
strval</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$string = strval($variable);</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">variable</tt> as a string value.</p></div>

<a name="INDEX-1696" /><a name="INDEX-1697" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
substr</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$substring = substr($string, $start, $length);</pre></td><td align="right" /></tr></table><p>Returns the portion of <tt class="literal">string</tt> that begins at
character <tt class="literal">start</tt> (0 is the first character) and
continues for <tt class="literal">length</tt> characters.</p></div>

<a name="INDEX-1698" /><a name="INDEX-1699" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
symlink</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
symlink($target, $filename);</pre></td><td align="right" /></tr></table><p>Creates a symbolic link from <tt class="literal">filename</tt> to
<tt class="literal">target</tt>.</p></div>

<a name="INDEX-1700" /><a name="INDEX-1701" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
syslog</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
syslog($level, $message);</pre></td><td align="right" /></tr></table><p>Logs <tt class="literal">message</tt> to the system logs at the level
<tt class="literal">level</tt>.</p></div>

<a name="INDEX-1702" /><a name="INDEX-1703" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
system</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$results = system($command);
$results = system($command, $return_value);</pre></td><td align="right" /></tr></table><p>Executes the external command <tt class="literal">command</tt> and returns
all output. If a second argument is provided, the return value of the
command is placed there.</p></div>

<div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>tan</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$value = tan($number);</pre></td><td align="right" /></tr></table><p>Returns the tangent of <tt class="literal">number</tt> (in radians).</p></div>

<a name="INDEX-1704" /><a name="INDEX-1705" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
tempnam</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$filename = tempnam($path, $prefix);</pre></td><td align="right" /></tr></table><p>Returns a filename, prepended with <tt class="literal">prefix</tt>, that
will be unique in the directory specified by <tt class="literal">path</tt>.</p></div>

<a name="INDEX-1706" /><a name="INDEX-1707" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
time</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$time = time();</pre></td><td align="right" /></tr></table><p>Returns the current time in Unix standard time format (the number of
seconds since Jan 1, 1970).</p></div>

<a name="INDEX-1708" /><a name="INDEX-1709" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
umask</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$umask = umask();
umask($umask);</pre></td><td align="right" /></tr></table><p>Returns the current umask if no argument is specified. Sets the umask
to <tt class="literal">umask</tt> (which must be an octal number) if an
argument is present.</p></div>

<a name="INDEX-1710" /><a name="INDEX-1711" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
uniqid</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$result = uniqid();</pre></td><td align="right" /></tr></table><p>Returns a value that is guaranteed to be unique compared to other
values returned by repeated calls.</p></div>

<a name="INDEX-1712" /><a name="INDEX-1713" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
unlink</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
unlink($filename);</pre></td><td align="right" /></tr></table><p>Deletes the specified file.</p></div>

<a name="INDEX-1714" /><a name="INDEX-1715" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
unset</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
unset($variable);</pre></td><td align="right" /></tr></table><p>Undefines the specified variable, which may be an element of an
array. When performed on an array, it erases the entire array.</p></div>

<a name="INDEX-1716" /><a name="INDEX-1717" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
urldecode</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$decoded_string = urldecode($string);</pre></td><td align="right" /></tr></table><p>Returns a copy of string that has all URL escape codes translated
into their values. This is done automatically with all incoming form
data.</p></div>

<a name="INDEX-1718" /><a name="INDEX-1719" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
urlencode</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
$encoded_string = urlencode($string);</pre></td><td align="right" /></tr></table><p>Returns a copy of string that has all special characters URL encoded.</p></div>

<a name="INDEX-1720" /><a name="INDEX-1721" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
usleep</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
usleep($ms);</pre></td><td align="right" /></tr></table><p>Stops the parsing of the script for <tt class="literal">ms</tt>
microseconds.</p></div>

<a name="INDEX-1722" /><a name="INDEX-1723" /><a name="INDEX-1724" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>
virtual</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>
virtual($filename);</pre></td><td align="right" /></tr></table><p>Includes <tt class="literal">filename</tt> exactly as if the tag
<tt class="literal">&lt;!--#include virtual="$filename"
--&gt;</tt> were present in a standard HTML file. This function
is useful only in conjunction with the Apache web server.<a name="INDEX-1724" /></p></div>
</div>




































<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch17_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch18_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">17.2. mSQL Utilities</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">18.2. Lite</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="../cgi/index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>
