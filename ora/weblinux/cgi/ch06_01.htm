<?label 6. HTML Templates?><html><head><title>HTML Templates (CGI Programming with Perl)</title><link href="../style/style1.css" type="text/css" rel="stylesheet" />

<meta name="DC.Creator" content="Scott Guelich, Gunther Birznieks and Shishir Gundavaram" /><meta scheme="MIME" content="text/xml" name="DC.Format" /><meta content="en-US" name="DC.Language" /><meta content="O'Reilly & Associates, Inc." name="DC.Publisher" /><meta scheme="ISBN" name="DC.Source" content="1565924193L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="CGI Programming with Perl" /><meta content="Text.Monograph" name="DC.Type" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" alt="Book Home" usemap="#banner-map" border="0" /><map name="banner-map"><area alt="CGI Programming with Perl" href="index.htm" coords="0,0,466,65" shape="rect" /><area alt="Search this book" href="jobjects/fsearch.htm" coords="467,0,514,18" shape="rect" /></map>

<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch05_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm">CGI Programming with Perl</a></td><td width="172" valign="top" align="right"><a href="ch06_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>
<hr align="left" width="515" />



<h1 class="chapter">Chapter 6. HTML Templates</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch06_01.htm">Reasons for Using Templates</a><br>
<a href="ch06_02.htm">Server Side Includes</a><br>
<a href="ch06_03.htm">HTML::Template</a><br>
<a href="ch06_04.htm">Embperl</a><br>
<a href="ch06_05.htm">Mason</a><br></p></div>



<p>The CGI.pm module makes it much easier to produce <a name="INDEX-1237" /> <a name="INDEX-1,238" />HTML code from CGI scripts written in
Perl. If your goal is to produce self-contained CGI applications that
include both the program logic and the interface (HTML), then CGI.pm
is certainly the best tool for this. It excels for distributable
applications because you do not need to distribute separate HTML
files, and it's easy for developers to follow when reading
through code. For this reason, we use it in the majority of the
examples in this book. However, in some circumstances, there are good
reasons for separating the interface from the program logic. In these
circumstances, templates may be a better solution.</p>










<div class="sect1"><a name="ch06-95555" />
<h2 class="sect1">6.1. Reasons for Using Templates</h2>


<p>
<a name="INDEX-1239" /> <a name="INDEX-1,240" />HTML design and CGI development involve
very different skill sets. Good HTML design is typically done by
artists or designers in collaboration with marketing folks and people
skilled in interface design. CGI development may also involve input
from others, but it is very technical in nature. Therefore, CGI
developers are often not responsible for creating the interface to
their applications. In fact, sometimes they are given non-functional
prototypes and asked to provide the logic to drive it. In this
scenario, the HTML is already available and translating it into code
involves extra work.</p>


<p>Additionally, CGI applications rarely remain static; they require
maintenance. Inevitably, bugs are found and fixed, new features are
added, the wording is changed, or the site is redesigned with a new
color scheme. These changes can involve either the program logic or
the interface, but interface changes are often the most common and
the most time consuming. Making specific changes to an existing HTML
file is generally easier than modifying a CGI script, and many
organizations have more people who understand HTML than who
understand Perl.</p>


<p>There are many different ways to use HTML templates, and it is very
common for web developers to create their own custom solutions.
However, the many various solutions can be grouped into a few
different approaches. In this chapter, we'll explore each
approach by looking at the most powerful and popular solutions for
each.</p>


<a name="ch06-1-fm2xml" /><div class="sect2">
<h3 class="sect2">6.1.1. Rolling Your Own</h3>


<p>One thing we won't do in this chapter is present a novel
template parser or explain how to write your own. The reason is that
there are already too many good solutions to warrant this. Of the
many web developers out there who have created their own proprietary
systems for handling templates, most turn to something else after
some time. In fact, one of your authors has experience doing just
this.</p>


<p>The first custom template system I developed was like SSI but with
control structures added as well as the ability to nest multiple
commands in parentheses (commands resembled Excel functions). The
template commands were simple, powerful, and efficient, but the
underlying code was complicated and difficult to maintain, so at one
point I started over. My second solution included a hand-coded,
recursive descent parser and an object-oriented, JavaScript-like
syntax that was easily extended in Perl. My thinking was that many
HTML authors were comfortable with JavaScript already. I was rather
proud of it when it was finished, but after a few months of using it,
I realized I had created an over-engineered, proprietary solution,
and I ported the project to Embperl.</p>


<p>In both of my attempts, I realized the solutions were not worth the
effort required to maintain them. In the second case, the code was
very maintainable, but even minor maintenance did not seem worth the
effort given the high-quality, open source alternatives that are
already tested, maintained, and available for all to use. More
importantly, custom solutions require other developers and HTML
authors to invest time learning systems that they would never
encounter elsewhere. No one told me I had to choose a standard
solution over a proprietary one, but I discovered the advantages on
my own. Sometimes ego must yield to practicality.</p>


<p>So consider the options that are already available and avoid the urge
to reinvent the wheel. If you need a particular feature that is not
available in another package, consider extending an existing open
source solution and give your code back if you think it will benefit
others. Of course, in the end what you do is up to you, and you may
have a good reason for creating your own solution. You could even
point out that none of the solutions presented in this chapter would
exist if a few people hadn't decided they should create their
own respective solutions, maintain and extend them, and make them
available to others.</p>
</div>
</div>










































<hr align="left" width="515" />
<div class="navbar"><table border="0" width="515"><tr><td width="172" valign="top" align="left"><a href="ch05_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td width="171" valign="top" align="center"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td width="172" valign="top" align="right"><a href="ch06_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td width="172" valign="top" align="left">5.5. Handling Errors</td><td width="171" valign="top" align="center"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td width="172" valign="top" align="right">6.2. Server Side Includes</td></tr></table></div>
<hr align="left" width="515" />

<img src="../gifs/navbar.gif" alt="Library Navigation Links" usemap="#library-map" border="0" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="1,1,83,102" shape="rect" /><area href="../lnut/index.htm" coords="81,0,152,95" shape="rect" /><area href="../run/index.htm" coords="172,2,252,105" shape="rect" /><area href="../apache/index.htm" coords="238,2,334,95" shape="rect" /><area href="../sql/index.htm" coords="336,0,412,104" shape="rect" /><area href="../dbi/index.htm" coords="415,0,507,101" shape="rect" /><area href="index.htm" coords="511,0,601,99" shape="rect" /></map>

</body></html>
